language: swift
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let a1 = a /\
    \ 2\n    let b1 = b / 2\n    let c1 = c / 2\n    let a2 = a1 - c1\n    let b2\
    \ = b1 - c1\n    let c2 = c1 - c1\n    let a3 = a1 + c1\n    let b3 = b1 + c1\n\
    \    let c3 = c1 + c1\n    let a4 = a2 - c2\n    let b4 = b2 - c2\n    let c4\
    \ = c2 - c2\n    let a5 = a2 + c2\n    let b5 = b2 + c2\n    let c5 = c2 + c2\n\
    \    let a6 = a3 - c3\n    let b6 = b3 - c3\n    let c6 = c3 - c3\n    let a7\
    \ = a3 + c3\n    let b7 = b3 + c3\n    let c7 = c3 + c3\n    let a8 = a4 - c4\n\
    \    let b8 = b4 - c4\n    let c8 = c4 - c4\n    let a9 = a4 + c4\n    let b9\
    \ = b4 + c4\n    let c9 = c4 + c4\n    let a10 = a5 - c5\n    let b10 = b5 - c5\n\
    \    let c10 = c5 - c5\n    let a11 = a5 + c5\n    let b11 = b5 + c5\n    let\
    \ c11 = c5 + c5\n    let a12 = a6 - c6\n    let b12 = b6 - c6\n    let c12 = c6\
    \ - c6\n    let a13 = a6 + c6\n    let b13 = b6 + c6\n    let c13 = c6 + c6\n\
    \    let a14 = a7 - c7\n    let b14 = b7 - c7\n    let c14 = c7 - c7\n    let\
    \ a15 = a7 + c7\n    let b15 = b7 + c7\n    let c15 = c7 + c7\n    let a16 = a8\
    \ - c8\n    let b16 = b8 - c8\n    let c16 = c8 - c8\n    let a17 = a8 + c8\n\
    \    let b17 = b8 + c8\n    let c17 = c8 + c8\n    let a18 = a9 - c9\n    let\
    \ b18 = b9 - c9\n    let c18 = c9 - c9\n    let a19 = a9 + c9\n    let b19 = b9\
    \ + c9\n    let c19 = c9 + c9\n    let a20 = a10 - c10\n    let b20 = b10 - c10\n\
    \    let c20 = c10 - c10\n    let a21 = a10 + c10\n    let b21 = b10 + c10\n \
    \   let c21 = c10 + c10\n    let a22 = a11 - c11\n    let b22 = b11 - c11\n  \
    \  let c22 = c11\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpc4xmlvc6.swift:46:9: warning: initialization of immutable value\
    \ 'a12' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let a12 = a6 - c6\n    ~~~~^~~\n    _\n/tmp/tmpc4xmlvc6.swift:47:9:\
    \ warning: initialization of immutable value 'b12' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let b12 = b6 - c6\n    ~~~~^~~\n\
    \    _\n/tmp/tmpc4xmlvc6.swift:48:9: warning: initialization of immutable value\
    \ 'c12' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let c12 = c6 - c6\n    ~~~~^~~\n    _\n/tmp/tmpc4xmlvc6.swift:49:9:\
    \ warning: initialization of immutable value 'a13' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a13 = a6 + c6\n    ~~~~^~~\n\
    \    _\n/tmp/tmpc4xmlvc6.swift:50:9: warning: initialization of immutable value\
    \ 'b13' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let b13 = b6 + c6\n    ~~~~^~~\n    _\n/tmp/tmpc4xmlvc6.swift:51:9:\
    \ warning: initialization of immutable value 'c13' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let c13 = c6 + c6\n    ~~~~^~~\n\
    \    _\n/tmp/tmpc4xmlvc6.swift:52:9: warning: initialization of immutable value\
    \ 'a14' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let a14 = a7 - c7\n    ~~~~^~~\n    _\n/tmp/tmpc4xmlvc6.swift:53:9:\
    \ warning: initialization of immutable value 'b14' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let b14 = b7 - c7\n    ~~~~^~~\n\
    \    _\n/tmp/tmpc4xmlvc6.swift:54:9: warning: initialization of immutable value\
    \ 'c14' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let c14 = c7 - c7\n    ~~~~^~~\n    _\n/tmp/tmpc4xmlvc6.swift:55:9:\
    \ warning: initialization of immutable value 'a15' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a15 = a7 + c7\n    ~~~~^~~\n\
    \    _\n/tmp/tmpc4xmlvc6.swift:56:9: warning: initialization of immutable value\
    \ 'b15' was never used; consider replacing with assignment to '_' or"
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abbc = abc + bca\n    let\
    \ abcab = abbc + abbc\n    let abcabc = abcab + abcab\n    let abcabcb = abcabc\
    \ + abcabcb\n    let abcabcbc = abcabcb + abcabcbc\n    let abcabcbcd = abcabcbc\
    \ + abcabcbcd\n    let abcabcbcde = abcabcbcd + abcabcbcde\n    let abcabcbcdef\
    \ = abcabcbcde + abcabcbcdef\n    let abcabcbcdefg = abcabcbcdef + abcabcbcdefg\n\
    \    let abcabcbcdefgh = abcabcbcdefg + abcabcbcdefgh\n    let abcabcbcdefghi\
    \ = abcabcbcdefgh + abcabcbcdefghi\n    let abcabcbcdefghij = abcabcbcdefghi +\
    \ abcabcbcdefghij\n    let abcabcbcdefghijk = abcabcbcdefghij + abcabcbcdefghijk\n\
    \    let abcabcbcdefghijkl = abcabcbcdefghijk + abcabcbcdefghijkl\n    let abcabcbcdefghijklm\
    \ = abcabcbcdefghijkl + abcabcbcdefghijklm\n    let abcabcbcdefghijklmn = abcabcbcdefghijklm\
    \ + abcabcbcdefghijkln\n    let abcabcbcdefghijklmno = abcabcbcdefghijkln + abcabcbcdefghijklmn\n\
    \    let abcabcbcdefghijklmnpo = abcabcbcdefghijklmn + abcabcbcdefghijklmno\n\
    \    let abcabcbcdefghijklmnpoq = abcabcbcdefghijklmnpo + abcabcbcdefghijklmnpoq\n\
    \    let abcabcbcdefghijklmnpoqr = abcabcbcdefghijklmnpoq + abcabcbcdefghijklmnpoqr\n\
    \    let abcabcbcdefghijklmnpoqrs = abcabcbcdefghijklmnpoqr + abcabcbcdefgh\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpcd7vh4hy.swift:18:28: error: use of local variable 'abcabcb' before\
    \ its declaration\n    let abcabcb = abcabc + abcabcb\n                      \
    \     ^\n/tmp/tmpcd7vh4hy.swift:18:9: note: 'abcabcb' declared here\n    let abcabcb\
    \ = abcabc + abcabcb\n        ^\n/tmp/tmpcd7vh4hy.swift:19:30: error: use of local\
    \ variable 'abcabcbc' before its declaration\n    let abcabcbc = abcabcb + abcabcbc\n\
    \                             ^\n/tmp/tmpcd7vh4hy.swift:19:9: note: 'abcabcbc'\
    \ declared here\n    let abcabcbc = abcabcb + abcabcbc\n        ^\n/tmp/tmpcd7vh4hy.swift:20:32:\
    \ error: use of local variable 'abcabcbcd' before its declaration\n    let abcabcbcd\
    \ = abcabcbc + abcabcbcd\n                               ^\n/tmp/tmpcd7vh4hy.swift:20:9:\
    \ note: 'abcabcbcd' declared here\n    let abcabcbcd = abcabcbc + abcabcbcd\n\
    \        ^\n/tmp/tmpcd7vh4hy.swift:21:34: error: use of local variable 'abcabcbcde'\
    \ before its declaration\n    let abcabcbcde = abcabcbcd + abcabcbcde\n      \
    \                           ^\n/tmp/tmpcd7vh4hy.swift:21:9: note: 'abcabcbcde'\
    \ declared here\n    let abcabcbcde = abcabcbcd + abcabcbcde\n        ^\n/tmp/tmpcd7vh4hy.swift:22:36:\
    \ error: use of local variable 'abcabcbcdef' before its declaration\n    let abcabcbcdef\
    \ = abcabcbcde + abcabcbcdef\n                                   ^\n/tmp/tmpcd7vh4hy.swift:22:9:\
    \ note: 'abcabcbcdef' declared here\n    let abcabcbcdef = abcabcbcde + abcabcbcdef\n\
    \        ^\n/tmp/tmpcd7vh4hy.swift:23:38: error: use of local variable 'abcabcbcdefg'\
    \ before its declaration\n    let abcabcbcdefg = abcabcbcdef + abcabcbcdefg\n\
    \                                     ^\n/tmp/tmpcd7vh4hy.swift:23:9: note: 'abcabcbcdefg'\
    \ declared here\n    let abcabcbcdefg = abcabcbcdef + abcabcbcdefg\n        ^\n\
    /tmp/tmpcd7vh4hy.swift:24:40: error: use of local variable 'abcabcbcdefgh' before\
    \ its declaration\n    let abcabcbcdefgh = abcabcbcdefg + abcabcbcdefgh\n    \
    \                                   ^\n/tmp/tmpcd7vh4hy.swift:24:9: note: 'abcabcbcdefgh'\
    \ declared here\n    let abcabcbcdefgh = abcabcbcdefg + abcabcbcdefgh\n      \
    \  ^\n/tmp/tmpcd7vh4hy.s"
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let discriminant = b *\
    \ b - 4 * a * c\n    if discriminant < 0 {\n        return false\n    }\n    let\
    \ root = (-b + sqrt(discriminant)) / (2 * a)\n    if root < 0 {\n        return\
    \ false\n    }\n    if root == 0 || root == 1 {\n        return true\n    }\n\
    \    let root2 = (-b - sqrt(discriminant)) / (2 * a)\n    if root2 < 0 {\n   \
    \     return false\n    }\n    if root2 == 0 || root2 == 1 {\n        return true\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp3vxgb_vv.swift:20:22: error: cannot find 'sqrt' in scope\n    let\
    \ root = (-b + sqrt(discriminant)) / (2 * a)\n                     ^~~~\n/tmp/tmp3vxgb_vv.swift:27:23:\
    \ error: cannot find 'sqrt' in scope\n    let root2 = (-b - sqrt(discriminant))\
    \ / (2 * a)\n                      ^~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abca = abc + bca\n    return\
    \ abca >= bca\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpk6m2tq0d/tmpk6m2tq0d.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad242015c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad241d0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad241d0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad241d0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk6m2tq0d                        0x000055feea55532b <unavailable> + 4907

    5    libc.so.6                          0x00002ad242201460 __libc_start_main +
    245

    6    tmpk6m2tq0d                        0x000055feea554f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a > b {\n        return right_angle_triangle(b, a, c)\n    }\n    if b\
    \ > c {\n        return right_angle_triangle(a, c, b)\n    }\n    if a == b {\n\
    \        return true\n    }\n    if a == c {\n        return true\n    }\n   \
    \ if b == c {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppty_yiku.swift:11:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmppty_yiku.swift:14:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(a,\
    \ c, b)\n                                   ^\n                              \
    \      a: b: c: \n"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (a + b + c) / 2\n    let b1 = (b + c + a) / 2\n    let c1 = (c +\
    \ a + b) / 2\n    return a1 == b1 && b1 == c1 && c1 == a\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpwvyn1tcz/tmpwvyn1tcz.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd447c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd444bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd444bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd444bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwvyn1tcz                        0x0000562b7513224b <unavailable> + 4683

    5    libc.so.6                          0x00002acd449b2460 __libc_start_main +
    245

    6    tmpwvyn1tcz                        0x0000562b75131ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe0ppvlih/tmpe0ppvlih.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32b4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32b415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32b415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32b415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe0ppvlih                        0x000055d373fc62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b32b4653460 __libc_start_main +
    245

    6    tmpe0ppvlih                        0x000055d373fc5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a >\
    \ b {\n        if b > c {\n            return true\n        } else {\n       \
    \     return false\n        }\n    } else {\n        if c > b {\n            return\
    \ true\n        } else {\n            return false\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpckk8zp0q/tmpckk8zp0q.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5d9169c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5d8e60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5d8e60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5d8e5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckk8zp0q                        0x000055ac725f232b <unavailable> + 4907

    5    libc.so.6                          0x00002ab5d9355460 __libc_start_main +
    245

    6    tmpckk8zp0q                        0x000055ac725f1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let ab = abs(a\
    \ + b)\n    let ac = abs(a + c)\n    let bc = abs(b + c)\n    let abc = ab + ac\n\
    \    let acb = ac + bc\n    let abbc = ab + bc\n    let acbc = ac + bc\n    let\
    \ abcab = ab + abc + ac + acb + abbc\n    let acbcab = ac + abc + abbc + acbc\
    \ + acbcab\n    let abcabc = ab + abc + abbc + abcab + ac + acbc + acbcab + acbcabc\n\
    \    let acbcabc = ac + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabc\n\
    \    let abcabcb = ab + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabc\n\
    \    let acbcabcb = ac + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb\n\
    \    let abcabcbb = ab + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb\
    \ + acbcabcbb\n    let acbcabcbb = ac + abc + abbc + abcab + acbc + acbcab + acbcabc\
    \ + acbcabcbb + acbcabcbb\n    let abcabcbc = ab + abc + abbc + abcab + acbc +\
    \ acbcab + acbcabc + acbcabcb + acbcabcbb + acbcabcbc\n    let acbcabcbc = ac\
    \ + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb + acbcabcbb + acbcabcbc\n\
    \    let abcabcbbc = ab + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb\
    \ + acbcabcbb + acbcabcbc\n    let acbcabcbbc = ac + abc + abbc + abcab + acbc\
    \ + acbcab + acbcabc + acbcabcb + acbcabcbb + acbcabcbc\n    let abcabcbcb = ab\
    \ + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb + acb\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpq_n9vsac.swift:21:43: error: use of local variable 'acbcab' before\
    \ its declaration\n    let acbcab = ac + abc + abbc + acbc + acbcab\n        \
    \                                  ^\n/tmp/tmpq_n9vsac.swift:21:9: note: 'acbcab'\
    \ declared here\n    let acbcab = ac + abc + abbc + acbc + acbcab\n        ^\n\
    /tmp/tmpq_n9vsac.swift:22:65: error: use of local variable 'acbcabc' before its\
    \ declaration\n    let abcabc = ab + abc + abbc + abcab + ac + acbc + acbcab +\
    \ acbcabc\n                                                                ^\n\
    /tmp/tmpq_n9vsac.swift:23:9: note: 'acbcabc' declared here\n    let acbcabc =\
    \ ac + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabc\n        ^\n/tmp/tmpq_n9vsac.swift:23:61:\
    \ error: use of local variable 'acbcabc' before its declaration\n    let acbcabc\
    \ = ac + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabc\n            \
    \                                                ^\n/tmp/tmpq_n9vsac.swift:23:9:\
    \ note: 'acbcabc' declared here\n    let acbcabc = ac + abc + abbc + abcab + acbc\
    \ + acbcab + acbcabc + acbcabc\n        ^\n/tmp/tmpq_n9vsac.swift:23:71: error:\
    \ use of local variable 'acbcabc' before its declaration\n    let acbcabc = ac\
    \ + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabc\n                 \
    \                                                     ^\n/tmp/tmpq_n9vsac.swift:23:9:\
    \ note: 'acbcabc' declared here\n    let acbcabc = ac + abc + abbc + abcab + acbc\
    \ + acbcab + acbcabc + acbcabc\n        ^\n/tmp/tmpq_n9vsac.swift:25:72: error:\
    \ use of local variable 'acbcabcb' before its declaration\n    let acbcabcb =\
    \ ac + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb\n             \
    \                                                          ^\n/tmp/tmpq_n9vsac.swift:25:9:\
    \ note: 'acbcabcb' declared here\n    let acbcabcb = ac + abc + abbc + abcab +\
    \ acbc + acbcab + acbcabc + acbcabcb\n        ^\n/tmp/tmpq_n9vsac.swift:26:83:\
    \ error: use of local variable 'acbcabcbb' before its declaration\n    let abcabcbb\
    \ = ab + abc + abbc + abcab + acbc + acbcab + acbcabc + acbcabcb + acbcabcbb\n\
    \                    "
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return false\n        }\n        return true\n\
    \    }\n    if b > c {\n        return true\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpuqwr8dz6/tmpuqwr8dz6.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fa6a17c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fa670eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fa670e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fa670d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuqwr8dz6                        0x000055b237a552ab <unavailable> + 4779

    5    libc.so.6                          0x00002b7fa6c03460 __libc_start_main +
    245

    6    tmpuqwr8dz6                        0x000055b237a54f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n \
    \   return ab >= bc && ab >= ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpj6cpiehj/tmpj6cpiehj.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93b66e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93b63ddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93b63dd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93b63dc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj6cpiehj                        0x000055c2616642ab <unavailable> + 4779

    5    libc.so.6                          0x00002b93b68d2460 __libc_start_main +
    245

    6    tmpj6cpiehj                        0x000055c261663f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let b1 = c - b\n    let c1 = a - c\n    return a1 * b1\
    \ + b1 * c1 == c1 * a1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpvzzyykwh/tmpvzzyykwh.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9bc4d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9bc1c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9bc1c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9bc1c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvzzyykwh                        0x0000558f9990d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002ad9bc6bc460 __libc_start_main +
    245

    6    tmpvzzyykwh                        0x0000558f9990ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let ac = abs(a - c)\n    let bc = abs(b - c)\n \
    \   return (ab >= ac) && (ab >= bc)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpf6nsz3wd/tmpf6nsz3wd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39993bfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39990b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39990b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39990b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf6nsz3wd                        0x000055c0f62f62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b39995ab460 __libc_start_main +
    245

    6    tmpf6nsz3wd                        0x000055c0f62f5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (a + b + c) / 2\n    let b1 = (a + b - c) / 2\n    let c1 = (a -\
    \ b - c) / 2\n    return a1 == b1 && b1 == c1 && c1 == 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpw84_7ytw/tmpw84_7ytw.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc865d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc862cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc862cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc862ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw84_7ytw                        0x000055ceda9d424b <unavailable> + 4683

    5    libc.so.6                          0x00002acc867c4460 __libc_start_main +
    245

    6    tmpw84_7ytw                        0x000055ceda9d3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a == 0 || b == 0 || c == 0 {\n        return false\n    }\n    let ab\
    \ = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n    let abc\
    \ = ab + ac\n    let bca = bc * b\n    let acb = ac * c\n    let abca = abc *\
    \ ab\n    let bcab = bca * b\n    let acbc = acb * c\n    let abcca = abca * ab\n\
    \    let bcabc = bcab * b\n    let acbcb = acbcb * c\n    let abccaa = abcca *\
    \ ab\n    let bcabcb = bcabcb * b\n    let acbcba = acbcba * c\n    let abccaab\
    \ = abccaa * ab\n    let bcabcbc = bcabcbc * b\n    let acbcbac = acbcbac * c\n\
    \    let abccaabc = abccaabc * ab\n    let bcabcbcb = bcabcbcb * b\n    let acbcbaca\
    \ = acbcbaca * c\n    let abccaabca = abccaabca * ab\n    let bcabcbcbc = bcabcbcbc\
    \ * b\n    let acbcbacab = acbcbacab * c\n    let abccaabcab = abccaabcab * ab\n\
    \    let bcabcbcbcb = bcabcbcbcb * b\n    let acbcbacabc = acbcbacabc * c\n  \
    \  let abccaabcabc = abccaabcabc * ab\n    let bcabcbcbcbc = bcabcbcbcbc * b\n\
    \    let acbcbacabcb = acbcbacabcb * c\n    let abccaabcabcb = abccaabcabcb *\
    \ ab\n    let bcabcbcbcbcb = bcabcbcbcbcb * b\n    let acbcbacabcbc = acbcbacabcbc\
    \ * c\n    let abccaabcabcbc = abccaabcabcbc * ab\n    let bcabcbcbcbcbc = bcabcbcbcbcbc\
    \ * b\n    let acbcbacabcbcb = acbcbacabcbcb * c\n    let abccaabcabcbcb = abccaabcabcbcb\
    \ * ab\n    let bcabcbcbcbcbc = bcabcbcbcbcbc * b\n    let acbcbacabcbcbc = acbcbacabcbcbc\
    \ * c\n    let abccaabcabcbcbc = abccaabcabcbcbc * ab\n    let bcabcbcbcbcbcbc\
    \ = bcabcbcb\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmph2odfvs5.swift:24:17: error: use of local variable 'acbcb' before\
    \ its declaration\n    let acbcb = acbcb * c\n                ^\n/tmp/tmph2odfvs5.swift:24:9:\
    \ note: 'acbcb' declared here\n    let acbcb = acbcb * c\n        ^\n/tmp/tmph2odfvs5.swift:26:18:\
    \ error: use of local variable 'bcabcb' before its declaration\n    let bcabcb\
    \ = bcabcb * b\n                 ^\n/tmp/tmph2odfvs5.swift:26:9: note: 'bcabcb'\
    \ declared here\n    let bcabcb = bcabcb * b\n        ^\n/tmp/tmph2odfvs5.swift:27:18:\
    \ error: use of local variable 'acbcba' before its declaration\n    let acbcba\
    \ = acbcba * c\n                 ^\n/tmp/tmph2odfvs5.swift:27:9: note: 'acbcba'\
    \ declared here\n    let acbcba = acbcba * c\n        ^\n/tmp/tmph2odfvs5.swift:29:19:\
    \ error: use of local variable 'bcabcbc' before its declaration\n    let bcabcbc\
    \ = bcabcbc * b\n                  ^\n/tmp/tmph2odfvs5.swift:29:9: note: 'bcabcbc'\
    \ declared here\n    let bcabcbc = bcabcbc * b\n        ^\n/tmp/tmph2odfvs5.swift:30:19:\
    \ error: use of local variable 'acbcbac' before its declaration\n    let acbcbac\
    \ = acbcbac * c\n                  ^\n/tmp/tmph2odfvs5.swift:30:9: note: 'acbcbac'\
    \ declared here\n    let acbcbac = acbcbac * c\n        ^\n/tmp/tmph2odfvs5.swift:31:20:\
    \ error: use of local variable 'abccaabc' before its declaration\n    let abccaabc\
    \ = abccaabc * ab\n                   ^\n/tmp/tmph2odfvs5.swift:31:9: note: 'abccaabc'\
    \ declared here\n    let abccaabc = abccaabc * ab\n        ^\n/tmp/tmph2odfvs5.swift:32:20:\
    \ error: use of local variable 'bcabcbcb' before its declaration\n    let bcabcbcb\
    \ = bcabcbcb * b\n                   ^\n/tmp/tmph2odfvs5.swift:32:9: note: 'bcabcbcb'\
    \ declared here\n    let bcabcbcb = bcabcbcb * b\n        ^\n/tmp/tmph2odfvs5.swift:33:20:\
    \ error: use of local variable 'acbcbaca' before its declaration\n    let acbcbaca\
    \ = acbcbaca * c\n                   ^\n/tmp/tmph2odfvs5.swift:33:9: note: 'acbcbaca'\
    \ declared here\n    let acbcbaca = acbcbaca * c\n        ^\n/tmp/tmph2odfvs5.swift:34:21:\
    \ error: use of local variable 'abccaabca' before its declaration\n    let abccaabca\
    \ = abccaabca *"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b + c\
    \ {\n        return false\n    }\n    if b > c + a {\n        return false\n \
    \   }\n    if c > a + b {\n        return false\n    }\n    return true\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpdcgmbe8m/tmpdcgmbe8m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae9596bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae9593b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae9593b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9593b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdcgmbe8m                        0x000055d0781ee32b <unavailable> + 4907

    5    libc.so.6                          0x00002ae9598a8460 __libc_start_main +
    245

    6    tmpdcgmbe8m                        0x000055d0781edf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let cb = abs(c - b)\n    return (ab > ac) && (ab > bc) && (ab > cb)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmptd177yk5/tmptd177yk5.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba7e86cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba7e563b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba7e563988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba7e5627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptd177yk5                        0x0000558eeddf82ab <unavailable> + 4779

    5    libc.so.6                          0x00002aba7ea58460 __libc_start_main +
    245

    6    tmptd177yk5                        0x0000558eeddf7f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   return (ab >= bc && ab >= cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpkj4pax6x/tmpkj4pax6x.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ed850ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ed8201b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ed8201988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ed82007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkj4pax6x                        0x00005623eea7932b <unavailable> + 4907

    5    libc.so.6                          0x00002b3ed86f6460 __libc_start_main +
    245

    6    tmpkj4pax6x                        0x00005623eea78f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (a + b + c) / 2\n    let b1 = (a + b - c) / 2\n    let c1 = (a -\
    \ b - c) / 2\n    return a1 == b1 && b1 == c1 && c1 == a\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp9wkm4dzd/tmp9wkm4dzd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab1ab4aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab1ab1a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab1ab1a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1ab1a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9wkm4dzd                        0x000055fe61ee424b <unavailable> + 4683

    5    libc.so.6                          0x00002ab1ab696460 __libc_start_main +
    245

    6    tmp9wkm4dzd                        0x000055fe61ee3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a == 0 || b == 0 || c == 0 {\n        return false\n    }\n    let ab\
    \ = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n    let cb =\
    \ abs(c - b)\n    let abc = ab + ac + bc\n    let acb = ac + cb\n    let bcb =\
    \ bc + cb\n    let abac = ab + ac + ab\n    let acbc = ac + cb + bc\n    let bcbc\
    \ = bc + cb + bc\n    let abcab = ab + ac + ab + bc\n    let acbcab = ac + cb\
    \ + bc + ab\n    let bcbcab = bc + cb + bc + ab\n    let abcabc = ab + ac + ab\
    \ + bc + c\n    let acbcabc = ac + cb + bc + ab + c\n    let bcbcabc = bc + cb\
    \ + bc + ab + c\n    let abcabcb = ab + ac + ab + bc + c + b\n    let acbcabcb\
    \ = ac + cb + bc + ab + c + b\n    let bcbcabcb = bc + cb + bc + ab + c + b\n\
    \    let abcabcbc = ab + ac + ab + bc + c + b + c\n    let acbcabcbc = ac + cb\
    \ + bc + ab + c + b + c\n    let bcbcabcbc = bc + cb + bc + ab + c + b + c\n \
    \   let abcabcbcb = ab + ac + ab + bc + c + b + c + b\n    let acbcabcbcb = ac\
    \ + cb + bc + ab + c + b + c + b\n    let bcbcabcbcb = bc + cb + bc + ab + c +\
    \ b + c + b\n    let abcabcbcbc = ab + ac + ab + bc + c + b + c + b + c\n    let\
    \ acbcabcbcbc = ac + cb + bc + ab + c + b + c + b + c\n    let bcbcabcbcbc = bc\
    \ + cb + bc + ab + c + b + c + b + c\n    let abcabcbcbcb = ab + ac + ab + bc\
    \ + c + b + c + b + c + b\n    let acbcabcbcbcb = ac + cb + bc + ab + c + b +\
    \ c + b + c + b\n    let bcbcabcbcbcb = bc + cb + bc + ab + c + b + c + b + c\
    \ + b + c\n    let abcabcbcbcbc = ab + ac + ab + bc + c + b + c + b + c + \n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: '/tmp/tmpwsmildgv.swift:45:1: error: expected expression after operator

    }

    ^

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaxfbcfp0/tmpaxfbcfp0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd47322c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd47019b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd47019988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd470187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxfbcfp0                        0x000055e40849523b <unavailable> + 4667

    5    libc.so.6                          0x00002acd4750e460 __libc_start_main +
    245

    6    tmpaxfbcfp0                        0x000055e408494e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   \n    return ab >= bc && ab >= cb\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmptvu5ru8v/tmptvu5ru8v.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3b0a3fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3b0a0f2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3b0a0f2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3b0a0f17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvu5ru8v                        0x000055b59b2ba32b <unavailable> + 4907

    5    libc.so.6                          0x00002b3b0a5e7460 __libc_start_main +
    245

    6    tmptvu5ru8v                        0x000055b59b2b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let ab = abs(a\
    \ + b)\n    let ac = abs(a + c)\n    let bc = abs(b + c)\n    let abc = ab + bc\n\
    \    let ab2 = ab * ab\n    let ac2 = ac * ac\n    let bc2 = bc * bc\n    let\
    \ abc2 = abc * abc\n    let ab3 = ab2 * ab\n    let ac3 = ac2 * ac\n    let bc3\
    \ = bc2 * bc\n    let abc3 = abc2 * abc\n    let ab4 = ab3 * ab\n    let ac4 =\
    \ ac3 * ac\n    let bc4 = bc3 * bc\n    let abc4 = abc3 * abc\n    let ab5 = ab4\
    \ * ab\n    let ac5 = ac4 * ac\n    let bc5 = bc4 * bc\n    let abc5 = abc4 *\
    \ abc\n    let ab6 = ab5 * ab\n    let ac6 = ac5 * ac\n    let bc6 = bc5 * bc\n\
    \    let abc6 = abc5 * abc\n    let ab7 = ab6 * ab\n    let ac7 = ac6 * ac\n \
    \   let bc7 = bc6 * bc\n    let abc7 = abc6 * abc\n    let ab8 = ab7 * ab\n  \
    \  let ac8 = ac7 * ac\n    let bc8 = bc7 * bc\n    let abc8 = abc7 * abc\n   \
    \ let ab9 = ab8 * ab\n    let ac9 = ac8 * ac\n    let bc9 = bc8 * bc\n    let\
    \ abc9 = abc8 * abc\n    let ab10 = ab9 * ab\n    let ac10 = ac9 * ac\n    let\
    \ bc10 = bc9 * bc\n    let abc10 = abc9 * abc\n    let ab11 = ab10 * ab\n    let\
    \ ac11 = ac10 * ac\n    let bc11 = bc10 * bc\n    let abc11 = abc10 * abc\n  \
    \  let ab12 = ab11 * ab\n    let ac12 = ac11 * ac\n    let bc12 = bc11 * bc\n\
    \    let abc12 = abc11 * abc\n    let ab13 = ab12 * ab\n    let ac13 = ac12 *\
    \ ac\n    let bc13 = bc12 * bc\n    let abc13 = abc12 * abc\n    let ab14 = ab13\
    \ * ab\n    let ac14 = ac13 * ac\n    let bc14 = bc13 * bc\n    let abc14 = abc13\
    \ * abc\n    let ab15 = ab14 * ab\n    let ac15 = ac14 * ac\n    let bc15 = bc14\
    \ * bc\n    let abc15 = abc14 * abc\n    let ab16 = ab15 * ab\n    let ac16 =\
    \ ac15 * ac\n    let bc16 = bc15 * bc\n    let abc16 = abc15 * \n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: '/tmp/tmpq9vm82of.swift:77:1: error: expected expression after operator

    }

    ^

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   \n    if ab > ac && ab > bc {\n        return true\n    }\n    \n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp84k5qt8e/tmp84k5qt8e.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada1e352c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada1e049b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada1e049988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada1e0487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84k5qt8e                        0x000055619ff022ab <unavailable> + 4779

    5    libc.so.6                          0x00002ada1e53e460 __libc_start_main +
    245

    6    tmp84k5qt8e                        0x000055619ff01f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - c)) - ((c - a) * (c - b)) > 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpqlfc7zln/tmpqlfc7zln.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6299f28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6299c1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6299c1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6299c1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlfc7zln                        0x0000557748c581bb <unavailable> + 4539

    5    libc.so.6                          0x00002b629a114460 __libc_start_main +
    245

    6    tmpqlfc7zln                        0x0000557748c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    \n    if a1\
    \ == b1 && b1 == c1 {\n        return true\n    }\n    \n    if a1 == c1 {\n \
    \       return true\n    }\n    \n    if b1 == c1 {\n        return true\n   \
    \ }\n    \n    if a1 == b1 || b1 == c1 || c1 == a1 {\n        return false\n \
    \   }\n    \n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp5vd11rqn/tmp5vd11rqn.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9386130c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9385e27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9385e27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9385e267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5vd11rqn                        0x00005654e21f832b <unavailable> + 4907

    5    libc.so.6                          0x00002b938631c460 __libc_start_main +
    245

    6    tmp5vd11rqn                        0x00005654e21f7f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac + bc\n    let abc_ab = ab * ab\n    let abc_ac = ab * ac\n\
    \    let abc_bc = ab * bc\n    let abc_abc = abc_ab + abc_ac + abc_bc\n    let\
    \ abc_abc_inv = abc_abc / abc_ab\n    let abc_ac_inv = abc_ac / abc_ab\n    let\
    \ abc_bc_inv = abc_bc / abc_ab\n    let abc_abc_inv_abc_abc = abc_abc_inv * abc_abc\n\
    \    let abc_ac_inv_abc_abc = abc_ac_inv * abc_abc\n    let abc_bc_inv_abc_abc\
    \ = abc_bc_inv * abc_abc\n    let abc_abc_inv_abc_ac = abc_abc_inv * abc_ac\n\
    \    let abc_ac_inv_abc_ac = abc_ac_inv * abc_ac\n    let abc_bc_inv_abc_ac =\
    \ abc_bc_inv * abc_ac\n    let abc_abc_inv_abc_bc = abc_abc_inv * abc_bc\n   \
    \ let abc_ac_inv_abc_bc = abc_ac_inv * abc_bc\n    let abc_bc_inv_abc_bc = abc_bc_inv\
    \ * abc_bc\n    let abc_abc_inv_abc_abc_abc = abc_abc_inv * abc_abc_abc\n    let\
    \ abc_ac_inv_abc_abc_abc = abc_ac_inv * abc_abc_abc\n    let abc_bc_inv_abc_abc_abc\
    \ = abc_bc_inv * abc_abc_abc\n    let abc_abc_inv_abc_ac_inv = abc_abc_inv * abc_ac_inv\n\
    \    let abc_ac_inv_abc_ac_inv = abc_ac_inv * abc_ac_inv\n    let abc_bc_inv_abc_ac_inv\
    \ = abc_bc_inv * abc_ac_inv\n    let abc_abc_inv_abc_bc_inv = abc_abc_inv * abc_bc_inv\n\
    \    let abc_ac_inv_abc_bc_inv = abc_ac_inv * abc_bc_inv\n    let abc_bc_inv_abc_bc_inv\
    \ = abc_bc_inv * abc_bc_inv\n    let abc_abc_inv_abc_abc_ac_inv = abc_abc_inv\
    \ * abc_abc_ac_inv\n    let \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpcitbtl6q.swift:40:8: error: expected pattern\n    let \n      \
    \ ^\n/tmp/tmpcitbtl6q.swift:30:49: error: cannot find 'abc_abc_abc' in scope\n\
    \    let abc_abc_inv_abc_abc_abc = abc_abc_inv * abc_abc_abc\n               \
    \                                 ^~~~~~~~~~~\n/tmp/tmpcitbtl6q.swift:31:47: error:\
    \ cannot find 'abc_abc_abc' in scope\n    let abc_ac_inv_abc_abc_abc = abc_ac_inv\
    \ * abc_abc_abc\n                                              ^~~~~~~~~~~\n/tmp/tmpcitbtl6q.swift:32:47:\
    \ error: cannot find 'abc_abc_abc' in scope\n    let abc_bc_inv_abc_abc_abc =\
    \ abc_bc_inv * abc_abc_abc\n                                              ^~~~~~~~~~~\n\
    /tmp/tmpcitbtl6q.swift:39:52: error: cannot find 'abc_abc_ac_inv' in scope\n \
    \   let abc_abc_inv_abc_abc_ac_inv = abc_abc_inv * abc_abc_ac_inv\n          \
    \                                         ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - a) + (c - a) * (c - a) <= 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmplhkj1vum/tmplhkj1vum.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba4c91dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba4c8ed5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba4c8ed5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4c8ed47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplhkj1vum                        0x00005605f0aa11bb <unavailable> + 4539

    5    libc.so.6                          0x00002ba4c93ca460 __libc_start_main +
    245

    6    tmplhkj1vum                        0x00005605f0aa0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac + bc\n    return abc > 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_95j1dp4/tmp_95j1dp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acafd918c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acafd60fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acafd60f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acafd60e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_95j1dp4                        0x0000555b24fdd32b <unavailable> + 4907

    5    libc.so.6                          0x00002acafdb04460 __libc_start_main +
    245

    6    tmp_95j1dp4                        0x0000555b24fdcf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaxfbcfp0/tmpaxfbcfp0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd47322c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd47019b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd47019988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd470187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxfbcfp0                        0x000055e40849523b <unavailable> + 4667

    5    libc.so.6                          0x00002acd4750e460 __libc_start_main +
    245

    6    tmpaxfbcfp0                        0x000055e408494e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let b1 = c - b\n    let c1 = a - c\n    let a2 = b1 -\
    \ a1\n    let b2 = c1 - b1\n    let c2 = a1 - a2\n    let det = a1 * b2 - a2 *\
    \ b1\n    return det != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpua_g4ol5/tmpua_g4ol5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bdc704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bdc3fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bdc3fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bdc3fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpua_g4ol5                        0x000056466591423b <unavailable> + 4667

    5    libc.so.6                          0x00002b0bdc8f0460 __libc_start_main +
    245

    6    tmpua_g4ol5                        0x0000564665913e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a == 0 || b == 0 || c == 0 {\n        return false\n    }\n    let ab\
    \ = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n    let abc\
    \ = ab + ac\n    let bca = bc + ab\n    let abcb = abc + bca\n    let abcc = abc\
    \ + abca + bca\n    let acbc = ac + bc + abc\n    let acbca = ac + bca + abc +\
    \ abca + bca\n    let acbcab = ac + bca + abc + abca + bca + abc + abca + bca\n\
    \    let acbcabc = ac + bca + abc + abca + bca + abc + abca + bca + abc + abca\
    \ + bca\n    let acbcabcb = ac + bca + abc + abca + bca + abc + abca + bca + abc\
    \ + abca + bca + abc + abca + bca\n    let acbcabcbc = ac + bca + abc + abca +\
    \ bca + abc + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca +\
    \ bca\n    let acbcabcbcb = ac + bca + abc + abca + bca + abc + abca + bca + abc\
    \ + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca + bca\n    let\
    \ acbcabcbcbc = ac + bca + abc + abca + bca + abc + abca + bca + abc + abca +\
    \ bca + abc + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca +\
    \ bca\n    let acbcabcbcbcb = ac + bca + abc + abca + bca + abc + abca + bca +\
    \ abc + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca + bca +\
    \ abc + abca + bca\n    let acbcabcbcbcbc = ac + bca + abc + abca + bca + abc\
    \ + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca + bca + abc\
    \ + abca + bca + abc + abca + bca + abc + abca + bca\n    let acbcabcbcbcbcb =\
    \ ac + bca + abc + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca\
    \ + bca + abc + abca + bca + abc + abca + bca + abc + abca + bca + abc + abca\
    \ + bca\n    let acbcabcbcbcbcbc = ac\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpsn7oyo51.swift:19:22: error: cannot find 'abca' in scope\n    let\
    \ abcc = abc + abca + bca\n                     ^~~~\n/tmp/tmpsn7oyo51.swift:21:34:\
    \ error: cannot find 'abca' in scope\n    let acbca = ac + bca + abc + abca +\
    \ bca\n                                 ^~~~\n/tmp/tmpsn7oyo51.swift:22:35: error:\
    \ cannot find 'abca' in scope\n    let acbcab = ac + bca + abc + abca + bca +\
    \ abc + abca + bca\n                                  ^~~~\n/tmp/tmpsn7oyo51.swift:22:54:\
    \ error: cannot find 'abca' in scope\n    let acbcab = ac + bca + abc + abca +\
    \ bca + abc + abca + bca\n                                                   \
    \  ^~~~\n/tmp/tmpsn7oyo51.swift:23:36: error: cannot find 'abca' in scope\n  \
    \  let acbcabc = ac + bca + abc + abca + bca + abc + abca + bca + abc + abca +\
    \ bca\n                                   ^~~~\n/tmp/tmpsn7oyo51.swift:23:55:\
    \ error: cannot find 'abca' in scope\n    let acbcabc = ac + bca + abc + abca\
    \ + bca + abc + abca + bca + abc + abca + bca\n                              \
    \                        ^~~~\n/tmp/tmpsn7oyo51.swift:23:74: error: cannot find\
    \ 'abca' in scope\n    let acbcabc = ac + bca + abc + abca + bca + abc + abca\
    \ + bca + abc + abca + bca\n                                                 \
    \                        ^~~~\n/tmp/tmpsn7oyo51.swift:24:37: error: cannot find\
    \ 'abca' in scope\n    let acbcabcb = ac + bca + abc + abca + bca + abc + abca\
    \ + bca + abc + abca + bca + abc + abca + bca\n                              \
    \      ^~~~\n/tmp/tmpsn7oyo51.swift:24:56: error: cannot find 'abca' in scope\n\
    \    let acbcabcb = ac + bca + abc + abca + bca + abc + abca + bca + abc + abca\
    \ + bca + abc + abca + bca\n                                                 \
    \      ^~~~\n/tmp/tmpsn7oyo51.swift:24:75: error: cannot find 'abca' in scope\n\
    \    let acbcabcb = ac + bca + abc + abca + bca + abc + abca + bca + abc + abca\
    \ + bca + abc + abca + bca\n                                                 \
    \                         ^~~~\n/tmp/tmpsn7oyo51.swift:24:94: error: cannot find\
    \ 'abca' in scope\n    let acbcabcb = ac + bca + abc + abca + bca "
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    return ((b *\
    \ b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpym6ojh_i/tmpym6ojh_i.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ad8f6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ad8c65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ad8c65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ad8c647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpym6ojh_i                        0x000055ec786bf2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b6ad915a460 __libc_start_main +
    245

    6    tmpym6ojh_i                        0x000055ec786bef59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bc2 = bc + ab\n    let ab2 = ab + bc\n    let ac2\
    \ = ac + ab\n    let bc3 = bc + ac\n    let ab3 = ab + bc\n    let ac3 = ac +\
    \ ab\n    let bc4 = bc + ac\n    let ab4 = ab + bc\n    let ac4 = ac + ab\n  \
    \  let bc5 = bc + ac\n    let ab5 = ab + bc\n    let ac5 = ac + ab\n    let bc6\
    \ = bc + ac\n    let ab6 = ab + bc\n    let ac6 = ac + ab\n    let bc7 = bc +\
    \ ac\n    let ab7 = ab + bc\n    let ac7 = ac + ab\n    let bc8 = bc + ac\n  \
    \  let ab8 = ab + bc\n    let ac8 = ac + ab\n    let bc9 = bc + ac\n    let ab9\
    \ = ab + bc\n    let ac9 = ac + ab\n    let bc10 = bc + ac\n    let ab10 = ab\
    \ + bc\n    let ac10 = ac + ab\n    let bc11 = bc + ac\n    let ab11 = ab + bc\n\
    \    let ac11 = ac + ab\n    let bc12 = bc + ac\n    let ab12 = ab + bc\n    let\
    \ ac12 = ac + ab\n    let bc13 = bc + ac\n    let ab13 = ab + bc\n    let ac13\
    \ = ac + ab\n    let bc14 = bc + ac\n    let ab14 = ab + bc\n    let ac14 = ac\
    \ + ab\n    let bc15 = bc + ac\n    let ab15 = ab + bc\n    let ac15 = ac + ab\n\
    \    let bc16 = bc + ac\n    let ab16 = ab + bc\n    let ac16 = ac + ab\n    let\
    \ bc17 = bc + ac\n    let ab17 = ab + bc\n    let ac17 = ac + ab\n    let bc18\
    \ = bc + ac\n    let ab18 = ab + bc\n    let ac18 = ac + ab\n    let bc19 = bc\
    \ + ac\n    let ab19 = ab + bc\n    let ac19 = ac + ab\n    let bc20 = bc + ac\n\
    \    let ab20 = ab + bc\n    let ac20 = ac + ab\n    let bc21 = bc + ac\n    let\
    \ ab21 = ab + bc\n    let ac21 = ac + ab\n    let bc22 = bc + ac\n    let ab22\
    \ = ab + bc\n    let ac22 = ac + ab\n    let bc23 = bc + ac\n    let ab23 = ab\
    \ + bc\n    let ac23 = ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp13_49zo0.swift:13:9: warning: initialization of immutable value\
    \ 'abc' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let abc = ab + ac\n    ~~~~^~~\n    _\n/tmp/tmp13_49zo0.swift:14:9:\
    \ warning: initialization of immutable value 'bc2' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let bc2 = bc + ab\n    ~~~~^~~\n\
    \    _\n/tmp/tmp13_49zo0.swift:15:9: warning: initialization of immutable value\
    \ 'ab2' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let ab2 = ab + bc\n    ~~~~^~~\n    _\n/tmp/tmp13_49zo0.swift:16:9:\
    \ warning: initialization of immutable value 'ac2' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let ac2 = ac + ab\n    ~~~~^~~\n\
    \    _\n/tmp/tmp13_49zo0.swift:17:9: warning: initialization of immutable value\
    \ 'bc3' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let bc3 = bc + ac\n    ~~~~^~~\n    _\n/tmp/tmp13_49zo0.swift:18:9:\
    \ warning: initialization of immutable value 'ab3' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let ab3 = ab + bc\n    ~~~~^~~\n\
    \    _\n/tmp/tmp13_49zo0.swift:19:9: warning: initialization of immutable value\
    \ 'ac3' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let ac3 = ac + ab\n    ~~~~^~~\n    _\n/tmp/tmp13_49zo0.swift:20:9:\
    \ warning: initialization of immutable value 'bc4' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let bc4 = bc + ac\n    ~~~~^~~\n\
    \    _\n/tmp/tmp13_49zo0.swift:21:9: warning: initialization of immutable value\
    \ 'ab4' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let ab4 = ab + bc\n    ~~~~^~~\n    _\n/tmp/tmp13_49zo0.swift:22:9:\
    \ warning: initialization of immutable value 'ac4' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let ac4 = ac + ab\n    ~~~~^~~\n\
    \    _\n/tmp/tmp13_49zo0.swift:23:9: warning: initialization of immutable value\
    \ 'bc5' was never used; consider replacing with assignment to '_' or"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let a2 = c - a\n    let b1 = c - b\n    let b2 = a -\
    \ b\n    let c1 = a - c\n    let c2 = b - a\n    let d1 = b1 - b1\n    let d2\
    \ = c1 - c1\n    let e1 = a1 * d1\n    let e2 = a2 * d2\n    let f1 = b1 * d2\n\
    \    let f2 = b2 * d1\n    let g1 = c1 * d1\n    let g2 = c2 * d2\n    let h1\
    \ = a1 * e2\n    let h2 = a2 * f1\n    let i1 = b1 * e2\n    let i2 = b2 * f1\n\
    \    let j1 = c1 * e2\n    let j2 = c2 * f1\n    let k1 = a1 * f1\n    let k2\
    \ = a2 * f2\n    let l1 = b1 * f1\n    let l2 = b2 * f2\n    let m1 = c1 * f1\n\
    \    let m2 = c2 * f2\n    let n1 = a1 * g1\n    let n2 = a2 * g2\n    let o1\
    \ = b1 * g1\n    let o2 = b2 * g2\n    let p1 = a1 * h1\n    let p2 = a2 * h2\n\
    \    let q1 = b1 * h1\n    let q2 = b2 * h2\n    let r1 = c1 * h1\n    let r2\
    \ = c2 * h2\n    let s1 = a1 * i1\n    let s2 = a2 * j1\n    let t1 = b1 * i1\n\
    \    let t2 = b2 * j1\n    let u1 = a1 * k1\n    let u2 = a2 * l1\n    let v1\
    \ = b1 * k1\n    let v2 = b2 * l1\n    let w1 = c1 * k1\n    let w2 = c2 * l1\n\
    \    let x1 = a1 * n1\n    let x2 = a2 * n2\n    let y1 = b1 * n1\n    let y2\
    \ = b2 * n2\n    let z1 = c1 * n1\n    let z2 = c2 * n2\n    let a = a1 * n1 +\
    \ a2 * n2\n    let b = b1 * n1 + b2 * n2\n    let c = c1 * n1 + c2 * n2\n    let\
    \ d = a1 * o1 + a2 * o2\n    let e = b1 * o1 + b2 * o2\n    let f = c1 * o1 +\
    \ c2 * o2\n    let g = a1 * p1 + a2 * p2\n    let h = b1 * p1 + b2 * p2\n    let\
    \ i = c1 * p1 + c2 * p2\n    let j = a1 * q1 + a2 * q2\n    let k = b1 * q1 +\
    \ b2 * q2\n    let l = c1 * q1 + c2 * q2\n    let m = a1 * r1 + a2 * r2\n    let\
    \ n = b1 * r1 + b2 * r2\n    let o = c1 * r1 + c2 * r2\n    let p = a1 * s1 +\
    \ a2 * \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: '/tmp/tmpbtf4gia2.swift:78:1: error: expected expression after operator

    }

    ^

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a == 0 || b == 0 || c == 0 {\n        return false\n    }\n    \n    let\
    \ ab = abs(b - a)\n    let ac = abs(c - a)\n    \n    if ab == ac {\n        return\
    \ true\n    }\n    \n    if ab > ac {\n        return false\n    }\n    \n   \
    \ let bc = abs(b - c)\n    \n    return (b == c) || (b == a && bc > ac)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmps_fwvqtc/tmps_fwvqtc.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ff038c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06fed2fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06fed2f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06fed2e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps_fwvqtc                        0x000055fe654962ab <unavailable> + 4779

    5    libc.so.6                          0x00002b06ff224460 __libc_start_main +
    245

    6    tmps_fwvqtc                        0x000055fe65495f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   return (ab >= bc && ab >= cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpkj4pax6x/tmpkj4pax6x.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ed850ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ed8201b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ed8201988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ed82007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkj4pax6x                        0x00005623eea7932b <unavailable> + 4907

    5    libc.so.6                          0x00002b3ed86f6460 __libc_start_main +
    245

    6    tmpkj4pax6x                        0x00005623eea78f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bcd = bc + ab\n    let abbc = abc + bc\n    let\
    \ abbcd = abbc + bcd\n    return abbcd == ab\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp8h6coj6f/tmp8h6coj6f.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad95c06cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad95bd63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad95bd63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad95bd627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8h6coj6f                        0x000055df43e322ab <unavailable> + 4779

    5    libc.so.6                          0x00002ad95c258460 __libc_start_main +
    245

    6    tmp8h6coj6f                        0x000055df43e31f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abca = abc + bc\n    return\
    \ abca >= bca\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpm8npv9hj/tmpm8npv9hj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b697c880c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b697c577b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b697c577988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b697c5767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8npv9hj                        0x000055e2cf45632b <unavailable> + 4907

    5    libc.so.6                          0x00002b697ca6c460 __libc_start_main +
    245

    6    tmpm8npv9hj                        0x000055e2cf455f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a ==\
    \ 0 || b == 0 || c == 0 {\n        return false\n    }\n    \n    let ab = abs(b\
    \ - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n    \n    if ab == bc\
    \ && ab == ac {\n        return true\n    }\n    \n    if ab == bc {\n       \
    \ return true\n    }\n    \n    if ab == ac {\n        return false\n    }\n \
    \   \n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpjupc27f_/tmpjupc27f_.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9996a83c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b999677ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b999677a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99967797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjupc27f_                        0x0000560d794c132b <unavailable> + 4907

    5    libc.so.6                          0x00002b9996c6f460 __libc_start_main +
    245

    6    tmpjupc27f_                        0x0000560d794c0f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac + bc\n    return abc > 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_95j1dp4/tmp_95j1dp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acafd918c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acafd60fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acafd60f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acafd60e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_95j1dp4                        0x0000555b24fdd32b <unavailable> + 4907

    5    libc.so.6                          0x00002acafdb04460 __libc_start_main +
    245

    6    tmp_95j1dp4                        0x0000555b24fdcf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let a1 = (a +\
    \ b) / 2\n    let b1 = (b + c) / 2\n    let c1 = (c + a) / 2\n    let a2 = (a1\
    \ + b2) / 2\n    let b2 = (b1 + c1) / 2\n    let c2 = (c1 + a2) / 2\n    let a3\
    \ = (a2 + b3) / 2\n    let b3 = (b2 + c2) / 2\n    let c3 = (c2 + a3) / 2\n  \
    \  let a4 = (a3 + b4) / 2\n    let b4 = (b3 + c3) / 2\n    let c4 = (c4 + a4)\
    \ / 2\n    if a1 == b2 && a2 == c3 && a3 == c4 {\n        return true\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpzkd586ul.swift:16:20: error: use of local variable 'b2' before\
    \ its declaration\n    let a2 = (a1 + b2) / 2\n                   ^\n/tmp/tmpzkd586ul.swift:17:9:\
    \ note: 'b2' declared here\n    let b2 = (b1 + c1) / 2\n        ^\n/tmp/tmpzkd586ul.swift:19:20:\
    \ error: use of local variable 'b3' before its declaration\n    let a3 = (a2 +\
    \ b3) / 2\n                   ^\n/tmp/tmpzkd586ul.swift:20:9: note: 'b3' declared\
    \ here\n    let b3 = (b2 + c2) / 2\n        ^\n/tmp/tmpzkd586ul.swift:19:18: error:\
    \ cannot convert value of type 'String' to expected argument type 'Int'\n    let\
    \ a3 = (a2 + b3) / 2\n                 ^\n/tmp/tmpzkd586ul.swift:21:18: error:\
    \ cannot convert value of type 'String' to expected argument type 'Int'\n    let\
    \ c3 = (c2 + a3) / 2\n                 ^\n/tmp/tmpzkd586ul.swift:22:20: error:\
    \ use of local variable 'b4' before its declaration\n    let a4 = (a3 + b4) /\
    \ 2\n                   ^\n/tmp/tmpzkd586ul.swift:23:9: note: 'b4' declared here\n\
    \    let b4 = (b3 + c3) / 2\n        ^\n/tmp/tmpzkd586ul.swift:22:18: error: cannot\
    \ convert value of type 'String' to expected argument type 'Int'\n    let a4 =\
    \ (a3 + b4) / 2\n                 ^\n/tmp/tmpzkd586ul.swift:23:18: error: cannot\
    \ convert value of type 'String' to expected argument type 'Int'\n    let b4 =\
    \ (b3 + c3) / 2\n                 ^\n/tmp/tmpzkd586ul.swift:24:15: error: use\
    \ of local variable 'c4' before its declaration\n    let c4 = (c4 + a4) / 2\n\
    \              ^\n/tmp/tmpzkd586ul.swift:24:9: note: 'c4' declared here\n    let\
    \ c4 = (c4 + a4) / 2\n        ^\n/tmp/tmpzkd586ul.swift:24:18: error: cannot convert\
    \ value of type 'String' to expected argument type 'Int'\n    let c4 = (c4 + a4)\
    \ / 2\n                 ^\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0) && ((a - b) * (c - b) <= 0)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_knn04_1/tmp_knn04_1.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c46ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c46bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c46bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c46bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_knn04_1                        0x000055af1605d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b2c470bc460 __libc_start_main +
    245

    6    tmp_knn04_1                        0x000055af1605ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe0ppvlih/tmpe0ppvlih.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32b4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32b415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32b415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32b415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe0ppvlih                        0x000055d373fc62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b32b4653460 __libc_start_main +
    245

    6    tmpe0ppvlih                        0x000055d373fc5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   \n    return ab >= bc && ab >= cb\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmptvu5ru8v/tmptvu5ru8v.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3b0a3fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3b0a0f2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3b0a0f2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3b0a0f17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvu5ru8v                        0x000055b59b2ba32b <unavailable> + 4907

    5    libc.so.6                          0x00002b3b0a5e7460 __libc_start_main +
    245

    6    tmptvu5ru8v                        0x000055b59b2b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a >\
    \ b {\n        if b > c {\n            return true\n        } else {\n       \
    \     return false\n        }\n    } else {\n        if c > b {\n            return\
    \ true\n        } else {\n            return false\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpckk8zp0q/tmpckk8zp0q.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5d9169c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5d8e60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5d8e60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5d8e5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckk8zp0q                        0x000055ac725f232b <unavailable> + 4907

    5    libc.so.6                          0x00002ab5d9355460 __libc_start_main +
    245

    6    tmpckk8zp0q                        0x000055ac725f1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a > b {\n        return right_angle_triangle(b, a, c)\n    }\n    if b\
    \ > c {\n        return right_angle_triangle(a, c, b)\n    }\n    if a == b {\n\
    \        return true\n    }\n    if a == c {\n        return true\n    }\n   \
    \ if b == c {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppty_yiku.swift:11:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmppty_yiku.swift:14:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(a,\
    \ c, b)\n                                   ^\n                              \
    \      a: b: c: \n"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a >\
    \ b {\n        if b > c {\n            return true\n        } else {\n       \
    \     return false\n        }\n    } else {\n        if c > b {\n            return\
    \ true\n        } else {\n            return false\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpckk8zp0q/tmpckk8zp0q.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5d9169c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5d8e60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5d8e60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5d8e5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckk8zp0q                        0x000055ac725f232b <unavailable> + 4907

    5    libc.so.6                          0x00002ab5d9355460 __libc_start_main +
    245

    6    tmpckk8zp0q                        0x000055ac725f1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (b - a) / Double(a)\n    let b1 = (c - b) / Double(b)\n    let c1\
    \ = (a - c) / Double(c)\n    let a2 = (b1 - a) / Double(a1)\n    let b2 = (c1\
    \ - b) / Double(b1)\n    let c2 = (a1 - c) / Double(c1)\n    let a3 = (a2 - a)\
    \ / Double(a2)\n    let b3 = (b2 - b) / Double(b2)\n    let c3 = (a2 - c) / Double(c2)\n\
    \    let a4 = (b3 - a) / Double(a3)\n    let b4 = (c3 - b) / Double(b3)\n    let\
    \ c5 = (a3 - c) / Double(c3)\n    let a5 = (a4 - a) / Double(a4)\n    let b5 =\
    \ (b4 - b) / Double(b4)\n    let c5 = (a4 - c) / Double(c4)\n    let a6 = (a5\
    \ - a) / Double(a5)\n    let b6 = (b5 - b) / Double(b5)\n    let c6 = (a5 - c)\
    \ / Double(c5)\n    let a7 = (a6 - a) / Double(a6)\n    let b7 = (b6 - b) / Double(b6)\n\
    \    let c7 = (a6 - c) / Double(c6)\n    let a8 = (b7 - a) / Double(a7)\n    let\
    \ b8 = (b7 - b) / Double(b7)\n    let c8 = (a7 - c) / Double(c7)\n    return a8\
    \ * b2 > a2 * b8 && a8 * b4 > a2 * b6 && a8 * b6 > a2 * b8\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpri80hifh.swift:10:22: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let a1 = (b - a) / Double(a)\n \
    \            ~~~~~~~ ^ ~~~~~~~~~\n/tmp/tmpri80hifh.swift:10:22: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    let a1 = (b - a) / Double(a)\n         \
    \            ^\n/tmp/tmpri80hifh.swift:11:22: error: binary operator '/' cannot\
    \ be applied to operands of type 'Int' and 'Double'\n    let b1 = (c - b) / Double(b)\n\
    \             ~~~~~~~ ^ ~~~~~~~~~\n/tmp/tmpri80hifh.swift:11:22: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    let b1 = (c - b) / Double(b)\n         \
    \            ^\n/tmp/tmpri80hifh.swift:12:22: error: binary operator '/' cannot\
    \ be applied to operands of type 'Int' and 'Double'\n    let c1 = (a - c) / Double(c)\n\
    \             ~~~~~~~ ^ ~~~~~~~~~\n/tmp/tmpri80hifh.swift:12:22: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    let c1 = (a - c) / Double(c)\n         \
    \            ^\n/tmp/tmpri80hifh.swift:24:32: error: cannot find 'c4' in scope\n\
    \    let c5 = (a4 - c) / Double(c4)\n                               ^~\n"
  stdout: ''
  timestamp: 1659824760
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bcd = bc + ab\n    let abbc = abc + bc\n    let\
    \ abbcd = abbc + bcd\n    return abbcd == ab\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp8h6coj6f/tmp8h6coj6f.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad95c06cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad95bd63b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad95bd63988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad95bd627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8h6coj6f                        0x000055df43e322ab <unavailable> + 4779

    5    libc.so.6                          0x00002ad95c258460 __libc_start_main +
    245

    6    tmp8h6coj6f                        0x000055df43e31f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return false\n        } else {\n            return\
    \ true\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpvtryqt4v/tmpvtryqt4v.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f7ac18c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f7a90fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f7a90f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f7a90e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvtryqt4v                        0x000055a82ee032ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1f7ae04460 __libc_start_main +
    245

    6    tmpvtryqt4v                        0x000055a82ee02f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let b1 = c - b\n    let c1 = a - c\n    return a1 * b1\
    \ + b1 * c1 == c1 * a1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpvzzyykwh/tmpvzzyykwh.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9bc4d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9bc1c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9bc1c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9bc1c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvzzyykwh                        0x0000558f9990d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002ad9bc6bc460 __libc_start_main +
    245

    6    tmpvzzyykwh                        0x0000558f9990ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - a) + (c - a) * (c - a) <= 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmplhkj1vum/tmplhkj1vum.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba4c91dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba4c8ed5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba4c8ed5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4c8ed47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplhkj1vum                        0x00005605f0aa11bb <unavailable> + 4539

    5    libc.so.6                          0x00002ba4c93ca460 __libc_start_main +
    245

    6    tmplhkj1vum                        0x00005605f0aa0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abca = abc + bca\n    let\
    \ abbc = ab + bc\n    let abbb = abbc + ab\n    let abbba = abbb + ab\n    let\
    \ abbbc = abbbc + ab\n    let abbbca = abbbc + ab\n    let abbbbc = abbbc + ab\n\
    \    let abbbbca = abbbbc + ab\n    let abbbbcbc = abbbbc + ab\n    let abbbbcbca\
    \ = abbbbcbc + ab\n    let abbbbcbcba = abbbbcbca + ab\n    let abbbbcbcbb = abbbbcbca\
    \ + ab\n    let abbbbcbcbc = abbbbcbca + ab\n    let abbbbcbcbca = abbbbcbcbc\
    \ + ab\n    let abbbbcbcbcba = abbbbcbcbca + ab\n    let abbbbcbcbcbb = abbbbcbcbca\
    \ + ab\n    let abbbbcbcbcbc = abbbbcbcbca + ab\n    let abbbbcbcbcbca = abbbbcbcbcbc\
    \ + ab\n    let abbbbcbcbcbcba = abbbbcbcbcbca + ab\n    let abbbbcbcbcbcbb =\
    \ abbbbcbcbcbca + ab\n    let abbbbcbcbcbcbc = abbbbcbcbcbca + ab\n    let abbbbcbcbcbcbca\
    \ = abbbbcbcbcbcbc + ab\n    let abbbbcbcbcbcbcba = abbbbcbcbcbcbca + ab\n   \
    \ let abbbbcbcbcbcbcbb = abbbbcbcbcbcbca + ab\n    let abbbbcbcbcbcbcbc = abbbbcbcbcbcbca\
    \ + ab\n    let abbbbcbcbcbcbcbca = abbbbcbcbcbcbcbc + ab\n    let abbbbcbcbcbcbcbcba\
    \ = abbbbcbcbcbcbcbca + ab\n    let abbbbcbcbcbcbcbcbb = abbbbcbcbcbcbcbca + ab\n\
    \    let abbbbcbcbcbcbcbcbc = abbbbcbcbcbcbcbca + ab\n    let \n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpv_hubzn1.swift:44:8: error: expected pattern\n    let \n      \
    \ ^\n/tmp/tmpv_hubzn1.swift:19:17: error: use of local variable 'abbbc' before\
    \ its declaration\n    let abbbc = abbbc + ab\n                ^\n/tmp/tmpv_hubzn1.swift:19:9:\
    \ note: 'abbbc' declared here\n    let abbbc = abbbc + ab\n        ^\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let b1 = c - b\n    let c1 = a - c\n    return a1 * b1\
    \ + b1 * c1 == c1 * a1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpvzzyykwh/tmpvzzyykwh.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9bc4d0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9bc1c7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9bc1c7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9bc1c67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvzzyykwh                        0x0000558f9990d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002ad9bc6bc460 __libc_start_main +
    245

    6    tmpvzzyykwh                        0x0000558f9990ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n \
    \   return ab == bc && ab == ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpqofoybwu/tmpqofoybwu.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab531b48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab53183fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab53183f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab53183e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqofoybwu                        0x000055c5b35472ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab531d34460 __libc_start_main +
    245

    6    tmpqofoybwu                        0x000055c5b3546f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0) && ((a - b) * (c - b) <= 0)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_knn04_1/tmp_knn04_1.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c46ed0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c46bc7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c46bc7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c46bc67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_knn04_1                        0x000055af1605d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b2c470bc460 __libc_start_main +
    245

    6    tmp_knn04_1                        0x000055af1605ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc * b\n    let cab = ac * c\n    let acb\
    \ = ac * b\n    let abca = abc * ab\n    let bcab = bca * b\n    let caba = cab\
    \ * c\n    let acbc = acb * c\n    let abcab = abca * ab\n    let bcaba = bcab\
    \ * b\n    let cabab = caba * c\n    let acbcb = acbcb * c\n    let abcaba = abcab\
    \ * ab\n    let bcabab = bcaba * b\n    let cababa = cabab * c\n    let acbcba\
    \ = acbcba * c\n    let abcabab = abcaba * ab\n    let bcababa = bcabab * b\n\
    \    let cababab = cababa * c\n    let acbcbac = acbcba * c\n    let abcababa\
    \ = abcabab * ab\n    let bcababab = bcababa * b\n    let cabababa = cababab *\
    \ c\n    let acbcbaca = acbcbac * c\n    let abcababa = abcababa * ab\n    let\
    \ bcababab = bcabababa * b\n    let cabababa = cabababa * c\n    let acbcbacaa\
    \ = acbcbaca * c\n    let abcababab = abcababa * ab\n    let bcabababa = bcabababa\
    \ * b\n    let cabababab = cabababa * c\n    let acbcbacaab = acbcbacaa * c\n\
    \    let abcabababa = abcababab * ab\n    let bcabababab = bcabababa * b\n   \
    \ let cabababab = cabababa * c\n    let acbcbacaabc = acbcbacaab * c\n    let\
    \ abcabababa = abcabababa * ab\n    let bcabababab = bcababababa * b\n    let\
    \ cabababab = cabababab * c\n    let acbcbacaabbc = acbcbacaabbc * c\n    let\
    \ abcabababa = abcabababa * ab\n    let bcabababab = bcababababa * b\n    let\
    \ cabababab = cabababab * c\n    let acbcbacaabbca = acbcba\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqj52tnld.swift:24:17: error: use of local variable 'acbcb' before\
    \ its declaration\n    let acbcb = acbcb * c\n                ^\n/tmp/tmpqj52tnld.swift:24:9:\
    \ note: 'acbcb' declared here\n    let acbcb = acbcb * c\n        ^\n/tmp/tmpqj52tnld.swift:28:18:\
    \ error: use of local variable 'acbcba' before its declaration\n    let acbcba\
    \ = acbcba * c\n                 ^\n/tmp/tmpqj52tnld.swift:28:9: note: 'acbcba'\
    \ declared here\n    let acbcba = acbcba * c\n        ^\n/tmp/tmpqj52tnld.swift:37:9:\
    \ error: invalid redeclaration of 'abcababa'\n    let abcababa = abcababa * ab\n\
    \        ^\n/tmp/tmpqj52tnld.swift:33:9: note: 'abcababa' previously declared\
    \ here\n    let abcababa = abcabab * ab\n        ^\n/tmp/tmpqj52tnld.swift:38:20:\
    \ error: use of local variable 'bcabababa' before its declaration\n    let bcababab\
    \ = bcabababa * b\n                   ^\n/tmp/tmpqj52tnld.swift:42:9: note: 'bcabababa'\
    \ declared here\n    let bcabababa = bcabababa * b\n        ^\n/tmp/tmpqj52tnld.swift:39:9:\
    \ error: invalid redeclaration of 'cabababa'\n    let cabababa = cabababa * c\n\
    \        ^\n/tmp/tmpqj52tnld.swift:35:9: note: 'cabababa' previously declared\
    \ here\n    let cabababa = cababab * c\n        ^\n/tmp/tmpqj52tnld.swift:42:21:\
    \ error: use of local variable 'bcabababa' before its declaration\n    let bcabababa\
    \ = bcabababa * b\n                    ^\n/tmp/tmpqj52tnld.swift:42:9: note: 'bcabababa'\
    \ declared here\n    let bcabababa = bcabababa * b\n        ^\n/tmp/tmpqj52tnld.swift:50:22:\
    \ error: cannot find 'bcababababa' in scope\n    let bcabababab = bcababababa\
    \ * b\n                     ^~~~~~~~~~~\n/tmp/tmpqj52tnld.swift:52:24: error:\
    \ use of local variable 'acbcbacaabbc' before its declaration\n    let acbcbacaabbc\
    \ = acbcbacaabbc * c\n                       ^\n/tmp/tmpqj52tnld.swift:52:9: note:\
    \ 'acbcbacaabbc' declared here\n    let acbcbacaabbc = acbcbacaabbc * c\n    \
    \    ^\n/tmp/tmpqj52tnld.swift:54:22: error: cannot find 'bcababababa' in scope\n\
    \    let bcabababab = bcababababa * b\n                     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return false\n        } else {\n            return\
    \ true\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpvtryqt4v/tmpvtryqt4v.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f7ac18c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f7a90fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f7a90f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f7a90e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvtryqt4v                        0x000055a82ee032ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1f7ae04460 __libc_start_main +
    245

    6    tmpvtryqt4v                        0x000055a82ee02f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let bc = abs(c - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >=\
    \ ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(right_angle_triangle(a: 3, b:\
    \ 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpb4ou6xex/tmpb4ou6xex.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0dce0fcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0dcddf3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0dcddf3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0dcddf27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4ou6xex                        0x000055c9e61e02ab <unavailable> + 4779

    5    libc.so.6                          0x00002b0dce2e8460 __libc_start_main +
    245

    6    tmpb4ou6xex                        0x000055c9e61dff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n \
    \   return (ab > bc && ab > ac)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp7k4xo2s4/tmp7k4xo2s4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b28d201fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b28d1d16b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b28d1d16988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b28d1d157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7k4xo2s4                        0x000055bd7d55a2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b28d220b460 __libc_start_main +
    245

    6    tmp7k4xo2s4                        0x000055bd7d559f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let a1 = (a +\
    \ b + c) / 2\n    let b1 = (a + b) / 2\n    let c1 = (a + c) / 2\n    let a2 =\
    \ (b + c) / 2\n    let b2 = (b + a) / 2\n    let c2 = (b + c) / 2\n    let a3\
    \ = (c + a) / 2\n    let b3 = (c + b) / 2\n    let c3 = (c + a) / 2\n    return\
    \ a1 == b2 && a2 == c3 && a3 == b3 || b1 == c2 && b2 == a3 && b3 == c3 || c1 ==\
    \ a2 && c2 == a3 && c3 == b3 || a1 == b2 && b1 == c3 && c3 == a3\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpengcn9nm/tmpengcn9nm.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fae7a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fae49cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fae49c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fae49b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpengcn9nm                        0x000055b26dd9f3bb <unavailable> + 5051

    5    libc.so.6                          0x00002b4fae991460 __libc_start_main +
    245

    6    tmpengcn9nm                        0x000055b26dd9efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    if a + b > c {\n      \
    \  return false\n    }\n    if a + c > b {\n        return false\n    }\n    if\
    \ b + c > a {\n        return false\n    }\n    return true\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpuv35wyqe/tmpuv35wyqe.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d52f9ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d52c91b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d52c91988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d52c907b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuv35wyqe                        0x0000557d4d0a62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b9d53186460 __libc_start_main +
    245

    6    tmpuv35wyqe                        0x0000557d4d0a5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a >\
    \ b {\n        if b > c {\n            return false\n        } else {\n      \
    \      return true\n        }\n    } else {\n        if c > b {\n            return\
    \ false\n        } else {\n            return true\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpa2lr8_yt/tmpa2lr8_yt.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5cf06fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5ced66b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5ced66988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5ced657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa2lr8_yt                        0x00005611e8b742ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab5cf25b460 __libc_start_main +
    245

    6    tmpa2lr8_yt                        0x00005611e8b73f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bcd = bc + ab\n    let abdc = ab + bc\n    let\
    \ bcda = bcd + ab\n    let abdca = abdc + ab\n    let bcdaa = bcda + ab\n    let\
    \ abdcab = abdca + ab\n    let bcdaab = bcdaa + ab\n    let abdcabc = abdcab +\
    \ ab\n    let bcdaabc = bcdaab + ab\n    let abdcabcd = abdcabc + ab\n    let\
    \ bcdaabcd = bcdaabcd + ab\n    let abdcabcdd = abdcabcded + ab\n    let bcdaabcdd\
    \ = bcdaabcded + ab\n    let abdcabcddd = abdcabcdded + ab\n    let bcdaabcdd\
    \ = bcdaabcdd + ab\n    let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd =\
    \ bcdaabcdd + ab\n    let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd\
    \ + ab\n    let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd +\
    \ ab\n    let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n\
    \    let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n  \
    \  let abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let\
    \ abdcabcddd = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd\
    \ = abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd =\
    \ abdcabcddd + ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd = abdcabcddd\
    \ + ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd = abdcabcddd +\
    \ ab\n    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd = abdcabcddd + ab\n\
    \    let bcdaabcdd = bcdaabcdd + ab\n    let abdcabcddd = abdcabc\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp9at8zefg.swift:24:20: error: use of local variable 'bcdaabcd' before\
    \ its declaration\n    let bcdaabcd = bcdaabcd + ab\n                   ^\n/tmp/tmp9at8zefg.swift:24:9:\
    \ note: 'bcdaabcd' declared here\n    let bcdaabcd = bcdaabcd + ab\n        ^\n\
    /tmp/tmp9at8zefg.swift:25:21: error: cannot find 'abdcabcded' in scope\n    let\
    \ abdcabcdd = abdcabcded + ab\n                    ^~~~~~~~~~\n/tmp/tmp9at8zefg.swift:26:21:\
    \ error: cannot find 'bcdaabcded' in scope\n    let bcdaabcdd = bcdaabcded + ab\n\
    \                    ^~~~~~~~~~\n/tmp/tmp9at8zefg.swift:27:22: error: cannot find\
    \ 'abdcabcdded' in scope\n    let abdcabcddd = abdcabcdded + ab\n            \
    \         ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let ab = abs(a\
    \ + b)\n    let ac = abs(a + c)\n    let bc = abs(b + c)\n    let abc = ab + ac\n\
    \    let bca = bc * b\n    let acb = ac * c\n    let abcb = abc * c\n    let acbc\
    \ = acb * c\n    let abcca = abc * ca\n    let abcbc = abcb * c\n    let abcab\
    \ = abcb * ca\n    let abcabc = abcab * c\n    let abcabca = abcab * ca\n    let\
    \ abcabcbc = abcabcb * c\n    let abcabcab = abcabcb * ca\n    let abcabcabc =\
    \ abcabcab * c\n    let abcabcabca = abcabcab * ca\n    let abcabcabcbc = abcabcabcb\
    \ * c\n    let abcabcabcab = abcabcabcb * ca\n    let abcabcabcabc = abcabcabcab\
    \ * c\n    let abcabcabcabca = abcabcabcab * ca\n    let abcabcabcabcbc = abcabcabcabcb\
    \ * c\n    let abcabcabcabcab = abcabcabcabcb * ca\n    let abcabcabcabcabc =\
    \ abcabcabcabcab * c\n    let abcabcabcabcabca = abcabcabcabcab * ca\n    let\
    \ abcabcabcabcabbc = abcabcabcabcabcb * c\n    let abcabcabcabcabcab = abcabcabcabcabcb\
    \ * ca\n    let abcabcabcabcabcabc = abcabcabcabcabcab * c\n    let abcabcabcabcabcabca\
    \ = abcabcabcabcabcab * ca\n    let abcabcabcabcabcabcbc = abcabcabcabcabcabcb\
    \ * c\n    let abcabcabcabcabcabcab = abcabcabcabcabcabcb * ca\n    let abcabcabcabcabcabcabc\
    \ = abcabcabcabcabcabcab * c\n    let abcabcabcabcabcabcab = abcabcabcabcabcabcabcb\
    \ * ca\n    let abcabcabcabcabcabcabcb = abcabcabcabcabcabcabcabcb * c\n    let\
    \ abcabcabcabcabcabcabcab = abcabcabcabcabcabcabcabcb * ca\n    let abcabcabcabcabcabcabcabc\
    \ = abcabcabcabcabcabcabcabcab * c\n    let abcabcabcabcabcabcabcabca = abcabcabcabcabcabcabcabcabcab\
    \ * \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(right_angle_triangle(a: 3, b:\
    \ 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpsb6i9cho.swift:50:1: error: expected expression after operator\n\
    }\n^\n/tmp/tmpsb6i9cho.swift:21:23: error: cannot find 'ca' in scope\n    let\
    \ abcca = abc * ca\n                      ^~\n/tmp/tmpsb6i9cho.swift:23:24: error:\
    \ cannot find 'ca' in scope\n    let abcab = abcb * ca\n                     \
    \  ^~\n/tmp/tmpsb6i9cho.swift:25:27: error: cannot find 'ca' in scope\n    let\
    \ abcabca = abcab * ca\n                          ^~\n/tmp/tmpsb6i9cho.swift:26:20:\
    \ error: cannot find 'abcabcb' in scope\n    let abcabcbc = abcabcb * c\n    \
    \               ^~~~~~~\n/tmp/tmpsb6i9cho.swift:27:20: error: cannot find 'abcabcb'\
    \ in scope\n    let abcabcab = abcabcb * ca\n                   ^~~~~~~\n/tmp/tmpsb6i9cho.swift:27:30:\
    \ error: cannot find 'ca' in scope\n    let abcabcab = abcabcb * ca\n        \
    \                     ^~\n/tmp/tmpsb6i9cho.swift:29:33: error: cannot find 'ca'\
    \ in scope\n    let abcabcabca = abcabcab * ca\n                             \
    \   ^~\n/tmp/tmpsb6i9cho.swift:30:23: error: cannot find 'abcabcabcb' in scope\n\
    \    let abcabcabcbc = abcabcabcb * c\n                      ^~~~~~~~~~\n/tmp/tmpsb6i9cho.swift:31:23:\
    \ error: cannot find 'abcabcabcb' in scope\n    let abcabcabcab = abcabcabcb *\
    \ ca\n                      ^~~~~~~~~~\n/tmp/tmpsb6i9cho.swift:31:36: error: cannot\
    \ find 'ca' in scope\n    let abcabcabcab = abcabcabcb * ca\n                \
    \                   ^~\n/tmp/tmpsb6i9cho.swift:33:39: error: cannot find 'ca'\
    \ in scope\n    let abcabcabcabca = abcabcabcab * ca\n                       \
    \               ^~\n/tmp/tmpsb6i9cho.swift:34:26: error: cannot find 'abcabcabcabcb'\
    \ in scope\n    let abcabcabcabcbc = abcabcabcabcb * c\n                     \
    \    ^~~~~~~~~~~~~\n/tmp/tmpsb6i9cho.swift:35:26: error: cannot find 'abcabcabcabcb'\
    \ in scope\n    let abcabcabcabcab = abcabcabcabcb * ca\n                    \
    \     ^~~~~~~~~~~~~\n/tmp/tmpsb6i9cho.swift:35:42: error: cannot find 'ca' in\
    \ scope\n    let abcabcabcabcab = abcabcabcabcb * ca\n                       \
    \                  ^~\n/tmp/tmpsb6i9cho.swift:37:45: error: cannot find 'ca' in\
    \ scope\n    let abcabcabc"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let ac = abs(c - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let\
    \ bca = bc * b\n    let abca = ab * ac\n    return abca >= bca && abca >= abca\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpbjpmbeps/tmpbjpmbeps.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8fc88cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8fc583b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8fc583988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8fc5827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbjpmbeps                        0x000055af199532ab <unavailable> + 4779

    5    libc.so.6                          0x00002ac8fca78460 __libc_start_main +
    245

    6    tmpbjpmbeps                        0x000055af19952f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac + bc\n    return abc > 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp_95j1dp4/tmp_95j1dp4.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acafd918c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acafd60fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acafd60f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acafd60e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_95j1dp4                        0x0000555b24fdd32b <unavailable> + 4907

    5    libc.so.6                          0x00002acafdb04460 __libc_start_main +
    245

    6    tmp_95j1dp4                        0x0000555b24fdcf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let ac = abs(a - c)\n \
    \   return ab >= bc && ab >= ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp2kxslfp5/tmp2kxslfp5.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed64eccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed64bc3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed64bc3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed64bc27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2kxslfp5                        0x000055da7930b2ab <unavailable> + 4779

    5    libc.so.6                          0x00002aed650b8460 __libc_start_main +
    245

    6    tmp2kxslfp5                        0x000055da7930af59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a ==\
    \ 0 || b == 0 || c == 0 {\n        return false\n    }\n    \n    let discriminant\
    \ = b * b - 4 * a * c\n    \n    if discriminant < 0 {\n        return false\n\
    \    }\n    \n    let root = (-b + sqrt(discriminant)) / (2 * a)\n    \n    if\
    \ root < 0 {\n        return false\n    }\n    \n    if root == 0 || root == 1\
    \ {\n        return true\n    }\n    \n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpryob1fdg.swift:24:22: error: cannot find 'sqrt' in scope\n    let\
    \ root = (-b + sqrt(discriminant)) / (2 * a)\n                     ^~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let bc = abs(c - b)\n    let ac = abs(c - a)\n    if ab > bc && ab > ac {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpf4l5qs9o/tmpf4l5qs9o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b24c2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b24c29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b24c29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24c29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf4l5qs9o                        0x00005562738d72ab <unavailable> + 4779

    5    libc.so.6                          0x00002b24c2ec7460 __libc_start_main +
    245

    6    tmpf4l5qs9o                        0x00005562738d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abca = abc + bca\n    let\
    \ acab = ac + ab\n    let bcab = bc + ab\n    let acbc = ac + bc\n    let abcb\
    \ = abc + bca\n    let bcabc = bcab + acbc\n    let acbcab = acbc + abca\n   \
    \ let abcac = abca + acab\n    let bcabcb = bcabc + acbc\n    let acbcabc = acbcab\
    \ + abcac\n    let abcbac = (abca + acab) + bcabc\n    let bcabcba = bcabca +\
    \ acbcab\n    let acbcabca = acbcabc + abcbac\n    let abcbacba = (abca + acab)\
    \ + bcabcba\n    let bcabcbac = (bcabca + acbcab) + abcbac\n    let acbcabcab\
    \ = acbcabca + abcbacba\n    let abcbacbac = (abca + acab) + bcabcbac\n    let\
    \ bcabcbacb = bcabcbac + abcbacba\n    let acbcabcabc = acbcabcab + abcbacbac\n\
    \    return abcabca >= bcabcbacb\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpsjtkbcvo.swift:26:19: error: cannot find 'bcabca' in scope\n  \
    \  let bcabcba = bcabca + acbcab\n                  ^~~~~~\n/tmp/tmpsjtkbcvo.swift:29:21:\
    \ error: cannot find 'bcabca' in scope\n    let bcabcbac = (bcabca + acbcab) +\
    \ abcbac\n                    ^~~~~~\n/tmp/tmpsjtkbcvo.swift:34:12: error: cannot\
    \ find 'abcabca' in scope\n    return abcabca >= bcabcbacb\n           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   return (ab >= bc && ab >= cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpkj4pax6x/tmpkj4pax6x.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ed850ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ed8201b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ed8201988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ed82007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkj4pax6x                        0x00005623eea7932b <unavailable> + 4907

    5    libc.so.6                          0x00002b3ed86f6460 __libc_start_main +
    245

    6    tmpkj4pax6x                        0x00005623eea78f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    return ((b *\
    \ b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpym6ojh_i/tmpym6ojh_i.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ad8f6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ad8c65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ad8c65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ad8c647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpym6ojh_i                        0x000055ec786bf2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b6ad915a460 __libc_start_main +
    245

    6    tmpym6ojh_i                        0x000055ec786bef59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cd = abs(c - d)\n \
    \   return (ab + bc == cd || ab + bc > cd || ab + cd > bc)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqqbccm1k.swift:12:22: error: cannot find 'd' in scope\n    let\
    \ cd = abs(c - d)\n                     ^\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe0ppvlih/tmpe0ppvlih.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32b4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32b415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32b415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32b415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe0ppvlih                        0x000055d373fc62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b32b4653460 __libc_start_main +
    245

    6    tmpe0ppvlih                        0x000055d373fc5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - c)) - ((c - a) * (c - b)) > 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpqlfc7zln/tmpqlfc7zln.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6299f28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6299c1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6299c1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6299c1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlfc7zln                        0x0000557748c581bb <unavailable> + 4539

    5    libc.so.6                          0x00002b629a114460 __libc_start_main +
    245

    6    tmpqlfc7zln                        0x0000557748c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaxfbcfp0/tmpaxfbcfp0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd47322c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd47019b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd47019988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd470187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxfbcfp0                        0x000055e40849523b <unavailable> + 4667

    5    libc.so.6                          0x00002acd4750e460 __libc_start_main +
    245

    6    tmpaxfbcfp0                        0x000055e408494e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a > b {\n        return right_angle_triangle(b, a, c)\n    }\n    if b\
    \ > c {\n        return right_angle_triangle(a, c, b)\n    }\n    if a == b {\n\
    \        return true\n    }\n    if a == c {\n        return true\n    }\n   \
    \ if b == c {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppty_yiku.swift:11:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmppty_yiku.swift:14:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(a,\
    \ c, b)\n                                   ^\n                              \
    \      a: b: c: \n"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaxfbcfp0/tmpaxfbcfp0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd47322c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd47019b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd47019988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd470187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxfbcfp0                        0x000055e40849523b <unavailable> + 4667

    5    libc.so.6                          0x00002acd4750e460 __libc_start_main +
    245

    6    tmpaxfbcfp0                        0x000055e408494e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let b1 = c - b\n    let c1 = a1 - b1\n    return a1 *\
    \ b1 * c1 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpa2d2wzhq/tmpa2d2wzhq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12f75f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12f72ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12f72eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12f72ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa2d2wzhq                        0x0000558085e9a23b <unavailable> + 4667

    5    libc.so.6                          0x00002b12f77e0460 __libc_start_main +
    245

    6    tmpa2d2wzhq                        0x0000558085e99e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        return b > c\n    } else {\n        return c > b\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp0yqhdc4y/tmp0yqhdc4y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2251b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af224eaeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af224eae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af224ead7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0yqhdc4y                        0x00005596d411e32b <unavailable> + 4907

    5    libc.so.6                          0x00002af2253a3460 __libc_start_main +
    245

    6    tmp0yqhdc4y                        0x00005596d411df59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - c)) + ((c - a) * (c - b)) <= 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp4wf90obz/tmp4wf90obz.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b820430bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8204002b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8204002988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b82040017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4wf90obz                        0x000055bdac7861bb <unavailable> + 4539

    5    libc.so.6                          0x00002b82044f7460 __libc_start_main +
    245

    6    tmp4wf90obz                        0x000055bdac785e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let bc = abs(c - b)\n    let ac = abs(c - a)\n    if ab > bc && ab > ac {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpf4l5qs9o/tmpf4l5qs9o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b24c2cdbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b24c29d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b24c29d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24c29d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf4l5qs9o                        0x00005562738d72ab <unavailable> + 4779

    5    libc.so.6                          0x00002b24c2ec7460 __libc_start_main +
    245

    6    tmpf4l5qs9o                        0x00005562738d6f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = b - a\n    let a2 = c - a\n    let b1 = c - b\n    let b2 = a -\
    \ b\n    let c1 = a - c\n    let c2 = b - a\n    let d1 = b1 - b1\n    let d2\
    \ = c1 - c1\n    let e1 = c2 - c2\n    let e2 = d2 - d1\n    let f1 = e1 - e1\n\
    \    let f2 = a2 - a2\n    let g1 = b2 - b2\n    let g2 = c2 - c2\n    let h1\
    \ = d2 - d2\n    let h2 = e2 - e2\n    let i1 = f2 - f2\n    let i2 = g2 - g2\n\
    \    let j1 = h2 - h2\n    let j2 = i2 - i2\n    let k1 = j2 - j2\n    let k2\
    \ = i1 - i1\n    let l1 = k1 - k1\n    let l2 = j1 - j1\n    let m1 = l1 - l1\n\
    \    let m2 = k1 - k1\n    let n1 = m1 - m1\n    let n2 = k1 - k1\n    let o1\
    \ = n1 - n1\n    let o2 = m1 - m1\n    let p1 = o1 - o1\n    let p2 = n1 - n1\n\
    \    let q1 = p2 - p2\n    let q2 = o2 - o2\n    let r1 = q1 - q1\n    let r2\
    \ = p1 - p1\n    let s1 = r1 - r1\n    let s2 = q1 - q1\n    let t1 = s1 - s1\n\
    \    let t2 = r1 - r1\n    let u1 = t1 - t1\n    let u2 = s1 - s1\n    let v1\
    \ = u1 - u1\n    let v2 = t1 - t1\n    let w1 = v1 - v1\n    let w2 = u1 - u1\n\
    \    let x1 = w1 - w1\n    let x2 = v1 - v1\n    let y1 = w2 - w2\n    let y2\
    \ = v2 - v2\n    let z1 = y2 - y2\n    let z2 = x2 - x2\n    let a1 = z1 - z1\n\
    \    let a2 = z2 - z2\n    let b1 = y1 - y1\n    let b2 = x1 - x1\n    let c1\
    \ = b1 - b1\n    let c2 = b2 - b2\n    let d1 = c1 - c1\n    let d2 = c2 - c2\n\
    \    let e1 = d1 - d1\n    let e2 = d2 - d2\n    let f1 = e1 - e1\n    let f2\
    \ = e2 - e2\n    let g1 = f1 - f1\n    let g2 = f2 - f2\n    let h1 = g1 - g1\n\
    \    let h2 = g2 - g2\n    let i1 = h1 - h1\n    let i2 = h2 - h2\n    let j1\
    \ = i1 - i1\n    let j2 = i2 - i2\n    let k1 = j1 - j1\n    let k2 = \n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpp9cyjed3.swift:83:13: error: expected initial value after '='\n\
    \    let k2 = \n            ^\n/tmp/tmpp9cyjed3.swift:62:9: error: invalid redeclaration\
    \ of 'a1'\n    let a1 = z1 - z1\n        ^\n/tmp/tmpp9cyjed3.swift:10:9: note:\
    \ 'a1' previously declared here\n    let a1 = b - a\n        ^\n/tmp/tmpp9cyjed3.swift:63:9:\
    \ error: invalid redeclaration of 'a2'\n    let a2 = z2 - z2\n        ^\n/tmp/tmpp9cyjed3.swift:11:9:\
    \ note: 'a2' previously declared here\n    let a2 = c - a\n        ^\n/tmp/tmpp9cyjed3.swift:64:9:\
    \ error: invalid redeclaration of 'b1'\n    let b1 = y1 - y1\n        ^\n/tmp/tmpp9cyjed3.swift:12:9:\
    \ note: 'b1' previously declared here\n    let b1 = c - b\n        ^\n/tmp/tmpp9cyjed3.swift:65:9:\
    \ error: invalid redeclaration of 'b2'\n    let b2 = x1 - x1\n        ^\n/tmp/tmpp9cyjed3.swift:13:9:\
    \ note: 'b2' previously declared here\n    let b2 = a - b\n        ^\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n \
    \   if ab > bc && ab > ac {\n        return true\n    }\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp9wtocsxl/tmp9wtocsxl.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0de89ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0de595b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0de595988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0de5947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9wtocsxl                        0x000055e71d5fe2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ba0dea8a460 __libc_start_main +
    245

    6    tmp9wtocsxl                        0x000055e71d5fdf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        return b > c\n    }\n    return c > b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmps4edqntl/tmps4edqntl.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5ea11cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5e9e13b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5e9e13988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5e9e127b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps4edqntl                        0x0000556f50a9932b <unavailable> + 4907

    5    libc.so.6                          0x00002ad5ea308460 __libc_start_main +
    245

    6    tmps4edqntl                        0x0000556f50a98f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a == 0 || b == 0 || c == 0 {\n        return false\n    }\n    let ab\
    \ = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n    let ad =\
    \ abs(a - d)\n    let bd = abs(b - d)\n    let cd = abs(c - d)\n    if ab == bc\
    \ && ac == bd && ad == cd {\n        return true\n    }\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpvarlzxnz.swift:16:22: error: cannot find 'd' in scope\n    let\
    \ ad = abs(a - d)\n                     ^\n/tmp/tmpvarlzxnz.swift:17:22: error:\
    \ cannot find 'd' in scope\n    let bd = abs(b - d)\n                     ^\n\
    /tmp/tmpvarlzxnz.swift:18:22: error: cannot find 'd' in scope\n    let cd = abs(c\
    \ - d)\n                     ^\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return false\n        } else {\n            return\
    \ true\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpvtryqt4v/tmpvtryqt4v.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f7ac18c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f7a90fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f7a90f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f7a90e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvtryqt4v                        0x000055a82ee032ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1f7ae04460 __libc_start_main +
    245

    6    tmpvtryqt4v                        0x000055a82ee02f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let bc = abs(c - b)\n    let ac = abs(c - a)\n    if ab == bc && ab == ac\
    \ {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpwdcy_5nn/tmpwdcy_5nn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b14cd7a4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b14cd49bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b14cd49b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b14cd49a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdcy_5nn                        0x00005605023222ab <unavailable> + 4779

    5    libc.so.6                          0x00002b14cd990460 __libc_start_main +
    245

    6    tmpwdcy_5nn                        0x0000560502321f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   return (ab >= ac) && (ab >= bc)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpap45t6ux/tmpap45t6ux.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae914e1cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae914b13b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae914b13988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae914b127b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpap45t6ux                        0x0000558dc4d7e2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ae915008460 __libc_start_main +
    245

    6    tmpap45t6ux                        0x0000558dc4d7df59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - c)) - ((c - a) * (c - b)) > 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpqlfc7zln/tmpqlfc7zln.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6299f28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6299c1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6299c1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6299c1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlfc7zln                        0x0000557748c581bb <unavailable> + 4539

    5    libc.so.6                          0x00002b629a114460 __libc_start_main +
    245

    6    tmpqlfc7zln                        0x0000557748c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let discriminant = b *\
    \ b - 4 * a * c\n    if discriminant < 0 {\n        return false\n    }\n    let\
    \ root = (-b + sqrt(discriminant)) / (2 * a)\n    if root < 0 {\n        return\
    \ false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp5tyx0gn8.swift:20:22: error: cannot find 'sqrt' in scope\n    let\
    \ root = (-b + sqrt(discriminant)) / (2 * a)\n                     ^~~~\n"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    return ((b *\
    \ b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpym6ojh_i/tmpym6ojh_i.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ad8f6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ad8c65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ad8c65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ad8c647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpym6ojh_i                        0x000055ec786bf2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b6ad915a460 __libc_start_main +
    245

    6    tmpym6ojh_i                        0x000055ec786bef59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpu06y6ric/tmpu06y6ric.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79255a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b792529db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b792529d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b792529c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu06y6ric                        0x00005619b643e1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7925792460 __libc_start_main +
    245

    6    tmpu06y6ric                        0x00005619b643de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let ab = a +\
    \ b\n    let bc = b + c\n    let ac = a + c\n    return (ab > bc && ab > ac) ||\
    \ (bc > ab && bc > ac) || (ac > ab && ac > bc)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpq0806iqu/tmpq0806iqu.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acbb4d99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acbb4a90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acbb4a90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acbb4a8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq0806iqu                        0x0000559bd430032b <unavailable> + 4907

    5    libc.so.6                          0x00002acbb4f85460 __libc_start_main +
    245

    6    tmpq0806iqu                        0x0000559bd42fff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let ac = abs(a - c)\n    let bc = abs(b - c)\n \
    \   return (ab == ac && ab == bc) || (ab == bc && ac == bc)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpitoebm_o/tmpitoebm_o.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b7cf45c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b7cc3cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b7cc3c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b7cc3b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitoebm_o                        0x00005568eba412ab <unavailable> + 4779

    5    libc.so.6                          0x00002b2b7d131460 __libc_start_main +
    245

    6    tmpitoebm_o                        0x00005568eba40f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(a - b)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n \
    \   return ab > bc && ab > cb\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpaj1qqm1l/tmpaj1qqm1l.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba6d5c92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba6d5989b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba6d5989988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba6d59887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaj1qqm1l                        0x00005587090f62ab <unavailable> + 4779

    5    libc.so.6                          0x00002ba6d5e7e460 __libc_start_main +
    245

    6    tmpaj1qqm1l                        0x00005587090f5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - a) + (c - a) * (c - a) <= 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmplhkj1vum/tmplhkj1vum.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba4c91dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba4c8ed5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba4c8ed5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4c8ed47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplhkj1vum                        0x00005605f0aa11bb <unavailable> + 4539

    5    libc.so.6                          0x00002ba4c93ca460 __libc_start_main +
    245

    6    tmplhkj1vum                        0x00005605f0aa0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpaxfbcfp0/tmpaxfbcfp0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd47322c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd47019b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd47019988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd470187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxfbcfp0                        0x000055e40849523b <unavailable> + 4667

    5    libc.so.6                          0x00002acd4750e460 __libc_start_main +
    245

    6    tmpaxfbcfp0                        0x000055e408494e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b - a) * (b - c)) - ((c - a) * (c - b)) > 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpqlfc7zln/tmpqlfc7zln.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6299f28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6299c1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6299c1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6299c1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlfc7zln                        0x0000557748c581bb <unavailable> + 4539

    5    libc.so.6                          0x00002b629a114460 __libc_start_main +
    245

    6    tmpqlfc7zln                        0x0000557748c57e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return false\n        } else {\n            return\
    \ true\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpvtryqt4v/tmpvtryqt4v.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f7ac18c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f7a90fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f7a90f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f7a90e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvtryqt4v                        0x000055a82ee032ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1f7ae04460 __libc_start_main +
    245

    6    tmpvtryqt4v                        0x000055a82ee02f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let bc = abs(c - b)\n    let ac = abs(c - a)\n \
    \   return ab > bc && ab > ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpomdgm2_n/tmpomdgm2_n.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad18b087c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad18ad7eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad18ad7e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad18ad7d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpomdgm2_n                        0x00005633ac5032ab <unavailable> + 4779

    5    libc.so.6                          0x00002ad18b273460 __libc_start_main +
    245

    6    tmpomdgm2_n                        0x00005633ac502f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe0ppvlih/tmpe0ppvlih.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32b4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32b415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32b415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32b415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe0ppvlih                        0x000055d373fc62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b32b4653460 __libc_start_main +
    245

    6    tmpe0ppvlih                        0x000055d373fc5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    \n    if a >\
    \ b {\n        if b > c {\n            return true\n        } else {\n       \
    \     return false\n        }\n    } else {\n        if c > b {\n            return\
    \ true\n        } else {\n            return false\n        }\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpckk8zp0q/tmpckk8zp0q.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5d9169c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5d8e60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5d8e60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5d8e5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckk8zp0q                        0x000055ac725f232b <unavailable> + 4907

    5    libc.so.6                          0x00002ab5d9355460 __libc_start_main +
    245

    6    tmpckk8zp0q                        0x000055ac725f1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (a + b + c) / 2\n    let b1 = (a + b) / 2\n    let c1 = (a + c)\
    \ / 2\n    let a2 = (b + c + a) / 2\n    let b2 = (b + c) / 2\n    let c2 = (b\
    \ + a) / 2\n    let a3 = (c + a + b) / 2\n    let b3 = (c + b) / 2\n    let c3\
    \ = (c + a) / 2\n    let a4 = (a + b + c) / 2\n    let b4 = (a + b) / 2\n    let\
    \ c4 = (a + c) / 2\n    let a5 = (b + c + a) / 2\n    let b5 = (b + c) / 2\n \
    \   let c5 = (b + a) / 2\n    let a6 = (c + a + b) / 2\n    let b6 = (c + b) /\
    \ 2\n    let c6 = (c + a) / 2\n    let a7 = (a + b + c) / 2\n    let b7 = (a +\
    \ b) / 2\n    let c7 = (a + c) / 2\n    let a8 = (b + c + a) / 2\n    let b8 =\
    \ (b + c) / 2\n    let c8 = (b + a) / 2\n    let a9 = (c + a + b) / 2\n    let\
    \ b9 = (c + b) / 2\n    let c9 = (c + a) / 2\n    let a10 = (a + b + c) / 2\n\
    \    let b10 = (a + b) / 2\n    let c10 = (a + c) / 2\n    let a11 = (b + c +\
    \ a) / 2\n    let b11 = (b + c) / 2\n    let c11 = (b + a) / 2\n    let a12 =\
    \ (c + a + b) / 2\n    let b12 = (c + b) / 2\n    let c12 = (c + a) / 2\n    let\
    \ a13 = (a + b + c) / 2\n    let b13 = (a + b) / 2\n    let c13 = (a + c) / 2\n\
    \    let a14 = (b + c + a) / 2\n    let b14 = (b + c) / 2\n    let c14 = (b +\
    \ a) / 2\n    let a15 = (c + a + b) / 2\n    let b15 = (c + b) / 2\n    let c15\
    \ = (c + a) / 2\n    let a16 = (a + b + c) / 2\n    let b16 = (a + b) / 2\n  \
    \  let c16 = (a + c) / 2\n    let a17 = (b + c + a) / 2\n    let b17 = (b + c)\
    \ / 2\n    let c17 = (b + a) / 2\n    let a18 = (c + a + b) / 2\n    let b18 =\
    \ (c + b) / 2\n    let c18 = (c + a) / 2\n    let a19 = (a + b + c) / 2\n    let\
    \ b19 = (a + b) / 2\n    let c19 = (a + c) / 2\n    let a20 = (b + c + a) / 2\n\
    \    let b20 = (b + c) / 2\n    let c20 = (b + a) / 2\n    let a21 = (c + a +\
    \ b) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpli50bj95.swift:10:9: warning: initialization of immutable value\
    \ 'a1' was never used; consider replacing with assignment to '_' or removing it\n\
    \    let a1 = (a + b + c) / 2\n    ~~~~^~\n    _\n/tmp/tmpli50bj95.swift:11:9:\
    \ warning: initialization of immutable value 'b1' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let b1 = (a + b) / 2\n    ~~~~^~\n\
    \    _\n/tmp/tmpli50bj95.swift:12:9: warning: initialization of immutable value\
    \ 'c1' was never used; consider replacing with assignment to '_' or removing it\n\
    \    let c1 = (a + c) / 2\n    ~~~~^~\n    _\n/tmp/tmpli50bj95.swift:13:9: warning:\
    \ initialization of immutable value 'a2' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    let a2 = (b + c + a) / 2\n    ~~~~^~\n\
    \    _\n/tmp/tmpli50bj95.swift:14:9: warning: initialization of immutable value\
    \ 'b2' was never used; consider replacing with assignment to '_' or removing it\n\
    \    let b2 = (b + c) / 2\n    ~~~~^~\n    _\n/tmp/tmpli50bj95.swift:15:9: warning:\
    \ initialization of immutable value 'c2' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    let c2 = (b + a) / 2\n    ~~~~^~\n   \
    \ _\n/tmp/tmpli50bj95.swift:16:9: warning: initialization of immutable value 'a3'\
    \ was never used; consider replacing with assignment to '_' or removing it\n \
    \   let a3 = (c + a + b) / 2\n    ~~~~^~\n    _\n/tmp/tmpli50bj95.swift:17:9:\
    \ warning: initialization of immutable value 'b3' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let b3 = (c + b) / 2\n    ~~~~^~\n\
    \    _\n/tmp/tmpli50bj95.swift:18:9: warning: initialization of immutable value\
    \ 'c3' was never used; consider replacing with assignment to '_' or removing it\n\
    \    let c3 = (c + a) / 2\n    ~~~~^~\n    _\n/tmp/tmpli50bj95.swift:19:9: warning:\
    \ initialization of immutable value 'a4' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    let a4 = (a + b + c) / 2\n    ~~~~^~\n\
    \    _\n/tmp/tmpli50bj95.swift:20:9: warning: initialization of immutable value\
    \ 'b4' was never used; consider replacing "
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let ab = abs(a\
    \ + b)\n    let ac = abs(a + c)\n    let bc = abs(b + c)\n    let abc = ab + ac\n\
    \    let acb = ac + bc\n    let abcb = abc + bc\n    let abac = abc + ac\n   \
    \ let acab = ac + ab\n    let abcac = abc + ac\n    let abcab = abc + ab\n   \
    \ let acabc = ac + abc\n    let abcacb = abc + acb\n    let abcabc = abc + cab\n\
    \    let acabcb = ac + abcb\n    let abcacbc = abc + acbc\n    let abcabcb = abc\
    \ + cabb\n    let acabcbb = ac + abcbb\n    let abcacbbc = abc + acbbc\n    let\
    \ abcabcbc = abc + cabbc\n    let acabcbbc = ac + abcbbc\n    let abcacbbcd =\
    \ abc + acbbcd\n    let abcabcbcd = abc + cabbcd\n    let acabcbbcde = ac + abcbcde\n\
    \    let abcacbbcdef = abc + acbbcdef\n    let abcabcbcdef = abc + cabbcd\n  \
    \  let acabcbbcdefg = ac + abcbcdefg\n    let abcacbbcdefgh = abc + acbbcdefgh\n\
    \    let abcabcbcdefgh = abc + cabbcd\n    let acabcbbcdefghi = ac + abcbcdefghi\n\
    \    let abcacbbcdefghij = abc + acbbcdefghij\n    let abcabcbcdefghijk = abc\
    \ + cabbcd\n    let acabcbbcdefghijkl = ac + abcbcdefghijkl\n    let abcacbbcdefghijkl\
    \ = abc + acbbcdefghijkl\n    let abcabcbcdefghijkl = abc + cabbcd\n    let acabcbbcdefghijkll\
    \ = ac + abcbcdefghijkll\n    let abcacbbcdefghijkll = abc + acbbcdefghijkll\n\
    \    let abcabcbcdefghijkll = abc + cabbcd\n    let acabcbbcdefghijklll = ac +\
    \ abcbcdefghijklll\n    let abcacbbcdefghijklll = abc + acbbcdefghijklll\n   \
    \ let ab\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp2vwkj6h3.swift:25:24: error: cannot find 'cab' in scope\n    let\
    \ abcabc = abc + cab\n                       ^~~\n/tmp/tmp2vwkj6h3.swift:27:25:\
    \ error: cannot find 'acbc' in scope\n    let abcacbc = abc + acbc\n         \
    \               ^~~~\n/tmp/tmp2vwkj6h3.swift:28:25: error: cannot find 'cabb'\
    \ in scope\n    let abcabcb = abc + cabb\n                        ^~~~\n/tmp/tmp2vwkj6h3.swift:29:24:\
    \ error: cannot find 'abcbb' in scope\n    let acabcbb = ac + abcbb\n        \
    \               ^~~~~\n/tmp/tmp2vwkj6h3.swift:30:26: error: cannot find 'acbbc'\
    \ in scope\n    let abcacbbc = abc + acbbc\n                         ^~~~~\n/tmp/tmp2vwkj6h3.swift:31:26:\
    \ error: cannot find 'cabbc' in scope\n    let abcabcbc = abc + cabbc\n      \
    \                   ^~~~~\n/tmp/tmp2vwkj6h3.swift:32:25: error: cannot find 'abcbbc'\
    \ in scope\n    let acabcbbc = ac + abcbbc\n                        ^~~~~~\n/tmp/tmp2vwkj6h3.swift:33:27:\
    \ error: cannot find 'acbbcd' in scope\n    let abcacbbcd = abc + acbbcd\n   \
    \                       ^~~~~~\n/tmp/tmp2vwkj6h3.swift:34:27: error: cannot find\
    \ 'cabbcd' in scope\n    let abcabcbcd = abc + cabbcd\n                      \
    \    ^~~~~~\n/tmp/tmp2vwkj6h3.swift:35:27: error: cannot find 'abcbcde' in scope\n\
    \    let acabcbbcde = ac + abcbcde\n                          ^~~~~~~\n/tmp/tmp2vwkj6h3.swift:36:29:\
    \ error: cannot find 'acbbcdef' in scope\n    let abcacbbcdef = abc + acbbcdef\n\
    \                            ^~~~~~~~\n/tmp/tmp2vwkj6h3.swift:37:29: error: cannot\
    \ find 'cabbcd' in scope\n    let abcabcbcdef = abc + cabbcd\n               \
    \             ^~~~~~\n/tmp/tmp2vwkj6h3.swift:38:29: error: cannot find 'abcbcdefg'\
    \ in scope\n    let acabcbbcdefg = ac + abcbcdefg\n                          \
    \  ^~~~~~~~~\n/tmp/tmp2vwkj6h3.swift:39:31: error: cannot find 'acbbcdefgh' in\
    \ scope\n    let abcacbbcdefgh = abc + acbbcdefgh\n                          \
    \    ^~~~~~~~~~\n/tmp/tmp2vwkj6h3.swift:40:31: error: cannot find 'cabbcd' in\
    \ scope\n    let abcabcbcdefgh = abc + cabbcd\n                              ^~~~~~\n\
    /tmp/tmp2vwkj6h3.swift:41:31: error: cannot find 'abc"
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        return b > c\n    } else {\n        return c > b\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp0yqhdc4y/tmp0yqhdc4y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2251b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af224eaeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af224eae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af224ead7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0yqhdc4y                        0x00005596d411e32b <unavailable> + 4907

    5    libc.so.6                          0x00002af2253a3460 __libc_start_main +
    245

    6    tmp0yqhdc4y                        0x00005596d411df59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let ab = abs(b - a)\n    let ac = abs(c - a)\n    let bc = abs(b - c)\n \
    \   let abc = ab + ac\n    let bca = bc + ab\n    let abca = abc + bca\n    let\
    \ acab = ac + ab\n    let acbc = ac + bc\n    let abcab = abc + acb\n    let bcabc\
    \ = bc + acb\n    let abcabc = abc + abca\n    let acbcab = acbc + abca\n    let\
    \ accabb = acbc + acab\n    let abcabcb = abcab + acbca\n    let bcabcab = bcabc\
    \ + abcab\n    let abcabcab = abcabc + bcabc\n    let acbcabab = acbcab + abcabc\n\
    \    let accabbc = accabb + abcabc\n    let abcabcabc = abcabcab + acbcab\n  \
    \  let bcabcabcb = bcabcab + abcabcab\n    let abcabcabcb = abcabcabc + bcabcab\n\
    \    let acbcababc = acbcabab + abcabcabc\n    let accabbcb = accabbc + abcabcabc\n\
    \    let abcabcabcb = abcabcabcb + acbcabab\n    let bcabcabcab = bcabcabcb +\
    \ abcabcabc\n    let abcabcabcab = abcabcabcab + accabbcb\n    let acbcababcab\
    \ = acbcababc + abcabcabcab\n    let accabbcbc = accabbcab + abcabcabcab\n   \
    \ let abcabcabcabc = abcabcabcabc + acbcababcab\n    let bcabcabcabcb = bcabcabcab\
    \ + abcabcabcabc\n    let abcabcabcabcb = abcabcabcabcb + accabbcbc\n    let acbcababcabcb\
    \ = acbcababcab + abcabcabcabcb\n    let accabbcbcb = accabbcabcb + abcabcabcabcb\n\
    \    let abcabcabcabcb = abcabcabcabcb + accabbcbcb\n    let bcabcabcabcab = bcabcabcabcb\
    \ + abcabcabcabcb\n    let abcabcabcabcab = abcabcabcabcab + acbcababcabcab\n\
    \    let acbcababcabcab = acbcababcabcab + abcabcabcabcab\n    let accabbcbcbc\
    \ = accabbcabcabcb + abcabcabcabcab\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1lxm363l.swift:18:23: error: cannot find 'acb' in scope\n    let\
    \ abcab = abc + acb\n                      ^~~\n/tmp/tmp1lxm363l.swift:19:22:\
    \ error: cannot find 'acb' in scope\n    let bcabc = bc + acb\n              \
    \       ^~~\n/tmp/tmp1lxm363l.swift:23:27: error: cannot find 'acbca' in scope\n\
    \    let abcabcb = abcab + acbca\n                          ^~~~~\n/tmp/tmp1lxm363l.swift:35:23:\
    \ error: use of local variable 'abcabcabcab' before its declaration\n    let abcabcabcab\
    \ = abcabcabcab + accabbcb\n                      ^\n/tmp/tmp1lxm363l.swift:35:9:\
    \ note: 'abcabcabcab' declared here\n    let abcabcabcab = abcabcabcab + accabbcb\n\
    \        ^\n/tmp/tmp1lxm363l.swift:37:21: error: cannot find 'accabbcab' in scope\n\
    \    let accabbcbc = accabbcab + abcabcabcab\n                    ^~~~~~~~~\n\
    /tmp/tmp1lxm363l.swift:38:24: error: use of local variable 'abcabcabcabc' before\
    \ its declaration\n    let abcabcabcabc = abcabcabcabc + acbcababcab\n       \
    \                ^\n/tmp/tmp1lxm363l.swift:38:9: note: 'abcabcabcabc' declared\
    \ here\n    let abcabcabcabc = abcabcabcabc + acbcababcab\n        ^\n/tmp/tmp1lxm363l.swift:40:25:\
    \ error: use of local variable 'abcabcabcabcb' before its declaration\n    let\
    \ abcabcabcabcb = abcabcabcabcb + accabbcbc\n                        ^\n/tmp/tmp1lxm363l.swift:40:9:\
    \ note: 'abcabcabcabcb' declared here\n    let abcabcabcabcb = abcabcabcabcb +\
    \ accabbcbc\n        ^\n/tmp/tmp1lxm363l.swift:42:22: error: cannot find 'accabbcabcb'\
    \ in scope\n    let accabbcbcb = accabbcabcb + abcabcabcabcb\n               \
    \      ^~~~~~~~~~~\n/tmp/tmp1lxm363l.swift:45:26: error: use of local variable\
    \ 'abcabcabcabcab' before its declaration\n    let abcabcabcabcab = abcabcabcabcab\
    \ + acbcababcabcab\n                         ^\n/tmp/tmp1lxm363l.swift:45:9: note:\
    \ 'abcabcabcabcab' declared here\n    let abcabcabcabcab = abcabcabcabcab + acbcababcabcab\n\
    \        ^\n/tmp/tmp1lxm363l.swift:45:43: error: use of local variable 'acbcababcabcab'\
    \ before its declaration\n    let abcabcabcabcab = abcabcabcabcab + acbcababcabcab\n\
    \                                        "
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return false\n\
    \        } else {\n            return true\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe0ppvlih/tmpe0ppvlih.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32b4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32b415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32b415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32b415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe0ppvlih                        0x000055d373fc62ab <unavailable> + 4779

    5    libc.so.6                          0x00002b32b4653460 __libc_start_main +
    245

    6    tmpe0ppvlih                        0x000055d373fc5f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a > b {\n        return right_angle_triangle(b, a, c)\n    }\n    if b\
    \ > c {\n        return right_angle_triangle(a, c, b)\n    }\n    if a == b {\n\
    \        return true\n    }\n    if a == c {\n        return true\n    }\n   \
    \ if b == c {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppty_yiku.swift:11:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmppty_yiku.swift:14:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(a,\
    \ c, b)\n                                   ^\n                              \
    \      a: b: c: \n"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = abs(a - b)\n    let a2 = abs(a - c)\n    let b1 = abs(b - c)\n \
    \   return a1 == a2 && b1 == b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpt_1p02rm/tmpt_1p02rm.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b474318ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4742e85b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4742e85988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4742e847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt_1p02rm                        0x0000556bed3d22ab <unavailable> + 4779

    5    libc.so.6                          0x00002b474337a460 __libc_start_main +
    245

    6    tmpt_1p02rm                        0x0000556bed3d1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    return (a * b\
    \ * c) >= ((a + b) * (a + c) * (b + c))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7okxujjq/tmp7okxujjq.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba25bd13c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba25ba0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba25ba0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba25ba097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7okxujjq                        0x00005629f3db22ab <unavailable> + 4779

    5    libc.so.6                          0x00002ba25beff460 __libc_start_main +
    245

    6    tmp7okxujjq                        0x00005629f3db1f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a > b {\n\
    \        if b > c {\n            return true\n        } else {\n            return\
    \ false\n        }\n    } else {\n        if c > b {\n            return true\n\
    \        } else {\n            return false\n        }\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpe6jwu71w/tmpe6jwu71w.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fdcc76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fdc96db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fdc96d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fdc96c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6jwu71w                        0x00005646c095032b <unavailable> + 4907

    5    libc.so.6                          0x00002b7fdce62460 __libc_start_main +
    245

    6    tmpe6jwu71w                        0x00005646c094ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a1 = (a + b + c) / 2\n    let b1 = (a + b) / 2\n    let c1 = (a + c)\
    \ / 2\n    let a2 = (b + c + a) / 2\n    let b2 = (b + c) / 2\n    let c2 = (b\
    \ + a) / 2\n    let a3 = (a2 + b2 + c1) / 2\n    let b3 = (a2 + b2 + c2) / 2\n\
    \    let c3 = (a2 + c2 + a) / 2\n    let a4 = (b2 + c2 + a3) / 2\n    let b4 =\
    \ (b2 + c2 + a4) / 2\n    let c4 = (b2 + a4) / 2\n    let a5 = (a3 + b4 + c5)\
    \ / 2\n    let b5 = (a3 + b4 + c5) / 2\n    let c5 = (a3 + c5 + a3) / 2\n    let\
    \ a6 = (b3 + c5 + a6) / 2\n    let b6 = (b3 + c5 + a6) / 2\n    let c6 = (b3 +\
    \ a6 + a3) / 2\n    let a7 = (a4 + b5 + c6) / 2\n    let b7 = (a4 + b5 + c6) /\
    \ 2\n    let c7 = (a4 + c6 + a4) / 2\n    let a8 = (b5 + c6 + a7) / 2\n    let\
    \ b8 = (b5 + c6 + a7) / 2\n    let c8 = (b5 + a7 + a4) / 2\n    let a9 = (a6 +\
    \ b7 + c8) / 2\n    let b9 = (a6 + b7 + c8) / 2\n    let c9 = (a6 + c8 + a6) /\
    \ 2\n    let a10 = (b7 + c8 + a9) / 2\n    let b10 = (b7 + c8 + a9) / 2\n    let\
    \ c10 = (b7 + a9 + a8) / 2\n    let a11 = (b8 + c9 + a10) / 2\n    let b11 = (b8\
    \ + c9 + a10) / 2\n    let c11 = (b8 + a10 + a8) / 2\n    let a12 = (b9 + c10\
    \ + a11) / 2\n    let b12 = (b9 + c10 + a11) / 2\n    let c12 = (b9 + a11 + a9)\
    \ / 2\n    let a13 = (c10 + c11 + a12) / 2\n    let b13 = (c10 + c11 + a12) /\
    \ 2\n    let c13 = (c11 + a12 + a9) / 2\n    let a14 = (c12 + c13 + a13) / 2\n\
    \    let b14 = (c12 + c13 + a13) / 2\n    let c14 = (c13 + a13 + a8) / 2\n   \
    \ let a15 = (c14 + c15 + a14) / 2\n    let b15 = (c14 + c15 + a14) / 2\n    let\
    \ c15 = (c15 + a14 + a9) / 2\n    let a16 = (c16 + c15 + a16) / 2\n    let b16\
    \ = (c16 + c15 + a16) / 2\n    let c16 = (c15 + a16 + a9) / 2\n    let a17 = (c\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1c_p7tqu.swift:59:1: error: expected ')' in expression list\n}\n\
    ^\n/tmp/tmp1c_p7tqu.swift:58:15: note: to match this opening '('\n    let a17\
    \ = (c\n              ^\n/tmp/tmp1c_p7tqu.swift:22:25: error: use of local variable\
    \ 'c5' before its declaration\n    let a5 = (a3 + b4 + c5) / 2\n             \
    \           ^\n/tmp/tmp1c_p7tqu.swift:24:9: note: 'c5' declared here\n    let\
    \ c5 = (a3 + c5 + a3) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:23:25: error: use\
    \ of local variable 'c5' before its declaration\n    let b5 = (a3 + b4 + c5) /\
    \ 2\n                        ^\n/tmp/tmp1c_p7tqu.swift:24:9: note: 'c5' declared\
    \ here\n    let c5 = (a3 + c5 + a3) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:24:20:\
    \ error: use of local variable 'c5' before its declaration\n    let c5 = (a3 +\
    \ c5 + a3) / 2\n                   ^\n/tmp/tmp1c_p7tqu.swift:24:9: note: 'c5'\
    \ declared here\n    let c5 = (a3 + c5 + a3) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:25:25:\
    \ error: use of local variable 'a6' before its declaration\n    let a6 = (b3 +\
    \ c5 + a6) / 2\n                        ^\n/tmp/tmp1c_p7tqu.swift:25:9: note:\
    \ 'a6' declared here\n    let a6 = (b3 + c5 + a6) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:52:22:\
    \ error: use of local variable 'c15' before its declaration\n    let a15 = (c14\
    \ + c15 + a14) / 2\n                     ^\n/tmp/tmp1c_p7tqu.swift:54:9: note:\
    \ 'c15' declared here\n    let c15 = (c15 + a14 + a9) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:53:22:\
    \ error: use of local variable 'c15' before its declaration\n    let b15 = (c14\
    \ + c15 + a14) / 2\n                     ^\n/tmp/tmp1c_p7tqu.swift:54:9: note:\
    \ 'c15' declared here\n    let c15 = (c15 + a14 + a9) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:54:16:\
    \ error: use of local variable 'c15' before its declaration\n    let c15 = (c15\
    \ + a14 + a9) / 2\n               ^\n/tmp/tmp1c_p7tqu.swift:54:9: note: 'c15'\
    \ declared here\n    let c15 = (c15 + a14 + a9) / 2\n        ^\n/tmp/tmp1c_p7tqu.swift:55:16:\
    \ error: use of local variable 'c16' before its declaration\n    let a16 = (c16\
    \ + c15 + a16) / 2\n               ^\n/tmp/tmp1c_p7tqu.swift:57:9: note: 'c16'\
    \ declar"
  stdout: ''
  timestamp: 1659824754
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((a + b > c) && (a + c > b) && (b + c > a))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpv8n05ivd/tmpv8n05ivd.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef67d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef67a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef67a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef67a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8n05ivd                        0x000055d11aa26335 <unavailable> + 4917

    5    libc.so.6                          0x00002aef67f69460 __libc_start_main +
    245

    6    tmpv8n05ivd                        0x000055d11aa25e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a == 0 ||\
    \ b == 0 || c == 0 {\n        return false\n    }\n    let ab = abs(b - a)\n \
    \   let bc = abs(c - b)\n    let ac = abs(c - a)\n    if ab == bc && ab == ac\
    \ {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpwdcy_5nn/tmpwdcy_5nn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b14cd7a4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b14cd49bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b14cd49b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b14cd49a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdcy_5nn                        0x00005605023222ab <unavailable> + 4779

    5    libc.so.6                          0x00002b14cd990460 __libc_start_main +
    245

    6    tmpwdcy_5nn                        0x0000560502321f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824753
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    if a > b {\n        return right_angle_triangle(b, a, c)\n    }\n    if b\
    \ > c {\n        return right_angle_triangle(a, c, b)\n    }\n    if a == b {\n\
    \        return true\n    }\n    if a == c {\n        return true\n    }\n   \
    \ if b == c {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppty_yiku.swift:11:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmppty_yiku.swift:14:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(a,\
    \ c, b)\n                                   ^\n                              \
    \      a: b: c: \n"
  stdout: ''
  timestamp: 1659824752
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n/// sides form a right-angled triangle, False otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// right_angle_triangle(3, 4, 5) == True\n/// right_angle_triangle(1,\
    \ 2, 3) == False\nfunc right_angle_triangle(a: Int, b: Int, c: Int) -> Bool {\n\
    \    return ((b * b) - (4 * a * c)) > 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpr6md3h2d/tmpr6md3h2d.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebb7a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebb771cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebb771c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebb771b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr6md3h2d                        0x0000563446c1b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002aebb7c11460 __libc_start_main +
    245

    6    tmpr6md3h2d                        0x0000563446c1ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824752

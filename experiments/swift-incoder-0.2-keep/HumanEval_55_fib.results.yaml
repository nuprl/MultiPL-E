language: swift
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b = 1, c = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n   \
    \     b = tmp + c\n        c = a - b\n    }\n    return b\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp8d7zj9su.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 1, c = 1\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var fib1\
    \ = 1\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2, fib1\
    \ + fib2\n    }\n    return fib2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpooclmeun.swift:13:13: error: consecutive statements on a line must\
    \ be separated by ';'\n        fib1, fib2 = fib2, fib1 + fib2\n            ^\n\
    \            ;\n/tmp/tmpooclmeun.swift:13:13: error: expected expression\n   \
    \     fib1, fib2 = fib2, fib1 + fib2\n            ^\n/tmp/tmpooclmeun.swift:13:9:\
    \ warning: variable is unused\n        fib1, fib2 = fib2, fib1 + fib2\n      \
    \  ^~~~\n/tmp/tmpooclmeun.swift:10:9: warning: variable 'fib1' was never mutated;\
    \ consider changing to 'let' constant\n    var fib1 = 1\n    ~~~ ^\n    let\n\
    /tmp/tmpooclmeun.swift:11:9: warning: variable 'fib2' was never mutated; consider\
    \ changing to 'let' constant\n    var fib2 = 1\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n - 1, n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnyjf0s1l.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n - 1, n - 2)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprxoky2ra.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjsmv8lh0.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-2) + fib(n-1)\n             ^\n             n: \n/tmp/tmpjsmv8lh0.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-2) + fib(n-1)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b = 0, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n    \
    \    b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1cgq2vyj.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 0, c: Int\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 1 // first term\n  var b = 1 // second term\n  for _ in 0..<n {\n    let next\
    \ = a\n    a = b\n    b = next + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpo5vl8wmo/tmpo5vl8wmo.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b685331dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6853014b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6853014988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b68530137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo5vl8wmo                        0x00005612fe223335 <unavailable> + 4917

    5    libc.so.6                          0x00002b6853509460 __libc_start_main +
    245

    6    tmpo5vl8wmo                        0x00005612fe222fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a, b\
    \ = 1, c = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + c\n\
    \    c = b - a\n  }\n  return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpk3fz1k53.swift:10:7: error: type annotation missing in pattern\n\
    \  var a, b = 1, c = 1\n      ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b = 0, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n    \
    \    b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1cgq2vyj.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 0, c: Int\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjsmv8lh0.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-2) + fib(n-1)\n             ^\n             n: \n/tmp/tmpjsmv8lh0.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-2) + fib(n-1)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 1 // a\n  var b = 1 // b\n  var c = 1 // c\n  var d = 1 // d\n  var result =\
    \ 1 // result\n\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = c\n \
    \   c = d\n    d = tmp + b\n    result = d\n  }\n\n  return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmp8ye974ne/tmp8ye974ne.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b59a747dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b59a7174b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b59a7174988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b59a71737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8ye974ne                        0x000055d19f7d1335 <unavailable> + 4917

    5    libc.so.6                          0x00002b59a7669460 __libc_start_main +
    245

    6    tmp8ye974ne                        0x000055d19f7d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprxoky2ra.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpio3416vp/tmpio3416vp.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12462cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1245fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1245fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1245fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpio3416vp                        0x000055f5219c3335 <unavailable> + 4917

    5    libc.so.6                          0x00002b12464b7460 __libc_start_main +
    245

    6    tmpio3416vp                        0x000055f5219c2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n\
    \        b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpkw4yvays/tmpkw4yvays.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6d7bc6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6d7b961b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6d7b961988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6d7b9607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkw4yvays                        0x000055e0b3b8b335 <unavailable> + 4917

    5    libc.so.6                          0x00002b6d7be56460 __libc_start_main +
    245

    6    tmpkw4yvays                        0x000055e0b3b8afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjsmv8lh0.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-2) + fib(n-1)\n             ^\n             n: \n/tmp/tmpjsmv8lh0.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-2) + fib(n-1)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824453
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b = 1, c = 1\n    for _ in 0..<n {\n        let tmp = a + b\n        a = b\n\
    \        b = tmp\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpz8jb6age.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 1, c = 1\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprxoky2ra.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ b = 0\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n\
    \  return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpbb8e38of.swift:10:11: error: cannot find 'b' in scope\n  var a\
    \ = b = 0\n          ^\n/tmp/tmpbb8e38of.swift:13:9: error: cannot find 'b' in\
    \ scope\n    a = b\n        ^\n/tmp/tmpbb8e38of.swift:14:5: error: cannot find\
    \ 'b' in scope\n    b = tmp + b\n    ^\n/tmp/tmpbb8e38of.swift:14:15: error: cannot\
    \ find 'b' in scope\n    b = tmp + b\n              ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmzdht_3g.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpmzdht_3g.swift:10:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  var c = 0\n  var d = 0\n  var e = 0\n  var f = 0\n  var g\
    \ = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var k = 0\n  var l = 0\n  var\
    \ m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var q = 0\n  var r = 0\n  var\
    \ s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var w = 0\n  var x = 0\n  var\
    \ y = 0\n  var z = 0\n  var a = 0\n  var b = 0\n  var c = 0\n  var d = 0\n  var\
    \ e = 0\n  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var\
    \ k = 0\n  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var\
    \ q = 0\n  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var\
    \ w = 0\n  var x = 0\n  var y = 0\n  var z = 0\n  var a = 0\n  var b = 0\n  var\
    \ c = 0\n  var d = 0\n  var e = 0\n  var f = 0\n  var g = 0\n  var h = 0\n  var\
    \ i = 1\n  var j = 0\n  var k = 0\n  var l = 0\n  var m = 0\n  var n = 0\n  var\
    \ o = 0\n  var p = 0\n  var q = 0\n  var r = 0\n  var s = 0\n  var t = 0\n  var\
    \ u = 0\n  var v = 0\n  var w = 0\n  var x = 0\n  var y = 0\n  var z = 0\n  var\
    \ a = 0\n  var b = 0\n  var c = 0\n  var d = 0\n  var e = 0\n  var f = 0\n  var\
    \ g = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var k = 0\n  var l = 0\n  var\
    \ m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var q = 0\n  var r = 0\n  var\
    \ s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var w = 0\n  var x = 0\n  var\
    \ y = 0\n  var z = 0\n  var a = 0\n  var b = 0\n  var c = 0\n  var d = 0\n  var\
    \ e = 0\n  var f = 0\n  var g = 0\n  var h = 0\n  var i = 1\n  var j = 0\n  var\
    \ k = 0\n  var l = 0\n  var m = 0\n  var n = 0\n  var o = 0\n  var p = 0\n  var\
    \ q = 0\n  var r = 0\n  var s = 0\n  var t = 0\n  var u = 0\n  var v = 0\n  var\
    \ w = 0\n  var x = 0\n  var y = 0\n  var \n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpdpjr_6gx.swift:139:6: error: expected pattern\n  var \n     ^\n\
    /tmp/tmpdpjr_6gx.swift:36:7: error: invalid redeclaration of 'a'\n  var a = 0\n\
    \      ^\n/tmp/tmpdpjr_6gx.swift:10:7: note: 'a' previously declared here\n  var\
    \ a = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:37:7: error: invalid redeclaration of\
    \ 'b'\n  var b = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:11:7: note: 'b' previously\
    \ declared here\n  var b = 1\n      ^\n/tmp/tmpdpjr_6gx.swift:38:7: error: invalid\
    \ redeclaration of 'c'\n  var c = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:12:7: note:\
    \ 'c' previously declared here\n  var c = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:39:7:\
    \ error: invalid redeclaration of 'd'\n  var d = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:13:7:\
    \ note: 'd' previously declared here\n  var d = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:40:7:\
    \ error: invalid redeclaration of 'e'\n  var e = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:14:7:\
    \ note: 'e' previously declared here\n  var e = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:41:7:\
    \ error: invalid redeclaration of 'f'\n  var f = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:15:7:\
    \ note: 'f' previously declared here\n  var f = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:42:7:\
    \ error: invalid redeclaration of 'g'\n  var g = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:16:7:\
    \ note: 'g' previously declared here\n  var g = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:43:7:\
    \ error: invalid redeclaration of 'h'\n  var h = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:17:7:\
    \ note: 'h' previously declared here\n  var h = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:44:7:\
    \ error: invalid redeclaration of 'i'\n  var i = 1\n      ^\n/tmp/tmpdpjr_6gx.swift:18:7:\
    \ note: 'i' previously declared here\n  var i = 1\n      ^\n/tmp/tmpdpjr_6gx.swift:45:7:\
    \ error: invalid redeclaration of 'j'\n  var j = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:19:7:\
    \ note: 'j' previously declared here\n  var j = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:46:7:\
    \ error: invalid redeclaration of 'k'\n  var k = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:20:7:\
    \ note: 'k' previously declared here\n  var k = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:47:7:\
    \ error: invalid redeclaration of 'l'\n  var l = 0\n      ^\n/tmp/tmpdpjr_6gx.swift:21:7:\
    \ note: '"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n - 1, n + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmph3fid7_2.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n - 1, n + 1)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpio3416vp/tmpio3416vp.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12462cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1245fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1245fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1245fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpio3416vp                        0x000055f5219c3335 <unavailable> + 4917

    5    libc.so.6                          0x00002b12464b7460 __libc_start_main +
    245

    6    tmpio3416vp                        0x000055f5219c2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 1, 1, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxjr_zatx.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 1, 1, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 1, b = 1, tmp Int\n  for _ in 0..<n {\n    tmp = a + b\n    a = b\n    b = tmp\n\
    \  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmply0jbtjm.swift:10:25: error: found an unexpected second identifier\
    \ in variable declaration; is there an accidental break?\n  var a = 1, b = 1,\
    \ tmp Int\n                        ^\n/tmp/tmply0jbtjm.swift:10:25: note: join\
    \ the identifiers together\n  var a = 1, b = 1, tmp Int\n                    ~~~~^~~\n\
    \                    tmpInt\n/tmp/tmply0jbtjm.swift:10:21: error: type annotation\
    \ missing in pattern\n  var a = 1, b = 1, tmp Int\n                    ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmzdht_3g.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpmzdht_3g.swift:10:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0, b = 1, c: Int = 0\n  for _ in 0..<n {\n    c = a + b\n    a = b\n    b =\
    \ c\n  }\n  return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmp9ki7fibu/tmp9ki7fibu.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94bbd88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94bba7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94bba7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94bba7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ki7fibu                        0x000055f98396a335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94bbf74460 __libc_start_main +
    245

    6    tmp9ki7fibu                        0x000055f983969fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpw4fbplw3.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpw4fbplw3.swift:10:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n        a = b\n\
    \        b = next\n    }\n    return next\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpkrl2k1x1.swift:10:23: error: type annotation missing in pattern\n\
    \    var a = 0, b = 1, next\n                      ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprxoky2ra.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpr_n3q27q.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpr_n3q27q.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 1, b = 1, c = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = c\n        c = tmp + b\n    }\n    return c\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpdlafgk6l/tmpdlafgk6l.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7f6118c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7f5e0fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7f5e0f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7f5e0e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdlafgk6l                        0x0000559698dd1335 <unavailable> + 4917

    5    libc.so.6                          0x00002ab7f6304460 __libc_start_main +
    245

    6    tmpdlafgk6l                        0x0000559698dd0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpio3416vp/tmpio3416vp.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12462cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1245fc2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1245fc2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1245fc17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpio3416vp                        0x000055f5219c3335 <unavailable> + 4917

    5    libc.so.6                          0x00002b12464b7460 __libc_start_main +
    245

    6    tmpio3416vp                        0x000055f5219c2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpy0w7j4pd/tmpy0w7j4pd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdc2116c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdc1e0db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdc1e0d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdc1e0c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0w7j4pd                        0x0000556b0a92f335 <unavailable> + 4917

    5    libc.so.6                          0x00002afdc2302460 __libc_start_main +
    245

    6    tmpy0w7j4pd                        0x0000556b0a92efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    return\
    \ fibHelper(n, 1, 1, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp1orjb7ri.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 1, 1, 1)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b Int\n    if n == 0 || n == 1 {\n        return n\n    }\n    a, b = b, a +\
    \ b\n    return fib(n-1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpxncsud9q.swift:10:14: error: found an unexpected second identifier\
    \ in variable declaration; is there an accidental break?\n    var a, b Int\n \
    \            ^\n/tmp/tmpxncsud9q.swift:10:14: note: join the identifiers together\n\
    \    var a, b Int\n           ~~^~~\n           bInt\n/tmp/tmpxncsud9q.swift:14:6:\
    \ error: consecutive statements on a line must be separated by ';'\n    a, b =\
    \ b, a + b\n     ^\n     ;\n/tmp/tmpxncsud9q.swift:14:6: error: expected expression\n\
    \    a, b = b, a + b\n     ^\n/tmp/tmpxncsud9q.swift:10:9: error: type annotation\
    \ missing in pattern\n    var a, b Int\n        ^\n/tmp/tmpxncsud9q.swift:10:12:\
    \ error: type annotation missing in pattern\n    var a, b Int\n           ^\n\
    /tmp/tmpxncsud9q.swift:15:16: error: missing argument label 'n:' in call\n   \
    \ return fib(n-1)\n               ^\n               n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 1 // first number\n    var b = 1 // second number\n    for _ in 0..<n {\n\
    \        let tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpqw00duou/tmpqw00duou.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1cad3dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1cad0d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1cad0d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1cad0d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqw00duou                        0x000055e37cc07335 <unavailable> + 4917

    5    libc.so.6                          0x00002b1cad5cb460 __libc_start_main +
    245

    6    tmpqw00duou                        0x000055e37cc06fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-2) + fib(n-1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpvnf0hnvi.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-2) + fib(n-1)\n               ^\n               n: \n/tmp/tmpvnf0hnvi.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-2) + fib(n-1)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a,\
    \ b Int\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    a, b = b, a + b\n    for _ in 1...n {\n        a, b = b, a + b\n\
    \    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp4tdnk7n3.swift:10:14: error: found an unexpected second identifier\
    \ in variable declaration; is there an accidental break?\n    var a, b Int\n \
    \            ^\n/tmp/tmp4tdnk7n3.swift:10:14: note: join the identifiers together\n\
    \    var a, b Int\n           ~~^~~\n           bInt\n/tmp/tmp4tdnk7n3.swift:17:6:\
    \ error: consecutive statements on a line must be separated by ';'\n    a, b =\
    \ b, a + b\n     ^\n     ;\n/tmp/tmp4tdnk7n3.swift:17:6: error: expected expression\n\
    \    a, b = b, a + b\n     ^\n/tmp/tmp4tdnk7n3.swift:19:10: error: consecutive\
    \ statements on a line must be separated by ';'\n        a, b = b, a + b\n   \
    \      ^\n         ;\n/tmp/tmp4tdnk7n3.swift:19:10: error: expected expression\n\
    \        a, b = b, a + b\n         ^\n/tmp/tmp4tdnk7n3.swift:10:9: error: type\
    \ annotation missing in pattern\n    var a, b Int\n        ^\n/tmp/tmp4tdnk7n3.swift:10:12:\
    \ error: type annotation missing in pattern\n    var a, b Int\n           ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    var a\
    \ = 1, b = 0, tmp Int\n    for _ in 0..<n {\n        tmp = a + b\n        a =\
    \ b\n        b = tmp\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpro4fwtet.swift:10:27: error: found an unexpected second identifier\
    \ in variable declaration; is there an accidental break?\n    var a = 1, b = 0,\
    \ tmp Int\n                          ^\n/tmp/tmpro4fwtet.swift:10:27: note: join\
    \ the identifiers together\n    var a = 1, b = 0, tmp Int\n                  \
    \    ~~~~^~~\n                      tmpInt\n/tmp/tmpro4fwtet.swift:10:23: error:\
    \ type annotation missing in pattern\n    var a = 1, b = 0, tmp Int\n        \
    \              ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var a =\
    \ b = 0\n  for i in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + a\n  }\n\
    \  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp3atiot_u.swift:10:11: error: cannot find 'b' in scope\n  var a\
    \ = b = 0\n          ^\n/tmp/tmp3atiot_u.swift:13:9: error: cannot find 'b' in\
    \ scope\n    a = b\n        ^\n/tmp/tmp3atiot_u.swift:14:5: error: cannot find\
    \ 'b' in scope\n    b = tmp + a\n    ^\n/tmp/tmp3atiot_u.swift:16:10: error: cannot\
    \ find 'b' in scope\n  return b\n         ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpmjz7elbg.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpmjz7elbg.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6gzvbc5v.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmp6gzvbc5v.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824480

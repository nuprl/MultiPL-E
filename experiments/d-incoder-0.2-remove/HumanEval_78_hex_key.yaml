name: HumanEval_78_hex_key
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nYou have been tasked to write\
  \ a function that receives \n    a hexadecimal number as a string and counts the\
  \ number of hexadecimal \n    digits that are primes (prime number, or a prime,\
  \ is a natural number \n    greater than 1 that is not a product of two smaller\
  \ natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A,\
  \ B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have\
  \ to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11),\
  \ D (=decimal 13).\n    Note: you may assume the input is always correct or empty\
  \ string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n \
  \                       \n*/\nlong hex_key(string num) \n"
tests: "unittest\n{\n    alias candidate = hex_key;\n\n    assert(candidate(\"AB\"\
  ) == 1L);\n    assert(candidate(\"1077E\") == 2L);\n    assert(candidate(\"ABED1A33\"\
  ) == 4L);\n    assert(candidate(\"2020\") == 2L);\n    assert(candidate(\"123456789ABCDEF0\"\
  ) == 6L);\n    assert(candidate(\"112233445566778899AABBCCDDEEFF00\") == 12L);\n\
  }\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

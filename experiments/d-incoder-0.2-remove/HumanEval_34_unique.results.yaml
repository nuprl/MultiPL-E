language: d
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor (int i = start; i < end; ++i)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\
    \tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp)\
    \ \n{\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i < end; i +=\
    \ step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long eq) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\
    \tArrays.sort(u, cmp, eq);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp, long eq, int sz) \n{\n\tlong[] u = new long[end - start];\n\tfor (int\
    \ i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp,\
    \ eq, sz);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n    \
    \    \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long\
    \ eq, int sz, long ord) \n{\n\tlong[] u = new long[end - start];\n\tfor (int i\
    \ = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp,\
    \ eq, sz, ord);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8n75ndvz.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8n75ndvz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\
    \tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\
    Arrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp40_rg0xj.d(26): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40_rg0xj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkftpfrxt.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkftpfrxt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\
    \tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn l;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, long x) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] < l[j] && l[i] != x) \n\t\t\t{\n\t\t\t\tlong temp\
    \ = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return l;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] < l[j] && l[i] != x && l[j] != y) \n\t\t\t{\n\t\
    \t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn l;\n}\n/*\nReturn sorted unique elements in a list\n    \
    \    \n*/\nlong[] unique(long[] l, long x, long y, long z) \n{\n\tlong[] u;\n\t\
    u = new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int\
    \ j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] < l[j] && l[i] != x &&\
    \ l[j] != y && l[j] != z) \n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] =\
    \ l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, long\
    \ x, long y, long z, long w) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor\
    \ (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] < l[j] && l[i] != x && l[j] != y && l[j] != z &&\
    \ l[j] != \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0285yluu.d(104): Error: expression expected, not `unittest`

    /tmp/tmp0285yluu.d(105): Error: found `{` when expecting `)`

    /tmp/tmp0285yluu.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp0285yluu.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0285yluu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res = new long[l.length];\n\
    \t\n\tfor (int i = 0; i < l.length; i++)\n\t\tres[i] = l[i];\n\t\n\tArrays.sort(res);\n\
    \t\n\treturn res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul59or4q.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul59or4q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tfor(int j = i\
    \ + 1; j < l.length; j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong\
    \ temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tfor(int j = i + 1; j < l.length;\
    \ j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong temp = u[i];\n\t\t\
    \t\tu[i] = u[j];\n\t\t\t\tu[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u) \n{\n\tlong[] v;\n\tv = new long[l.length];\n\tfor(int i = 0; i\
    \ < l.length; i++)\n\t{\n\t\tfor(int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\
    \tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\
    \t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i < l.length; i++)\n\
    \t{\n\t\tfor(int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\
    \t\t\t{\n\t\t\t\tlong temp = u[i];\n\t\t\t\tu[i] = u[j];\n\t\t\t\tu[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn v;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, long[] u, long[] v) \n{\n\tlong[] w;\n\t\
    w = new long[l.length];\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tfor(int\
    \ j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\
    \tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tfor(int j = i + 1; j < l.length;\
    \ j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong temp = u[i];\n\t\t\
    \t\tu[i] = u[j];\n\t\t\t\tu[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tfor(int j = i + 1; j < l.length; j++)\n\t\t{\n\t\
    \t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong temp = v[i];\n\t\t\t\tv[i] = v[j];\n\
    \t\t\t\tv[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn w;\n}\n/*\nReturn sorted unique\
    \ elements in a list\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpefmb3r5g.d(117): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpefmb3r5g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j =\
    \ 0; j < u.length; j++)\n\t\t{\n\t\t\tif (l[i] == u[j])\n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif (j == u.length)\n\t\t{\n\t\t\tu[i] = l[i];\n\t\t}\n\t}\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb5k_wln1.d(20): Error: undefined identifier `j`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5k_wln1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor (int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i\
    \ < end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int size) \n{\n\tlong[] u\
    \ = new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\
    \tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, size);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int size, long ord2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmkeqqhs8.d(98): Error: found `unittest` instead of statement

    /tmp/tmpmkeqqhs8.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmkeqqhs8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint j = 0;\n\
    \t\tfor(; j < i; j++) \n\t\t{\n\t\t\tif(l[j] == l[i]) \n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tresult[i] = l[j];\n\t}\n\treturn result;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwnuv9k5s.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmpwnuv9k5s.__unittest_L24_C1() [0x428018]

    ??:? void tmpwnuv9k5s.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `Arrays.sort`\
    \ doesn't return a new array, it sorts the existing array in-place. Try it out\
    \ with a simple array: `int[] a = {1, 3, 5}; Arrays.sort(a); println(a);`\n<|/\
    \ c |>\n<| c |>\nYes, it does work. Try it out with a simple array: `int[] a =\
    \ {1, 3, 5}; Arrays.sort(a); println(a);`\n<|/ c |>\n<| c |>\nOh sorry, I missed\
    \ the fact that `Arrays.sort` sorts the array in-place. My bad.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work. `Arrays.sort` doesn't return a new array, it sorts\
    \ the existing array in-place. Try it out with a simple array: `int[] a = {1,\
    \ 3, 5}; Arrays.sort(a); println(a);`\n<|/ c |>\n<| c |>\nYes, it does work. Try\
    \ it out with a simple array: `int[] a = {1, 3, 5}; Arrays.sort(a); println(a);`\n\
    <|/ c |>\n<| a tags=arrays,sorting,java |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] a = {1, 3, 5};\n    Arrays.sort(a);\n    System.out.println(Arrays.toString(a));\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `Arrays.sort` doesn't\
    \ return a new array, it sorts the existing array in-place. Try it out with a\
    \ simple array: `int[] a = {1, 3, 5}; Arrays.sort(a); println(a);`\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nimport java.util.Arrays;\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpao_mg3_q.d(15): Error: declaration expected, not `<`

    /tmp/tmpao_mg3_q.d(18): Error: unterminated character constant

    /tmp/tmpao_mg3_q.d(18): Error: unterminated character constant

    /tmp/tmpao_mg3_q.d(27): Error: unterminated character constant

    /tmp/tmpao_mg3_q.d(27): Error: unterminated character constant

    /tmp/tmpao_mg3_q.d(36): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpao_mg3_q.d(36): Error: no identifier for declarator `Arrays.sort(a)`

    /tmp/tmpao_mg3_q.d(37): Error: identifier expected following `.` instead of `out`

    /tmp/tmpao_mg3_q.d(37): Error: no identifier for declarator `System`

    /tmp/tmpao_mg3_q.d(37): Error: declaration expected, not `out`

    /tmp/tmpao_mg3_q.d(38): Error: unrecognized declaration

    /tmp/tmpao_mg3_q.d(42): Error: unterminated character constant

    /tmp/tmpao_mg3_q.d(42): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpao_mg3_q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ int min) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\t\
    for(int i = start; i < end; i += step) \n\t{\n\t\tif(u[i] < min) \n\t\t{\n\t\t\
    \tmin = u[i];\n\t\t}\n\t}\n\treturn unique(u, start, end, step, min);\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, int min, int max) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\tfor(int i = start; i < end; i += step) \n\
    \t{\n\t\tif(u[i] < min) \n\t\t{\n\t\t\tmin = u[i];\n\t\t}\n\t\tif(u[i] > max)\
    \ \n\t\t{\n\t\t\tmax = u[i];\n\t\t}\n\t}\n\treturn unique(u, start, end, step,\
    \ min, max);\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, int min, int max, int mid) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa7rv_uf3.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa7rv_uf3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a |>\n<| c |>\nThis is not\
    \ an answer to the question. He wants to know why his code is not working.\n<|/\
    \ c |>\n<| c |>\nThe question was \"why my code is not working\", not \"how do\
    \ I do it\".\n<|/ c |>\n<| c |>\nI agree with you, but I believe that your answer\
    \ does not answer the question. He wants to know why his code is not working,\
    \ not how to do it.\n<|/ c |>\n<| c |>\nI believe that my answer does answer the\
    \ question. He wants to know why his code is not working, not how to do it.\n\
    <|/ c |>\n<| c |>\nI believe that my answer does answer the question. He wants\
    \ to know why his code is not working, not how to do it.\n<|/ c |>\n<| a tags=arrays,sorting,java\
    \ |>\n<code>\nimport java.util.Arrays;\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ah7msy4.d(17): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ah7msy4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i\
    \ = start; i < end; i++)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step) \n{\n\tlong[] u = new long[end - start];\n\t\
    for(int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp) \n{\n\tlong[] u = new\
    \ long[end - start];\n\tfor(int i = start; i < end; i += step)\n\t\tu[i - start]\
    \ = l[i];\n\tArrays.sort(u, cmp);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp, long ord) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i =\
    \ start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp,\
    \ ord);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n       \
    \ \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long ord,\
    \ int step2) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i\
    \ < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp, ord, step2);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord, int step2,\
    \ int step3) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i\
    \ < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp, ord, step2,\
    \ step3);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n     \
    \   \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxoi2f9v.d(12): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(24): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(36): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(48): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(60): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(72): Error: undefined identifier `Arrays`

    /tmp/tmpmxoi2f9v.d(84): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxoi2f9v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int size) \n{\n\tlong[] u\
    \ = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\
    \tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, size);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int size, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptjzlaoj9.d(98): Error: found `unittest` instead of statement

    /tmp/tmptjzlaoj9.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjzlaoj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=arrays,sorting,c#\
    \ |>\n<| c |>\nThis is not an answer to the question. He wants to know why his\
    \ code doesn't work, not how to fix it.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ but I thought that if he wants to know why his code doesn't work, he'll learn\
    \ something from my answer. Anyway, I added a comment to his question to clarify\
    \ that.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that if he wants to\
    \ know why his code doesn't work, he'll learn something from my answer. Anyway,\
    \ I added a comment to his question to clarify that.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I thought that if he wants to know why his code doesn't work,\
    \ he'll learn something from my answer. Anyway, I added a comment to his question\
    \ to clarify that.\n<|/ c |>\n<| c |>\nI agree with you, but I thought that if\
    \ he wants to know why his code doesn't work, he'll learn something from my answer.\
    \ Anyway, I added a comment to his question to clarify that.\n<|/ c |>\n<| a tags=arrays,sorting,c#\
    \ |>\nThe problem is that the array is getting sorted after each iteration. \n\
    <code>\nfor(int i = 0; i < l.Length; i++)\n{\n    Array.Sort(l);\n}\n</code>\n\
    This sorts the array after each iteration. \nTo fix this, you can move the Array.Sort(l)\
    \ out of the for loop. \n<code>\nArray.Sort(l);\nfor(int i = 0; i < l.Length;\
    \ i++)\n{\n    Console.WriteLine(l[i]);\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\nThe problem is that the array is getting sorted after each iteration. \n\
    <code>\nfor(int i = 0; i < l.Length; i++)\n{\n    Array.Sort(l);\n}\n</code>\n\
    This sorts the array after each iteration. \nTo fix this, you can move the Array.Sort(l)\
    \ out of the for loop. \n<code>\nArray.Sort(l);\nfor(int i = 0; i < l.Length;\
    \ i++)\n{\n    Console.WriteLine(l[i]);\n}\n</code>\n<|/ a tags=arrays,sorting,c#\
    \ |>\n<| a tags=arrays,sorting,\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptxeg2wut.d(17): Error: declaration expected, not `<`

    /tmp/tmptxeg2wut.d(20): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(23): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(23): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(26): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(26): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(29): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(29): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(32): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(32): Error: unterminated character constant

    /tmp/tmptxeg2wut.d(37): Error: no identifier for declarator `i`

    /tmp/tmptxeg2wut.d(37): Error: declaration expected, not `<`

    /tmp/tmptxeg2wut.d(37): Error: no identifier for declarator `i`

    /tmp/tmptxeg2wut.d(37): Error: declaration expected, not `++`

    /tmp/tmptxeg2wut.d(40): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptxeg2wut.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ox5d46f.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ox5d46f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tstd.sort(l);\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\
    \t\tresult[i] = l[i];\n\t}\n\tstd.sort(result);\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpij8kdd1e.d(10): Error: undefined identifier `sort` in package `std`

    /tmp/tmpij8kdd1e.d(15): Error: undefined identifier `sort` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpij8kdd1e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0saz0p__.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0saz0p__.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j =\
    \ i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\t\t\t{\n\t\t\t\t\
    long temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < l.length; i++)\n\t\tu[l.length - 1 - i] = l[i];\n\t\
    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpid_kw0cl.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x428415]

    ??:? void tmpid_kw0cl.__unittest_L27_C1() [0x4280e8]

    ??:? void tmpid_kw0cl.__modtest() [0x428198]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4f3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b386]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430611]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ac0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43059d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b35d]

    ??:? runModuleUnitTests [0x42c2c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288d8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long x) \n{\n\tlong[] u;\n\tu =\
    \ new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i]\
    \ == x) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x || l[i] == y) \n\t\
    \t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long x, long y, long z) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor(int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x || l[i] == y || l[i] == z)\
    \ \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y, long z, long w) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x\
    \ || l[i] == y || l[i] == z || l[i] == w) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\t\
    u[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long x, long y, long\
    \ z, long w, long x) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor(int i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x || l[i] == y || l[i] == z ||\
    \ l[i] == w || l[i] == x) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t\
    }\n\tArrays.sort(u);\n\treturn u\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx_pnbecj.d(112): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpx_pnbecj.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_pnbecj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; i++)\n        result[i] =\
    \ l[i];\n    Arrays.sort(result);\n    return result;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nI like this solution, but I wonder if it would be faster than the one\
    \ I posted below. I'm guessing it's because of the sorting step.\n<|/ c |>\n<|\
    \ c |>\nYes, it would be faster, because sorting is O(n log n), while your solution\
    \ is O(n^2). Also, if you don't need the original array, you can just use Arrays.asList(l).\n\
    <|/ c |>\n<| c |>\nI agree with you, but I wonder if there's a way to do this\
    \ without sorting.\n<|/ c |>\n<| c |>\n: I added a solution that doesn't use sorting,\
    \ but it's still O(n^2)\n<|/ c |>\n<| c |>\n: I added a solution that doesn't\
    \ use sorting, but it's still O(n^2)\n<|/ c |>\n<| a tags=arrays,c#,sorting |>\n\
    <code>\npublic static int[] SortUnique(int[] array)\n{\n    HashSet<int> uniques\
    \ = new HashSet<int>();\n    int[] result = new int[array.Length];\n    for (int\
    \ i = 0; i < array.Length; i++)\n    {\n        if (!uniques.Contains(array[i]))\n\
    \        {\n            uniques.Add(array[i]);\n            result[i] = array[i];\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This solution will work only with primitive types. If you need to work with complex\
    \ types (like `Point`) then you need to implement `IComparable` interface and\
    \ implement `CompareTo` method (http://msdn.microsoft.com/en-us/library/system.icomparable.compareto.aspx).\n\
    <|/ c |>\n<| c |>\n: Yes, but you can implement `IComparable` on any type that\
    \ implements `IComparable` - including `Point`.\n<|/ c |>\n<| c |>\n: Yes, but\
    \ you can implement `IComparable` on any type that implements `IComparable` -\
    \ including `Point`.\n<|/ c |>\n<| c |>\n: Yes, but you can implement `IComparable`\
    \ on any type that implements `IComparable` - including `Point`.\n<|/ c |>\n<|\
    \ c |>\n: Yes, but you can implement `IComparable` on any type that implements\
    \ `IComparable` - including `Point`.\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppje9ljc4.d(15): Error: declaration expected, not `<`

    /tmp/tmppje9ljc4.d(18): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(18): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(21): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(24): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(27): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(27): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(30): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(30): Error: unterminated character constant

    /tmp/tmppje9ljc4.d(38): Error: declaration expected, not `for`

    /tmp/tmppje9ljc4.d(38): Error: no identifier for declarator `i`

    /tmp/tmppje9ljc4.d(38): Error: declaration expected, not `<`

    /tmp/tmppje9ljc4.d(38): Error: no identifier for declarator `i`

    /tmp/tmppje9ljc4.d(38): Error: declaration expected, not `++`

    /tmp/tmppje9ljc4.d(43): Error: no identifier for declarator `result[i]`

    /tmp/tmppje9ljc4.d(43): Error: declaration expected, not `=`

    /tmp/tmppje9'
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n    long[]\
    \ u = new long[end - start];\n    for(int i = start; i < end; i++) \n    {\n \
    \       u[i - start] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step) \n{\n    long[] u = new long[end - start];\n \
    \   for(int i = start; i < end; i += step) \n    {\n        u[i - start] = l[i];\n\
    \    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n    long[] u = new long[end - start];\n    for(int i = start;\
    \ i < end; i += step) \n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n     \
    \   \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long\
    \ ord) \n{\n    long[] u = new long[end - start];\n    for(int i = start; i <\
    \ end; i += step) \n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp, ord);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord, int len) \n{\n    long[] u = new long[end - start];\n    for(int i\
    \ = start; i < end; i += step) \n    {\n        u[i - start] = l[i];\n    }\n\
    \    Arrays.sort(u, cmp, ord, len);\n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord, int len, int len2) \n{\n    long[] u = new long[end\
    \ - start];\n    for(int i = start; i < end; i += step) \n    {\n        u[i -\
    \ start] = l[i];\n    }\n    Arrays.sort(u, cmp\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpobi57qae.d(99): Error: found `unittest` when expecting `,`

    /tmp/tmpobi57qae.d(105): Error: found `void` when expecting `,`

    /tmp/tmpobi57qae.d(105): Error: found `{` when expecting `,`

    /tmp/tmpobi57qae.d(105): Error: expression expected, not `}`

    /tmp/tmpobi57qae.d(105): Error: found `End of File` when expecting `,`

    /tmp/tmpobi57qae.d(105): Error: found `End of File` when expecting `)`

    /tmp/tmpobi57qae.d(105): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmpobi57qae.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpobi57qae.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long[] u) \n{\n    long[] result\
    \ = new long[u.length];\n    for(int i = 0; i < u.length; i++) \n    {\n     \
    \   result[i] = l[u[i]];\n    }\n    Arrays.sort(result);\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] v) \n{\n    long[] result = new long[u.length];\n    for(int\
    \ i = 0; i < u.length; i++) \n    {\n        result[i] = l[u[i]];\n    }\n   \
    \ Arrays.sort(result);\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long[] u, long[] v, long[]\
    \ w) \n{\n    long[] result = new long[u.length];\n    for(int i = 0; i < u.length;\
    \ i++) \n    {\n        result[i] = l[u[i]];\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, long[] u, long[] v, long[] w, long[] x) \n{\n    long[]\
    \ result = new long[u.length];\n    for(int i = 0; i < u.length; i++) \n    {\n\
    \        result[i] = l[u[i]];\n    }\n    Arrays.sort(result);\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] v, long[] w, long[] x, long[] y) \n{\n    long[] result\
    \ = new long[u.length];\n    for(int i = 0; i < u.length; i++) \n    {\n     \
    \   result[i] = l[u[i]];\n    }\n    Arrays.sort(result);\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] v, long[] w, long[] x, long[] y, long[] z) \n{\n    long[]\
    \ result = new long[u.length];\n    for(int i = 0; i < u.length; i++) \n    {\n\
    \        result[i] = l[u[i]];\n    }\n    Arrays.sort(result);\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] v, long[] w, long[] x, long[] y, long[] z, \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo_y8dsfv.d(106): Error: basic type expected, not `unittest`

    /tmp/tmpo_y8dsfv.d(106): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_y8dsfv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tlong last = l[0];\n\tfor(int i = 0; i < l.length; i++)\n\t\
    {\n\t\tif(l[i] != last)\n\t\t{\n\t\t\tlast = l[i];\n\t\t\tresult[i] = last;\n\t\
    \t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplutpeoq5.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmplutpeoq5.__unittest_L21_C1() [0x428018]

    ??:? void tmplutpeoq5.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tbool found = false;\n\t\tfor(int\
    \ j = 0; j < u.length; ++j)\n\t\t{\n\t\t\tif(l[i] == u[j])\n\t\t\t{\n\t\t\t\t\
    found = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tu[i]\
    \ = l[i];\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5uqu7in2.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x42836d]

    ??:? void tmp5uqu7in2.__unittest_L28_C1() [0x428040]

    ??:? void tmp5uqu7in2.__modtest() [0x4280f0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c44b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2de]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430569]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a18]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304f5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2b5]

    ??:? runModuleUnitTests [0x42c221]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428830]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; ++i)\n\t\tfor (int j = i+1;\
    \ j < l.length; ++j)\n\t\t\tif (l[i] < l[j])\n\t\t\t\tswap(l[i], l[j]);\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tresult[i] = l[i];\n\tsort(result);\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx24b_kv9.d(13): Error: undefined identifier `swap`, did you mean
    template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?

    /tmp/tmpx24b_kv9.d(16): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx24b_kv9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcqtfon_a.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcqtfon_a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ox5d46f.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ox5d46f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\n</code>\n<|/ a tags=arrays,sorting,c++,algorithm |>\n<| c |>\n\
    The question was about C++, not C#.\n<|/ c |>\n<| c |>\nI know, but I thought\
    \ it would be helpful to see a solution in C++ as well. Maybe someone else can\
    \ use it.\n<|/ c |>\n<| c |>\nThe question was about C++, not C#.\n<|/ c |>\n\
    <| c |>\nI added a C++ solution as well\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    #include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphecnrzpe.d(15): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphecnrzpe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    long last = 0;\n    for(int i = 0; i < l.length; i++)\n\
    \    {\n        if(l[i] != last)\n        {\n            result[i - 1] = l[i];\n\
    \            last = l[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if the array is sorted, which it\
    \ should be.\n<|/ c |>\n<| c |>\nThis doesn't work if the array is sorted, which\
    \ it should be.\n<|/ c |>\n<| c |>\nThis doesn't work if the array is sorted,\
    \ which it should be.\n<|/ c |>\n<| a |>\n<code>\npublic static <T> List<T> uniqueSorted(List<T>\
    \ list) {\n    List<T> result = new ArrayList<>();\n    Set<T> set = new HashSet<>();\n\
    \    for (T t : list) {\n        if (!set.add(t)) {\n            result.add(t);\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=arrays,java,sorting\
    \ dscore=2 |>\n<| c |>\nThis doesn't work if the array is sorted, which it should\
    \ be.\n<|/ c |>\n<| a tags=arrays,java,sorting |>\n<code>\npublic static <T> List<T>\
    \ uniqueSorted(List<T> list) {\n    List<T> result = new ArrayList<>();\n    Set<T>\
    \ set = new HashSet<>();\n    for (T t : list) {\n        if (!set.add(t)) {\n\
    \            result.add(t);\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=arrays,java,sorting |>\n<code>\npublic static <T>\
    \ List<T> uniqueSorted(List<T> list) {\n    List<T> result = new ArrayList<>();\n\
    \    Set<T> set = new HashSet<>();\n    for (T t : list) {\n        if (!set.add(t))\
    \ {\n            result.add(t);\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if the array is sorted, which it\
    \ should be.\n<|/ c |>\n<| a dscore=1 |>\n<code>\npublic static <T> List<T> uniqueSorted(List<T>\
    \ list) {\n    List<T> result = new ArrayList<>();\n    Set<T> set = new HashSet<>();\n\
    \    for (T t : list) {\n        if (!set.add(t)) {\n            result.add(t);\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=arrays,java,sorting\
    \ |>\n<| a |>\n<code>\npublic static <T> List<T> uniqueSorted(List<T> \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbofbdpkb.d(21): Error: declaration expected, not `<`

    /tmp/tmpbofbdpkb.d(24): Error: unterminated character constant

    /tmp/tmpbofbdpkb.d(27): Error: unterminated character constant

    /tmp/tmpbofbdpkb.d(30): Error: unterminated character constant

    /tmp/tmpbofbdpkb.d(36): Error: no identifier for declarator `Set`

    /tmp/tmpbofbdpkb.d(36): Error: declaration expected, not `<`

    /tmp/tmpbofbdpkb.d(37): Error: declaration expected, not `for`

    /tmp/tmpbofbdpkb.d(40): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbofbdpkb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i+1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\tu[i] = l[i];\n\t\t\t\
    \tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n\t\
    long[] u = new long[end - start];\n\tfor (int i = start; i < end; i++) \n\t{\n\
    \t\tfor (int j = i+1; j < end; j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\
    \t\t\t\tu[i-start] = l[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step) \n{\n\tlong[] u = new long[end - start];\n\t\
    for (int i = start; i < end; i += step) \n\t{\n\t\tfor (int j = i+1; j < end;\
    \ j += step) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\tu[i-start] = l[i];\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor (int i =\
    \ start; i < end; i += step) \n\t{\n\t\tfor (int j = i+1; j < end; j += step)\
    \ \n\t\t{\n\t\t\tif (cmp(l[i], l[j]) > 0) \n\t\t\t{\n\t\t\t\tu[i-start] = l[i];\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord) \n{\n\tlong[] u = new long[end - start];\n\tfor\
    \ (int i = start; i < end; i += step) \n\t{\n\t\tfor (int j = i+1; j < end; j\
    \ += step) \n\t\t{\n\t\t\tif (ord(l[i], l[j]) > 0) \n\t\t\t{\n\t\t\t\tu[i-start]\
    \ = l[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int start,\
    \ int end, int step, long cmp, long ord, int step2) \n{\n\tlong[] u\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwp4q2goh.d(110): Error: semicolon expected, not `unittest`

    /tmp/tmpwp4q2goh.d(110): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwp4q2goh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res = new long[l.length];\n\
    \tlong prev = 0;\n\tlong cur = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\
    \t\tcur = l[i];\n\t\tif (cur != prev)\n\t\t{\n\t\t\tres[i - 1] = cur;\n\t\t\t\
    prev = cur;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp799m86qz.d(17): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4283ae]

    ??:? long[] tmp799m86qz.unique(long[]) [0x427eb0]

    ??:? void tmp799m86qz.__unittest_L23_C1() [0x427f55]

    ??:? void tmp799m86qz.__modtest() [0x42807c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3db]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b26e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4304f9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309a8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430485]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b245]

    ??:? runModuleUnitTests [0x42c1b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tint j = i;\n\t\twhile(j > 0 && l[j-1]\
    \ > l[j])\n\t\t{\n\t\t\tu[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tu[j] = l[j];\n\t\
    }\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9ohk189t.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ad]

    ??:? void tmp9ohk189t.__unittest_L22_C1() [0x428080]

    ??:? void tmp9ohk189t.__modtest() [0x428130]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c48b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b31e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305a9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a58]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430535]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2f5]

    ??:? runModuleUnitTests [0x42c261]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428870]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\
    \t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tu[l.length - 1 - i] = l[i];\n\t}\n\treturn u;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0xc6e9n5.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x428405]

    ??:? void tmp0xc6e9n5.__unittest_L28_C1() [0x4280d8]

    ??:? void tmp0xc6e9n5.__modtest() [0x428188]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4e3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b376]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430601]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ab0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43058d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b34d]

    ??:? runModuleUnitTests [0x42c2b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288c8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        u[i] = l[i];\n    }\n \
    \   Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n    long[]\
    \ u = new long[end - start];\n    for(int i = start; i < end; i++)\n    {\n  \
    \      u[i - start] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step) \n{\n    long[] u = new long[end - start];\n \
    \   for(int i = start; i < end; i += step)\n    {\n        u[i - start] = l[i];\n\
    \    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n    long[] u = new long[end - start];\n    for(int i = start;\
    \ i < end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n     \
    \   \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long\
    \ ord) \n{\n    long[] u = new long[end - start];\n    for(int i = start; i <\
    \ end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp, ord);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord, int len) \n{\n    long[] u = new long[end - start];\n    for(int i\
    \ = start; i < end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n \
    \   Arrays.sort(u, cmp, ord, len);\n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord, int len, int step2) \n{\n    long[] u = new long[end\
    \ - start];\n    for(int i = start; i < end; i += step)\n    {\n        u[i -\
    \ start] = l[i];\n    }\n    Arrays.sort(u, cmp, ord, len, step2);\n\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmqyilf_c.d(100): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmqyilf_c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong t = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = i +\
    \ 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tt = l[i];\n\
    \t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t\tu[i] = l[i];\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int n) \n{\n\tlong[]\
    \ u = new long[n];\n\tlong t = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\
    \t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\
    \t{\n\t\t\t\tt = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = t;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long n) \n{\n\tlong[] u = new long[n];\n\tlong t = 0;\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\
    \t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tt = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\
    \t\tl[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t\t\
    u[i] = l[i];\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n  \
    \      \n*/\nlong[] unique(long[] l, int n, long m) \n{\n\tlong[] u = new long[n];\n\
    \tlong t = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = i +\
    \ 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tt = l[i];\n\
    \t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t\tu[i] = l[i];\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long n, long m) \n\
    {\n\tlong[] u = new long[n];\n\tlong t = 0;\n\tfor (int i = 0; i < l.length; i++)\n\
    \t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\
    \t\t\t{\n\t\t\t\tt = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = t;\n\t\t\t}\n\
    \t\t}\n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpshs8hwrm.d(119): Error: found `unittest` instead of statement

    /tmp/tmpshs8hwrm.d(125): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshs8hwrm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0saz0p__.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0saz0p__.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvxzjowim.d(15): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvxzjowim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0saz0p__.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0saz0p__.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\
    \tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t\
    }\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0ayopt3w.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x42840d]

    ??:? void tmp0ayopt3w.__unittest_L28_C1() [0x4280e0]

    ??:? void tmp0ayopt3w.__modtest() [0x428190]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4eb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b37e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430609]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ab8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430595]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b355]

    ??:? runModuleUnitTests [0x42c2c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288d0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long[] u) \n{\n\tlong[] v;\n\tv\
    \ = new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tv[i] =\
    \ l[i];\n\t}\n\tArrays.sort(v);\n\tfor(int i = 0; i < u.length; i++) \n\t{\n\t\
    \tv[i] = u[i];\n\t}\n\treturn v;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, long[] u, long[] v) \n{\n\tlong[] w;\n\t\
    w = new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tw[i] =\
    \ l[i];\n\t}\n\tArrays.sort(w);\n\tfor(int i = 0; i < u.length; i++) \n\t{\n\t\
    \tw[i] = u[i];\n\t}\n\tfor(int i = 0; i < v.length; i++) \n\t{\n\t\tw[i] = v[i];\n\
    \t}\n\treturn w;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long[] u, long[] v, long[] w) \n{\n\tlong[] x;\n\tx =\
    \ new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tx[i] = l[i];\n\
    \t}\n\tArrays.sort(x);\n\tfor(int i = 0; i < u.length; i++) \n\t{\n\t\tx[i] =\
    \ u[i];\n\t}\n\tfor(int i = 0; i < v.length; i++) \n\t{\n\t\tx[i] = v[i];\n\t\
    }\n\tfor(int i = 0; i < w.length; i++) \n\t{\n\t\tx[i] = w[i];\n\t}\n\treturn\
    \ x;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] v, long[] w, long[] x) \n{\n\tlong[] y;\n\ty = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\ty[i] = l[i];\n\t}\n\tArrays.sort(y);\n\
    \tfor(int i = 0; i < u.length; i++) \n\t{\n\t\ty[i] = u[i];\n\t}\n\tfor(int i\
    \ = 0; i < v.length; i++) \n\t{\n\t\ty[i] = v[i];\n\t}\n\tfor(int i = 0; i < w.length;\
    \ i++) \n\t{\n\t\ty[i] = w[i];\n\t}\n\tfor(int i = 0; i < x.length; i++) \n\t\
    {\n\t\ty[i] = x[i];\n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt1i8m7n2.d(116): Error: found `unittest` instead of statement

    /tmp/tmpt1i8m7n2.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt1i8m7n2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvxzjowim.d(15): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvxzjowim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong ux = 0;\n\tlong uy = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\
    \tif (l[i] > ux) \n\t\t{\n\t\t\tux = l[i];\n\t\t}\n\t\tif (l[i] < uy) \n\t\t{\n\
    \t\t\tuy = l[i];\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    if (l[i] == ux) \n\t\t{\n\t\t\tu[i] = uy;\n\t\t}\n\t\telse if (l[i] == uy) \n\t\
    \t{\n\t\t\tu[i] = ux;\n\t\t}\n\t}\n\tsort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int lo, int\
    \ hi) \n{\n\tlong[] u = new long[hi-lo+1];\n\tlong ux = 0;\n\tlong uy = 0;\n\t\
    for (int i = lo; i < hi; i++) \n\t{\n\t\tif (l[i] > ux) \n\t\t{\n\t\t\tux = l[i];\n\
    \t\t}\n\t\tif (l[i] < uy) \n\t\t{\n\t\t\tuy = l[i];\n\t\t}\n\t}\n\tfor (int i\
    \ = lo; i < hi; i++) \n\t{\n\t\tif (l[i] == ux) \n\t\t{\n\t\t\tu[i] = uy;\n\t\t\
    }\n\t\telse if (l[i] == uy) \n\t\t{\n\t\t\tu[i] = ux;\n\t\t}\n\t}\n\tsort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int lo, int hi, int comp) \n{\n\tlong[] u = new long[hi-lo+1];\n\
    \tlong ux = 0;\n\tlong uy = 0;\n\tfor (int i = lo; i < hi; i++) \n\t{\n\t\tif\
    \ (comp(l[i], ux)) \n\t\t{\n\t\t\tux = l[i];\n\t\t}\n\t\tif (comp(l[i], uy)) \n\
    \t\t{\n\t\t\tuy = l[i];\n\t\t}\n\t}\n\tfor (int i = lo; i < hi; i++) \n\t{\n\t\
    \tif (comp(l[i], ux)) \n\t\t{\n\t\t\tu[i] = uy;\n\t\t}\n\t\telse if (comp(l[i],\
    \ uy)) \n\t\t{\n\t\t\tu[i] = ux;\n\t\t}\n\t}\n\tsort(u);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int lo, int hi, int comp, long x) \n{\n\tlong[] u = new long[hi-lo+1];\n\tlong\
    \ ux = 0;\n\tlong uy = 0;\n\tfor (int i = lo; i < hi; i++\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvqic8lcg.d(115): Error: found `unittest` when expecting `)`

    /tmp/tmpvqic8lcg.d(121): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvqic8lcg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkj7upxep.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkj7upxep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i+1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\
    \t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tu[l.length-1-l[i]] = l[i];\n\t}\n\treturn u;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpgaibkp70.d(24): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4284de]

    ??:? long[] tmpgaibkp70.unique(long[]) [0x427fd1]

    ??:? void tmpgaibkp70.__unittest_L28_C1() [0x428089]

    ??:? void tmpgaibkp70.__modtest() [0x4281b0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430629]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b375]

    ??:? runModuleUnitTests [0x42c2e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; i++) \n    {\n        long\
    \ current = l[i];\n        for(int j = 0; j < i; j++) \n        {\n          \
    \  if(l[j] == current) \n            {\n                current = l[j];\n    \
    \        }\n        }\n        result[i] = current;\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, int start, int end) \n{\n    long[] result = new long[end\
    \ - start];\n    for(int i = start; i < end; i++) \n    {\n        long current\
    \ = l[i];\n        for(int j = i; j > start; j--) \n        {\n            if(l[j]\
    \ == current) \n            {\n                current = l[j];\n            }\n\
    \        }\n        result[i - start] = current;\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, int start, int end, int step) \n{\n    long[] result\
    \ = new long[end - start];\n    for(int i = start; i < end; i += step) \n    {\n\
    \        long current = l[i];\n        for(int j = i; j > start; j -= step) \n\
    \        {\n            if(l[j] == current) \n            {\n                current\
    \ = l[j];\n            }\n        }\n        result[i - start] = current;\n  \
    \  }\n    Arrays.sort(result);\n    return result;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long compare) \n{\n    long[] result = new long[end - start];\n  \
    \  for(int i = start; i < end; i += step) \n    {\n        long current = l[i];\n\
    \        for(int j = i; j > start; j -= step) \n        {\n            if(compare(l[j],\
    \ current) == 0) \n            {\n                current = l[j];\n          \
    \  }\n        }\n        result[i - start] = current;\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, int start, int end, int step, long compare, int step2)\
    \ \n{\n    long[] result = new long[end - start];\n    for(int i = start; i <\
    \ end; i += step) \n    {\n        long current = l[i];\n        for(int j = i;\
    \ j > start; j -= step) \n        {\n            if(compare(l[j], current) ==\
    \ 0) \n            {\n                current = l[j];\n            }\n       \
    \ }\n        result[i - start] = current;\n\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxfvd2p43.d(110): Error: found `unittest` instead of statement

    /tmp/tmpxfvd2p43.d(116): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfvd2p43.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor (int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i\
    \ < end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int len) \n{\n\tlong[] u =\
    \ new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\t\
    u[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, len);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int len, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9vfv5t4b.d(98): Error: found `unittest` instead of statement

    /tmp/tmp9vfv5t4b.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vfv5t4b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int size) \n{\n\tlong[] u\
    \ = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\
    \tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, size);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int size, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptjzlaoj9.d(98): Error: found `unittest` instead of statement

    /tmp/tmptjzlaoj9.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjzlaoj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=java,arrays,sorting\
    \ |>\n<| c |>\nThis is not the fastest solution. Sorting takes O(nlogn) time.\
    \ Your solution takes O(n^2) time. Your solution also doesn't work if there are\
    \ duplicates in the array.\n<|/ c |>\n<| c |>\nI agree with you, my solution is\
    \ just an alternative solution to the problem. My solution is also O(n^2) but\
    \ is more readable and easy to understand.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ my solution is just an alternative solution to the problem. My solution is also\
    \ O(nlogn) but is more readable and easy to understand.\n<|/ c |>\n<| c |>\nI\
    \ agree with you, my solution is just an alternative solution to the problem.\
    \ My solution is also O(nlogn) but is more readable and easy to understand.\n\
    <|/ c |>\n<| c |>\nI agree with you, my solution is just an alternative solution\
    \ to the problem. My solution is also O(nlogn) but is more readable and easy to\
    \ understand.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nimport java.util.Arrays;\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkb0qpac0.d(17): Error: declaration expected, not `<`

    /tmp/tmpkb0qpac0.d(20): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkb0qpac0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong ucount = 0;\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] !=\
    \ u[ucount]) \n\t\t{\n\t\t\tu[ucount] = l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long n) \n{\n\tlong[] u = new long[n];\n\tlong ucount = 0;\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] != u[ucount]) \n\t\t{\n\
    \t\t\tu[ucount] = l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, long\
    \ n, long m) \n{\n\tlong[] u = new long[m];\n\tlong ucount = 0;\n\tfor(int i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tif(l[i] != u[ucount]) \n\t\t{\n\t\t\tu[ucount]\
    \ = l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long n, long m, long\
    \ n2) \n{\n\tlong[] u = new long[n2];\n\tlong ucount = 0;\n\tfor(int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif(l[i] != u[ucount]) \n\t\t{\n\t\t\tu[ucount] =\
    \ l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long n, long m, long\
    \ n2, long n3) \n{\n\tlong[] u = new long[n3];\n\tlong ucount = 0;\n\tfor(int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] != u[ucount]) \n\t\t{\n\t\t\tu[ucount]\
    \ = l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long n, long m, long\
    \ n2, long n3, long n4) \n{\n\tlong[] u = new long[n4];\n\tlong ucount = 0;\n\t\
    for(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] != u[ucount]) \n\t\t{\n\t\
    \t\tu[ucount] = l[i];\n\t\t\tucount++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn\
    \ sorted \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8a9aontj.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8a9aontj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong uidx = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] !=\
    \ l[uidx]) \n\t\t{\n\t\t\tu[uidx] = l[i];\n\t\t\tuidx++;\n\t\t}\n\t}\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9tbc9tdi.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x42833d]

    ??:? void tmp9tbc9tdi.__unittest_L21_C1() [0x428010]

    ??:? void tmp9tbc9tdi.__modtest() [0x4280c0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c41b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430539]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304c5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b285]

    ??:? runModuleUnitTests [0x42c1f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428800]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkj7upxep.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkj7upxep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tres[i] = l[i];\n\tArrays.sort(res);\n\
    \treturn res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjhptwrjo.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhptwrjo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\
    \tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\
    Arrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n        \n*/\nlong[] unique(long[] l, long key) \n{\n\tlong[] result\
    \ = new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int\
    \ j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j] && l[i] == key)\
    \ \n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i]\
    \ = l[i];\n\t}\n\tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long key, long\
    \ key2) \n{\n\tlong[] result = new long[l.length];\n\tfor (int i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tfor (int j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i]\
    \ > l[j] && l[i] == key && l[j] == key2) \n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\
    \t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\tArrays.sort(result);\n\
    \treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long key, long key2, long key3) \n{\n\tlong[] result =\
    \ new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int\
    \ j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j] && l[i] == key\
    \ && l[j] == key2 && l[j] == key3) \n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\
    \tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\tArrays.sort(result);\n\
    \treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp34fzlw_p.d(112): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp34fzlw_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long key) \n{\n\tlong [] u = new long[l.length];\n\tfor(int\
    \ i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, new\
    \ Comparator<long>()\n\t{\n\t\tpublic int compare(long a, long b)\n\t\t{\n\t\t\
    \treturn key - a;\n\t\t}\n\t});\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int key) \n{\n\tlong [] u =\
    \ new long[l.length];\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u, new Comparator<long>()\n\t{\n\t\tpublic int compare(long\
    \ a, long b)\n\t\t{\n\t\t\treturn key - a;\n\t\t}\n\t});\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ long key, int key2) \n{\n\tlong [] u = new long[l.length];\n\tfor(int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, new Comparator<long>()\n\
    \t{\n\t\tpublic int compare(long a, long b)\n\t\t{\n\t\t\treturn key - a;\n\t\t\
    }\n\t});\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n      \
    \  \n*/\nlong[] unique(long[] l, int key, int key2) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u,\
    \ new Comparator<long>()\n\t{\n\t\tpublic int compare(long a, long b)\n\t\t{\n\
    \t\t\treturn key - a;\n\t\t}\n\t});\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long key, int key2,\
    \ int key3) \n{\n\tlong [] u = new long[l.length];\n\tfor(int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, new Comparator<long>()\n\t\
    {\n\t\tpublic int compare(long a, long b)\n\t\t{\n\t\t\treturn key - a;\n\t\t\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp44wlk8om.d(28): Error: found `>` when expecting `.` following long

    /tmp/tmp44wlk8om.d(28): Error: found `(` when expecting identifier following `long`.

    /tmp/tmp44wlk8om.d(29): Error: found `{` when expecting `;` following statement

    /tmp/tmp44wlk8om.d(30): Error: found `public` instead of statement

    /tmp/tmp44wlk8om.d(34): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44wlk8om.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long comp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i\
    \ < end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, comp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long comp, long ord) \n{\n\t\
    long[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\
    \t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, comp, ord);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long comp, long ord, int len) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, comp, ord, len);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long comp, long ord, int len, int len2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqurwyszb.d(98): Error: found `unittest` instead of statement

    /tmp/tmpqurwyszb.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqurwyszb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res = new long[l.length];\n\
    \t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\
    \t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i =\
    \ 0; i < l.length; i++)\n\t\tres[i] = l[i];\n\t\n\tArrays.sort(res);\n\t\n\treturn\
    \ res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwgj5zukb.d(27): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwgj5zukb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long x) \n{\n\tlong[] u;\n\tu =\
    \ new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i]\
    \ == x) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int x) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor(int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x) \n\t\t{\n\t\t\tcontinue;\n\
    \t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long x, int\
    \ y) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor(int i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\
    \t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int x, int y) \n{\n\
    \tlong[] u;\n\tu = new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\
    \t{\n\t\tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long x, long y) \n{\n\tlong[]\
    \ u;\n\tu = new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\
    \tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int x, int y, int z) \n{\n\tlong[]\
    \ u;\n\tu = new long[l.length\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbirxd0l.d(121): Error: found `unittest` when expecting `]`

    /tmp/tmpqbirxd0l.d(122): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbirxd0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        u[i] = l[i];\n    }\n \
    \   Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n    long[]\
    \ u = new long[end - start];\n    for(int i = start; i < end; i++)\n    {\n  \
    \      u[i - start] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step) \n{\n    long[] u = new long[end - start];\n \
    \   for(int i = start; i < end; i += step)\n    {\n        u[i - start] = l[i];\n\
    \    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n    long[] u = new long[end - start];\n    for(int i = start;\
    \ i < end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n     \
    \   \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long\
    \ ord) \n{\n    long[] u = new long[end - start];\n    for(int i = start; i <\
    \ end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n    Arrays.sort(u,\
    \ cmp, ord);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord, int len) \n{\n    long[] u = new long[end - start];\n    for(int i\
    \ = start; i < end; i += step)\n    {\n        u[i - start] = l[i];\n    }\n \
    \   Arrays.sort(u, cmp, ord, len);\n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord, int len, int step2) \n{\n    long[] u = new long[end\
    \ - start];\n    for(int i = start; i < end; i += step2)\n    {\n        u[i -\
    \ start] = l[i];\n    }\n    Arrays.sort(u, cmp, ord, len, step2);\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6w1ugyk9.d(99): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6w1ugyk9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    long prev = 0;\n    long cur = l[0];\n    for(int i = 1;\
    \ i < l.length; i++) \n    {\n        if(l[i] < cur) \n        {\n           \
    \ result[i - 1] = cur;\n            cur = l[i];\n        }\n        else \n  \
    \      {\n            result[i - 1] = l[i];\n        }\n    }\n    result[result.length\
    \ - 1] = cur;\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=c#,sorting,arrays\
    \ |>\n<code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\
    using System.Text;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpty1a96fc.d(27): Error: declaration expected, not `<`

    /tmp/tmpty1a96fc.d(32): Error: semicolon expected, not `.`

    /tmp/tmpty1a96fc.d(32): Error: no identifier for declarator `.Collections.Generic`

    /tmp/tmpty1a96fc.d(33): Error: semicolon expected, not `.`

    /tmp/tmpty1a96fc.d(33): Error: no identifier for declarator `.Linq`

    /tmp/tmpty1a96fc.d(34): Error: semicolon expected, not `.`

    /tmp/tmpty1a96fc.d(34): Error: no identifier for declarator `.Text`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty1a96fc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkftpfrxt.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkftpfrxt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long key) \n{\n\tlong[] u = new long[l.length];\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u, key);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long key, long[] u) \n{\n\tlong[] u = new long[l.length];\n\tfor (int i =\
    \ 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u, key);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long key, long[] u, int lo, int hi) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = lo; i < hi; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u, key);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long key, long[] u, int lo, int hi, int len) \n{\n\tlong[]\
    \ u = new long[l.length];\n\tfor (int i = lo; i < hi; ++i)\n\t\tu[i] = l[i];\n\
    \tArrays.sort(u, key);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long key, long[] u, int lo, int\
    \ hi, int len, int len2) \n{\n\tlong[] u = new long[l.length];\n\tfor (int i =\
    \ lo; i < hi; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u, key);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long key, long[] u, int lo, int hi, int len, int len2, int len3) \n{\n\t\
    long[] u = new long[l.length];\n\tfor (int i = lo; i < hi; ++i)\n\t\tu[i] = l[i];\n\
    \tArrays.sort(u, key);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long key, long[] u, int lo, int\
    \ hi, int len, int len2, int len3, int len4) \n{\n\tlong[] u = new long[\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3rjtdpvg.d(94): Error: expression expected, not `unittest`

    /tmp/tmp3rjtdpvg.d(95): Error: found `{` when expecting `]`

    /tmp/tmp3rjtdpvg.d(96): Error: semicolon expected, not `alias`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3rjtdpvg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=arrays,sorting,c#\
    \ |>\n<| c |>\nThis doesn't work. `Arrays.sort` sorts the array in place, so the\
    \ original array is unchanged. See [here](http://msdn.microsoft.com/en-us/library/system.array.sort.aspx).\n\
    <|/ c |>\n<| c |>\n: Yes, I know. That's why I wrote \"in place\". I was just\
    \ trying to show that `Arrays.sort` sorts the array in place. Of course it would\
    \ be better to use a `List` instead.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ doesn't use an `Array` but a `List`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that doesn't use an `Array` but a `List`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that doesn't use an `Array` but a `List`.\n<|/ c |>\n<| a tags=arrays,sorting,c#\
    \ |>\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsm07ucda.d(17): Error: declaration expected, not `<`

    /tmp/tmpsm07ucda.d(20): Error: unterminated character constant

    /tmp/tmpsm07ucda.d(23): Error: unterminated character constant

    /tmp/tmpsm07ucda.d(26): Error: unterminated character constant

    /tmp/tmpsm07ucda.d(29): Error: unterminated character constant

    /tmp/tmpsm07ucda.d(32): Error: unterminated character constant

    /tmp/tmpsm07ucda.d(40): Error: declaration expected, not `assert`

    /tmp/tmpsm07ucda.d(41): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsm07ucda.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\n</code>\n<|/ a tags=arrays,c#,sorting |>\n<| c |>\nThis code\
    \ doesn't work. `Arrays.sort` doesn't return an array.\n<|/ c |>\n<| c |>\nThis\
    \ code doesn't work. `Arrays.sort` doesn't return an array.\n<|/ c |>\n<| c |>\n\
    This code doesn't work. `Arrays.sort` doesn't return an array.\n<|/ c |>\n<| c\
    \ |>\nThis code doesn't work. `Arrays.sort` doesn't return an array.\n<|/ c |>\n\
    <| c |>\nThis code doesn't work. `Arrays.sort` doesn't return an array.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_5djogtj.d(15): Error: declaration expected, not `<`

    /tmp/tmp_5djogtj.d(18): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(18): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(21): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(21): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(24): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(24): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(27): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(27): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(30): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(30): Error: unterminated character constant

    /tmp/tmp_5djogtj.d(38): Error: declaration expected, not `assert`

    /tmp/tmp_5djogtj.d(39): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_5djogtj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tfor(int j =\
    \ i+1; j < l.length; j++) \n\t\t{\n\t\t\tif(l[i] > l[j]) \n\t\t\t{\n\t\t\t\tlong\
    \ temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tfor(int j = i+1; j < l.length;\
    \ j++) \n\t\t{\n\t\t\tif(l[i] > l[j]) \n\t\t\t{\n\t\t\t\tlong temp = u[i];\n\t\
    \t\t\tu[i] = u[j];\n\t\t\t\tu[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5pw4un6j.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284cd]

    ??:? void tmp5pw4un6j.__unittest_L37_C1() [0x4281a0]

    ??:? void tmp5pw4un6j.__modtest() [0x428250]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5ab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b43e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b415]

    ??:? runModuleUnitTests [0x42c381]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428990]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\t\n\tfor(int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \t\n\tArrays.sort(result);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnnpcoo7c.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnnpcoo7c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong result[] = new\
    \ long[l.length];\n\tlong last = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t\
    {\n\t\tif (l[i] != last) \n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t\tlast = l[i];\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: '/tmp/tmp49asp1op.d(9): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] result`

    /tmp/tmp49asp1op.d(9): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] result`

    core.exception.AssertError@/tmp/tmp49asp1op.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x42834d]

    ??:? void tmp49asp1op.__unittest_L21_C1() [0x428020]

    ??:? void tmp49asp1op.__modtest() [0x4280d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c42b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430549]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b295]

    ??:? runModuleUnitTests [0x42c201]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428810]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    long prev = 0;\n    for(int i = 0; i < l.length; i++)\n    {\n        if(l[i]\
    \ != prev)\n        {\n            res[i - 1] = l[i];\n            prev = l[i];\n\
    \        }\n    }\n    return res;\n}\n</code>\n<|/ a tags=sorting,arrays,c# |>\n\
    <| a tags=sorting,arrays,c# |>\n<code>\npublic static int[] SortArray(int[] array)\n\
    {\n    int[] sortedArray = new int[array.Length];\n    Array.Sort(array);\n  \
    \  for(int i = 0; i < array.Length; i++)\n    {\n        sortedArray[i] = array[i];\n\
    \    }\n    return sortedArray;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=sorting,arrays,c#\
    \ |>\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmposgfrc34.d(21): Error: declaration expected, not `<`

    /tmp/tmposgfrc34.d(28): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmposgfrc34.d(28): Error: no identifier for declarator `Array.Sort(array)`

    /tmp/tmposgfrc34.d(29): Error: declaration expected, not `for`

    /tmp/tmposgfrc34.d(29): Error: no identifier for declarator `i`

    /tmp/tmposgfrc34.d(29): Error: declaration expected, not `<`

    /tmp/tmposgfrc34.d(29): Error: no identifier for declarator `i`

    /tmp/tmposgfrc34.d(29): Error: declaration expected, not `++`

    /tmp/tmposgfrc34.d(32): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmposgfrc34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; ++i)\n    {\n        long\
    \ x = l[i];\n        for(int j = i + 1; j < l.length; ++j)\n        {\n      \
    \      if(l[j] == x)\n            {\n                long y = l[j];\n        \
    \        for(int k = j; k < l.length; ++k)\n                {\n              \
    \      l[k] = l[k + 1];\n                }\n                l[l.length - 1] =\
    \ y;\n            }\n        }\n        result[i] = x;\n    }\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end) \n{\n    long[] result = new long[end - start];\n   \
    \ for(int i = start; i < end; ++i)\n    {\n        long x = l[i];\n        for(int\
    \ j = i + 1; j < end; ++j)\n        {\n            if(l[j] == x)\n           \
    \ {\n                long y = l[j];\n                for(int k = j; k < end; ++k)\n\
    \                {\n                    l[k] = l[k + 1];\n                }\n\
    \                l[end - 1] = y;\n            }\n        }\n        result[i -\
    \ start] = x;\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step)\
    \ \n{\n    long[] result = new long[end - start];\n    for(int i = start; i <\
    \ end; i += step)\n    {\n        long x = l[i];\n        for(int j = i + 1; j\
    \ < end; j += step)\n        {\n            if(l[j] == x)\n            {\n   \
    \             long y = l[j];\n                for(int k = j; k < end; k += step)\n\
    \                {\n                    l[k] = l[k + 1];\n                }\n\
    \                l[end - 1] = y;\n            }\n        }\n        result[i -\
    \ start] = x;\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n    long[] result = new long[end - start];\n    for(int i = start;\
    \ i < end; i += step)\n    {\n        long x = l[i];\n        for(int j = i +\
    \ 1; j < end; j += step)\n        {\n            if(l[j] == x && cmp(x, l[j])\
    \ < 0)\n            {\n                long y = l[j];\n                for(int\
    \ k = j; k < end; k += step)\n                {\n                    l[k] = l[k\
    \ + 1];\n                }\n                l[end - 1] = y;\n            }\n \
    \       }\n        result[i - start] = x;\n    }\n    return result;\n}\n/*\n\
    Return sorted unique elements in a list\n\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0jl3rq5l.d(107): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0jl3rq5l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \t\n\tArrays.sort(result);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn102rnzq.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn102rnzq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i\
    \ = start; i < end; i++)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step) \n{\n\tlong[] u = new long[end - start];\n\t\
    for(int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp) \n{\n\tlong[] u = new\
    \ long[end - start];\n\tfor(int i = start; i < end; i += step)\n\t\tu[i - start]\
    \ = l[i];\n\tArrays.sort(u, cmp);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp, long ord) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i =\
    \ start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp,\
    \ ord);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n       \
    \ \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp, long ord,\
    \ int len) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp, ord, len);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord, int len,\
    \ int len2) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp, ord, len, len2);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd3f2dks5.d(92): Error: no identifier for declarator `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3f2dks5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tfor(int j = i+1;\
    \ j < l.length; j++)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp\
    \ = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\
    for(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end) \n{\n\tlong[] u;\n\tu = new long[end - start];\n\tfor(int\
    \ i = start; i < end; i++)\n\t{\n\t\tfor(int j = i+1; j < end; j++)\n\t\t{\n\t\
    \t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; i++)\n\
    \t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int start,\
    \ int end, int step) \n{\n\tlong[] u;\n\tu = new long[end - start];\n\tfor(int\
    \ i = start; i < end; i += step)\n\t{\n\t\tfor(int j = i+1; j < end; j += step)\n\
    \t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i]\
    \ = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i <\
    \ end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp) \n{\n\tlong[] u;\n\tu = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step)\n\t{\n\t\tfor(int j = i+1;\
    \ j < end; j += step)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp\
    \ = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\
    for(int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u,\
    \ cmp);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n       \
    \ \n*/\nlong[] unique(long[] l, int start, int end, int \nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe0xxxgg5.d(108): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0xxxgg5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6h5v6ph_.d(15): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h5v6ph_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkj7upxep.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkj7upxep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tfor(int j = i + 1; j < l.length;\
    \ ++j)\n\t\t{\n\t\t\tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\
    \tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i <\
    \ l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, int\
    \ start, int end) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start;\
    \ i < end; ++i)\n\t{\n\t\tfor(int j = i + 1; j < end; ++j)\n\t\t{\n\t\t\tif(l[i]\
    \ > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j]\
    \ = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; ++i)\n\t\tu[i] =\
    \ l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step)\
    \ \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i +=\
    \ step)\n\t{\n\t\tfor(int j = i + 1; j < end; j += step)\n\t\t{\n\t\t\tif(l[i]\
    \ > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j]\
    \ = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; i += step)\n\t\t\
    u[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step)\n\t{\n\t\tfor(int j = i + 1; j < end; j += step)\n\t\t{\n\t\t\
    \tif(l[i] > l[j])\n\t\t\t{\n\t\t\t\tlong tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\
    \t\t\tl[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; i += step)\n\
    \t\tu[i] = l[i];\n\tArrays.sort(u, cmp);\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, int step2) \n{\n\tlong[] u = new long[end - start];\n\t\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpikwjvnpx.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpikwjvnpx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x) \n{\n\tlong[] u = new long[l.length];\n\tfor(int i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, (x, y)\
    \ -> {\n\t\tlong a = x;\n\t\tlong b = y;\n\t\treturn a < b ? -1 : 1;\n\t});\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y) \n{\n\tlong[] u = new long[l.length];\n\tfor(int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, (x,\
    \ y) -> {\n\t\tlong a = x;\n\t\tlong b = y;\n\t\treturn a < b ? -1 : 1;\n\t});\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y, long z) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u,\
    \ (x, y) -> {\n\t\tlong a = x;\n\t\tlong b = y;\n\t\treturn a < b ? -1 : 1;\n\t\
    });\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long x, long y, long z, long a) \n{\n\tlong[] u = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u, (x, y) -> {\n\t\tlong a = x;\n\t\tlong b = y;\n\t\treturn\
    \ a < b ? -1 : 1;\n\t});\n\treturn u;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n        \n*/\nlong[] unique(long[] l, long x, long y, long z, long a,\
    \ long b) \n{\n\tlong[] u = new long[l.length];\n\tfor(int i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u, (x, y) -> {\n\t\tlong a\
    \ = x;\n\t\tlong b = y;\n\t\treturn a < b ? -1 : 1;\n\t});\n\treturn u;\n}\n/*\n\
    Return sorted unique element\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr2z8z2az.d(28): Error: expression expected, not `>`

    /tmp/tmpr2z8z2az.d(28): Error: found `{` when expecting `,`

    /tmp/tmpr2z8z2az.d(29): Error: found `a` when expecting `.` following long

    /tmp/tmpr2z8z2az.d(29): Error: found `=` when expecting identifier following `long`.

    /tmp/tmpr2z8z2az.d(29): Error: found `x` when expecting `,`

    /tmp/tmpr2z8z2az.d(29): Error: expression expected, not `;`

    /tmp/tmpr2z8z2az.d(30): Error: found `long` when expecting `,`

    /tmp/tmpr2z8z2az.d(30): Error: found `;` when expecting `,`

    /tmp/tmpr2z8z2az.d(31): Error: expression expected, not `return`

    /tmp/tmpr2z8z2az.d(31): Error: found `a` when expecting `,`

    /tmp/tmpr2z8z2az.d(31): Error: expression expected, not `<`

    /tmp/tmpr2z8z2az.d(31): Error: found `b` when expecting `,`

    /tmp/tmpr2z8z2az.d(31): Error: expression expected, not `?`

    /tmp/tmpr2z8z2az.d(31): Error: found `:` when expecting `,`

    /tmp/tmpr2z8z2az.d(31): Error: found `;` when expecting `,`

    /tmp/tmpr2z8z2az.d(32): Error: expression expected, not `}`

    /tmp/tmpr2z8z2az'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, int start, int end) \n{\n    long[] u = new long[end -\
    \ start];\n    for(int i = start; i < end; ++i)\n        u[i - start] = l[i];\n\
    \    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step) \n\
    {\n    long[] u = new long[end - start];\n    for(int i = start; i < end; i +=\
    \ step)\n        u[i - start] = l[i];\n    Arrays.sort(u);\n    return u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp) \n{\n    long[] u = new long[end\
    \ - start];\n    for(int i = start; i < end; i += step)\n        u[i - start]\
    \ = l[i];\n    Arrays.sort(u, cmp);\n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord) \n{\n    long[] u = new long[end - start];\n \
    \   for(int i = start; i < end; i += step)\n        u[i - start] = l[i];\n   \
    \ Arrays.sort(u, cmp, ord);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp, long ord, int len) \n{\n    long[] u = new long[end - start];\n  \
    \  for(int i = start; i < end; i += step)\n        u[i - start] = l[i];\n    Arrays.sort(u,\
    \ cmp, ord, len);\n    return u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord, int len, int step2) \n{\n    long[] u = new long[end - start];\n \
    \   for(int i = start; i < end; i += step)\n        u[i - start] = l[i];\n   \
    \ Arrays.sort(u, cmp, ord, len, step2);\n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int \nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbsc7rwm.d(92): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbsc7rwm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr2dklc0c.d(13): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr2dklc0c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tlong last = l[0];\n\tfor (int i = 1; i < l.length; i++) \n\
    \t{\n\t\tif (l[i] != last) \n\t\t{\n\t\t\tlast = l[i];\n\t\t\tresult[i-1] = last;\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9vk3adod.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmp9vk3adod.__unittest_L21_C1() [0x428018]

    ??:? void tmp9vk3adod.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong result = 0;\n\t\
    long[] result = new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\
    {\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\
    \t\t\t{\n\t\t\t\tresult = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = result;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n\tlong result\
    \ = 0;\n\tlong[] result = new long[end - start];\n\tfor (int i = start; i < end;\
    \ i++)\n\t{\n\t\tfor (int j = i + 1; j < end; j++)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\
    \t\t\t{\n\t\t\t\tresult = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = result;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step) \n{\n\tlong\
    \ result = 0;\n\tlong[] result = new long[end - start];\n\tfor (int i = start;\
    \ i < end; i += step)\n\t{\n\t\tfor (int j = i + 1; j < end; j += step)\n\t\t\
    {\n\t\t\tif (l[i] > l[j])\n\t\t\t{\n\t\t\t\tresult = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = result;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int start,\
    \ int end, int step, long stepSize) \n{\n\tlong result = 0;\n\tlong[] result =\
    \ new long[end - start];\n\tfor (int i = start; i < end; i += step)\n\t{\n\t\t\
    for (int j = i + 1; j < end; j += step)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\t\t\t\
    {\n\t\t\t\tresult = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = result;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn l;\n}\n/*\nReturn sorted unique elements in a list\n \
    \       \n*/\nlong[] unique(long[] l, int start, int end, int step, long stepSize,\
    \ long stepSize2) \n{\n\tlong result = 0;\n\tlong[] result = new long[end - start];\n\
    \tfor (int i = start; i < end; i += step)\n\t{\n\t\tfor (int j = i + 1; j < end;\
    \ j += step)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\t\t\t{\n\t\t\t\tresult = l[i];\n\
    \t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = result;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\n\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppod4ocw1.d(10): Error: declaration `tmppod4ocw1.unique.result`
    is already defined

    /tmp/tmppod4ocw1.d(32): Error: declaration `tmppod4ocw1.unique.result` is already
    defined

    /tmp/tmppod4ocw1.d(54): Error: declaration `tmppod4ocw1.unique.result` is already
    defined

    /tmp/tmppod4ocw1.d(76): Error: declaration `tmppod4ocw1.unique.result` is already
    defined

    /tmp/tmppod4ocw1.d(98): Error: declaration `tmppod4ocw1.unique.result` is already
    defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppod4ocw1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int size) \n{\n\tlong[] u\
    \ = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\
    \tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, size);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int size, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptjzlaoj9.d(98): Error: found `unittest` instead of statement

    /tmp/tmptjzlaoj9.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjzlaoj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong result = 0;\n\t\
    long[] result = new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\
    {\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\
    \t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\t\
    long temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\
    \t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\
    \t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\
    \t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\
    \t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\t\
    long temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length;\
    \ j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\
    \t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\
    \t\t\tif (l[i] < l[j])\n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\
    \t{\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] < l[j])\n\
    \t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmtvc3t_5.d(121): Error: found `unittest` instead of statement

    /tmp/tmpmtvc3t_5.d(127): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtvc3t_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = 0; j < i; j++) \n\t\t{\n\t\t\tif (l[i] == l[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif (j == i) \n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t}\n\t}\n\
    \treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, int start, int end) \n{\n\tlong[] result = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i++) \n\t{\n\t\tfor (int j = 0; j\
    \ < i; j++) \n\t\t{\n\t\t\tif (l[i] == l[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}\n\t\tif (j == i) \n\t\t{\n\t\t\tresult[i-start] = l[i];\n\t\t}\n\t}\n\
    \treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, int start, int end, int step) \n{\n\tlong[] result = new\
    \ long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tfor\
    \ (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (l[i] == l[j]) \n\t\t\t{\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t\tif (j == i) \n\t\t{\n\t\t\tresult[i-start] = l[i];\n\
    \t\t}\n\t}\n\treturn result;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp)\
    \ \n{\n\tlong[] result = new long[end - start];\n\tfor (int i = start; i < end;\
    \ i += step) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (cmp(l[i],\
    \ l[j]) == 0) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == i) \n\t\t\
    {\n\t\t\tresult[i-start] = l[i];\n\t\t}\n\t}\n\treturn result;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, int\
    \ start, int end, int step, long cmp, long key) \n{\n\tlong[] result = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tfor (int j =\
    \ 0; j < i; j++) \n\t\t{\n\t\t\tif (cmp(l[i], l[j]) == 0 && l[i] == key) \n\t\t\
    \t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == i) \n\t\t{\n\t\t\tresult[i-start]\
    \ = l[i];\n\t\t}\n\t}\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ql2zp8b.d(123): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ql2zp8b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x) \n{\n\tlong[] u = new long[l.length];\n\tfor(int i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x) \n\t\t{\n\t\t\tu[i] = l[i];\n\
    \t\t}\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int x) \n{\n\tlong[] u = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x)\
    \ \n\t\t{\n\t\t\tu[i] = l[i];\n\t\t}\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long x, int y) \n{\n\tlong[] u = new long[l.length];\n\tfor(int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\tu[i] =\
    \ l[i];\n\t\t}\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int x, int y) \n{\n\
    \tlong[] u = new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\
    \tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\tu[i] = l[i];\n\t\t}\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y) \n{\n\tlong[] u = new long[l.length];\n\tfor(int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] == x && l[i] == y) \n\t\t{\n\t\t\
    \tu[i] = l[i];\n\t\t}\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int x, int\
    \ y, int z) \n{\n\tlong[] u = new long[l.length];\n\tfor(int i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif(l[i] == x && l[i] == y && l[i] == z) \n\t\t{\n\t\t\tu[i]\
    \ = l[i];\n\t\t}\n\t}\n\tArrays.sort(u);\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm9uxh7ko.d(117): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9uxh7ko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=c++,sorting,arrays\
    \ |>\n<| a tags=c++,sorting,arrays |>\n<code>\n#include <iostream>\n#include <algorithm>\n\
    using namespace std;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzs1qvjx6.d(17): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzs1qvjx6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor (int i = start; i < end; ++i)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\
    \tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp)\
    \ \n{\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i < end; i +=\
    \ step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u, cmp);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\
    \tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp, long ord, int len) \n{\n\tlong[] u = new long[end - start];\n\tfor\
    \ (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u,\
    \ cmp, ord, len);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord, int len, int step2) \n{\n\tlong[] u = new long[end - start];\n\tfor\
    \ (int i = start; i < end; i += step)\n\t\tu[i - start] = l[i];\n\tArrays.sort(u,\
    \ cmp, ord, len, step2);\n\treturn u;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n        \n*/\n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3eh3c7n8.d(12): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(24): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(36): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(48): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(60): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(72): Error: undefined identifier `Arrays`

    /tmp/tmp3eh3c7n8.d(84): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3eh3c7n8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not the right\
    \ solution. `unique` should return `long[]` not `int[]`.\n<|/ c |>\n<| c |>\n\
    : I know, but I thought that OP will understand how to implement it himself.\n\
    <|/ c |>\n<| c |>\n: I added a solution that uses `Arrays.sort` which I believe\
    \ is more efficient than your solution. Also, your solution doesn't return unique\
    \ elements, it returns unique indices. If you want unique elements then you should\
    \ use my solution.\n<|/ c |>\n<| c |>\n: I added a solution that uses `Arrays.sort`\
    \ which I believe is more efficient than your solution. Also, your solution doesn't\
    \ return unique elements, it returns unique indices. If you want unique elements\
    \ then you should use my solution.\n<|/ c |>\n<| c |>\n: I added a solution that\
    \ uses `Arrays.sort` which I believe is more efficient than your solution. Also,\
    \ your solution doesn't return unique elements, it returns unique indices. If\
    \ you want unique elements then you should use my solution.\n<|/ c |>\n<| a tags=java,arrays\
    \ |>\n<code>\nimport java.util.Arrays;\nimport java.util.Collections;\nimport\
    \ java.util.List;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgescf0vc.d(15): Error: declaration expected, not `<`

    /tmp/tmpgescf0vc.d(24): Error: unterminated character constant

    /tmp/tmpgescf0vc.d(27): Error: unterminated character constant

    /tmp/tmpgescf0vc.d(30): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgescf0vc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ox5d46f.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ox5d46f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong u_index = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j\
    \ = 0; j < u.length; j++)\n\t\t{\n\t\t\tif (l[i] == u[j])\n\t\t\t{\n\t\t\t\tu_index++;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (u_index == u.length)\n\t\t{\n\t\t\tu[u_index]\
    \ = l[i];\n\t\t\tu_index++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long key)\n{\n\tlong[]\
    \ u = new long[l.length];\n\tlong u_index = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tfor (int j = 0; j < u.length; j++)\n\t\t{\n\t\t\tif (l[i] ==\
    \ u[j] && l[i] == key)\n\t\t\t{\n\t\t\t\tu_index++;\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t\tif (u_index == u.length)\n\t\t{\n\t\t\tu[u_index] = l[i];\n\t\t\tu_index++;\n\
    \t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n    \
    \    \n*/\nlong[] unique(long[] l, long key, long key_index)\n{\n\tlong[] u =\
    \ new long[l.length];\n\tlong u_index = 0;\n\tfor (int i = 0; i < l.length; i++)\n\
    \t{\n\t\tfor (int j = 0; j < u.length; j++)\n\t\t{\n\t\t\tif (l[i] == u[j] &&\
    \ l[i] == key && j == key_index)\n\t\t\t{\n\t\t\t\tu_index++;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif (u_index == u.length)\n\t\t{\n\t\t\tu[u_index] = l[i];\n\
    \t\t\tu_index++;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long key, long key_index, long\
    \ key_index_2)\n{\n\tlong[] u = new long[l.length];\n\tlong u_index = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t{\n\t\tfor (int j = 0; j < u.length; j++)\n\
    \t\t{\n\t\t\tif (l[i] == u[j] && l[i] == key && j == key_index && j == key_index_2)\n\
    \t\t\t{\n\t\t\t\tu_index++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (u_index ==\
    \ u.length)\n\t\t{\n\t\t\tu[u_index] = l[i];\n\t\t\tu_index++;\n\t\t}\n\t}\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long key, long key_index, long key_index_2, long key_index_3)\n\
    {\n\tlong[] u = new long[l.length];\n\tlong \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z4b80hb.d(115): Error: no identifier for declarator `long`

    /tmp/tmp5z4b80hb.d(115): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z4b80hb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong h;\n\tlong[] u\
    \ = new long[l.length];\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\th = l[i];\n\
    \t\tfor(int j = i+1; j < l.length; j++)\n\t\t{\n\t\t\tif(h == l[j])\n\t\t\t\t\
    break;\n\t\t\telse\n\t\t\t\tu[j-1] = h;\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeqzaf73c.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmpeqzaf73c.__unittest_L24_C1() [0x428014]

    ??:? void tmpeqzaf73c.__modtest() [0x4280c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7kpskgs.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7kpskgs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor (int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i\
    \ < end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int len) \n{\n\tlong[] u =\
    \ new long[end - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\t\
    u[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, len);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int len, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9vfv5t4b.d(98): Error: found `unittest` instead of statement

    /tmp/tmp9vfv5t4b.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vfv5t4b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n    {\n        u[i] = l[i];\n    }\n \
    \   Arrays.sort(u);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxzr3kd4.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxzr3kd4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    int j = 0;\n    for(int i = 0; i < l.length; i++)\n   \
    \ {\n        while(j < result.length && l[i] == result[j])\n            j++;\n\
    \        result[j] = l[i];\n    }\n    return result;\n}\n</code>\n<|/ a tags=sorting,arrays,java\
    \ |>\n<| a tags=sorting,arrays,java |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] a = {1, 2, 3, 4, 5};\n    Arrays.sort(a);\n    System.out.println(Arrays.toString(a));\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding how and/or why it solves the problem\
    \ would improve the answer's long-term value.\n<|/ c |>\n<| a tags=sorting,arrays,java\
    \ |>\n<code>\nimport java.util.Arrays;\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8j1t8pv1.d(19): Error: declaration expected, not `<`

    /tmp/tmp8j1t8pv1.d(25): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmp8j1t8pv1.d(25): Error: no identifier for declarator `Arrays.sort(a)`

    /tmp/tmp8j1t8pv1.d(26): Error: identifier expected following `.` instead of `out`

    /tmp/tmp8j1t8pv1.d(26): Error: no identifier for declarator `System`

    /tmp/tmp8j1t8pv1.d(26): Error: declaration expected, not `out`

    /tmp/tmp8j1t8pv1.d(27): Error: unrecognized declaration

    /tmp/tmp8j1t8pv1.d(31): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j1t8pv1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long key)\n{\n\tlong[] result\
    \ = new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i] ==\
    \ key)\n\t\t\tresult[i] = l[i];\n\tArrays.sort(result);\n\treturn result;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long key, int lo, int hi)\n{\n\tlong[] result = new long[hi-lo+1];\n\tfor\
    \ (int i = lo; i <= hi; i++)\n\t\tif (l[i] == key)\n\t\t\tresult[i-lo] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long key, int lo, int hi, int\
    \ len)\n{\n\tlong[] result = new long[len];\n\tfor (int i = lo; i <= hi; i++)\n\
    \t\tif (l[i] == key)\n\t\t\tresult[i-lo] = l[i];\n\tArrays.sort(result);\n\treturn\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long key, int lo, int hi, int len, int stride)\n{\n\tlong[]\
    \ result = new long[len];\n\tfor (int i = lo; i <= hi; i++)\n\t\tif (l[i] == key)\n\
    \t\t\tresult[i-lo] = l[i];\n\tArrays.sort(result);\n\treturn result;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ long key, int lo, int hi, int len, int stride, int count)\n{\n\tlong[] result\
    \ = new long[len];\n\tfor (int i = lo; i <= hi; i++)\n\t\tif (l[i] == key)\n\t\
    \t\tresult[i-lo] = l[i];\n\tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, long\
    \ key, int lo, int hi, int len, int stride, int count, int stride2)\n{\n\tlong[]\
    \ result = new long[len];\n\tfor (int i = lo; i <= hi; i++)\n\t\tif (l[i] == key)\n\
    \t\t\tresult[i-lo] = l[i];\n\tArrays.sort(result);\n\treturn result;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ long key, int lo, int hi, int len, int stride, int count, int stride\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm993rmxi.d(98): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm993rmxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnj5pxjwq.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnj5pxjwq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; ++i)\n\t{\n\t\tint j;\n\t\t\
    for(j = 0; j < i; ++j)\n\t\t{\n\t\t\tif(l[j] == l[i])\n\t\t\t\tbreak;\n\t\t}\n\
    \t\tif(j == i)\n\t\t\tresult[i] = l[i];\n\t\telse\n\t\t{\n\t\t\tint k;\n\t\t\t\
    for(k = i; k < j; ++k)\n\t\t\t\tresult[k] = l[k];\n\t\t\tresult[j] = l[i];\n\t\
    \t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjgbg77wp.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmpjgbg77wp.__unittest_L30_C1() [0x4280f8]

    ??:? void tmpjgbg77wp.__modtest() [0x4281a8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c503]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b396]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430621]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305ad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b36d]

    ??:? runModuleUnitTests [0x42c2d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn\
    \ u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpemul9a27.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpemul9a27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\t\t\t\
    \tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = i + 1; j\
    \ < l.length; j++) \n\t\t{\n\t\t\tif (l[i] == l[j]) \n\t\t\t{\n\t\t\t\tlong temp\
    \ = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return l;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7c9erds5.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284b5]

    ??:? void tmp7c9erds5.__unittest_L37_C1() [0x428184]

    ??:? void tmp7c9erds5.__modtest() [0x428234]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c593]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b426]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306b1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b60]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43063d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3fd]

    ??:? runModuleUnitTests [0x42c369]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428978]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcqtfon_a.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcqtfon_a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n        u[i] = l[i];\n    Arrays.sort(u);\n\
    \    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_c7p5wc.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_c7p5wc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong [] u = new long[end - start];\n\
    \tfor (int i = start; i < end; i++)\n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong [] u = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step)\n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong [] u = new long[end - start];\n\tfor (int i = start; i\
    \ < end; i += step)\n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong\
    \ [] u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\n\t\
    {\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int len) \n{\n\tlong []\
    \ u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, len);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int len, int stride) \n\
    {\n\tlong [] u = new long[end - start];\n\tfor (int i = start; i < end; i += step)\n\
    \t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp66l52hq8.d(99): Error: found `unittest` when expecting `,`

    /tmp/tmp66l52hq8.d(105): Error: found `void` when expecting `,`

    /tmp/tmp66l52hq8.d(105): Error: found `{` when expecting `,`

    /tmp/tmp66l52hq8.d(105): Error: expression expected, not `}`

    /tmp/tmp66l52hq8.d(105): Error: found `End of File` when expecting `,`

    /tmp/tmp66l52hq8.d(105): Error: found `End of File` when expecting `)`

    /tmp/tmp66l52hq8.d(105): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp66l52hq8.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66l52hq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        u[i] = l[i];\n    }\n \
    \   Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=c++,sorting,arrays\
    \ |>\n<| a tags=c++,sorting,arrays |>\n<code>\n#include <iostream>\n#include <algorithm>\n\
    using namespace std;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6tnamd53.d(17): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6tnamd53.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\t\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint j =\
    \ i;\n\t\twhile(j > 0 && l[j-1] > l[j]) \n\t\t{\n\t\t\tresult[j] = l[j-1];\n\t\
    \t\tj--;\n\t\t}\n\t\tresult[j] = l[j];\n\t}\n\t\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptyg2pju4.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ad]

    ??:? void tmptyg2pju4.__unittest_L24_C1() [0x428080]

    ??:? void tmptyg2pju4.__modtest() [0x428130]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c48b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b31e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305a9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a58]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430535]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2f5]

    ??:? runModuleUnitTests [0x42c261]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428870]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = 0; j < u.length; j++) \n\t\t{\n\t\t\tif (l[i] == u[j]) \n\t\t\t{\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t\tif (j == u.length) \n\t\t{\n\t\t\tu[i] = l[i];\n\t\
    \t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n      \
    \  \n*/\nlong[] unique(long[] l, long x) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = 0; j < u.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] == u[j] && l[i] == x) \n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif (j == u.length) \n\t\t{\n\t\t\tu[i] = l[i];\n\t\t}\n\t\
    }\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long x, long y) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j = 0; j < u.length;\
    \ j++) \n\t\t{\n\t\t\tif (l[i] == u[j] && l[i] == x && l[i] == y) \n\t\t\t{\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == u.length) \n\t\t{\n\t\t\tu[i] = l[i];\n\
    \t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n    \
    \    \n*/\nlong[] unique(long[] l, long x, long y, long z) \n{\n\tlong[] u;\n\t\
    u = new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int\
    \ j = 0; j < u.length; j++) \n\t\t{\n\t\t\tif (l[i] == u[j] && l[i] == x && l[i]\
    \ == y && l[i] == z) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == u.length)\
    \ \n\t\t{\n\t\t\tu[i] = l[i];\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long x, long y, long\
    \ z, long w) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tfor (int j = 0; j < u.length; j++) \n\t\t{\n\t\t\
    \tif (l[i] == u[j] && l[i] == x && l[i] == y && l[i] == z && l[i] == w) \n\t\t\
    \t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_p9j77kn.d(117): Error: found `unittest` when expecting `)`

    /tmp/tmp_p9j77kn.d(123): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_p9j77kn.d(123): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_p9j77kn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u) \n{\n\tlong[] result = new long[u.length];\n\tfor(int\
    \ i = 0; i < u.length; i++) \n\t{\n\t\tresult[i] = l[u.length - i - 1];\n\t}\n\
    \tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long[] u, long[] v) \n{\n\t\
    long[] result = new long[u.length];\n\tfor(int i = 0; i < u.length; i++) \n\t\
    {\n\t\tresult[i] = l[u.length - i - 1];\n\t}\n\tArrays.sort(result);\n\treturn\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] v, long[] w) \n{\n\tlong[] result = new long[u.length];\n\
    \tfor(int i = 0; i < u.length; i++) \n\t{\n\t\tresult[i] = l[u.length - i - 1];\n\
    \t}\n\tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long[] u, long[] v, long[]\
    \ w, long[] x) \n{\n\tlong[] result = new long[u.length];\n\tfor(int i = 0; i\
    \ < u.length; i++) \n\t{\n\t\tresult[i] = l[u.length - i - 1];\n\t}\n\tArrays.sort(result);\n\
    \treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, long[] u, long[] v, long[] w, long[] x, long[] y) \n{\n\
    \tlong[] result = new long[u.length];\n\tfor(int i = 0; i < u.length; i++) \n\t\
    {\n\t\tresult[i] = l[u.length - i - 1];\n\t}\n\tArrays.sort(result);\n\treturn\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] v, long[] w, long[] x, long[] y, long[] z)\
    \ \n{\n\tlong[] result = new long[u.length];\n\tfor(int i = 0; i < u.length; i++)\
    \ \n\t{\n\t\tresult[i] = l[u.length - i - 1];\n\t}\n\tArrays.sort(result);\n\t\
    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_6gjxv10.d(14): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(28): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(42): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(56): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(70): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(84): Error: undefined identifier `Arrays`

    /tmp/tmp_6gjxv10.d(98): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6gjxv10.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u) \n{\n\tlong [] u = new long[l.length];\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] v) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] v, long[] w) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] v, long[] w, long[] x) \n{\n\tlong [] u =\
    \ new long[l.length];\n\tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long[] u, long[] v, long[] w, long[]\
    \ x, long[] y) \n{\n\tlong [] u = new long[l.length];\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, long[]\
    \ u, long[] v, long[] w, long[] x, long[] y, long[] z) \n{\n\tlong [] u = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, long[] u, long[] \nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6r2j8h_i.d(106): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6r2j8h_i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong result[] = new\
    \ long[l.length];\n\tlong temp;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\
    \tfor (int j = i+1; j < l.length; j++)\n\t\t{\n\t\t\tif (l[i] > l[j])\n\t\t\t\
    {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\
    \t\t}\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tresult[i] = l[i];\n\
    \t}\n\tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr5hhb58a.d(9): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] result`

    /tmp/tmpr5hhb58a.d(27): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5hhb58a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong h;\n\tlong[] u;\n\
    \t\n\tu = new long[l.length];\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\
    \t\th = l[i];\n\t\tfor (int j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (h\
    \ == l[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\t\
    u[j] = h;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxdv4_v8z.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x428355]

    ??:? void tmpxdv4_v8z.__unittest_L32_C1() [0x428024]

    ??:? void tmpxdv4_v8z.__modtest() [0x4280d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c433]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430551]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a00]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b29d]

    ??:? runModuleUnitTests [0x42c209]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428818]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong ux = 0;\n\tlong uy = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\t\
    ux = l[i];\n\t\tuy = ux;\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\
    \t\tif (l[j] == ux)\n\t\t\t{\n\t\t\t\tux = l[j];\n\t\t\t\tuy = ux;\n\t\t\t}\n\t\
    \t}\n\t\tu[uy] = ux;\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpor3ngvck.d(24): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42841e]

    ??:? long[] tmpor3ngvck.unique(long[]) [0x427f23]

    ??:? void tmpor3ngvck.__unittest_L28_C1() [0x427fc9]

    ??:? void tmpor3ngvck.__modtest() [0x4280f0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c44b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2de]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430569]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a18]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304f5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2b5]

    ??:? runModuleUnitTests [0x42c221]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a\
    \ list\n        \n*/\nlong[] unique(long[] l, int n) \n{\n\tlong[] u;\n\tu = new\
    \ long[n];\n\tfor(int i = 0; i < n; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long n) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int i =\
    \ 0; i < n; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int n, long m) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int i = 0; i <\
    \ n; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ long n, long m) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int i = 0; i < n;\
    \ i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, int\
    \ n, long m, long n) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int i = 0; i\
    \ < n; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long n, long m, long n) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int i\
    \ = 0; i < n; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int n, long m, long n, long m) \n{\n\tlong[] u;\n\tu = new long[n];\n\tfor(int\
    \ i = 0; i < n; i++) \n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ariwht8.d(118): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ariwht8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a tags=arrays,c#,sorting,algorithm\
    \ |>\n<| c |>\nThis is not the fastest solution, since it sorts the entire array\
    \ every time. Sorting only once is better.\n<|/ c |>\n<| c |>\nSorting only once\
    \ is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better than sorting\
    \ every time. Sorting only once is better than sorting every time. Sorting only\
    \ once is better than sorting every time. Sorting only once is better \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1joegvm.d(17): Error: declaration expected, not `<`

    /tmp/tmpw1joegvm.d(28): Error: declaration expected, not `assert`

    /tmp/tmpw1joegvm.d(29): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1joegvm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] res = new long[l.length];\n\
    \    for(int i = 0; i < l.length; ++i)\n    {\n        long x = l[i];\n      \
    \  for(int j = i; j < l.length; ++j)\n        {\n            if(l[j] == x)\n \
    \           {\n                res[j-1] = x;\n                break;\n       \
    \     }\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpw5e8b5v5.d(17): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4283fe]

    ??:? long[] tmpw5e8b5v5.unique(long[]) [0x427ef1]

    ??:? void tmpw5e8b5v5.__unittest_L24_C1() [0x427fa5]

    ??:? void tmpw5e8b5v5.__modtest() [0x4280cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c42b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430549]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b295]

    ??:? runModuleUnitTests [0x42c201]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint j = i;\n\t\twhile(j > 0 &&\
    \ l[j-1] > l[j]) \n\t\t{\n\t\t\tres[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tres[j]\
    \ = l[j];\n\t}\n\treturn res;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n\tlong[] res =\
    \ new long[end-start+1];\n\tfor(int i = start; i < end; i++) \n\t{\n\t\tint j\
    \ = i;\n\t\twhile(j > 0 && l[j-1] > l[j]) \n\t\t{\n\t\t\tres[j] = l[j-1];\n\t\t\
    \tj--;\n\t\t}\n\t\tres[j] = l[j];\n\t}\n\treturn res;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step) \n{\n\tlong[] res = new long[end-start+1];\n\tfor(int i = start; i\
    \ < end; i += step) \n\t{\n\t\tint j = i;\n\t\twhile(j > 0 && l[j-1] > l[j]) \n\
    \t\t{\n\t\t\tres[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tres[j] = l[j];\n\t}\n\t\
    return res;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp) \n{\n\tlong[] res =\
    \ new long[end-start+1];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\t\
    int j = i;\n\t\twhile(j > 0 && l[j-1] > l[j] && (cmp(l[j-1], l[j]) < 0)) \n\t\t\
    {\n\t\t\tres[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tres[j] = l[j];\n\t}\n\treturn\
    \ res;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[] res = new\
    \ long[end-start+1];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tint\
    \ j = i;\n\t\twhile(j > 0 && l[j-1] > l[j] && (cmp(l[j-1], l[j]) < 0) && (ord(l[j-1],\
    \ l[j]) < 0)) \n\t\t{\n\t\t\tres[j] = l[j-1];\n\t\t\tj--;\n\t\t}\n\t\tres[j] =\
    \ l[j];\n\t}\n\treturn res;\n}\n/*\nReturn \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpgm5rg4.d(98): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpgm5rg4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkftpfrxt.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkftpfrxt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; i++)\n        result[i] =\
    \ l[i];\n    Arrays.sort(result);\n    return result;\n}\n</code>\n<|/ a tags=c#,sorting,arrays\
    \ |>\n<| c |>\nThis is not the most efficient way to solve the problem. Using\
    \ a hash table would be more efficient.\n<|/ c |>\n<| c |>\nI agree with you,\
    \ however I didn't want to rewrite his code from scratch. He could easily adapt\
    \ it to his needs.\n<|/ c |>\n<| c |>\nI agree with you, but I wanted to give\
    \ him a solution that he could easily adapt to his needs.\n<|/ c |>\n<| c |>\n\
    I agree with you, but I wanted to give him a solution that he could easily adapt\
    \ to his needs.\n<|/ c |>\n<| c |>\nI agree with you, but I wanted to give him\
    \ a solution that he could easily adapt to his needs.\n<|/ c |>\n<| a tags=c#,sorting,arrays\
    \ |>\n<code>\npublic static int[] SortArray(int[] array)\n{\n    int[] result\
    \ = new int[array.Length];\n    Array.Sort(array);\n    for(int i = 0; i < array.Length;\
    \ i++)\n    {\n        result[i] = array[i];\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=3 |>\n<| c |>\nThis is not the most efficient way to solve the problem.\
    \ Using a hash table would be more efficient.\n<|/ c |>\n<| c |>\nI agree with\
    \ you, however I didn't want to rewrite his code from scratch. He could easily\
    \ adapt it to his needs.\n<|/ c |>\n<| c |>\nI agree with you, but I wanted to\
    \ give him a solution that he could easily adapt to his needs.\n<|/ c |>\n<| c\
    \ |>\nI agree with you, but I wanted to give him a solution that he could easily\
    \ adapt to his needs.\n<|/ c |>\n<| a tags=c#,sorting,arrays |>\n<code>\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1jnye6jf.d(15): Error: declaration expected, not `<`

    /tmp/tmp1jnye6jf.d(21): Error: unterminated character constant

    /tmp/tmp1jnye6jf.d(37): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmp1jnye6jf.d(37): Error: no identifier for declarator `Array.Sort(array)`

    /tmp/tmp1jnye6jf.d(38): Error: declaration expected, not `for`

    /tmp/tmp1jnye6jf.d(38): Error: no identifier for declarator `i`

    /tmp/tmp1jnye6jf.d(38): Error: declaration expected, not `<`

    /tmp/tmp1jnye6jf.d(38): Error: no identifier for declarator `i`

    /tmp/tmp1jnye6jf.d(38): Error: declaration expected, not `++`

    /tmp/tmp1jnye6jf.d(41): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1jnye6jf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int sz) \n{\n\tlong[] u =\
    \ new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\t\
    u[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, sz);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int sz, long ord2) \n{\n\t\
    long[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\
    \t{\n\t\tu[i - start] = l\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb0uhey8x.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpb0uhey8x.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpb0uhey8x.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb0uhey8x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        u[i] = l[i];\n    }\n \
    \   Arrays.sort(u);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9tu1qx4g.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9tu1qx4g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong temp;\n\tlong[]\
    \ u = new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor\
    \ (int j = i+1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] > l[j]) \n\t\t\t{\n\
    \t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t\tu[i] = l[i];\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeia4ufsc.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpeia4ufsc.__unittest_L26_C1() [0x4280c8]

    ??:? void tmpeia4ufsc.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4d3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b366]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305f1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430aa0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43057d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b33d]

    ??:? runModuleUnitTests [0x42c2a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288b8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1y3c7u1i.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1y3c7u1i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong result[] = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq3qxfxu9.d(9): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] result`

    /tmp/tmpq3qxfxu9.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3qxfxu9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tlong last = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t\
    {\n\t\tif (l[i] != last) \n\t\t{\n\t\t\tlast = l[i];\n\t\t\tresult[i] = last;\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3trbawoh.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x428325]

    ??:? void tmp3trbawoh.__unittest_L21_C1() [0x427ff8]

    ??:? void tmp3trbawoh.__modtest() [0x4280a8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c403]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b296]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430521]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309d0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304ad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b26d]

    ??:? runModuleUnitTests [0x42c1d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tfor (int j\
    \ = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\
    \tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t\
    }\n\t}\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t\
    }\n\treturn result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, int start, int end) \n{\n\tlong[] result = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i++) \n\t{\n\t\tfor (int j = i + 1;\
    \ j < end; j++) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\tlong temp =\
    \ l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ (int i = start; i < end; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\treturn result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step) \n{\n\tlong[] result = new long[end - start];\n\
    \tfor (int i = start; i < end; i += step) \n\t{\n\t\tfor (int j = i + 1; j < end;\
    \ j += step) \n\t\t{\n\t\t\tif (l[i] < l[j]) \n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\
    \t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i\
    \ = start; i < end; i += step) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\treturn result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp) \n{\n\tlong[] result = new long[end\
    \ - start];\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tfor (int j =\
    \ i + 1; j < end; j += step) \n\t\t{\n\t\t\tif (cmp(l[i], l[j]) < 0) \n\t\t\t\
    {\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\
    \t}\n\t\t}\n\t}\n\tfor (int i = start; i < end; i += step) \n\t{\n\t\tresult[i]\
    \ = l[i];\n\t}\n\treturn result;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int start, int end, int step, long cmp,\
    \ long ord) \n{\n\tlong[] result = new long[end - start];\n\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgzir1za3.d(111): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzir1za3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] result = new\
    \ long[l.length];\n    std.sort(l);\n    for(int i = 0; i < l.length; i++)\n \
    \       result[i] = l[i];\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n \
    \   long[] result = new long[end - start];\n    std.sort(l, start, end);\n   \
    \ for(int i = start; i < end; i++)\n        result[i - start] = l[i];\n    return\
    \ result;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n    long[] result = new\
    \ long[end - start];\n    std.sort(l, start, end, step);\n    for(int i = start;\
    \ i < end; i += step)\n        result[i - start] = l[i];\n    return result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp) \n{\n    long[] result = new long[end\
    \ - start];\n    std.sort(l, start, end, step, cmp);\n    for(int i = start; i\
    \ < end; i += step)\n        result[i - start] = l[i];\n    return result;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord) \n{\n    long[] result\
    \ = new long[end - start];\n    std.sort(l, start, end, step, cmp, ord);\n   \
    \ for(int i = start; i < end; i += step)\n        result[i - start] = l[i];\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique(long[] l, int start, int end, int step, long cmp, long ord,\
    \ int step2) \n{\n    long[] result = new long[end - start];\n    std.sort(l,\
    \ start, end, step, cmp, ord, step2);\n    for(int i = start; i < end; i += step)\n\
    \        result[i - start] = l[i];\n    return result;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, int start, int end,\
    \ int step, long cmp, long ord, int step2, int step3) \n{\n    long[] result =\
    \ new long[end - start];\n    std.sort(l, start, end, step, cmp, ord, step2, step3);\n\
    \    for(int i = start; i < end; i += step)\n        result[i - start] = l[i];\n\
    \    return result;\n}\n/*\nReturn sorted unique elements in a list\n        \n\
    */\nlong[] unique\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwcl1b05.d(92): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwcl1b05.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint j = 0;\n\
    \t\tfor(; j < i; j++) \n\t\t{\n\t\t\tif(l[j] == l[i]) \n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tresult[i] = l[j];\n\t}\n\treturn result;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwnuv9k5s.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmpwnuv9k5s.__unittest_L24_C1() [0x428018]

    ??:? void tmpwnuv9k5s.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4e9ale2u.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4e9ale2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x) \n{\n\tlong [] u = new long[l.length];\n\tfor (int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] == x) \n\t\t{\n\t\t\tcontinue;\n\
    \t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long x, long\
    \ y) \n{\n\tlong [] u = new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\
    \ \n\t{\n\t\tif (l[i] == x || l[i] == y) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\t\
    u[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique\
    \ elements in a list\n        \n*/\nlong[] unique(long[] l, long x, long y, long\
    \ z) \n{\n\tlong [] u = new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\
    \ \n\t{\n\t\tif (l[i] == x || l[i] == y || l[i] == z) \n\t\t{\n\t\t\tcontinue;\n\
    \t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long x, long\
    \ y, long z, long w) \n{\n\tlong [] u = new long[l.length];\n\tfor (int i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tif (l[i] == x || l[i] == y || l[i] == z || l[i]\
    \ == w) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long x, long y, long z, long w, long x) \n{\n\tlong [] u =\
    \ new long[l.length];\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ == x || l[i] == y || l[i] == z || l[i] == w || l[i] == x) \n\t\t{\n\t\t\tcontinue;\n\
    \t\t}\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyyiqwqbj.d(112): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyiqwqbj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tlong prev = 0;\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\
    \t\tif(l[i] != prev)\n\t\t{\n\t\t\tresult[i] = l[i];\n\t\t\tprev = l[i];\n\t\t\
    }\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3xklpuix.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x42834d]

    ??:? void tmp3xklpuix.__unittest_L21_C1() [0x428020]

    ??:? void tmp3xklpuix.__modtest() [0x4280d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c42b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430549]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b295]

    ??:? runModuleUnitTests [0x42c201]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428810]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        u[i] = l[i];\n    }\n\
    \    Arrays.sort(u);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcqtfon_a.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcqtfon_a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tlong uidx = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tlong v = l[i];\n\
    \t\twhile (uidx < u.length && u[uidx] == v) \n\t\t{\n\t\t\tuidx++;\n\t\t}\n\t\t\
    if (uidx == u.length) \n\t\t{\n\t\t\tu[uidx] = v;\n\t\t}\n\t\telse \n\t\t{\n\t\
    \t\tu[uidx] = v;\n\t\t\tfor (int j = i+1; j < l.length; j++) \n\t\t\t{\n\t\t\t\
    \tif (l[j] == v) \n\t\t\t\t{\n\t\t\t\t\tfor (int k = j; k < u.length; k++) \n\t\
    \t\t\t\t{\n\t\t\t\t\t\tu[k] = u[k+1];\n\t\t\t\t\t}\n\t\t\t\t\tu[uidx] = v;\n\t\
    \t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp9l7mod6t.d(31): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428506]

    ??:? long[] tmp9l7mod6t.unique(long[]) [0x427fd7]

    ??:? void tmp9l7mod6t.__unittest_L41_C1() [0x4280ad]

    ??:? void tmp9l7mod6t.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c533]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430651]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b00]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b39d]

    ??:? runModuleUnitTests [0x42c309]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxv5dp70_.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv5dp70_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n    long[] u;\n    u =\
    \ new long[l.length];\n    for(int i = 0; i < l.length; i++) \n    {\n       \
    \ u[i] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int n) \n{\n\
    \    long[] u;\n    u = new long[n];\n    for(int i = 0; i < n; i++) \n    {\n\
    \        u[i] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn\
    \ sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l, int\
    \ n, int m) \n{\n    long[] u;\n    u = new long[m];\n    for(int i = 0; i < m;\
    \ i++) \n    {\n        u[i] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int n, int m, int n) \n{\n    long[] u;\n    u = new long[n];\n    for(int\
    \ i = 0; i < n; i++) \n    {\n        u[i] = l[i];\n    }\n    Arrays.sort(u);\n\
    \    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\n\
    long[] unique(long[] l, int n, int m, int n, int m) \n{\n    long[] u;\n    u\
    \ = new long[m];\n    for(int i = 0; i < m; i++) \n    {\n        u[i] = l[i];\n\
    \    }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int n, int m, int n, int m,\
    \ int n) \n{\n    long[] u;\n    u = new long[n];\n    for(int i = 0; i < n; i++)\
    \ \n    {\n        u[i] = l[i];\n    }\n    Arrays.sort(u);\n    return u;\n}\n\
    /*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int n, int m, int n, int m, int m, int n) \n{\n    long[] u;\n    u = new\
    \ long[m];\n    for(int i = 0; i < m; i++) \n    {\n        u[i] = l[i];\n   \
    \ }\n    Arrays.sort(u);\n    return u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int n, int m, int n, int m,\
    \ int m, int n, int m) \n{\n    long[] u;\n    u = new long[n\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptb940j67.d(116): Error: found `unittest` when expecting `]`

    /tmp/tmptb940j67.d(117): Error: found `{` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptb940j67.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end) \n{\n\tlong[] u = new long[end - start];\n\
    \tfor(int i = start; i < end; i++) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step) \n{\n\tlong[] u = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tu[i - start]\
    \ = l[i];\n\t}\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step,\
    \ long cmp) \n{\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i <\
    \ end; i += step) \n\t{\n\t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int start, int end, int step, long cmp, long ord) \n{\n\tlong[]\
    \ u = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\
    \t\tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord);\n\treturn u;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, int step, long cmp, long ord, int size) \n{\n\tlong[] u\
    \ = new long[end - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\
    \tu[i - start] = l[i];\n\t}\n\tArrays.sort(u, cmp, ord, size);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp, long ord, int size, int step2) \n\
    {\n\tlong[] u = new long[end - start];\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tu[i - start] = l[i];\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptjzlaoj9.d(98): Error: found `unittest` instead of statement

    /tmp/tmptjzlaoj9.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjzlaoj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\tu = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\
    \t}\n\tArrays.sort(u);\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvxzjowim.d(15): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvxzjowim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong [] u = new long[l.length];\n\
    \tlong [] u2 = new long[l.length];\n\tint i = 0;\n\tfor (int j = 0; j < l.length;\
    \ j++) \n\t{\n\t\tu[i] = l[j];\n\t\ti++;\n\t}\n\tfor (int j = 0; j < l.length;\
    \ j++) \n\t{\n\t\tfor (int k = 0; k < l.length; k++) \n\t\t{\n\t\t\tif (u[j] ==\
    \ u[k]) \n\t\t\t{\n\t\t\t\tu2[j] = u[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn u2;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long [] u) \n{\n\tlong [] u2 = new long[l.length];\n\tint i\
    \ = 0;\n\tfor (int j = 0; j < l.length; j++) \n\t{\n\t\tu2[i] = l[j];\n\t\ti++;\n\
    \t}\n\tfor (int j = 0; j < l.length; j++) \n\t{\n\t\tfor (int k = 0; k < l.length;\
    \ k++) \n\t\t{\n\t\t\tif (u[j] == u[k]) \n\t\t\t{\n\t\t\t\tu2[j] = u[k];\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u2;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long [] u, long [] u2) \n{\n\
    \tlong [] u3 = new long[l.length];\n\tint i = 0;\n\tfor (int j = 0; j < l.length;\
    \ j++) \n\t{\n\t\tu3[i] = l[j];\n\t\ti++;\n\t}\n\tfor (int j = 0; j < l.length;\
    \ j++) \n\t{\n\t\tfor (int k = 0; k < l.length; k++) \n\t\t{\n\t\t\tif (u[j] ==\
    \ u[k]) \n\t\t\t{\n\t\t\t\tu3[j] = u[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn u3;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long [] u, long [] u2, long [] u3) \n{\n\tlong [] u4 = new\
    \ long[l.length];\n\tint i = 0;\n\tfor (int j = 0; j < l.length; j++) \n\t{\n\t\
    \tu4[i] = l[j];\n\t\ti++;\n\t}\n\tfor (int j = 0; j < l.length; j++) \n\t{\n\t\
    \tfor (int k = 0; k < l.length; k++) \n\t\t{\n\t\t\tif (u[j] == u[k]) \n\t\t\t\
    {\n\t\t\t\tu4[j] = u[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn u4;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long [] u, long [] \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptjaqmupo.d(113): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjaqmupo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint j = 0;\n\
    \t\tfor(; j < i; j++) \n\t\t{\n\t\t\tif(l[j] == l[i]) \n\t\t\t{\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tresult[i] = l[j];\n\t}\n\treturn result;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwnuv9k5s.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmpwnuv9k5s.__unittest_L24_C1() [0x428018]

    ??:? void tmpwnuv9k5s.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c423]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430541]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304cd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b28d]

    ??:? runModuleUnitTests [0x42c1f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tresult[i] = l[i];\n\
    \tArrays.sort(result);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph04swrhe.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph04swrhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, int n) \n{\n\tlong[] u = new long[n];\n\tfor (int i = 0; i\
    \ < n; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, long n) \n\
    {\n\tlong[] u = new long[n];\n\tfor (int i = 0; i < n; i++)\n\t\tu[i] = l[i];\n\
    \tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int n, long m) \n{\n\tlong[] u = new long[n];\n\
    \tfor (int i = 0; i < n; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, long n, long m) \n{\n\tlong[] u = new long[n];\n\tfor (int i = 0; i < n;\
    \ i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in a list\n        \n*/\nlong[] unique(long[] l, int n, long\
    \ m, long n) \n{\n\tlong[] u = new long[n];\n\tfor (int i = 0; i < n; i++)\n\t\
    \tu[i] = l[i];\n\tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, long n, long m, long n) \n\
    {\n\tlong[] u = new long[n];\n\tfor (int i = 0; i < n; i++)\n\t\tu[i] = l[i];\n\
    \tArrays.sort(u);\n\treturn u;\n}\n/*\nReturn sorted unique elements in a list\n\
    \        \n*/\nlong[] unique(long[] l, int n, long m, long n, long m) \n{\n\t\
    long[] u = new long[n];\n\tfor (int i = 0; i < n; i++)\n\t\tu[i] = l[i];\n\tArrays.sort(u);\n\
    \treturn u;\n}\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[]\
    \ unique(long[] l, long n, long m, long n, long m) \n{\n\tlong[] u = new long[n];\n\
    \tfor (int i = 0; i < n; i++)\n\t\tu[i] = l\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvh8o5cus.d(108): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpvh8o5cus.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvh8o5cus.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new long[l.length];\n\
    \tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tu[i] = l[i];\n\t}\n\tArrays.sort(u);\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe8zrfl2b.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8zrfl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164414
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result = new\
    \ long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tfor(int j =\
    \ i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif(l[i] == l[j]) \n\t\t\t{\n\t\t\t\t\
    long temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tresult[i] = l[i];\n\t}\n\t\
    Arrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements in\
    \ a list\n        \n*/\nlong[] unique(long[] l, int start, int end) \n{\n\tlong[]\
    \ result = new long[end - start];\n\tfor(int i = start; i < end; i++) \n\t{\n\t\
    \tfor(int j = i + 1; j < end; j++) \n\t\t{\n\t\t\tif(l[i] == l[j]) \n\t\t\t{\n\
    \t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t\
    }\n\t\t}\n\t}\n\tfor(int i = start; i < end; i++) \n\t{\n\t\tresult[i] = l[i];\n\
    \t}\n\tArrays.sort(result);\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n        \n*/\nlong[] unique(long[] l, int start, int end, int step)\
    \ \n{\n\tlong[] result = new long[end - start];\n\tfor(int i = start; i < end;\
    \ i += step) \n\t{\n\t\tfor(int j = i + 1; j < end; j += step) \n\t\t{\n\t\t\t\
    if(l[i] == l[j]) \n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\
    \t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; i += step)\
    \ \n\t{\n\t\tresult[i] = l[i];\n\t}\n\tArrays.sort(result);\n\treturn result;\n\
    }\n/*\nReturn sorted unique elements in a list\n        \n*/\nlong[] unique(long[]\
    \ l, int start, int end, int step, long cmp) \n{\n\tlong[] result = new long[end\
    \ - start];\n\tfor(int i = start; i < end; i += step) \n\t{\n\t\tfor(int j = i\
    \ + 1; j < end; j += step) \n\t\t{\n\t\t\tif(l[i] == l[j] && cmp(l[i], l[j]) ==\
    \ 0) \n\t\t\t{\n\t\t\t\tlong temp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j]\
    \ = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = start; i < end; i += step) \n\t\
    {\n\t\tresult[i] = l[i];\n\t}\n\tArrays.sort(result);\n\treturn result;\n}\n/*\n\
    Return sorted unique elements in a list\n        \n*/\nlong[] unique(long[] l,\
    \ int start, int end, \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpupqmq8pw.d(112): Error: basic type expected, not `unittest`

    /tmp/tmpupqmq8pw.d(112): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupqmq8pw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164415

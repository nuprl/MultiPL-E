{
  "language": "d",
  "name": "HumanEval_155_even_odd_count",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiu_7dtma.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpiu_7dtma.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu_7dtma.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpz_axdlx8.d(25): Error: multiple ! arguments are not allowed\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz_axdlx8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num /= 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long)(even, odd);\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqz12mpfv.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqz12mpfv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_8rh59nd.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_8rh59nd.d(25): Error: found `,` instead of statement\n/tmp/tmp_8rh59nd.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8rh59nd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplxh3nd0j.d(23): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmplxh3nd0j.d(23): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplxh3nd0j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6gihi726.d(26): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmp6gihi726.d(26): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6gihi726.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven = even * 10 + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjrx8ai8g.d(19): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpjrx8ai8g.d(19): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjrx8ai8g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven = even * 10 + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpah8d5ztc.d(19): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpah8d5ztc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmf5hk62g.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpmf5hk62g.d(25): Error: found `,` instead of statement\n/tmp/tmpmf5hk62g.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmf5hk62g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx1jav4l7.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpx1jav4l7.d(28): Error: found `,` instead of statement\n/tmp/tmpx1jav4l7.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx1jav4l7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp212wwtrf.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp212wwtrf.d(25): Error: found `,` instead of statement\n/tmp/tmp212wwtrf.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp212wwtrf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1lxhy4lb.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1lxhy4lb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = 0; i <= num; i++)\n    {\n        if(num % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpemvqddio.d(23): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpemvqddio.d(23): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpemvqddio.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgg3vpplb.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpgg3vpplb.d(26): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgg3vpplb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long digit = 0;\n    long temp = 0;\n    long count = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0vvnhy0z.d(99): Error: no identifier for declarator `long`\n/tmp/tmp0vvnhy0z.d(99): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vvnhy0z.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6pfcrlcn.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp6pfcrlcn.d(25): Error: found `,` instead of statement\n/tmp/tmp6pfcrlcn.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pfcrlcn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpecwf82zs.d(29): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpecwf82zs.d(29): Error: found `,` instead of statement\n/tmp/tmpecwf82zs.d(31): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpecwf82zs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of digits in it.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpywi7dtwd.d(23): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpywi7dtwd.d(23): Error: found `,` instead of statement\n/tmp/tmpywi7dtwd.d(25): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpywi7dtwd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_zatab_c.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_zatab_c.d(25): Error: found `,` instead of statement\n/tmp/tmp_zatab_c.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_zatab_c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_zatab_c.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_zatab_c.d(25): Error: found `,` instead of statement\n/tmp/tmp_zatab_c.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_zatab_c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd4l8sj0g.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpd4l8sj0g.d(21): Error: found `,` instead of statement\n/tmp/tmpd4l8sj0g.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4l8sj0g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpde8xtgkr.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpde8xtgkr.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpde8xtgkr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpimfhl2eo.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpimfhl2eo.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimfhl2eo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpknwd2rvy.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpknwd2rvy.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpknwd2rvy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbq3sbi6u.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpbq3sbi6u.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq3sbi6u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr2ievw__.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr2ievw__.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ievw__.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmf5hk62g.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpmf5hk62g.d(25): Error: found `,` instead of statement\n/tmp/tmpmf5hk62g.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmf5hk62g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num /= 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpplczotw0.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpplczotw0.d(25): Error: found `,` instead of statement\n/tmp/tmpplczotw0.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpplczotw0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        even = even * 10 + digit;\n        odd = odd * 10 + digit;\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpctqf4dlb.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpctqf4dlb.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpctqf4dlb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdk2mhah4.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpdk2mhah4.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdk2mhah4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq4ndijxi.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpq4ndijxi.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4ndijxi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpt4_ovqxd.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpt4_ovqxd.d(27): Error: found `,` instead of statement\n/tmp/tmpt4_ovqxd.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4_ovqxd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgg3vpplb.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpgg3vpplb.d(26): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgg3vpplb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp81k3ibbg.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp81k3ibbg.d(25): Error: found `,` instead of statement\n/tmp/tmp81k3ibbg.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81k3ibbg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit;\n    long remainder;\n    long remainder_count;\n    long remainder_count_temp;\n    long remainder_count_temp_temp;\n    long remainder_count_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp;\n    long remainder_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjnef_z1y.d(43): Error: semicolon expected, not `unittest`\n/tmp/tmpjnef_z1y.d(43): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjnef_z1y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyh4spep_.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpyh4spep_.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyh4spep_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpvcssr6ph.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmpvcssr6ph.__unittest_L23_C1() [0x428085]\n??:? void tmpvcssr6ph.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpaywr6sou.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpaywr6sou.d(21): Error: found `,` instead of statement\n/tmp/tmpaywr6sou.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaywr6sou.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpde8xtgkr.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpde8xtgkr.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpde8xtgkr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr2ievw__.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr2ievw__.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ievw__.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0nuzf5mx.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp0nuzf5mx.d(21): Error: found `,` instead of statement\n/tmp/tmp0nuzf5mx.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nuzf5mx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdk2mhah4.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpdk2mhah4.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdk2mhah4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpg3gxu8kn.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpg3gxu8kn.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3gxu8kn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpde8xtgkr.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpde8xtgkr.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpde8xtgkr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk2_jg1an.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmpk2_jg1an.__unittest_L27_C1() [0x428085]\n??:? void tmpk2_jg1an.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong temp = 0;\n\tlong count = 0;\n\twhile(num > 0)\n\t{\n\t\ttemp = num % 10;\n\t\teven = even + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t\tcount = count + 1;\n\t}\n\treturn Tuple!(long, long) even, Tuple!(long, long) odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjop___22.d(23): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpjop___22.d(23): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjop___22.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long i = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpey2gj95v.d(29): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpey2gj95v.d(29): Error: found `,` instead of statement\n/tmp/tmpey2gj95v.d(31): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpey2gj95v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr2ievw__.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr2ievw__.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ievw__.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_8rh59nd.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_8rh59nd.d(25): Error: found `,` instead of statement\n/tmp/tmp_8rh59nd.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8rh59nd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long temp = num % 10;\n        even = even + temp;\n        odd = odd + temp;\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, Tuple!(long, long) odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp0cd2saio.d(18): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp0cd2saio.d(18): Error: found `,` instead of statement\n/tmp/tmp0cd2saio.d(20): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0cd2saio.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplp34ltr3.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmplp34ltr3.d(26): Error: found `,` instead of statement\n/tmp/tmplp34ltr3.d(28): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplp34ltr3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num /= 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a floating point number. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_g_q2o3u.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_g_q2o3u.d(25): Error: found `,` instead of statement\n/tmp/tmp_g_q2o3u.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_g_q2o3u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3mt8ld_j.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp3mt8ld_j.d(26): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mt8ld_j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8mz27gse.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp8mz27gse.__unittest_L27_C1() [0x428085]\n??:? void tmp8mz27gse.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3gxpdklp.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp3gxpdklp.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3gxpdklp.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num /= 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo4q1qtuf.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpo4q1qtuf.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4q1qtuf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpdk2mhah4.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpdk2mhah4.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdk2mhah4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_r3g1k5d.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_r3g1k5d.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_r3g1k5d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = num; i > 0; i /= 10) {\n        even = even + (i % 2 == 0);\n        odd = odd + (i % 2 != 0);\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn3a9xun_.d(16): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpn3a9xun_.d(16): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn3a9xun_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8mz27gse.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp8mz27gse.__unittest_L27_C1() [0x428085]\n??:? void tmp8mz27gse.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit;\n    long remainder;\n    long quotient;\n    long temp;\n    \n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num % 10;\n        quotient = num / 10;\n        temp = remainder;\n        \n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = quotient;\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7sa07q1m.d(36): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp7sa07q1m.d(36): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7sa07q1m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n        long digit = temp % 10;\n        even = even * 10 + digit;\n        temp = temp / 10;\n    }\n    temp = num;\n    while(temp > 0)\n    {\n        long digit = temp % 10;\n        odd = odd * 10 + digit;\n        temp = temp / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcmpha_1l.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpcmpha_1l.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmpha_1l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk5punfi8.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpk5punfi8.d(28): Error: found `,` instead of statement\n/tmp/tmpk5punfi8.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk5punfi8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphyo5ljzx.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmphyo5ljzx.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphyo5ljzx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit;\n    for(digit = num; digit >= 0; digit = num / 10)\n    {\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_qh5c4ht.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_qh5c4ht.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_qh5c4ht.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6erv4fv0.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp6erv4fv0.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6erv4fv0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tnum = num / 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyhl3fzjv.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpyhl3fzjv.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhl3fzjv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven = even + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsv6mgyyg.d(20): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmpsv6mgyyg.d(20): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsv6mgyyg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long temp = 0;\n    long count = 0;\n    long i = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num % 10;\n        temp = remainder;\n        temp = temp * 10 + digit;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3uxl5p96.d(34): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp3uxl5p96.d(34): Error: found `,` instead of statement\n/tmp/tmp3uxl5p96.d(36): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3uxl5p96.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpknwd2rvy.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpknwd2rvy.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpknwd2rvy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4jn8il0n.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp4jn8il0n.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4jn8il0n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even += digit;\n        } else {\n            odd += digit;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp43hmk2dl.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp43hmk2dl.d(21): Error: found `,` instead of statement\n/tmp/tmp43hmk2dl.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp43hmk2dl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long i = 0;\n    while(num > 0)\n    {\n        i = num % 10;\n        num = num / 10;\n        if(i%2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr30quhiy.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr30quhiy.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr30quhiy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbq3sbi6u.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpbq3sbi6u.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq3sbi6u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppvu5z8dv.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmppvu5z8dv.d(25): Error: found `,` instead of statement\n/tmp/tmppvu5z8dv.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvu5z8dv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n        long digit = temp % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        temp = temp / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp619lplx9.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp619lplx9.d(27): Error: found `,` instead of statement\n/tmp/tmp619lplx9.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp619lplx9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp != 0)\n    {\n        long digit = temp % 10;\n        temp = temp / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzgpdp3i7.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpzgpdp3i7.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzgpdp3i7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long)((even, odd));\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpps7phkmx.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpps7phkmx.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong temp = num;\n\twhile (temp != 0)\n\t{\n\t\tlong digit = temp % 10;\n\t\tif (digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\ttemp = temp / 10;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpksibgdff.d(27): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpksibgdff.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n        even = even + temp % 10;\n        temp = temp / 10;\n    }\n    temp = num;\n    while(temp > 0)\n    {\n        odd = odd + temp % 10;\n        temp = temp / 10;\n    }\n    return Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvtul93ll.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvtul93ll.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6pfcrlcn.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp6pfcrlcn.d(25): Error: found `,` instead of statement\n/tmp/tmp6pfcrlcn.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pfcrlcn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx1jav4l7.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpx1jav4l7.d(28): Error: found `,` instead of statement\n/tmp/tmpx1jav4l7.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx1jav4l7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyh4spep_.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpyh4spep_.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyh4spep_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqj78wr14.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpqj78wr14.d(21): Error: found `,` instead of statement\n/tmp/tmpqj78wr14.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqj78wr14.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpimfhl2eo.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpimfhl2eo.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimfhl2eo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong temp = num % 10;\n\t\teven = even + temp;\n\t\todd = odd + temp;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even, Tuple!(long, long) odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptxv0556w.d(18): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmptxv0556w.d(18): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptxv0556w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpyipo9f68.d(22): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpyipo9f68.d(22): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyipo9f68.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tnum = num / 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2shn9r6e.d(26): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmp2shn9r6e.d(28): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2shn9r6e.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit;\n    long remainder;\n    \n    for(digit = num; digit != 0; digit /= 10)\n    {\n        remainder = digit % 10;\n        \n        if(remainder % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2cnug290.d(30): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp2cnug290.d(30): Error: found `,` instead of statement\n/tmp/tmp2cnug290.d(32): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2cnug290.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp45cadntd.d(26): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmp45cadntd.d(28): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp45cadntd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpry1ko__1.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpry1ko__1.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpry1ko__1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        long digit = i % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpe1e9gda_.d(20): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpe1e9gda_.d(20): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe1e9gda_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbq3sbi6u.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpbq3sbi6u.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq3sbi6u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = 0; i < num; i+=2)\n    {\n        even++;\n    }\n    for(long i = num - 1; i >= 0; i-=2)\n    {\n        odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiowuk4hz.d(20): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpiowuk4hz.d(20): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiowuk4hz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo2tqzcm8.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpo2tqzcm8.d(25): Error: found `,` instead of statement\n/tmp/tmpo2tqzcm8.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2tqzcm8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1lxhy4lb.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1lxhy4lb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong digit;\n\tlong remainder;\n\t\n\twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\tremainder = num / 10;\n\t\t\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t\t\n\t\tnum = remainder;\n\t}\n\t\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5epjjkgo.d(33): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5epjjkgo.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3mt8ld_j.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp3mt8ld_j.d(26): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3mt8ld_j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long temp = num % 10;\n        if(temp % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_mpfql6m.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_mpfql6m.d(21): Error: found `,` instead of statement\n/tmp/tmp_mpfql6m.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_mpfql6m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd, count;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmz2gonnv.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpmz2gonnv.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmz2gonnv.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf4_vh27k.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpf4_vh27k.d(26): Error: found `,` instead of statement\n/tmp/tmpf4_vh27k.d(28): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4_vh27k.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    long remainder = 0;\n    long temp = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        temp = digit;\n        while(temp > 0)\n        {\n            remainder = temp % 10;\n            if(remainder % 2 == 0)\n            {\n                even++;\n            }\n            else\n            {\n                odd++;\n            }\n            temp = temp / 10;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy09g3exb.d(38): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy09g3exb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpecwf82zs.d(29): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpecwf82zs.d(29): Error: found `,` instead of statement\n/tmp/tmpecwf82zs.d(31): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpecwf82zs.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo2tqzcm8.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpo2tqzcm8.d(25): Error: found `,` instead of statement\n/tmp/tmpo2tqzcm8.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo2tqzcm8.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr28nwmg7.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr28nwmg7.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr28nwmg7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa0nx9umg.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpa0nx9umg.d(25): Error: found `,` instead of statement\n/tmp/tmpa0nx9umg.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa0nx9umg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr2ievw__.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr2ievw__.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ievw__.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long temp = 0;\n    long count = 0;\n    \n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num % 10;\n        temp = remainder;\n        \n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        \n        num = num / 10;\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpeu8jpned.d(36): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpeu8jpned.d(36): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeu8jpned.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6pfcrlcn.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp6pfcrlcn.d(25): Error: found `,` instead of statement\n/tmp/tmp6pfcrlcn.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6pfcrlcn.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp81k3ibbg.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp81k3ibbg.d(25): Error: found `,` instead of statement\n/tmp/tmp81k3ibbg.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp81k3ibbg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplxh3nd0j.d(23): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmplxh3nd0j.d(23): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplxh3nd0j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a floating point number. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqfohside.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpqfohside.d(25): Error: found `,` instead of statement\n/tmp/tmpqfohside.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqfohside.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmemt_udd.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpmemt_udd.d(28): Error: found `,` instead of statement\n/tmp/tmpmemt_udd.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmemt_udd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr2ievw__.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr2ievw__.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr2ievw__.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbq3sbi6u.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpbq3sbi6u.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq3sbi6u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    while(num > 0)\n    {\n        temp = num % 10;\n        even = even + temp;\n        odd = odd + temp;\n        num = num / 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3wyrxfn7.d(21): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmp3wyrxfn7.d(21): Error: found `,` instead of statement\n/tmp/tmp3wyrxfn7.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3wyrxfn7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\t\n\tlong even = 0, odd = 0;\n\t\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\t\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven += temp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += temp;\n\t\t}\n\t\t\n\t\tnum /= 10;\n\t}\n\t\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4g3xu64l.d(30): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4g3xu64l.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa5p1orou.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpa5p1orou.d(25): Error: found `,` instead of statement\n/tmp/tmpa5p1orou.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa5p1orou.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw65ny7vu.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpw65ny7vu.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw65ny7vu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8mz27gse.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp8mz27gse.__unittest_L27_C1() [0x428085]\n??:? void tmp8mz27gse.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphd6cmybz.d(29): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmphd6cmybz.d(29): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphd6cmybz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmprro26pqy.d(22): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmprro26pqy.d(22): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprro26pqy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw65ny7vu.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpw65ny7vu.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw65ny7vu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    while(num > 0)\n    {\n        temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpe2xqm0pt.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpe2xqm0pt.d(27): Error: found `,` instead of statement\n/tmp/tmpe2xqm0pt.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe2xqm0pt.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0) {\n        long digit = num % 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx8ud85m7.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpx8ud85m7.d(21): Error: found `,` instead of statement\n/tmp/tmpx8ud85m7.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx8ud85m7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8mz27gse.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp8mz27gse.__unittest_L27_C1() [0x428085]\n??:? void tmp8mz27gse.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa5p1orou.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpa5p1orou.d(25): Error: found `,` instead of statement\n/tmp/tmpa5p1orou.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa5p1orou.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long i = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        i++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5rkbw49m.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp5rkbw49m.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5rkbw49m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8kg0g3q7.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp8kg0g3q7.d(25): Error: found `,` instead of statement\n/tmp/tmp8kg0g3q7.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8kg0g3q7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp21w3ry66.d(24): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp21w3ry66.d(24): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21w3ry66.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpd4l8sj0g.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpd4l8sj0g.d(21): Error: found `,` instead of statement\n/tmp/tmpd4l8sj0g.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd4l8sj0g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpinban5qu.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpinban5qu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num % 10;\n        even = even * 10 + digit;\n        odd = odd * 10 + remainder;\n        num = num / 10;\n    }\n    count = count + 1;\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptqy2_1t2.d(25): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmptqy2_1t2.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptqy2_1t2.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp21w3ry66.d(24): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp21w3ry66.d(24): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21w3ry66.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n    \n    while(num > 0)\n    {\n        temp = num % 10;\n        num = num / 10;\n        \n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        \n        count++;\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvqm9nao9.d(33): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpvqm9nao9.d(33): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqm9nao9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpbq3sbi6u.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpbq3sbi6u.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq3sbi6u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit;\n    \n    for(digit = num; digit > 0; digit /= 10)\n    {\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    \n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcjfcnmtk.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpcjfcnmtk.d(27): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcjfcnmtk.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long remainder = 0;\n    long count = 0;\n    \n    while(num > 0)\n    {\n        remainder = num % 10;\n        temp = even;\n        even = odd + (remainder % 2 == 0);\n        odd = temp;\n        num = num / 10;\n        count++;\n    }\n    \n    return Tuple!(long, long) tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpsupgpaou.d(27): Error: found `tuple` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsupgpaou.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1lflo1lz.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp1lflo1lz.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1lflo1lz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += digit;\n\t\t} else {\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiu_7dtma.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpiu_7dtma.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiu_7dtma.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr28nwmg7.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpr28nwmg7.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr28nwmg7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppakho4zr.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmppakho4zr.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppakho4zr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6wxjm29w.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp6wxjm29w.d(21): Error: found `,` instead of statement\n/tmp/tmp6wxjm29w.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wxjm29w.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        even = even * 10 + digit;\n        odd = odd * 10 + digit;\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpctqf4dlb.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpctqf4dlb.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpctqf4dlb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr16mds06.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr16mds06.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw65ny7vu.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpw65ny7vu.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw65ny7vu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptufo1jmq.d(29): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmptufo1jmq.d(29): Error: found `,` instead of statement\n/tmp/tmptufo1jmq.d(31): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptufo1jmq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpoer1nffl.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoer1nffl.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjmb1fjx1.d(28): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmpjmb1fjx1.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmb1fjx1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong temp = num % 10;\n\t\tnum = num / 10;\n\t\tif (temp % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpvoebqt9p.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpvoebqt9p.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvoebqt9p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long i = 0;\n    long j = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num / 10;\n        even = even + digit;\n        odd = odd + remainder;\n        num = num / 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1_jh265m.d(25): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmp1_jh265m.d(25): Error: found `,` instead of statement\n/tmp/tmp1_jh265m.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1_jh265m.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmppakho4zr.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmppakho4zr.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppakho4zr.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpr16mds06.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr16mds06.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long remainder = 0;\n    long count = 0;\n    long i = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        remainder = num / 10;\n        even = even + digit;\n        odd = odd + remainder;\n        num = num / 10;\n    }\n    count = even;\n    count = count + odd;\n    return Tuple!(long, long) count;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpx0c1y7g4.d(27): Error: found `count` when expecting `;` following `return` statement\n/tmp/tmpx0c1y7g4.d(27): Deprecation: use `{ }` for an empty statement, not `;`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx0c1y7g4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp8mz27gse.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp8mz27gse.__unittest_L27_C1() [0x428085]\n??:? void tmp8mz27gse.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long digit = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpecidwgaq.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpecidwgaq.d(28): Error: found `,` instead of statement\n/tmp/tmpecidwgaq.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpecidwgaq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpmf5hk62g.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpmf5hk62g.d(25): Error: found `,` instead of statement\n/tmp/tmpmf5hk62g.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmf5hk62g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\tnum = num / 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp4jn8il0n.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp4jn8il0n.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4jn8il0n.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp4h5za034.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmp4h5za034.__unittest_L28_C1() [0x428085]\n??:? void tmp4h5za034.__modtest() [0x4285e8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d4ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c3ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ce1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431190]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c391]\n??:? runModuleUnitTests [0x42d281]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fcc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long i = 0;\n    while(num > 0)\n    {\n        temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp5bpf0lx4.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp5bpf0lx4.d(28): Error: found `,` instead of statement\n/tmp/tmp5bpf0lx4.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5bpf0lx4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpkhg5tp0y.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpkhg5tp0y.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkhg5tp0y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqj78wr14.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpqj78wr14.d(21): Error: found `,` instead of statement\n/tmp/tmpqj78wr14.d(23): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqj78wr14.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_zatab_c.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp_zatab_c.d(25): Error: found `,` instead of statement\n/tmp/tmp_zatab_c.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_zatab_c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7t51vtus.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp7t51vtus.d(28): Error: found `,` instead of statement\n/tmp/tmp7t51vtus.d(30): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7t51vtus.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = 0;\n    long count = 0;\n    long digit = 0;\n    long remainder = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long temp81 = 0;\n    long temp82\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmphfraplwe.d(98): Error: semicolon expected, not `unittest`\n/tmp/tmphfraplwe.d(98): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphfraplwe.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num /= 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpo4q1qtuf.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpo4q1qtuf.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4q1qtuf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw65ny7vu.d(21): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpw65ny7vu.d(21): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw65ny7vu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tnum = num / 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp65gi6gzm.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp65gi6gzm.d(25): Error: found `,` instead of statement\n/tmp/tmp65gi6gzm.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp65gi6gzm.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tnum /= 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpltup0ucd.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltup0ucd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp78trbd0u.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmp78trbd0u.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp78trbd0u.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpi75135kh.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpi75135kh.d(25): Error: found `,` instead of statement\n/tmp/tmpi75135kh.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi75135kh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpa5p1orou.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpa5p1orou.d(25): Error: found `,` instead of statement\n/tmp/tmpa5p1orou.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa5p1orou.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    for(long i = num; i > 0; i /= 10)\n    {\n        if(i % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a floating point number. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf66ty6d6.d(24): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpf66ty6d6.d(24): Error: found `,` instead of statement\n/tmp/tmpf66ty6d6.d(26): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf66ty6d6.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1lxhy4lb.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1lxhy4lb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpt4_ovqxd.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpt4_ovqxd.d(27): Error: found `,` instead of statement\n/tmp/tmpt4_ovqxd.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4_ovqxd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    for(long i = 0; i <= num; i++)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a tuple of integers. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp979g0_hq.d(26): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp979g0_hq.d(26): Error: found `,` instead of statement\n/tmp/tmp979g0_hq.d(28): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp979g0_hq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpq4ndijxi.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpq4ndijxi.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq4ndijxi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n        long digit = temp % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpqnnmy_0q.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpqnnmy_0q.d(27): Error: found `,` instead of statement\n/tmp/tmpqnnmy_0q.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqnnmy_0q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num = num / 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a positive integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp99hmmtb1.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp99hmmtb1.d(25): Error: found `,` instead of statement\n/tmp/tmp99hmmtb1.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp99hmmtb1.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long temp = num;\n    while(temp > 0)\n    {\n        long digit = temp % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        temp = temp / 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp619lplx9.d(27): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp619lplx9.d(27): Error: found `,` instead of statement\n/tmp/tmp619lplx9.d(29): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp619lplx9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\teven = even + temp;\n\t\todd = odd + temp * 2;\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpm76ujz6q.d(19): Error: found `odd` when expecting `;` following `return` statement\n/tmp/tmpm76ujz6q.d(19): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm76ujz6q.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmptl1m6ewy.d(26): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptl1m6ewy.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += digit;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += digit;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even), Tuple!(long, long) even_odd_count(odd);\n}\n/*\nGiven a long integer. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpc3vjevd3.d(25): Error: found `even_odd_count` when expecting `;` following `return` statement\n/tmp/tmpc3vjevd3.d(25): Error: found `even_odd_count` when expecting `;` following statement\n/tmp/tmpc3vjevd3.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc3vjevd3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0;\n    long odd = 0;\n    long count = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        count++;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpzk3w947g.d(28): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpzk3w947g.d(28): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzk3w947g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong temp = num % 10;\n\t\tif(temp % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpy97uif74.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmpy97uif74.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy97uif74.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\t\t\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\t\n\t\tnum = num / 10;\n\t}\n\t\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp7dkjx06d.d(30): Error: found `even_odd_count` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7dkjx06d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long temp = num % 10;\n        num = num / 10;\n        if(temp % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n}\n/*\nGiven a string. return a tuple that has the number of even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp01fjvvqf.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp01fjvvqf.d(25): Error: found `,` instead of statement\n/tmp/tmp01fjvvqf.d(27): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp01fjvvqf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164220
    },
    {
      "exit_code": 1,
      "program": "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n            \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        long digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n        }\n        else\n        {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9f32m911.d(25): Error: found `even` when expecting `;` following `return` statement\n/tmp/tmp9f32m911.d(25): Error: found `,` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9f32m911.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164219
    }
  ]
}
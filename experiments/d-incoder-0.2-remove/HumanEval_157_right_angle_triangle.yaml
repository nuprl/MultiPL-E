name: HumanEval_157_right_angle_triangle
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Given the lengths of the\
  \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
  \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
  \ one angle is right angle or \n    90 degree.\n    Example:\n            \n*/\n\
  bool right_angle_triangle(long a, long b, long c) \n"
tests: "unittest\n{\n    alias candidate = right_angle_triangle;\n\n    assert(candidate(3L,\
  \ 4L, 5L) == true);\n    assert(candidate(1L, 2L, 3L) == false);\n    assert(candidate(10L,\
  \ 6L, 8L) == true);\n    assert(candidate(2L, 2L, 2L) == false);\n    assert(candidate(7L,\
  \ 24L, 25L) == true);\n    assert(candidate(10L, 5L, 7L) == false);\n    assert(candidate(5L,\
  \ 12L, 13L) == true);\n    assert(candidate(15L, 8L, 17L) == true);\n    assert(candidate(48L,\
  \ 55L, 73L) == true);\n    assert(candidate(1L, 1L, 1L) == false);\n    assert(candidate(2L,\
  \ 2L, 10L) == false);\n}\nvoid main(){}"
completions: ["{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n\
    \    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n\
    \    long acbcab = acbc * ab;\n    long acbcabc = acbcab * bc;\n    long acbcabcb\
    \ = acbcabcb * bc;\n    long acbcabcbc = acbcabcbc * bc;\n    long acbcabcbcb\
    \ = acbcabcbcb * bc;\n    long acbcabcbcbc = acbcabcbcbc * bc;\n    long acbcabcbcbcb\
    \ = acbcabcbcbcb * bc;\n    long acbcabcbcbcbc = acbcabcbcbcbc * bc;\n    long\
    \ acbcabcbcbcbcb = acbcabcbcbcbcb * bc;\n    long acbcabcbcbcbcbc = acbcabcbcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb\
    \ * bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * bc;\n    long\
    \ acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb\
    \ * bc;\n    long acbcabcbcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb", "{\n    long\
    \ side1 = abs(a) + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n\
    \    long side3 = abs(a) - abs(b) + abs(c);\n    \n    if(side1 == side2 && side2\
    \ == side3)\n    {\n        return true;\n    }\n    return false;\n}\n</code>\n\
    <|/ a tags=c++,algorithm |>\n<| c |>\nThis doesn't work. Try it with `right_angle_triangle(1,1,1)`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug, thank you for pointing it out. :)\n<|/ c |>\n\
    <| c |>\nThis doesn't work. Try it with `right_angle_triangle(1,1,1)`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the bug, thank you for pointing it out. :)\n<|/ c |>\n\
    <| a tags=c++,algorithm |>\n<code>", "{\n    long d = b * b - 4 * a * c;\n   \
    \ if (d < 0) return false;\n    long e = Math.sqrt(d);\n    long f = b + e * Math.sqrt(b\
    \ * b - 4 * a * c);\n    if (f < 0 || f > a) return false;\n    long g = a + e\
    \ * Math.sqrt(b * b - 4 * a * c);\n    if (g < 0 || g > b) return false;\n   \
    \ long h = a + e * Math.sqrt(b * b - 4 * a * c);\n    if (h < 0 || h > c) return\
    \ false;\n    return true;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = ab + bc;\n    long acb = ac + bc;\n    long abac = ab + ac;\n\
    \    long acab = ac + ab;\n    long abcab = ab + bc;\n    long acbca = ac + bc;\n\
    \    long abcabc = ab + ac;\n    long acbcab = ac + ab;\n    long abcabcd = ab\
    \ + bc;\n    long acbcabd = ac + ab;\n    long abcabcde = ab + ac;\n    long acbcabde\
    \ = ac + ab;\n    long abcabcdef = ab + ac;\n    long acbcabdef = ac + ab;\n \
    \   long abcabcdefg = ab + ac;\n    long acbcabdefg = ac + ab;\n    long abcabcdefgh\
    \ = ab + ac;\n    long acbcabdefgh = ac + ab;\n    long abcabcdefghi = ab + ac;\n\
    \    long acbcabdefghi = ac + ab;\n    long abcabcdefghij = ab + ac;\n    long\
    \ acbcabdefghij = ac + ab;\n    long abcabcdefghijk = ab + ac;\n    long acbcabdefghijk\
    \ = ac + ab;\n    long abcabcdefghijkl = ab + ac;\n    long acbcabdefghijkl =\
    \ ac + ab;\n    long abcabcdefghijkm = ab + ac;\n    long acbcabdefghijkm = ac\
    \ + ab;\n    long abcabcdefghijkn = ab + ac;\n    long acbcabdefghijkn = ac +\
    \ ab;\n    long abcabcdefghijkno = ab + ac;\n    long acbcabdefghijkno = ac +\
    \ ab;\n    long abcabcdefghijknop = ab + ac;\n    long acbcabdefghijknop = ac\
    \ + ab;\n    long abcabcdefghijknopq = ab + ac;\n    long acbcabdefghijknopq =\
    \ ac + ab;\n    long abcabcdefghijknopr = ab + ", "{\n    long side1 = abs(a)\
    \ + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n    long side3\
    \ = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n  \
    \  long side5 = abs(a) + abs(b) + abs(c) - 1;\n    long side6 = abs(a) - abs(b)\
    \ + abs(c) - 1;\n    long side7 = abs(a) - abs(b) - abs(c) - 1;\n    long side8\
    \ = abs(a) + abs(b) - abs(c) - 1;\n    long side9 = abs(a) + abs(b) + abs(c) +\
    \ 1;\n    long side10 = abs(a) - abs(b) + abs(c) + 1;\n    long side11 = abs(a)\
    \ - abs(b) - abs(c) + 1;\n    long side12 = abs(a) + abs(b) - abs(c) + 1;\n  \
    \  long side13 = abs(a) + abs(b) + abs(c) - 1;\n    long side14 = abs(a) - abs(b)\
    \ - abs(c) - 1;\n    long side15 = abs(a) - abs(b) + abs(c) - 1;\n    long side16\
    \ = abs(a) + abs(b) + abs(c) + 1;\n    long side17 = abs(a) - abs(b) + abs(c)\
    \ + 1;\n    long side18 = abs(a) - abs(b) - abs(c) + 1;\n    long side19 = abs(a)\
    \ + abs(b) + abs(c) + 1;\n    long side20 = abs(a) - abs(b) + abs(c) + 1;\n  \
    \  long side21 = abs(a) - abs(b) - abs(c) + 1;\n    long side22 = abs(a) + abs(b)\
    \ - abs(c) - 1;\n    long side23 = abs(a) + abs(b) + abs(c) + 1;\n    long side24\
    \ = abs(a) - abs(b) - abs(c) + 1;\n    long side25 = abs(a) - abs(b) + abs(c)\
    \ + 1;\n    long side26 = abs(a) + abs(b) + abs(c) - 1;\n    long side27 = abs(a)\
    \ + abs(b) - abs(c) - 1;\n    long side28 = abs(a) - abs(b) - abs(c) - 1;\n  \
    \  long side29 = abs(a) - abs(b) + abs(c) - 1;\n    long side30 = abs(a) + abs(b)\
    \ + abs(c) + 1;\n    long side31 = abs(a) - abs(b) + abs(c) + 1;\n    long side32\
    \ = abs(a) - abs(b) - abs(c) + 1;\n    long side33 = abs(a) + abs(b) + abs(c)\
    \ - 1;\n    long ", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc\
    \ = b - c;\n    long abc = ab + bc;\n    long acb = ac + bc;\n    long abbc =\
    \ ab + bc;\n    long acbc = ac + bc;\n    long abbcd = abbc + acbc;\n    long\
    \ acbcdab = acbcd - abbc;\n    long abbcdac = abbcd - acbc;\n    long acbcdabc\
    \ = acbcdab + abbc;\n    long abbcdacb = abbcdac + acb;\n    long acbcdabbc =\
    \ acbcdabb + abbc;\n    long abbcdacbd = abbcdacb + acb;\n    long acbcdabbcd\
    \ = acbcdabbc;\n    long abbcdacbcdab = abbcdacbcd - acbcdabbc;\n    long acbcdabbcdac\
    \ = acbcdabbcdab + abbcd;\n    long abbcdacbcdabc = abbcdacbcdab + acbcd;\n  \
    \  long acbcdabbcdacb = acbcdabbcdac + abbcd;\n    long abbcdacbcdabbc = abbcdacbcdabb\
    \ + acbcd;\n    long acbcdabbcdacbd = acbcdabbcdacb + abbcd;\n    long abbcdacbcdabbcd\
    \ = abbcdacbcdabbc + acbcd;\n    long acbcdabbcdacbcdab = acbcdabbcdacbcdab;\n\
    \    long abbcdacbcdabbcdac = abbcdacbcdabbcdac;\n    long acbcdabbcdacbcdabc\
    \ = abbcdacbcdabbcdac;\n    long abbcdacbcdabbcdacb = abbcdacbcdabbcdacb;\n  \
    \  long acbcdabbcdacbcdabbc = abbcdacbcdabbcdacb;\n    long abbcdacbcdabbcdacbd\
    \ = abbcdacbcdabbcdacbd;\n    long acbcdabbcdac", "{\n    long ab = a - b;\n \
    \   long ac = a - c;\n    long bc = b - c;\n    long acb = ac * bc;\n    long\
    \ abc = ab * bc;\n    long acbc = acb * bc;\n    long acbcab = acbc * ab;\n  \
    \  long acbcabc = acbcab * bc;\n    long acbcabcb = acbcabcb * bc;\n    long acbcabcbc\
    \ = acbcabcbc * bc;\n    long acbcabcbcb = acbcabcbcb * bc;\n    long acbcabcbcbc\
    \ = acbcabcbcbc * bc;\n    long acbcabcbcbcb = acbcabcbcbcb * bc;\n    long acbcabcbcbcbc\
    \ = acbcabcbcbcbc * bc;\n    long acbcabcbcbcbcb = acbcabcbcbcbcb * bc;\n    long\
    \ acbcabcbcbcbcb = acbcabcbcbcbcb * bc;\n    long acbcabcbcbcbcbc = acbcabcbcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbcbc = acbcabcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcb\
    \ = acbcabcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * bc;\n\
    \    long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb\
    \ * bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * bc;\n    long\
    \ acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcb", "{\n    long ab = a - b;\n    long ac\
    \ = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n    long acb = ac +\
    \ bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n    long abbcd = abbc\
    \ + acbc;\n    long acbcdab = acbc + abbc;\n    long abbcda = abbc + acb;\n  \
    \  long acbcdabc = acbc + abbc;\n    long abbcdaab = abbc + acb;\n    long acbcdabca\
    \ = acbc + abbc;\n    long abbcdaabcd = abbc + acb;\n    long acbcdabcbd = acbc\
    \ + abbc;\n    long abbcdaabcbc = abbc + acb;\n    long acbcdabcbcd = acbc + abbc;\n\
    \    long abbcdaabcbcd = abbc + acb;\n    long acbcdabcbcda = acbc + abbc;\n \
    \   long abbcdaabcbcdbc = abbc + acb;\n    long acbcdabcbcdbcd = acbc + abbc;\n\
    \    long abbcdaabcbcdbcde = abbc + acb;\n    long acbcdabcbcdbcdef = acbc + abbc;\n\
    \    long abbcdaabcbcdbcdefg = abbc + acb;\n    long acbcdabcbcdbcdefgh = acbc\
    \ + abbc;\n    long abbcdaabcbcdbcdefghi = abbc + acb;\n    long acbcdabcbcdbcdefghij\
    \ = acbc + abbc;\n    long abbcdaabcbcdbcdefghijk = abbc + acb;\n    long acbcdabcbcdbcdefghijkl\
    \ = acbc + abbc;\n    long abbcdaabcbcdbcdefghijkll = abbc + acb;\n    long acbcdabcbcdbcdefghijkllm\
    \ = acbc + abbc;\n    long abbcdaabcbcdbcdefghijkllmm = abbc + acb;\n    long\
    \ acbcdabcbcdbcdefghijkllmmn = acbc + ab", "{\n    long ab = abs(b - a);\n   \
    \ long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc = abs(ab + ac);\n\
    \    long bcd = abs(bc + ab);\n    long acd = abs(ac + ab);\n    long abcd = abs(abc\
    \ + bcd);\n    long abdc = abs(abc + acd);\n    long acdb = abs(acd + abc);\n\
    \    long abcc = abs(abcd + acdb);\n    long acbd = abs(acdb + abcc);\n    long\
    \ abdc = abs(abdc + acbd);\n    long acdb = abs(acbd + abdc);\n    long abcc =\
    \ abs(abcc + acdb);\n    long acbd = abs(acdb + abcc);\n    long abdc = abs(abdc\
    \ + acbd);\n    long acdb = abs(acbd + abdc);\n    long abcc = abs(abcc + acdb);\n\
    \    long acbd = abs(acdb + abcc);\n    long abdc = abs(abdc + acbd);\n    long\
    \ acdb = abs(acbd + abdc);\n    long abcc = abs(abcc + acdb);\n    long acbd =\
    \ abs(acdb + abcc);\n    long abdc = abs(abdc + acbd);\n    long acdb = abs(acbd\
    \ + abdc);\n    long abcc = abs(abcc + acdb);\n    long acbd = abs(acdb + abcc);\n\
    \    long abdc = abs(abdc + acbd);\n    long acdb = abs(acbd + abdc);\n    long\
    \ abcc = abs(abcc + acdb);\n    long acbd = abs(acdb + abcc);\n    long abdc =\
    \ abs(abdc + acbd);\n    long acdb = abs(acbd + abdc);\n    long abcc = abs(abcc\
    \ + acdb);\n    long acbd = abs(acdb + abcc);\n    long abdc = abs(abdc + acbd);\n\
    \    long acdb = abs(acbd + abdc);\n    long abcc = abs(abcc + acdb);\n    long\
    \ acbd = abs(acdb + abcc);\n    long abdc = abs(abdc + acbd);\n    long acdb =\
    \ abs(acbd + abdc);\n    long abcc = abs(abcc + acdb);\n    long acbd = abs(acdb\
    \ + ab", "{\n    long angle;\n    angle = acos((b * b + c * c - a * a) / (2 *\
    \ b * c));\n    return (angle >= 0.0f);\n}", "{\n    long ab = abs(b - a);\n \
    \   long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc = abs(ab +\
    \ ac);\n    long bcd = abs(bc + ab);\n    long acd = abs(ac + ab);\n    long abcd\
    \ = abs(abc + bcd);\n    long acbd = abs(acd + abc);\n    long abcda = abs(abcd\
    \ + acb);\n    long acbda = abs(acbd + abc);\n    long acdbc = abs(acbd + acb);\n\
    \    long acdbca = abs(acdbc + acd);\n    long acdbcab = abs(acdbca + acb);\n\
    \    long acdbcaba = abs(acdbcab + acd);\n    long acdbcabab = abs(acdbcaba +\
    \ acb);\n    long acdbcababa = abs(acdbcabab + acd);\n    long acdbcababab = abs(acdbcababa\
    \ + acb);\n    long acdbcabababa = abs(acdbcababab + acd);\n    long acdbcabababab\
    \ = abs(acdbcabababa + acb);\n    long acdbcababababa = abs(acdbcabababab + acd);\n\
    \    long acdbcababababab = abs(acdbcababababa + acb);\n    long acdbcababababab\
    \ = abs(acdbcababababa + acd);\n    long acdbcabababababa = abs(acdbcababababab\
    \ + acb);\n    long acdbcababababab = abs(acdbcababababa + acd);\n    long acdbcabababababa\
    \ = abs(acdbcababababab + acb);\n    long acdbcabababababab = abs(acdbcabababababa\
    \ + acd);\n    long acdbcababababababa = abs(acdbcabababababa + acb);\n    long\
    \ acdbcabababababab = abs(acdbcabababababa + acd);\n    long acdbcababababababa\
    \ = abs(acdbcabababababa + acb);\n    long acdbcabababababab = abs(acdbcabababababa\
    \ + acd);\n    long acdbcababababababa = abs(acdbcabababababa + acb);\n    long\
    \ acdbcab", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n \
    \   long bca = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b -\
    \ c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb =\
    \ abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long\
    \ abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n\
    \    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c\
    \ - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc\
    \ = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long\
    \ acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n\
    \    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b\
    \ - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb\
    \ = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long\
    \ abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n\
    \    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c\
    \ - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc\
    \ = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long\
    \ acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n\
    \    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b\
    \ - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acb\
    \ = abs(c - b);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n    long\
    \ abc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - ", "{\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long\
    \ e = Math.sqrt(d);\n    long f = (b + e * c) / 2;\n    long g = (b - e * c) /\
    \ 2;\n    long h = (a + e * b) / 2;\n    long i = (a + e * b) / 2;\n    long j\
    \ = (a - e * b) / 2;\n    long k = (a - e * b) / 2;\n    long l = (a + e * c)\
    \ / 2;\n    long m = (b + e * c) / 2;\n    long n = (b - e * c) / 2;\n    long\
    \ o = (a + e * c) / 2;\n    long p = (b + e * c) / 2;\n    long q = (b - e * c)\
    \ / 2;\n    long r = (a + e * c) / 2;\n    long s = (a + e * b) / 2;\n    long\
    \ t = (a - e * b) / 2;\n    long u = (a - e * b) / 2;\n    long v = (a + e * c)\
    \ / 2;\n    long w = (b + e * c) / 2;\n    long x = (b - e * c) / 2;\n    long\
    \ y = (a + e * b) / 2;\n    long z = (a - e * b) / 2;\n    long A = (a + e * c)\
    \ / 2;\n    long B = (b + e * c) / 2;\n    long C = (b - e * c) / 2;\n    long\
    \ D = (a + e * b) / 2;\n    long E = (a - e * b) / 2;\n    long F = (a - e * b)\
    \ / 2;\n    long G = (a + e * c) / 2;\n    long H = (b + e * c) / 2;\n    long\
    \ I = (b - e * c) / 2;\n    long J = (a + e * b) / 2;\n    long K = (a - e * b)\
    \ / 2;\n    long L = (a + e * c) / 2;\n    long M = (b + e * c) / 2;\n    long\
    \ N = (b - e * c) / 2;\n    long O = (a + e * c) / 2;\n    long P = (b + e * c)\
    \ / 2;\n    long Q = (b - e * c) / 2;\n    long R = (a + e * c) / 2;\n    long\
    \ S = (a + e * b) / 2;\n    long T = (a - e * b) / 2;\n    long U = (a - e * b)\
    \ / 2;\n    long V = (a + e * c) / 2;\n", "{\n    long ab = a - b;\n    long ac\
    \ = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n    long acb = ac +\
    \ bc;\n    long abac = ab + ac;\n    long acab = ac + ab;\n    long acbc = ac\
    \ + bc;\n    long abacc = abac + acbc;\n    long abcab = abac + abc;\n    long\
    \ abcbc = abac + bcb;\n    long abcabc = abcab + acbc;\n    long abcbcd = abcab\
    \ + bcd;\n    long abcabcd = abcabcd + abbc;\n    long abcbcde = abcabcd + bce;\n\
    \    long abcabcde = abcabcde + abcc;\n    long abcbcdef = abcabcde + bcf;\n \
    \   long abcabcdef = abcabcdef + abce;\n    long abcbcdefg = abcabcdef + bcfg;\n\
    \    long abcabcdefg = abcabcdefg + abcc;\n    long abcbcdefgh = abcabcdefg +\
    \ bch;\n    long abcabcdefgh = abcabcdefgh + abcc;\n    long abcbcdefghi = abcabcdefgh\
    \ + bci;\n    long abcabcdefghi = abcabcdefghi + abcc;\n    long abcbcdefghij\
    \ = abcabcdefghi + bcij;\n    long abcabcdefghij = abcabcdefghij + abcc;\n   \
    \ long abcbcdefghijk = abcabcdefghij + bcijk;\n    long abcabcdefghijk = abcabcdefghijk\
    \ + abcc;\n    long abcbcdefghijkl = abcabcdefghijk + bcikl;\n    long abcabcdefghijkl\
    \ = abcabcdefghijkl + abcc;\n    long abcbcdefghijklmn = abcabcdefghijkl + bcikln;\n\
    \    long abcabcdefghijklmn = abcabcdefghijklmn + abcc;\n    long abcbcdefghijklmn1\
    \ = abcabcdefghijklmn + bcikln", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n\
    \    long side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b)\
    \ + abs(c);\n    \n    if (side1 == side2 && side2 == side3) \n    {\n       \
    \ return true;\n    }\n    else \n    {\n        return false;\n    }\n}\n</code>\n\
    <|/ a tags=c++,algorithm,geometry |>\n<| c |>\nThis doesn't work. Try it with\
    \ `a = b = c = 1`.\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. The\
    \ only thing I changed was the variable names. I changed `a`, `b`, `c` to `side1`,\
    \ `side2`, and `side3`.\n<|/ c |>\n<| c |>\nI tested it again and it works. I\
    \ must have made a mistake when I first tried it.\n<|/ c |>\n<| c |>\nI tested\
    \ it again and it works. I must have made a mistake when I first tried it.\n<|/\
    \ c |>\n<| c |>\nI tested it again and it works. I must have made a mistake when\
    \ I first tried it.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc =\
    \ ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc =\
    \ ac + bc;\n    long abbcd = abbc + acbc;\n    long acbcdab = acbcd + abbc;\n\
    \    long acbcdabc = acbcd + abbc + abc;\n    long acbcdabcd = acbcd + abbc +\
    \ abc + abc;\n    long acbcdabcc = acbcd + abbc + abc + abc + abc;\n    long acbcdabccd\
    \ = acbcd + abbc + abc + abc + abc + abcd;\n    long acbcdabccdd = acbcd + abbc\
    \ + abc + abc + abc + abc + abc + abcd;\n    long acbcdabccddd = acbcd + abbc\
    \ + abc + abc + abc + abc + abc + abc + abc + abcd;\n    long acbcdabccddde =\
    \ acbcd + abbc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abcd;\n\
    \    long acbcdabccdddef = acbcd + abbc + abc + abc + abc + abc + abc + abc +\
    \ abc + abc + abc + abc + abc + abc + abcd;\n    long acbcdabccdddefg = acbcd\
    \ + abbc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc\
    \ + abc + abc + abcd;\n    long acbcdabccdddefgh = acbcd + abbc + abc + abc +\
    \ abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc\
    \ + abc + abc + abc + abcd;\n    long acbcdabccdddefghi = acbcd + abbc + abc +\
    \ abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc + abc\
    \ + abc + abc + abc + abc + abc + abc + abcd;\n    long acbcdabccdddefghij = acbcd\
    \ + abbc + abc + abc + abc + abc + abc + abc + abc + abc + abc + ab", "{\n   \
    \ long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long abc =\
    \ ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc =\
    \ ac + bc;\n    long abbcd = abbc + acbc;\n    long acbcdab = acbcd + abbc;\n\
    \    long abbcdac = abbcd + acbc;\n    long acbcdabc = acbcdab + abbc;\n    long\
    \ abbcdacb = abbcdac + acbc;\n    long acbcdabbc = acbcdabb + abbc;\n    long\
    \ abbcdacbc = abbcdacb + acbc;\n    long acbcdabbcd = acbcdabbc + abbc;\n    long\
    \ abbcdacbcdab = abbcdacbcdab + acbcd;\n    long acbcdabbcdac = abbcdacbcdac +\
    \ abbcd;\n    long abbcdacbcdabc = abbcdacbcdabc + acbcd;\n    long acbcdabbcdacb\
    \ = abbcdacbcdacb + abbcd;\n    long abbcdacbcdabbc = abbcdacbcdabbc + acbcd;\n\
    \    long acbcdabbcdacbc = abbcdacbcdacbc + abbcd;\n    long abbcdacbcdabbcd =\
    \ abbcdacbcdabbcd + acbcd;\n    long acbcdabbcdacbcdab = abbcdacbcdacbcdab + abbcd;\n\
    \    long acbcdabbcdacbcdac = abbcdacbcdacbcdac + abbcd;\n    long abbcdacbcdabbcdac\
    \ = abbcdacbcdabbcdac + acbcd;\n    long acbcdabbcdacbcdabc = abbcdacbcdacbcdabc\
    \ + abbcd;\n    long acbcdabbcdacbcdabbc = abbcdacbcdacbcdabbc + acbcd;\n    long\
    \ acbcdabbcdac", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n  \
    \  long bc = abs(b - c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n \
    \   long ac2b = ac * bc;\n    long ac2ab = ac * ab;\n    long ac2bc = ac * bc;\n\
    \    long ac2abc = ac * abc;\n    long ac2bab = ac * bab;\n    long ac2babc =\
    \ ac * babc;\n    long ac2bcab = ac * cab;\n    long ac2bcabc = ac * cabc;\n \
    \   long ac2bcabcb = ac * cabcb;\n    long ac2bcabcbc = ac * cabcbc;\n    long\
    \ ac2bcabcbcb = ac * cabcbcb;\n    long ac2bcabcbcbc = ac * cabcbcbc;\n    long\
    \ ac2bcabcbcbcb = ac * cabcbcbcb;\n    long ac2bcabcbcbcbc = ac * cabcbcbcbc;\n\
    \    long ac2bcabcbcbcbcb = ac * cabcbcbcbcb;\n    long ac2bcabcbcbcbcbc = ac\
    \ * cabcbcbcbcbc;\n    long ac2bcabcbcbcbcbcb = ac * cabcbcbcbcbcb;\n    long\
    \ ac2bcabcbcbcbcbcbc = ac * cabcbcbcbcbcbc;\n    long ac2bcabcbcbcbcbcbcb = ac\
    \ * cabcbcbcbcbcbcb;\n    long ac2bcabcbcbcbcbcbcbc = ac * cabcbcbcbcbcbcbc;\n\
    \    long ac2bcabcbcbcbcbcbcbcb = ac * cabcbcbcbcbcbcbcb;\n    long ac2bcabcbcbcbcbcbcbcbc\
    \ = ac * cabcbcbcbcbcbcbcbcb;\n    long ac2bcabcbcbcbcbcbcbcbcb = ac * cabcbcbcbcbcbcbcbcb;\n\
    \    long ac2bcabcbcbcbcbcbcbcbcbc = ac * cabcbcbcbcbcbcbcbcbcb;\n    long ac2bcabcbcbcbcbcbcbcbcbcb\
    \ = ac * cabcbcbcbcbcbcbcbcbcbcb;\n    long ac2bcabcbcbcbcbcbcbcbcbcbc = ac *\
    \ cabcbcbcbcbcbcbcbcbcbcb", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc =\
    \ abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long\
    \ acbca = abs(c - a);\n    long acbcab = abs(c - b);\n    long acbcabc = abs(c\
    \ - b);\n    long acbcabcd = abs(c - c);\n    long acbcabcde = abs(c - c);\n \
    \   long acbcabcdef = abs(c - c);\n    long acbcabcdefg = abs(c - c);\n    long\
    \ acbcabcdefgh = abs(c - c);\n    long acbcabcdefghi = abs(c - c);\n    long acbcabcdefghij\
    \ = abs(c - c);\n    long acbcabcdefghijk = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long acbcabcdefghijkl = abs(c - c);\n    long acbcabcdefghijkl\
    \ = abs(c - c);\n    long ", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n    \n    if (ab\
    \ > ac && ab > bc) \n    {\n        if (ac > bc)\n        {\n            return\
    \ true;\n        }\n        else\n        {\n            return false;\n     \
    \   }\n    }\n    else\n    {\n        if (ac > bc)\n        {\n            return\
    \ false;\n        }\n        else\n        {\n            return true;\n     \
    \   }\n    }\n}\n</code>\n<|/ a tags=c++,geometry |>\n<| c |>\nThis doesn't answer\
    \ the question. He wants to know if three sides form a right angled triangle,\
    \ not if they form a right angled triangle. Your code returns true if the three\
    \ sides form a right angled triangle, false otherwise.\n<|/ c |>\n<| c |>\nYes,\
    \ I misunderstood the question. Thanks for pointing it out.\n<|/ c |>\n<| a tags=c++,geometry\
    \ |>\n<code>", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n \
    \   long bca = abs(c - a);\n    long aca = abs(a - c);\n    long abb = abs(b -\
    \ a);\n    long bba = abs(b - b);\n    long abc = abs(b - c);\n    long bca =\
    \ abs(c - a);\n    long acb = abs(c - b);\n    long aba = abs(a - b);\n    long\
    \ bba = abs(b - b);\n    long abb = abs(b - a);\n    long bca = abs(c - a);\n\
    \    long aca = abs(a - c);\n    long abc = abs(b - c);\n    long bba = abs(b\
    \ - b);\n    long aba = abs(a - b);\n    long bca = abs(c - a);\n    long acb\
    \ = abs(c - b);\n    long abc = abs(b - c);\n    long bba = abs(b - b);\n    long\
    \ abb = abs(b - a);\n    long bca = abs(c - a);\n    long aca = abs(a - c);\n\
    \    long abc = abs(b - c);\n    long bba = abs(b - b);\n    long aba = abs(a\
    \ - b);\n    long bca = abs(c - a);\n    long acb = abs(c - b);\n    long abc\
    \ = abs(b - c);\n    long bba = abs(b - b);\n    long abb = abs(b - a);\n    long\
    \ bca = abs(c - a);\n    long aca = abs(a - c);\n    long abc = abs(b - c);\n\
    \    long bba = abs(b - b);\n    long aba = abs(a - b);\n    long bca = abs(c\
    \ - a);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long bba\
    \ = abs(b - b);\n    long abb = abs(b - a);\n    long bca = abs(c - a);\n    long\
    \ aca = abs(a - c);\n    long abc = abs(b - c);\n    long bba = abs(b - b);\n\
    \    long aba = abs(a - b);\n    long bca = abs(c - a);\n    long acb = abs(c\
    \ - b);\n    long abc = abs(b - c);\n    long bba = abs(b - b);\n    long abb\
    \ = abs(b - a);\n    long bca = abs(c - a);\n    long aca = abs(a - c);\n    long\
    \ abc = abs(", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n\
    \    long acd = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n    long acbd\
    \ = abs(acd + abc);\n    long acdbc = abs(acbd + acd);\n    long acdbcd = abs(acdbc\
    \ + abcd);\n    long acdbcde = abs(acdbcd + acde);\n    long acdbcdef = abs(acdbcdef\
    \ + acdef);\n    long acdbcdefg = abs(acdbcdef + acdefg);\n    long acdbcdefgh\
    \ = abs(acdbcdefg + acdefgh);\n    long acdbcdefghi = abs(acdbcdefgh + acdefghi);\n\
    \    long acdbcdefghij = abs(acdbcdefghi + acdefghij);\n    long acdbcdefghijk\
    \ = abs(acdbcdefghij + acdefghijk);\n    long acdbcdefghijkl = abs(acdbcdefghijk\
    \ + acdefghijkl);\n    long acdbcdefghijklm = abs(acdbcdefghijkl + acdefghijklm);\n\
    \    long acdbcdefghijklmm = abs(acdbcdefghijklm + acdefghijklmm);\n    long acdbcdefghijklmmn\
    \ = abs(acdbcdefghijklmm + acdefghijklmn);\n    long acdbcdefghijklmmnn = abs(acdbcdefghijklmmn\
    \ + acdefghijklmnn);\n    long acdbcdefghijklmmnnn = abs(acdbcdefghijklmmnn +\
    \ acdefghijklmnnn);\n    long acdbcdefghijklmmnnnn = abs(acdbcdefghijklmmnnn +\
    \ acdefghijklmnnnn);\n    long acdbcdefghijklmmnnnnn = abs(acdbcdefghijklmmnnnnn\
    \ + acdefghijklmnnnnnn);\n    long acdbcdefghijklmmnnnnnn = abs(acdbcdefghijklmmnnnnnnn\
    \ + acdefghij", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n   \
    \ long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n\
    \    long abbc = abs(b - b);\n    long abac = abs(b - a);\n    long acab = abs(c\
    \ - a);\n    long acbc = abs(c - b);\n    long accab = abs(c - c);\n    long abcab\
    \ = abs(b - c);\n    long abcabc = abs(b - c);\n    long abcabbc = abs(b - b);\n\
    \    long abcabac = abs(b - a);\n    long abcabacb = abs(b - a);\n    long abcabacbc\
    \ = abs(b - a);\n    long abcabacbcab = abs(b - a);\n    long abcabacbcabc = abs(b\
    \ - a);\n    long abcabacbcabbc = abs(b - a);\n    long abcabacbcabbcab = abs(b\
    \ - a);\n    long abcabacbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbc =\
    \ abs(b - a);\n    long abcabacbcabbcabbcab = abs(b - a);\n    long abcabacbcabbcabbcabc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbc = abs(b - a);\n    long abcabacbcabbcabbcabbcab\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcab = abs(b - a);\n    long\
    \ abcabacbcabbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcab = abs(b - a);\n    long\
    \ abcabacbcabbcabbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcabbcab = abs(b - a);\n",
  "{\n    long angle;\n    bool result;\n    angle = acos((b*b + c*c - a*a)/(2*b*c));\n\
    \    result = angle > M_PI/2;\n    return result;\n}", "{\n    long d = b * b\
    \ - 4 * a * c;\n    if (d < 0)\n        return false;\n    long sq = d / 2;\n\
    \    long t1 = (-b + sq) / (2 * a);\n    long t2 = (-b - sq) / (2 * a);\n    return\
    \ t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1;\n}", "{\n    long angle;\n    angle\
    \ = acos((b * b + c * c - a * a) / (2 * b * c));\n    return angle < M_PI_2;\n\
    }\n</code>\n<|/ a tags=c++,geometry |>\n<| c |>\nThis code does not work. `acos`\
    \ returns a double, not a float.\n<|/ c |>\n<| c |>\nIt does work, at least in\
    \ C++11. `acos` returns a double, not a float.\n<|/ c |>\n<| c |>\nI tested this\
    \ in C++11 and it works. I guess I misunderstood your question. Do you mean the\
    \ triangle is right angled or 90 degree?\n<|/ c |>\n<| c |>\nThe triangle is right\
    \ angled or 90 degree.\n<|/ c |>\n<| c |>\nI edited my answer to include a function\
    \ that checks if the triangle is right angled or 90 degree.\n<|/ c |>\n<| a tags=c++,geometry\
    \ |>\n<code>", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b\
    \ - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb\
    \ * bc;\n    long abbc = abb * bc;\n    long acbb = acb * ab;\n    long abac =\
    \ ab * ac;\n    long abcab = abcab * ab;\n    long acbcab = acbcab * ac;\n   \
    \ long acbbcab = acbbcab * acb;\n    long abcabcb = abcabcb * ab;\n    long acbcabcb\
    \ = acbcabcb * acb;\n    long acbbcabcb = acbbcabcb * acbb;\n    long abcabcbc\
    \ = abcabcbc * ab;\n    long acbcabcbc = acbcabcbc * acb;\n    long acbbcabcbc\
    \ = acbbcabcbc * acbb;\n    long abcabcbcd = abcabcbc * ac;\n    long acbcabcbcd\
    \ = acbcabcbc * acb;\n    long acbbcabcbcd = acbbcabcbc * acbb;\n    long abcabcbcde\
    \ = abcabcbc * ab;\n    long acbcabcbcde = acbcabcbc * acb;\n    long acbbcabcbcde\
    \ = acbbcabcbc * acbb;\n    long abcabcbcdef = abcabcbc * ac;\n    long acbcabcbcdef\
    \ = acbcabcbc * acb;\n    long acbbcabcbcdef = acbbcabcbc * acbb;\n    long abcabcbcdefg\
    \ = abcabcbc * ab;\n    long acbcabcbcdefg = acbcabcbc * acb;\n    long acbbcabcbcdefg\
    \ = acbbcabcbc * acbb;\n    long abcabcbcdefgh = abcabcbc * ac;\n    long acbcabcbcdefgh\
    \ = acbcabcbc * acb;\n    long acbbcabcbcdefgh = acbbcabcbc * acbb;\n    long\
    \ abcabcbcdefghi = abcabcbc * ab;\n    long acbcabcbcdefghi = acbcabcbc * ac",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long abba = ab +\
    \ ac;\n    long acab = ac + ab;\n    long abcab = ab + ac + bc;\n    long acabb\
    \ = ac + ab + bc;\n    long abcabc = ab + ac + bc + abc;\n    long acabbc = ac\
    \ + ab + bc + abc;\n    long abcabcd = ab + ac + bc + abc + cd;\n    long acabbcc\
    \ = ac + ab + bc + abc + cd;\n    long abcabcc = ab + ac + bc + abc + cc + cd;\n\
    \    long acabbccd = ac + ab + bc + abc + cc + cd;\n    long abcabccd = ab + ac\
    \ + bc + abc + cc + cd + cd;\n    long acabbcccd = ac + ab + bc + abc + cc + cd\
    \ + cd;\n    long abcabcccd = ab + ac + bc + abc + cc + cd + cd + cd;\n    long\
    \ acabbcccd = ac + ab + bc + abc + cc + cd + cd + cd;\n    long abcabcccd = ab\
    \ + ac + bc + abc + cc + cd + cd + cd + cd;\n    long acabbcccd = ac + ab + bc\
    \ + abc + cc + cd + cd + cd + cd;\n    long abcabcccd = ab + ac + bc + abc + cc\
    \ + cd + cd + cd + cd + cd;\n    long acabbcccd = ac + ab + bc + abc + cc + cd\
    \ + cd + cd + cd + cd;\n    long abcabcccd = ab + ac + bc + abc + cc + cd + cd\
    \ + cd + cd + cd + cd;\n    long acabbcccd = ac + ab + bc + abc + cc + cd + cd\
    \ + cd + cd + cd + cd;\n    long abcabcccd = ab + ac + bc + abc + cc + cd + cd\
    \ + cd + cd + cd + cd + cd;\n    long acabbcccd = ac + ab + bc + abc + cc + cd\
    \ + cd + cd ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n\
    \    long acd = abs(ac + ab);\n    long abcd = abs(abc);\n    long bcda = abs(bcd\
    \ - acd);\n    long acda = abs(acd - ab);\n    long abcda = abs(abcd - acda);\n\
    \    long bcdaa = abs(bcda - abcda);\n    long acdaa = abs(acda - ab);\n    long\
    \ abcdaa = abs(abcda - acdaa);\n    long bcdaaa = abs(bcdaa - abcdaa);\n    long\
    \ acdaaa = abs(acdaa - ab);\n    long abcdaaa = abs(abcdaa - acdaaa);\n    long\
    \ bcdaaaa = abs(bcdaaa - abcdaaa);\n    long acdaaaa = abs(acdaaa - ab);\n   \
    \ long abcdaaaa = abs(abcdaaa - acdaaaa);\n    long bcdaaaaa = abs(bcdaaaa - abcdaaaaa);\n\
    \    long acdaaaaa = abs(acdaaaa - ab);\n    long abcdaaaaa = abs(abcdaaaa - acdaaaaa);\n\
    \    long bcdaaaaaa = abs(bcdaaaaa - abcdaaaaaa);\n    long acdaaaaaa = abs(acdaaaaa\
    \ - ab);\n    long abcdaaaaaa = abs(abcdaaaaa - acdaaaaaa);\n    long bcdaaaaaaa\
    \ = abs(bcdaaaaaa - abcdaaaaaaa);\n    long acdaaaaaaa = abs(acdaaaaaa - ab);\n\
    \    long abcdaaaaaaa = abs(abcdaaaaaa - acdaaaaaaa);\n    long bcdaaaaaaaa =\
    \ abs(bcdaaaaaaa - abcdaaaaaaaa);\n    long acdaaaaaaaa = abs(acdaaaaaaa - ab);\n\
    \    long abcdaaaaaaaa = abs(abcdaaaaaaa - acdaaaaaaaa);\n    long bcdaaaaaaaaa\
    \ = abs(bcdaaaaaaaa - abcdaaaaaaaaaa);\n    long acdaaaaaaaaa = abs(acdaaaaaaaa\
    \ - ab);\n    long abcdaaaaaaaaa = abs(abcdaaaaaaaa - acdaaaaaaaaaa);\n    long\
    \ bcdaaaaaaaaaa = abs(bcdaaaaaaaaaa - abcdaaaaaaaaa);\n    long acdaaaaaaaaaa\
    \ = abs(acdaaaaaaaaaa - ab);\n    long abcdaaaaaaaaaa = ", "{\n    long ab = a\
    \ - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb = ac * bc;\n\
    \    long abc = ab * bc;\n    long acbc = acb * bc;\n    long acbcabc = acb *\
    \ abc;\n    long acbcabcb = acbcabc * bc;\n    long acbcabcbc = acbcabcb * bc;\n\
    \    long acbcabcbcb = acbcabcbc * bc;\n    long acbcabcbcbc = acbcabcbcb * bc;\n\
    \    long acbcabcbcbcb = acbcabcbcbc * bc;\n    long acbcabcbcbcbc = acbcabcbcbcb\
    \ * bc;\n    long acbcabcbcbcbcb = acbcabcbcbcbc * bc;\n    long acbcabcbcbcbcbc\
    \ = acbcabcbcbcbcb * bc;\n    long acbcabcbcbcbcbc = acbcabcbcbcbcbc * bc;\n \
    \   long acbcabcbcbcbcbcb = acbcabcbcbcbcbc * bc;\n    long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbc *\
    \ bc;\n    long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb\
    \ * bc;\n    long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb * bc;\n    long\
    \ acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb * bc", "{\n    long d = b * b\
    \ - 4 * a * c;\n    if (d < 0)\n        return false;\n    long root = (-b + sqrt(d))\
    \ / (2 * a);\n    return (root >= 0) && (root < 1);\n}\n</code>\n<|/ a tags=c++,geometry\
    \ |>\n<| c |>\nThis doesn't answer the question. He wants to know if three sides\
    \ form a right angled triangle, not if they form a right angled triangle. Your\
    \ code checks if they form a right angled triangle, not if they form a right angled\
    \ triangle with one side longer than the other.\n<|/ c |>\n<| c |>\nI misunderstood\
    \ the question. Thanks for pointing it out.\n<|/ c |>\n<| a tags=c++,geometry\
    \ |>\n<code>", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long side2\
    \ = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n  \
    \  \n    bool isRightTriangle = (side1 == side2 && side2 == side3);\n    \n  \
    \  return isRightTriangle;\n}", "{\n    long ab = a - b;\n    long ac = a - c;\n\
    \    long bc = b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long\
    \ acbc = acb * bc;\n    long abbc = abb * bc;\n    long abcc = abc * bc;\n   \
    \ long accc = acc * bc;\n    long abbbc = abbb * bc;\n    long abbcc = abbc *\
    \ bc;\n    long abccc = abcc * bc;\n    long acccc = accc * bc;\n    long abbbcc\
    \ = abbbc * bc;\n    long abbccc = abbcc * bc;\n    long abcccc =abccc * bc;\n\
    \    long accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc\
    \ =abbccc * bc;\n    long abcccc =abccc * bc;\n    long accccc =acccc * bc;\n\
    \    long abbbccc =abbbcc * bc;\n    long abbcccc =abbccc * bc;\n    long abcccc\
    \ =abccc * bc;\n    long accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n\
    \    long abbcccc =abbccc * bc;\n    long abcccc =abccc * bc;\n    long accccc\
    \ =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc =abbccc * bc;\n\
    \    long abcccc =abccc * bc;\n    long accccc =acccc * bc;\n    long abbbccc\
    \ =abbbcc * bc;\n    long abbcccc =abbccc * bc;\n    long abcccc =abccc * bc;\n\
    \    long accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc\
    \ =abbccc * bc;\n    long abcccc =", "{\n    long ab = abs(b - a);\n    long ac\
    \ = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n    long\
    \ abc = ab + ac;\n    long bcb = bc + cb;\n    long abbc = abb + bcc;\n    long\
    \ abcc = abc + cbb;\n    long acbc = acb + cba;\n    long accc = accc + cca;\n\
    \    long abbcc = abbc + bccc;\n    long abccb = abcc + cbcb;\n    long acbcc\
    \ = acbc + cbca;\n    long acccb = accc + cbca;\n    long abbccb = abbc + bcccb;\n\
    \    long abcccb = abcc + cbcc;\n    long acbccb = acbc + cbcc;\n    long accccb\
    \ = accc + cbcc;\n    long abbcccb = abbc + bcccc;\n    long abcccba = abcc +\
    \ cbccb;\n    long acbccba = acbc + cbccb;\n    long accccba = accc + cbccb;\n\
    \    long abbcccba = abbc + bcccba;\n    long abcccca = abcc + cbccc;\n    long\
    \ acbccca = acbc + cbccc;\n    long accccca = accc + cbccc;\n    long abbcccca\
    \ = abbc + bcccca;\n    long abcccbc = abcc + cbccb;\n    long acbccbc = acbc\
    \ + cbccb;\n    long accccbc = accc + cbccb;\n    long abbcccbc = abbc + bcccbc;\n\
    \    long abcccbac = abcc + cbccba;\n    long acbccbac = acbc + cbccba;\n    long\
    \ accccbac = accc + cbccba;\n    long abbcccbac = abbc + bcccbac;\n    long abccccaa\
    \ = abcc + cbccca;\n    long acbcccaa = acbc + cbccca;\n    long acccccaa = accc\
    \ + cbccca;\n    long abbccccaa = abbc + bccccaa;\n    long abcc", "{\n    long\
    \ ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n   \
    \ long abc = abs(ab + ac);\n    long bca = abs(bc + ab);\n    long acb = abs(ac\
    \ + bc);\n    long abbc = abs(abc + bca);\n    long bcac = abs(bca + abc);\n \
    \   long abcab = abs(abc + abc);\n    long bcacb = abs(bca + bca + ab);\n    long\
    \ bcacbc = abs(bca + bca + ac);\n    long bcacbca = abs(bca + bca + abc + ac);\n\
    \    long bcacbcab = abs(bca + bca + abc + abc);\n    long bcacbcabc = abs(bca\
    \ + bca + abc + abc + ac);\n    long bcacbcabca = abs(bca + bca + abc + abc +\
    \ abc);\n    long bcacbcabcab = abs(bca + bca + abc + abc + abc + ac);\n    long\
    \ bcacbcabcabc = abs(bca + bca + abc + abc + abc + abc);\n    long bcacbcabcabca\
    \ = abs(bca + bca + abc + abc + abc + abc + ac);\n    long bcacbcabcabcab = abs(bca\
    \ + bca + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabc = abs(bca +\
    \ bca + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabca = abs(bca + bca\
    \ + abc + abc + abc + abc + abc + ac);\n    long bcacbcabcabcabcab = abs(bca +\
    \ bca + abc + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabcabc = abs(bca\
    \ + bca + abc + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabcabca =\
    \ abs(bca + bca + abc + abc + abc + abc + abc + abc + ac);\n    long bcacbcabcabcabcabcab\
    \ = abs(bca + bca + abc + abc + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabcabcabc\
    \ = abs(bca + bca + abc + abc + abc + abc + abc + abc + abc);\n    long bcacbcabcabcabcabcabca\
    \ = abs(bca + bca + abc + abc + abc + ", "{\n    long ab = abs(b - a);\n    long\
    \ ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n  \
    \  long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c\
    \ - b);\n    long abac = abs(b - a);\n    long abcab = abs(b - c);\n    long acbcab\
    \ = abs(c - b);\n    long abcabc = abs(b - c);\n    long abcabbc = abs(b - b);\n\
    \    long acbcabbc = abs(c - b);\n    long abcabac = abs(b - a);\n    long abcabcab\
    \ = abs(b - c);\n    long acbcabcab = abs(c - b);\n    long abcabcabc = abs(b\
    \ - c);\n    long abcabcabbc = abs(b - b);\n    long acbcabcabbc = abs(c - b);\n\
    \    long abcabcabac = abs(b - a);\n    long abcabcabcab = abs(b - c);\n    long\
    \ acbcabcabcab = abs(c - b);\n    long abcabcabcabc = abs(b - c);\n    long abcabcabcabbc\
    \ = abs(b - b);\n    long acbcabcabcabbc = abs(c - b);\n    long abcabcabcabac\
    \ = abs(b - a);\n    long abcabcabcabcab = abs(b - c);\n    long acbcabcabcabcab\
    \ = abs(c - b);\n    long abcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabbc\
    \ = abs(b - b);\n    long acbcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabac\
    \ = abs(b - a);\n    long abcabcabcabcabcab = abs(b - c);\n    long acbcabcabcabcabcab\
    \ = abs(c - b);\n    long abcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabbc\
    \ = abs(b - b);\n    long acbcabcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabac\
    \ = abs(b - a);\n    long abcabcabcabcabcabcab = abs(b - c);\n    long acbcabcabcabcabcabcab\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabcabbc\
    \ = abs(b - b);\n    long ", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n    long abc =\
    \ ab + ac;\n    long bcb = bc + cb;\n    long abbc = abb + bcc;\n    long acbc\
    \ = acb + cbb;\n    long abac = abac + acbc;\n    long acab = acab + abbc;\n \
    \   long abcab = abcab + abac;\n    long acabc = acabc+ abac;\n    long abcabc\
    \ = abcabc + abcab;\n    long acabcb = acabcb +acabc;\n    long abcabcb = abcabcb\
    \ +abcabc;\n    long acabcba = acabcba+ acabc;\n    long abcabcba = abcabcba+\
    \ abcabc;\n    long acabcbac = acabcbac +acabc;\n    long abcabcbac = abcabcbac\
    \ +abcabc;\n    long acabcbaca = acabcbaca+ acabc;\n    long abcabcbaca = abcabcbaca+\
    \ abcabc;\n    long acabcbacab = acabcbacab+ acabc;\n    long abcabcbacab = abcabcbacab+\
    \ abcabc;\n    long acabcbacabc = acabcbacabc +acabc;\n    long abcabcbacabc =\
    \ abcabcbacabc +abcabc;\n    long acabcbacabca = acabcbacabca+ acabc;\n    long\
    \ abcabcbacabca = abcabcbacabca+ abcabc;\n    long acabcbacabcab = acabcbacabcab+\
    \ acabc;\n    long abcabcbacabcab = abcabcbacabcab+ abcabc;\n    long acabcbacabcabc\
    \ = acabcbacabcabc +acabc;\n    long abcabcbacabcabc = abcabcbacabcabc +abcabc;\n\
    \    long acabcbacabcabca = acabcbacabcabca+ acabc;\n    long abcabcbacabcabca\
    \ = abcabcbacabcabca+ abcabc;\n    long acabcbacabcabcab = acabcbacabcabcab+ acabc;\n\
    \    long ", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b -\
    \ c;\n    long abc = ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n\
    \    long acbc = ac + bc;\n    long abcab = abc + acb;\n    long abcabc = abc\
    \ + acbc;\n    long abcabcb = abc + acbcb;\n    long abcabcbb = abc + acbcbb;\n\
    \    long abcabcbbc = abc + acbcbcb;\n    long abcabcbbcd = abc + acbcbcbd;\n\
    \    long abcabcbbcde = abc + acbcbcbde;\n    long abcabcbbcdef = abc + acbcbcbdef;\n\
    \    long abcabcbbcdefg = abc + acbcbcbdefg;\n    long abcabcbbcdefgh = abc +\
    \ acbcbcbdefgh;\n    long abcabcbbcdefghi = abc + acbcbcbdefghi;\n    long abcabcbbcdefghij\
    \ = abc + acbcbcbdefghij;\n    long abcabcbbcdefghijk = abc + acbcbcbdefghijk;\n\
    \    long abcabcbbcdefghijkl = abc + acbcbcbdefghijkl;\n    long abcabcbbcdefghijkll\
    \ = abc + acbcbcbdefghijkll;\n    long abcabcbbcdefghijklm = abc + acbcbcbdefghijklm;\
    \ \n    long abcabcbbcdefghijklmn = abc + acbcbcbdefghijkln;\n    long abcabcbbcdefghijklno\
    \ = abc + acbcbcbdefghijklno;\n    long abcabcbbcdefghijklnop = abc + acbcbcbdefghijklnop;\n\
    \    long abcabcbbcdefghijklnopq = abc + acbcbcbdefghijklnopq;\n    long abcabcbbcdefghijklnopqrs\
    \ = abc + acbcbcbdefghijklnopqrs;\n    long abcabcbbcdefghijklnopqrst = abc +\
    \ acbcbcb", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b -\
    \ c;\n    long abc = ab + bc;\n    long acb = ac + bc;\n    long acb = acb - abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    long abc = abc + abc;\n    long abc = abc - abc;\n    long abc = abc + abc;\n\
    \    long abc = abc - abc;\n    long abc = abc + abc;\n    long abc = abc - abc;\n\
    \    ", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n\
    \    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n\
    \    long abbc = abb * bc;\n    long abcbc = abcb * bc;\n    long abcbcd = abcbc\
    \ * bc;\n    long abcbcde = abcbcd * bc;\n    long abcbcdef = abcbcde * bc;\n\
    \    long abcbcdefg = abcbcdef * bc;\n    long abcbcdefgh = abcbcdefg * bc;\n\
    \    long abcbcdefghi = abcbcdefgh * bc;\n    long abcbcdefghij = abcbcdefghi\
    \ * bc;\n    long abcbcdefghijk = abcbcdefghij * bc;\n    long abcbcdefghijkl\
    \ = abcbcdefghijk * bc;\n    long abcbcdefghijklmn = abcbcdefghijkl * bc;\n  \
    \  long abcbcdefghijklmn1 = abcbcdefghijklmn * bc;\n    long abcbcdefghijklmno\
    \ = abcbcdefghijklmno * bc;\n    long abcbcdefghijklmnop = abcbcdefghijklmno *\
    \ bc;\n    long abcbcdefghijklmnopq = abcbcdefghijklmno * bc;\n    long abcbcdefghijklmnopr\
    \ = abcbcdefghijklmno * bc;\n    long abcbcdefghijklmnoprs = abcbcdefghijklmno\
    \ * bc;\n    long abcbcdefghijklmnoprst = abcbcdefghijklmno * bc;\n    long abcbcdefghijklmnoprstu\
    \ = abcbcdefghijklmno * bc;\n    long abcbcdefghijklmnoprstv = abcbcdefghijklmno\
    \ * bc;\n    long abcbcdefghijklmnoprstwu = abcbcdefghijklmno * bc;\n    long\
    \ abcbcdefgh", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return\
    \ false;\n    long e = Math.sqrt(d);\n    long f = b + e * Math.sqrt(3) / 2;\n\
    \    long g = a + e * Math.sqrt(3) / 2;\n    return ((f - g) * (f - g)) <= 0;\n\
    }", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b\
    \ - c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long abba = ab\
    \ + ac;\n    long acab = ac + ab;\n    long abcab = ab + ac + bc;\n    long acabc\
    \ = ac + ab + bc;\n    long abcabc = ab + ac + bc + abc;\n    long acabbc = ac\
    \ + ab + bc + abc;\n    long abcabbc = ab + ac + bc + abc;\n    long acabbbc =\
    \ ac + ab + bc + abc;\n    long abcabbbc = ab + ac + bc + abc;\n    long acabbbac\
    \ = ac + ab + bc + abc + abc;\n    long abcabbbac = ab + ac + bc + abc + abc;\n\
    \    long acabbbabc = ac + ab + bc + abc + abc;\n    long abcabbbabc = ab + ac\
    \ + bc + abc + abc;\n    long acabbbacabc = ac + ab + bc + abc + abc;\n    long\
    \ abcabbbacabc = ab + ac + bc + abc + abc;\n    long acabbbabcabc = ac + ab +\
    \ bc + abc + abc;\n    long abcabbbabcabc = ab + ac + bc + abc + abc;\n    long\
    \ acabbbacabcabc = ac + ab + bc + abc + abc + abc;\n    long abcabbbacabcabc =\
    \ ab + ac + bc + abc + abc + abc;\n    long acabbbabcabcabc = ac + ab + bc + abc\
    \ + abc + abc;\n    long abcabbbabcabcabc = ab + ac + bc + abc + abc + abc;\n\
    \    long acabbbacabcabcabc = ac + ab + bc + abc + abc + abc + abc;\n    long\
    \ abcabbbacabcabcabc = ab + ac + bc + abc + abc + abc + abc;\n    long acabbbabcabcabcabc\
    \ = ac + ab + bc + abc + abc + abc + abc;\n    long abcabbbabcabcabcabc = ab +\
    \ ac + bc + abc + abc + abc + abc;\n    long acabbbacabcabcabcabc = ac", "{\n\
    \    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long abc\
    \ = ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc\
    \ = ac + bc;\n    long abcab = abc + acb;\n    long acbca = acb + ac;\n    long\
    \ abcabc = abc + acb;\n    long acbcab = acbc + ac;\n    long abcabcb = abcab\
    \ + acbca;\n    long acbcabc = acbcab + ac;\n    long abcabcba = abcabc + acbca;\n\
    \    long acbcabca = acbcabc + ac;\n    long abcabcbac = abcabca + acbca;\n  \
    \  long acbcabcab = acbcabca + ac;\n    long abcabcbacb = abcabcbac + acbca;\n\
    \    long acbcabcabc = acbcabcab + ac;\n    long abcabcbacba = abcabcbac + acbca;\n\
    \    long acbcabcabca = acbcabcab + ac;\n    long abcabcbacbacb = abcabcbaca +\
    \ acbca;\n    long acbcabcabcab = acbcabcaba + ac;\n    long abcabcbacbacba =\
    \ abcabcbaca + acbca;\n    long acbcabcabcaba = acbcabcaba + ac;\n    long abcabcbacbacba\
    \ = abcabcbaca + acbca;\n    long acbcabcabcaba = acbcabcaba + ac;\n    long abcabcbacbacba\
    \ = abcabcbaca + acbca;\n    long acbcabcabcaba = acbcabcaba + ac;\n    long abcabcbacbacbac\
    \ = abcabcbacbaa + acbca;\n    long acbcabcabcaba = acbcabcaba + ac;\n    long\
    \ abcabcbacbacbacb = abcabcbacbaca + acbca;\n    long acbcabcabcaba = acbcabcaba\
    \ + ac;\n    long abcabcbacbacbacba = abcabcbacbaca + acbca;\n    long acbcabcabcaba\
    \ = acbcabcaba + ac;\n    long abcabc", "{\n    long ab = a - b;\n    long ac\
    \ = a - c;\n    long bc = b - c;\n    long acb = ac * bc;\n    long abc = ab *\
    \ bc;\n    long acbc = acb * bc;\n    long abbc = abb * bc;\n    long acbcbc =\
    \ acbcb * bc;\n    long abcbc = abcb * bc;\n    long acbcbcb = acbcbcb * bc;\n\
    \    long abcbcbc = abcbcb * bc;\n    long acbcbcbc = acbcbcbc * bc;\n    long\
    \ abcbcbcb = abcbcbcb * bc;\n    long acbcbcbcb = acbcbcbcb * bc;\n    long abcbcbcbc\
    \ = abcbcbcbc * bc;\n    long acbcbcbcbc = acbcbcbcbc * bc;\n    long abcbcbcbcb\
    \ = abcbcbcbcb * bc;\n    long acbcbcbcbcb = acbcbcbcbcb * bc;\n    long abcbcbcbcbc\
    \ = abcbcbcbcbc * bc;\n    long acbcbcbcbcb = acbcbcbcbcb * bc;\n    long abcbcbcbcbc\
    \ = abcbcbcbcbc * bc;\n    long acbcbcbcbcbc = acbcbcbcbcbc * bc;\n    long abcbcbcbcbcb\
    \ = abcbcbcbcbcb * bc;\n    long acbcbcbcbcbc = acbcbcbcbcbc * bc;\n    long abcbcbcbcbcb\
    \ = abcbcbcbcbcb * bc;\n    long acbcbcbcbcbcb = acbcbcbcbcbcb * bc;\n    long\
    \ abcbcbcbcbcbc = abcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcb = acbcbcbcbcbcb\
    \ * bc;\n    long abcbcbcbcbcbc = abcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbcb = abcbcbcbcbcbcb * bc;\n   \
    \ long acbcbcbcbcbcbc = acbcbcbcbcbcbc * bc", "{\n    long side1 = abs(a) + abs(b)\
    \ + abs(c);\n    long side2 = abs(a) + abs(b) - abs(c);\n    long side3 = abs(a)\
    \ - abs(b) + abs(c);\n    long side4 = abs(a) - abs(b) - abs(c);\n    long side5\
    \ = abs(a) + abs(b) - abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n  \
    \  long side7 = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a) + abs(b) +\
    \ abs(c);\n    long side9 = abs(a) - abs(b) + abs(c);\n    long side10 = abs(a)\
    \ - abs(b) - abs(c);\n    long side11 = abs(a) + abs(b) + abs(c);\n    long side12\
    \ = abs(a) - abs(b) + abs(c);\n    long side13 = abs(a) - abs(b) - abs(c);\n \
    \   long side14 = abs(a) + abs(b) - abs(c);\n    long side15 = abs(a) - abs(b)\
    \ + abs(c);\n    long side16 = abs(a) - abs(b) - abs(c);\n    long side17 = abs(a)\
    \ + abs(b) + abs(c);\n    long side18 = abs(a) - abs(b) + abs(c);\n    long side19\
    \ = abs(a) - abs(b) - abs(c);\n    long side20 = abs(a) + abs(b) + abs(c);\n \
    \   long side21 = abs(a) - abs(b) + abs(c);\n    long side22 = abs(a) - abs(b)\
    \ - abs(c);\n    long side23 = abs(a) + abs(b) - abs(c);\n    long side24 = abs(a)\
    \ - abs(b) - abs(c);\n    long side25 = abs(a) + abs(b) + abs(c);\n    long side26\
    \ = abs(a) - abs(b) + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n \
    \   long side28 = abs(a) + abs(b) + abs(c);\n    long side29 = abs(a) - abs(b)\
    \ + abs(c);\n    long side30 = abs(a) - abs(b) - abs(c);\n    long side31 = abs(a)\
    \ + abs(b) + abs(c);\n    long side32 = abs(a) - abs(b) + abs(c);\n    long side33\
    \ = abs(a) - abs(b) - abs(c);\n    long side34 = abs(a) + abs(b) + abs(c);\n \
    \   long side35 = abs(a) - abs(b) + abs(c);\n    long side36 = abs(a) - abs(b)\
    \ - abs(c);\n    long side37 = abs(a) + abs(b) + abs(c);\n    long side38", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n    long acd = abs(ac\
    \ + ab);\n    long abcd = abs(abc + bcd);\n    long acbd = abs(acd + abc);\n \
    \   long abac = abs(abc + acd);\n    long abbc = abs(abc + bcd);\n    long abacd\
    \ = abs(abac + acbd);\n    long abcab = abs(abbc + abcd)\n    long abcabd = abs(abcab\
    \ + acbd)\n    long abcabcd = abs(abcabcd + abacd)\n    long abcabcde = abs(abcabcde\
    \ + abbc)\n    long abcabcdef = abs(abcabcdef + abac)\n    long abcabcdefg = abs(abcabcdef\
    \ + abbc)\n    long abcabcdefgh = abs(abcabcdefgh + abac)\n    long abcabcdefghi\
    \ = abs(abcabcdefghi + abbc)\n    long abcabcdefghij = abs(abcabcdefghij + abac)\n\
    \    long abcabcdefghijk = abs(abcabcdefghijk + abbc)\n    long abcabcdefghijkl\
    \ = abs(abcabcdefghijkl + abac)\n    long abcabcdefghijkl = abs(abcabcdefghijkl\
    \ + abbc)\n    long abcabcdefghijkl = abs(abcabcdefghijkl + abac)\n    long abcabcdefghijkl\
    \ = abs(abcabcdefghijkl + abbc)\n    long abcabcdefghijkl = abs(abcabcdefghijkl\
    \ + abac)\n    long abcabcdefghijkl = abs(abcabcdefghijkl + abbc)\n    long abcabcdefghijkl\
    \ = abs(abcabcdefghijkl + abac)\n    long abcabcdefghijkl = abs(abcabcdefghijkl\
    \ + abbc)\n    long abcabcdefghijkl = abs(abcabcdefghijkl + abac)\n    long abcabcdefghijkl\
    \ = abs(abcabcdefghijkl + ", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n\
    \    long side2 = abs(a) + abs(b) - abs(c);\n    long side3 = abs(a) - abs(b)\
    \ + abs(c);\n    long side4 = abs(a) - abs(b) - abs(c);\n    long side5 = abs(a)\
    \ + abs(b) - abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7\
    \ = abs(a) + abs(b) + abs(c);\n    long side8 = abs(a) - abs(b) - abs(c);\n  \
    \  long side9 = abs(a) - abs(b) + abs(c);\n    long side10 = abs(a) - abs(b) -\
    \ abs(c);\n    long side11 = abs(a) + abs(b) + abs(c);\n    long side12 = abs(a)\
    \ - abs(b) + abs(c);\n    long side13 = abs(a) + abs(b) - abs(c);\n    long side14\
    \ = abs(a) - abs(b) - abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n \
    \   long side16 = abs(a) + abs(b) + abs(c);\n    long side17 = abs(a) + abs(b)\
    \ - abs(c);\n    long side18 = abs(a) - abs(b) + abs(c);\n    long side19 = abs(a)\
    \ - abs(b) - abs(c);\n    long side20 = abs(a) + abs(b) - abs(c);\n    long side21\
    \ = abs(a) - abs(b) + abs(c);\n    long side22 = abs(a) - abs(b) - abs(c);\n \
    \   long side23 = abs(a) + abs(b) - abs(c);\n    long side24 = abs(a) - abs(b)\
    \ + abs(c);\n    long side25 = abs(a) + abs(b) + abs(c);\n    long side26 = abs(a)\
    \ - abs(b) + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n    long side28\
    \ = abs(a) + abs(b) + abs(c);\n    long side29 = abs(a) - abs(b) + abs(c);\n \
    \   long side30 = abs(a) + abs(b) - abs(c);\n    long side31 = abs(a) - abs(b)\
    \ - abs(c);\n    long side32 = abs(a) - abs(b) + abs(c);\n    long side33 = abs(a)\
    \ + abs(b) + abs(c);\n    long side34 = abs(a) - abs(b) + abs(c);\n    long side35\
    \ = abs(a) - abs(b) - abs(c);\n    long side36 = abs(a) + abs(b) + abs(c);\n \
    \   long side37 = abs(a) - abs(b) + abs(c);\n    long side38", "{\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ac;\n    long\
    \ ac2bc = ac * bc;\n    long ac2abc = ac * abc;\n    long ac2bc2 = ac * bc2;\n\
    \    long ac2abc2 = ac * abc2;\n    long ac2bc3 = ac * bc3; \n    long ac2abc3\
    \ = ac * abc3;\n    long ac2bc4 = ac * bc4;\n    long ac2abc4 = ac * abc4;\n \
    \   long ac2bc5 = ac * bc5;\n    long ac2abc5 = ac * abc5;\n    long ac2bc6 =\
    \ ac * bc6;\n    long ac2abc6 = ac * abc6;\n    long ac2bc7 = ac * bc7;\n    long\
    \ ac2abc7 = ac * abc7;\n    long ac2bc8 = ac * bc8;\n    long ac2abc8 = ac * abc8;\n\
    \    long ac2bc9 = ac * bc9;\n    long ac2abc9 = ac * abc9;\n    long ac2bc10\
    \ = ac * bc10;\n    long ac2abc10 = ac * abc10;\n    long ac2bc11 = ac * bc11;\n\
    \    long ac2abc11 = ac * abc11;\n    long ac2bc12 = ac * bc12;\n    long ac2abc12\
    \ = ac * abc12;\n    long ac2bc13 = ac * bc13;\n    long ac2abc13 = ac * abc13;\n\
    \    long ac2bc14 = ac * bc14;\n    long ac2abc14 = ac * abc14;\n    long ac2bc15\
    \ = ac * bc15;\n    long ac2abc15 = ac * abc15;\n    long ac2bc16 = ac * bc16;\n\
    \    long ac2abc16 = ac * abc16;\n    long ac2bc17 = ac * bc17;\n    long ac2abc17\
    \ = ac * abc17;\n    long ac2bc18 = ac * bc18;\n    long ac2abc18 = ac * abc18;\n\
    \    long ac2bc19 = ac * bc19;\n    long ac2abc19 = ac * abc19;\n    long ac2bc20\
    \ = ac * bc20;\n    long ac2abc20", "{\n    long angle;\n    long angle1;\n  \
    \  long angle2;\n    long angle3;\n    \n    angle = acos((b*b + c*c - a*a) /\
    \ (2.0*b*c));\n    angle1 = (180 - angle);\n    angle2 = angle;\n    angle3 =\
    \ angle;\n    \n    if (angle1 < angle2 && angle1 < angle3)\n    {\n        return\
    \ true;\n    }\n    else\n    {\n        return false;\n    }\n}\n</code>\n<|/\
    \ a tags=c++,trigonometry,geometry |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns a double, not a long.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I've fixed the code.\n<|/ c |>\n<| c |>\nThis code doesn't work. `acos` returns\
    \ a double, not a long.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've\
    \ fixed the code.\n<|/ c |>\n<| a tags=c++,trigonometry,geometry |>\n<code>",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long abbc =\
    \ abs(b - b);\n    long abac = abs(b - a);\n    long acab = abs(c - a);\n    long\
    \ acbc = abs(c - b);\n    long accab = abs(c - c);\n    long abcab = abs(b - c);\n\
    \    long abcabc = abs(b - c);\n    long abcabbc = abs(b - b);\n    long abcabac\
    \ = abs(b - a);\n    long abcabacb = abs(b - a);\n    long abcabacbc = abs(b -\
    \ a);\n    long abcabacbcab = abs(b - a);\n    long abcabacbcabc = abs(b - a);\n\
    \    long abcabacbcabbc = abs(b - a);\n    long abcabacbcabbcab = abs(b - a);\n\
    \    long abcabacbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbc = abs(b -\
    \ a);\n    long abcabacbcabbcabbcab = abs(b - a);\n    long abcabacbcabbcabbcabc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbc = abs(b - a);\n    long abcabacbcabbcabbcabbcab\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcab = abs(b - a);\n    long\
    \ abcabacbcabbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcab = abs(b - a);\n    long\
    \ abcabacbcabbcabbcabbcabbcabbcabc = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcabbc\
    \ = abs(b - a);\n    long abcabacbcabbcabbcabbcabbcabbcabbcab = abs(b - a);\n",
  "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n   \
    \ long sq = d / 2;\n    long t1 = (-b + sq) / a;\n    long t2 = (-b - sq) / a;\n\
    \    if (t1 > t2)\n        return true;\n    return false;\n}\n</code>\n<|/ a\
    \ tags=c++,geometry |>\n<| c |>\nI like your answer but this doesn't answer the\
    \ question asked.\n<|/ c |>\n<| c |>\nI agree with you. My answer was more to\
    \ show how one can solve the problem using mathematical formulas and to show how\
    \ one can solve the problem using code. My answer was more to show how one can\
    \ solve the problem using mathematical formulas and to show how one can solve\
    \ the problem using code. My answer was more to show how one can solve the problem\
    \ using mathematical formulas and to show how one can solve the problem using\
    \ code. My answer was more to show how one can solve the problem using mathematical\
    \ formulas and to show how one can solve the problem using code. My answer was\
    \ more to show how one can solve the problem using mathematical formulas and to\
    \ show how one can solve the problem using code. My answer was more to show how\
    \ one can solve the problem using mathematical formulas and to show how one can\
    \ solve the problem using code. My answer was more to show how one can solve the\
    \ problem using mathematical formulas and to show how one can solve the problem\
    \ using code. My answer was more to show how one can solve the problem using mathematical\
    \ formulas and to show how one can solve the problem using code. My answer was\
    \ more to show how one can solve the problem using mathematical formulas and to\
    \ show how one can solve the problem using code. My answer was more to show how\
    \ one can solve the problem using mathematical formulas and to show how one can\
    \ solve the problem using code. My answer was more to show how one can solve the\
    \ problem using mathematical formulas and to show how one can solve the problem\
    \ using code. My answer was more to show how one can solve the problem using mathematical\
    \ formulas and to show how one can solve the problem using code. My answer was\
    \ more to show how one can solve the problem using mathematical formulas and to\
    \ show how one can solve the problem using code. My answer was more to show how\
    \ one can solve the problem using mathemati", "{\n    long d = b * b - 4 * a *\
    \ c;\n    if (d < 0) return false;\n    long e = Math.sqrt(d);\n    long f = (b\
    \ + e) / (2 * a);\n    long g = (c + e) / (2 * a);\n    long h = (b - e) / (2\
    \ * a);\n    return ((f < 0 && g < 0 && h < 0) || (f > 0 && g > 0 && h > 0));\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work. Try it with a triangle\
    \ with sides equals to zero. You'll get an infinite loop.\n<|/ c |>\n<| c |>\n\
    I didn't test it, but I believe it works. I tested it with sides equals to zero,\
    \ sides equals to 1 and sides equals to 2. And it returned true for all the cases.\
    \ I believe it works.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with a triangle\
    \ with sides equals to zero. You'll get an infinite loop.\n<|/ c |>\n<| c |>\n\
    I tested it with sides equals to zero, sides equals to 1 and sides equals to 2.\
    \ And it returned true for all the cases. I believe it works.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try it with a triangle with sides equals to zero. You'll\
    \ get an infinite loop.\n<|/ c |>\n<| a tags=c#,geometry,trigonometry,math |>\n\
    <code>", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc\
    \ = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long\
    \ acbc = abs(c - b);\n    long abcd = abs(b - c);\n    long acbcdab = abs(c -\
    \ b);\n    long acbcdabc = abs(c - b);\n    long acbcdabca = abs(c - b);\n   \
    \ long acbcdabcab = abs(c - b);\n    long acbcdabcabc = abs(c - b);\n    long\
    \ acbcdabcabcd = abs(c - b);\n    long acbcdabcabcde = abs(c - b);\n    long acbcdabcabcdef\
    \ = abs(c - b);\n    long acbcdabcabcdefg = abs(c - b);\n    long acbcdabcabcdefgh\
    \ = abs(c - b);\n    long acbcdabcabcdefghi = abs(c - b);\n    long acbcdabcabcdefghij\
    \ = abs(c - b);\n    long acbcdabcabcdefghijk = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long acbcdabcabcdefghijkl\
    \ = abs(c - b);\n    long acbcdabcabcdefghijkl = abs(c - b);\n    long ", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acbc = abs(c\
    \ - b);\n    long abbc = abs(b - b);\n    long acbca = abs(c - b);\n    long abcab\
    \ = abs(b - c);\n    long acbcab = abs(c - b);\n    long abcabc = abs(b - c);\n\
    \    long acbcabc = abs(c - b);\n    long abcabbc = abs(b - c);\n    long acbcabbc\
    \ = abs(c - b);\n    long abcabcabc = abs(b - c);\n    long acbcabcabc = abs(c\
    \ - b);\n    long abcabcabbc = abs(b - c);\n    long acbcabcabbc = abs(c - b);\n\
    \    long abcabcabcabc = abs(b - c);\n    long acbcabcabcabc = abs(c - b);\n \
    \   long abcabcabcabbc = abs(b - c);\n    long acbcabcabcabbc = abs(c - b);\n\
    \    long abcabcabcabcabc = abs(b - c);\n    long acbcabcabcabcabc = abs(c - b);\n\
    \    long abcabcabcabcabbc = abs(b - c);\n    long acbcabcabcabcabbc = abs(c -\
    \ b);\n    long abcabcabcabcabcabc = abs(b - c);\n    long acbcabcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabcabbc = abs(b - c);\n    long acbcabcabcabcabcabbc\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabc = abs(b - c);\n    long acbcabcabcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabbc = abs(b - c);\n    long acbcabcabcabcabcabcabbc\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabcabc = abs(b - c);\n    long acbcabcabcabcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabcabbc = abs(b - c);\n    long acbcabcabcabcabcabcabcabbc\
    \ = abs(c - b);\n    long abcabcabcabcabcabcabcabcabc = abs(b - c);\n    long\
    \ acbcabcabcabcabcabcabcabcabc = abs(c - b);\n    long abcabcabcab", "{\n    long\
    \ ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n   \
    \ long abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ab;\n  \
    \  long ac2ac = ac * ac;\n    long ac2bc = ac * bc;\n    long ac2abc = ac * abc;\n\
    \    long ac2bab = ac * bab;\n    long ac2acb = ac * acb;\n    long ac2bcb = ac\
    \ * bcb;\n    long ac2abbc = ac * abbc;\n    long ac2babc = ac * babc;\n    long\
    \ ac2babcb = ac * abbcb;\n    long ac2abbbc = ac * abbbc;\n    long ac2babbbc\
    \ = ac * babbbc;\n    long ac2abbcbc = ac * abbcbc;\n    long ac2babbcbc = ac\
    \ * babbcbc;\n    long ac2abbbcbc = ac * abbbcbc;\n    long ac2babbbcbc = ac *\
    \ babbbcbc;\n    long ac2abbcbcb = ac * abbcbcb;\n    long ac2babbcbcb = ac *\
    \ babbcbcb;\n    long ac2abbbcbcb = ac * abbbcbcb;\n    long ac2babbbcbcb = ac\
    \ * babbbcbcb;\n    long ac2abbcbcbc = ac * abbcbcbc;\n    long ac2babbcbcbc =\
    \ ac * babbcbcbc;\n    long ac2abbbcbcbc = ac * abbbcbcbc;\n    long ac2babbbcbcbc\
    \ = ac * babbbcbcbc;\n    long ac2abbcbcbcb = ac * abbcbcbcb;\n    long ac2babbcbcbcb\
    \ = ac * babbcbcbcb;\n    long ac2abbbcbcbcb = ac * abbbcbcbcb;\n    long ac2babbbcbcbcb\
    \ = ac * babbbcbcbcb;\n    long ac2abbcbcbcbc = ac * abbcbcbcbc;\n    long ac2babbcbcbcbc\
    \ = ac * babbcbcbcbc;\n    long ac2abbbcbcbcbc = ac * abbbcbcb", "{\n    long\
    \ ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n   \
    \ long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acbc = abs(c -\
    \ b);\n    long abbc = abs(b - b);\n    long acbca = abs(c - b);\n    long abcab\
    \ = abs(b - c);\n    long acbcab = abs(c - b);\n    long abcabc = abs(b - c);\n\
    \    long acbcabc = abs(c - b);\n    long abcabbc = abs(b - c);\n    long acbcabbc\
    \ = abs(c - b);\n    long abcabcab = abs(b - c);\n    long acbcabcab = abs(c -\
    \ b);\n    long abcabcabc = abs(b - c);\n    long acbcabcabc = abs(c - b);\n \
    \   long abcabcabbc = abs(b - c);\n    long acbcabcabbc = abs(c - b);\n    long\
    \ abcabcabcab = abs(b - c);\n    long acbcabcabcab = abs(c - b);\n    long abcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabc = abs(c - b);\n    long abcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabbc = abs(c - b);\n    long abcabcabcabcab\
    \ = abs(b - c);\n    long acbcabcabcabcab = abs(c - b);\n    long abcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcab\
    \ = abs(b - c);\n    long acbcabcabcabcabcab = abs(c - b);\n    long abcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabcab\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcab = abs(c - b);\n    long abcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabcab",
  "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb\
    \ = ac * bc;\n    long abc = ab * bc;\n    long abbc = ab * bc;\n    long acbc\
    \ = ac * bc;\n    long abac = ab * ac;\n    long abcab = ab * ab * c;\n    long\
    \ acbcab = ac * bc * c;\n    long abcabc = ab * ab * c * c;\n    long abcabcb\
    \ = ab * ab * c * c * c;\n    long acbcabcb = ac * bc * c * c;\n    long abcabcbc\
    \ = ab * ab * c * c * c * c;\n    long abcabcbcb = ab * ab * c * c * c * c * c;\n\
    \    long acbcabcbcb = ac * bc * c * c * c * c;\n    long abcabcbcbc = ab * ab\
    \ * c * c * c * c * c * c;\n    long abcabcbcbcb = ab * ab * c * c * c * c * c\
    \ * c;\n    long acbcabcbcbcb = ac * bc * c * c * c * c * c * c;\n    long abcabcbcbcbc\
    \ = ab * ab * c * c * c * c * c * c * c;\n    long abcabcbcbcbcb = ab * ab * c\
    \ * c * c * c * c * c * c;\n    long acbcabcbcbcbcb = ac * bc * c * c * c * c\
    \ * c * c * c;\n    long abcabcbcbcbcbc = ab * ab * c * c * c * c * c * c * c\
    \ * c;\n    long abcabcbcbcbcbcb = ab * ab * c * c * c * c * c * c * c * c;\n\
    \    long acbcabcbcbcbcbcb = ac * bc * c * c * c * c * c * c * c * c;\n    long\
    \ abcabcbcbcbcbcbc = ab * ab * c * c * c * c * c * c * c * c * c;\n    long abcabcbcbcbcbcbcb\
    \ = ab * ab * c * c * c * c * c * c * c * c * c;\n    long acbcabcb", "{\n   \
    \ long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long bd = abs(d - b);\n    long cd = abs(c - d);\n    long abc = ab + ac;\n\
    \    long bcd = bc + bd;\n    long abcd = abc + bcd;\n    long abdc = ab + bd;\n\
    \    long acbc = ac + bc;\n    long acdbc = ac + bd;\n    long acdbd = ac + cd;\n\
    \    long abcab = abc + abc;\n    long abcabc = abc + abc;\n    long abcabd =\
    \ abc + abd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc\
    \ + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n\
    \    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long\
    \ abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd\
    \ = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc\
    \ + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc\
    \ + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n\
    \    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long\
    \ abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd\
    \ = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc\
    \ + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc\
    \ + cd;\n    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n\
    \    long abcabcd = abc + abc + cd;\n    long abcabcd = abc + abc + cd;\n    long\
    \ abcabcd = ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(b - c);\n    long acb = abs(c - b);\n \
    \   long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long abbcd = abs(b\
    \ - c);\n    long acbd = abs(c - b);\n    long abbd = abs(b - b);\n    long acbd\
    \ = abs(c - b);\n    long abbda = abs(b - a);\n    long acbda = abs(c - b);\n\
    \    long abbdaa = abs(b - a);\n    long acbdaa = abs(c - b);\n    long abbdaaa\
    \ = abs(b - a);\n    long acbdaaa = abs(c - b);\n    long abbdaaaa = abs(b - a);\n\
    \    long acbdaaaa = abs(c - b);\n    long abbdaaaaa = abs(b - a);\n    long acbdaaaaa\
    \ = abs(c - b);\n    long abbdaaaaaa = abs(b - a);\n    long acbdaaaaaa = abs(c\
    \ - b);\n    long abbdaaaaaaa = abs(b - a);\n    long acbdaaaaaaa = abs(c - b);\n\
    \    long abbdaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaa = abs(c - b);\n  \
    \  long abbdaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaa = abs(c - b);\n  \
    \  long abbdaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaa = abs(c - b);\n\
    \    long abbdaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaaa = abs(c - b);\n\
    \    long abbdaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaaa = abs(c - b);\n\
    \    long abbdaaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaaaa = abs(c -\
    \ b);\n    long abbdaaaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaaaaa =\
    \ abs(c - b);\n    long abbdaaaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaaaaaaaa\
    \ = abs(c - b);\n    long abbdaaaaaaaaaaaaaa = abs(b - a);\n    long acbdaaaaaaa",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long abac = ab +\
    \ ac;\n    long acab = ac + ab;\n    long acbc = ac + bc;\n    long abacc = abac\
    \ + acbc;\n    long acabc = acab + abbc;\n    long abacbc = abacc + acbc ;\n \
    \   long acabbc = acabc + abbc;\n    long abacbca = abacbc + acbca;\n    long\
    \ acabbca = acabbc + abbca;\n    long abacbcab = abacbca+ acbcab;\n    long acabbcab\
    \ = acabbca+ abbcab;\n    long abacbcabc = abacbcab + acbcabc;\n    long acabbcabc\
    \ = acabbcab + abbcabc;\n    long abacbcabcd = abacbcabc + acbcabcd;\n    long\
    \ acabbcabcd = acabbcabc + abbcabcd;\n    long abacbcabcde = abacbcabcd + acbcabcde;\n\
    \    long acabbcabcde = acabbcabcd + abbcabcde;\n    long abacbcabcdef = abacbcabcde\
    \ + acbcabcdef;\n    long acabbcabcdef = acabbcabcde + abbcabcdef;\n    long abacbcabcdefg\
    \ = abacbcabcdef + acbcabcdefg;\n    long acabbcabcdefg = acabbcabcdef + abbcabcdefg;\n\
    \    long abacbcabcdefgh = abacbcabcdefg + acbcabcdefgh;\n    long acabbcabcdefgh\
    \ = acabbcabcdefg + abbcabcdefgh;\n    long abacbcabcdefghi = abacbcabcdefgh +\
    \ acbcabcdefghi;\n    long acabbcabcdefghi = acabbcabcdefgh + abbcabcdefghi;\n\
    \    long abacbcabc", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long\
    \ side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n\
    \    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a) + abs(b)\
    \ + abs(c);\n    long side6 = abs(a) - abs(b) - abs(c);\n    long side7 = abs(a)\
    \ - abs(b) + abs(c);\n    long side8 = abs(a) + abs(b) - abs(c);\n    long side9\
    \ = abs(a) - abs(b) + abs(c);\n    long side10 = abs(a) - abs(b) - abs(c);\n \
    \   long side11 = abs(a) + abs(b) - abs(c);\n    long side12 = abs(a) - abs(b)\
    \ + abs(c);\n    long side13 = abs(a) - abs(b) - abs(c);\n    long side14 = abs(a)\
    \ + abs(b) + abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n    long side16\
    \ = abs(a) - abs(b) - abs(c);\n    long side17 = abs(a) + abs(b) - abs(c);\n \
    \   long side18 = abs(a) - abs(b) + abs(c);\n    long side19 = abs(a) - abs(b)\
    \ - abs(c);\n    long side20 = abs(a) + abs(b) + abs(c);\n    long side21 = abs(a)\
    \ - abs(b) - abs(c);\n    long side22 = abs(a) + abs(b) - abs(c);\n    long side23\
    \ = abs(a) - abs(b) + abs(c);\n    long side24 = abs(a) - abs(b) - abs(c);\n \
    \   long side25 = abs(a) + abs(b) - abs(c);\n    long side26 = abs(a) - abs(b)\
    \ + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n    long side28 = abs(a)\
    \ + abs(b) + abs(c);\n    long side29 = abs(a) - abs(b) + abs(c);\n    long side30\
    \ = abs(a) - abs(b) - abs(c);\n    long side31 = abs(a) + abs(b) + abs(c);\n \
    \   long side32 = abs(a) - abs(b) + abs(c);\n    long side33 = abs(a) - abs(b)\
    \ - abs(c);\n    long side34 = abs(a) + abs(b) + abs(c);\n    long side35 = abs(a)\
    \ - abs(b) + abs(c);\n    long side36 = abs(a) - abs(b) - abs(c);\n    long side37\
    \ = abs(a) + abs(b) + abs(c);\n    long side38", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n\
    \    long abc = ab + ac;\n    long bcb = bc + cb;\n    long abbc = abb + bcc;\n\
    \    long abcc = abc + cbb;\n    long acbc = acb + cbb;\n    long accc = accc\
    \ + cbb;\n    long abbcc = abbc + bccc;\n    long abccc = abcc + ccb;\n    long\
    \ acbcc = acbc + ccc;\n    long acccc = accc + ccc;\n    long abbccc = abbc +\
    \ bccc; \n    long abcccb = abcc + cccb;\n    long acbccc = acbc + cccc;\n   \
    \ long accccb = accc + cccb;\n    long abbcccb = abbc + bcccb;\n    long abcccc\
    \ = abcc + cccc;\n    long acbcccb = acbc + ccccb;\n    long accccb = accc + cccc;\n\
    \    long abbcccb = abbc + bcccb;\n    long abcccc = abcc + cccc;\n    long acbcccb\
    \ = acbc + ccccb;\n    long accccb = accc + cccc;\n    long abbcccb = abbc + bcccb;\n\
    \    long abcccc = abcc + cccc;\n    long acbcccb = acbc + ccccb;\n    long accccb\
    \ = accc + cccc;\n    long abbcccb = abbc + bcccb;\n    long abcccc = abcc + cccc;\n\
    \    long acbcccb = acbc + ccccb;\n    long accccb = accc + cccc;\n    long abbcccb\
    \ = abbc + bcccb;\n    long abcccc = abcc + cccc;\n    long acbcccb = acbc + ccccb;\n\
    \    long accccb = accc + cccc;\n    long abbcccb = abbc + bcccb;\n    long abcccc\
    \ = abcc + cccc;\n    long acbcccb = acbc + ", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c -\
    \ b);\n    \n    if (ab > ac && ab > bc) \n    {\n        if (ac > bc) \n    \
    \    {\n            if (b > a) \n            {\n                return true;\n\
    \            }\n            else\n            {\n                return false;\n\
    \            }\n        }\n        else\n        {\n            return true;\n\
    \        }\n    }\n    else\n    {\n        return false;\n    }\n}\n</code>\n\
    <|/ a tags=c++,algorithm,geometry |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <cmath>\nusing namespace std;", "{\n    long side1 = abs(a) + abs(b)\
    \ + abs(c);\n    long side2 = abs(a) + abs(b) - abs(c);\n    long side3 = abs(a)\
    \ - abs(b) + abs(c);\n    long side4 = abs(a) - abs(b) - abs(c);\n    long side5\
    \ = abs(a) + abs(b) - abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n  \
    \  long side7 = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a) + abs(b) +\
    \ abs(c);\n    long side9 = abs(a) - abs(b) + abs(c);\n    long side10 = abs(a)\
    \ - abs(b) - abs(c);\n    long side11 = abs(a) + abs(b) + abs(c);\n    long side12\
    \ = abs(a) - abs(b) + abs(c);\n    long side13 = abs(a) - abs(b) - abs(c);\n \
    \   long side14 = abs(a) + abs(b) - abs(c);\n    long side15 = abs(a) - abs(b)\
    \ + abs(c);\n    long side16 = abs(a) + abs(b) + abs(c);\n    long side17 = abs(a)\
    \ - abs(b) - abs(c);\n    long side18 = abs(a) - abs(b) + abs(c);\n    long side19\
    \ = abs(a) + abs(b) - abs(c);\n    long side20 = abs(a) - abs(b) - abs(c);\n \
    \   long side21 = abs(a) + abs(b) + abs(c);\n    long side22 = abs(a) - abs(b)\
    \ + abs(c);\n    long side23 = abs(a) - abs(b) - abs(c);\n    long side24 = abs(a)\
    \ + abs(b) + abs(c);\n    long side25 = abs(a) - abs(b) + abs(c);\n    long side26\
    \ = abs(a) - abs(b) - abs(c);\n    long side27 = abs(a) + abs(b) - abs(c);\n \
    \   long side28 = abs(a) - abs(b) - abs(c);\n    long side29 = abs(a) + abs(b)\
    \ + abs(c);\n    long side30 = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a)\
    \ - abs(b) - abs(c);\n    long side32 = abs(a) + abs(b) + abs(c);\n    long side33\
    \ = abs(a) - abs(b) + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n \
    \   long side35 = abs(a) + abs(b) + abs(c);\n    long side36 = abs(a) - abs(b)\
    \ + abs(c);\n    long side37 = abs(a) - abs(b) - abs(c);\n    long side38", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long abbc = abs(b\
    \ - b);\n    long acbc = abs(c - b);\n    long acbca = abs(c - a);\n    long abca\
    \ = abs(b - a);\n    long abcab = abs(b - c);\n    long abcabc = abs(b - b);\n\
    \    long abcabbc = abs(b - c);\n    long abcabcabc = abs(b - c);\n    long abcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabc = abs(b - c);\n    long abcabcabcabbc =\
    \ abs(b - c);\n    long abcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc = abs(b - c);\n    long\
    \ abcabcabcabcabcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabbc = abs(b - c);\n    long\
    \ abcabcabcabcabcabcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabcabbc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabcabcabc = abs(b - c);\n\
    \    long abcabcabcabcabcabcabcabcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabcabcabbc = abs(b - c);\n\
    \    long abcabcabcabcabcabcabcabcabcabcabcabcabc = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabcabcab",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb = bc +\
    \ cb;\n    long acb = ac + cb;\n    long abbc = ab + bc;\n    long acbc = ac +\
    \ cb;\n    long abbcd = abbc + acbc;\n    long acbcd = acbc + abbc;\n    long\
    \ abbcde = abbcd + acbcd;\n    long acbcde = acbcd + abbcde;\n    long abbcdef\
    \ = abbcde + acbcde;\n    long acbcdef = acbcde + abbcdef;\n    long abbcdefg\
    \ = abbcdef + acbcdef;\n    long acbcdefg = acbcdef + abbcdefg;\n    long abbcdefgh\
    \ = abbcdefg + acbcdefg;\n    long acbcdefgh = acbcdefg + abbcdefgh;\n    long\
    \ abbcdefghi = abbcdefgh + acbcdefgh;\n    long acbcdefghi = acbcdefgh + abbcdefghi;\n\
    \    long abbcdefghij = abbcdefghi + acbcdefghi;\n    long acbcdefghij = acbcdefghi\
    \ + abbcdefghij;\n    long abbcdefghijk = abbcdefghij + acbcdefghij;\n    long\
    \ acbcdefghijk = acbcdefghij + abbcdefghijk;\n    long abbcdefghijkl = abbcdefghijk\
    \ + acbcdefghijk;\n    long acbcdefghijkl = acbcdefghijk + abbcdefghijkl;\n  \
    \  long abbcdefghijklmno = abbcdefghijkl + acbcdefghijkl;\n    long acbcdefghijklmno\
    \ = acbcdefghijkl + abbcdefghijklmno;\n    long abbcdefghijklmnop = abbcdefghijklmno\
    \ + acbcdefghijklmno;\n    long acbcdefghijklmnop = acbcdefghijklmno + abbcdefghijklmnop;\n\
    \    long ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n \
    \   long acbc = abs(c - b);\n    long abbc = abs(b - b);\n    long abac = abs(b\
    \ - a);\n    long acab = abs(c - a);\n    long abcab = abs(b - c);\n    long acbca\
    \ = abs(c - b);\n    long abcabc = abs(b - c);\n    long acbcab = abs(c - b);\n\
    \    long abcabcd = abs(b - c);\n    long acbcabd = abs(c - b);\n    long abcabcde\
    \ = abs(b - c);\n    long acbcabde = abs(c - b);\n    long abcabcdef = abs(b -\
    \ c);\n    long acbcabdef = abs(c - b);\n    long abcabcdefg = abs(b - c);\n \
    \   long acbcabdefg = abs(c - b);\n    long abcabcdefgh = abs(b - c);\n    long\
    \ acbcabdefgh = abs(c - b);\n    long abcabcdefghi = abs(b - c);\n    long acbcabdefghi\
    \ = abs(c - b);\n    long abcabcdefghij = abs(b - c);\n    long acbcabdefghij\
    \ = abs(c - b);\n    long abcabcdefghijk = abs(b - c);\n    long acbcabdefghijk\
    \ = abs(c - b);\n    long abcabcdefghijkl = abs(b - c);\n    long acbcabdefghijkl\
    \ = abs(c - b);\n    long abcabcdefghijkm = abs(b - c);\n    long acbcabdefghijkm\
    \ = abs(c - b);\n    long abcabcdefghijkn = abs(b - c);\n    long acbcabdefghijkn\
    \ = abs(c - b);\n    long abcabcdefghijko = abs(b - c);\n    long acbcabdefghijko\
    \ = abs(c - b);\n    long abcabcdefghijkp = abs(b - c);\n    long acbcabdefghijkp\
    \ = abs(c - b);\n    long abcabcdefghijkq = abs(b - c);\n    long acbcabdefghijkq\
    \ = abs(c - b);\n    long abcabcdefghijkr = abs(b - c);\n    long acbcabdef",
  "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n   \
    \ long e = Math.sqrt(d);\n    long f = (b + e) / (2 * a);\n    long g = (c + e)\
    \ / (2 * a);\n    long h = (b - e) / (2 * a);\n    long i = (a + e) / (2 * a);\n\
    \    long j = (a + f) / (2 * a);\n    long k = (b + f) / (2 * a);\n    long l\
    \ = (c + f) / (2 * a);\n    long m = (a + g) / (2 * a);\n    long n = (b + g)\
    \ / (2 * a);\n    long o = (c + g) / (2 * a);\n    long p = (a + h) / (2 * a);\n\
    \    long q = (b + h) / (2 * a);\n    long r = (c + h) / (2 * a);\n    long s\
    \ = (a + i) / (2 * a);\n    long t = (b + i) / (2 * a);\n    long u = (c + i)\
    \ / (2 * a);\n    long v = (a + j) / (2 * a);\n    long w = (b + j) / (2 * a);\n\
    \    long x = (c + j) / (2 * a);\n    long y = (a + k) / (2 * a);\n    long z\
    \ = (b + k) / (2 * a);\n    long A = (a + l) / (2 * a);\n    long B = (b + l)\
    \ / (2 * a);\n    long C = (c + l) / (2 * a);\n    long D = (a + m) / (2 * a);\n\
    \    long E = (b + m) / (2 * a);\n    long F = (c + m) / (2 * a);\n    long G\
    \ = (a + n) / (2 * a);\n    long H = (b + n) / (2 * a);\n    long I = (c + n)\
    \ / (2 * a);\n    long J = (a + o) / (2 * a);\n    long K = (b + o) / (2 * a);\n\
    \    long L = (c + o) / (2 * a);\n    long M = (a + p) / (2 * a);\n    long N\
    \ = (b + p) / (2 * a);\n    long O = (c + p) / (2 * a);\n    long P = (a + q)\
    \ / (2 * a);\n    long Q = (b + q) / (2 * a);\n    long R = (c + q) / (2 * a);\n\
    \    long S = (a + r) / (2 * a);\n    long T = (b + r) / (2 * a);\n    long U\
    \ = (c + r) / (2 * a);\n    long V = (a + s) / (2 * a);\n    ", "{\n    long angle;\n\
    \    bool result = false;\n    \n    angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n\
    \    \n    if (angle > M_PI/2.0) \n    {\n        result = true;\n    }\n    \n\
    \    return result;\n}", "{\n    long ab = a - b;\n    long ac = a - c;\n    long\
    \ bc = b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc\
    \ = acb * bc;\n    long abbc = abb * bc;\n    long abcc = abc * bc;\n    long\
    \ accc = acc * bc;\n    long abbbc = abbb * bc;\n    long abbcc = abbc * bc;\n\
    \    long abccc = abcc * bc;\n    long acccc = accc * bc;\n    long abbbcc = abbbc\
    \ * bc;\n    long abbccc = abbcc * bc;\n    long abcccc =abccc * bc;\n    long\
    \ accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc =abbccc\
    \ * bc;\n    long abcccc =abccc * bc;\n    long accccc =acccc * bc;\n    long\
    \ abbbccc =abbbcc * bc;\n    long abbcccc =abbccc * bc;\n    long abcccc =abccc\
    \ * bc;\n    long accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long\
    \ abbcccc =abbccc * bc;\n    long abcccc =abccc * bc;\n    long accccc =acccc\
    \ * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc =abbccc * bc;\n    long\
    \ abcccc =abccc * bc;\n    long accccc =acccc * bc;\n    long abbbccc =abbbcc\
    \ * bc;\n    long abbcccc =abbccc * bc;\n    long abcccc =abccc * bc;\n    long\
    \ accccc =acccc * bc;\n    long abbbccc =abbbcc * bc;\n    long abbcccc =abbccc\
    \ * bc;\n    long abcccc =", "{\n    long ab = a - b;\n    long ac = a - c;\n\
    \    long bc = b - c;\n    long abc = ab + bc;\n    long acb = ac - bc;\n    long\
    \ acb = acb > 0 ? acb : 0;\n    long abc = abc + acb;\n    long abc = abc > 0\
    \ ? abc : 0;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc\
    \ : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc :\
    \ ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n\
    \    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n  \
    \  long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long\
    \ abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc\
    \ = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc =\
    \ abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc\
    \ < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc <\
    \ ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab\
    \ ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ?\
    \ abc : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc\
    \ : ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc :\
    \ ab;\n    long abc = abc < ab ? abc : ab;\n    long abc = abc < ab ? abc : ab;\n\
    \    ", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n\
    \    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n\
    \    long abbc = abb * bc;\n    long acbcbc = acbcb * bc;\n    long abcbc = abcb\
    \ * bc;\n    long acbcbcb = acbcbcb * bc;\n    long abcbcb = abcbcb * bc;\n  \
    \  long acbcbcbc = acbcbcbc * bc;\n    long abcbcbc = abcbcbc * bc;\n    long\
    \ acbcbcbcb = acbcbcbcb * bc;\n    long abcbcbcb = abcbcbcb * bc;\n    long acbcbcbcbc\
    \ = acbcbcbcbc * bc;\n    long abcbcbcbc = abcbcbcbc * bc;\n    long acbcbcbcbcb\
    \ = acbcbcbcbcb * bc;\n    long abcbcbcbcb = abcbcbcbcb * bc;\n    long acbcbcbcbcbc\
    \ = acbcbcbcbcbc * bc;\n    long abcbcbcbcbc = abcbcbcbcbc * bc;\n    long acbcbcbcbcbcb\
    \ = acbcbcbcbcbcb * bc;\n    long abcbcbcbcbcb = abcbcbcbcbcb * bc;\n    long\
    \ acbcbcbcbcbcbc = acbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbc = abcbcbcbcbcbc\
    \ * bc;\n    long acbcbcbcbcbcbcb = acbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcb\
    \ = abcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbc = acbcbcbcbcbcbcbc * bc;\n\
    \    long abcbcbcbcbcbcbc = abcbcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbcbcb\
    \ = acbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcb = abcbcbcbcbcbcbcb * bc;\n\
    \    long acbcbcb", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n    \
    \    return false;\n    long e = Math.sqrt(d);\n    long f = (b + e) / (2 * a);\n\
    \    long g = (c + e) / (2 * a);\n    if (f > g)\n        return false;\n    if\
    \ (f < 0)\n        return true;\n    if (g < 0)\n        return false;\n    long\
    \ h = (b - e) / (2 * a);\n    if (h < 0)\n        return false;\n    if (h > 1)\n\
    \        return true;\n    return false;\n}\n</code>\n<|/ a dscore=2 |>\n<| c\
    \ |>\nThis code doesn't work. `right_angle_triangle(1,1,1)` returns `true`, but\
    \ `right_angle_triangle(1,1,2)` returns `false`\n<|/ c |>\n<| c |>\n: I fixed\
    \ the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis code doesn't work.\
    \ `right_angle_triangle(1,1,1)` returns `true`, but `right_angle_triangle(1,1,2)`\
    \ returns `false`\n<|/ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it\
    \ out.\n<|/ c |>\n<| a tags=c#,geometry |>\n<code>", "{\n    long ab = abs(b -\
    \ a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c\
    \ - b);\n    long abc = abs(b - c);\n    long acbc = abs(c - b);\n    long abcd\
    \ = abs(b - c);\n    long acbcdab = abs(c - b);\n    long acbcdabc = abs(c - b);\n\
    \    long acbcdabcd = abs(c - b);\n    long acbcdabcc = abs(c - b);\n    long\
    \ acbcdabccd = abs(c - b);\n    long acbcdabccdab = abs(c - b);\n    long acbcdabccdabc\
    \ = abs(c - b);\n    long acbcdabccdabcd = abs(c - b);\n    long acbcdabccdabcc\
    \ = abs(c - b);\n    long acbcdabccdabccd = abs(c - b);\n    long acbcdabccdabccdab\
    \ = abs(c - b);\n    long acbcdabccdabccdabc = abs(c - b);\n    long acbcdabccdabccdabcd\
    \ = abs(c - b);\n    long acbcdabccdabccdabcc = abs(c - b);\n    long acbcdabccdabccdabccd\
    \ = abs(c - b);\n    long acbcdabccdabccdabccdab = abs(c - b);\n    long acbcdabccdabccdabccdabc\
    \ = abs(c - b);\n    long acbcdabccdabccdabccdabcd = abs(c - b);\n    long acbcdabccdabccdabccdabcc\
    \ = abs(c - b);\n    long acbcdabccdabccdabccdabccd = abs(c - b);\n    long acbcdabccdabccdabccdabccdab\
    \ = abs(c - b);\n    long acbcdabccdabccdabccdabccdabc = abs(c - b);\n    long\
    \ acbcdabccdabccdabccdabccdabcd = abs(c - b);\n    long acbcdabccdabccdabccdabccdabcc\
    \ = abs(c - b);\n    long acbcdabccdabccdabccdabccdabccd = abs(c - b);\n    long\
    \ acbcdabccdabccdabccd", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long\
    \ side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n\
    \    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a) + abs(b)\
    \ + abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7 = abs(a)\
    \ - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n    long side9\
    \ = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) + abs(b) + abs(c);\n \
    \   long side11 = abs(a) - abs(b) + abs(c);\n    long side12 = abs(a) - abs(b)\
    \ - abs(c);\n    long side13 = abs(a) - abs(b) + abs(c);\n    long side14 = abs(a)\
    \ + abs(b) - abs(c);\n    long side15 = abs(a) + abs(b) + abs(c);\n    long side16\
    \ = abs(a) - abs(b) - abs(c);\n    long side17 = abs(a) - abs(b) + abs(c);\n \
    \   long side18 = abs(a) - abs(b) - abs(c);\n    long side19 = abs(a) + abs(b)\
    \ - abs(c);\n    long side20 = abs(a) + abs(b) + abs(c);\n    long side21 = abs(a)\
    \ - abs(b) - abs(c);\n    long side22 = abs(a) - abs(b) + abs(c);\n    long side23\
    \ = abs(a) - abs(b) + abs(c);\n    long side24 = abs(a) + abs(b) - abs(c);\n \
    \   long side25 = abs(a) + abs(b) + abs(c);\n    long side26 = abs(a) - abs(b)\
    \ + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n    long side28 = abs(a)\
    \ - abs(b) + abs(c);\n    long side29 = abs(a) + abs(b) + abs(c);\n    long side30\
    \ = abs(a) + abs(b) - abs(c);\n    long side31 = abs(a) - abs(b) + abs(c);\n \
    \   long side32 = abs(a) - abs(b) - abs(c);\n    long side33 = abs(a) - abs(b)\
    \ + abs(c);\n    long side34 = abs(a) + abs(b) - abs(c);\n    long side35 = abs(a)\
    \ + abs(b) + abs(c);\n    long side36 = abs(a) - abs(b) - abs(c);\n    long side37\
    \ = abs(a) - abs(b) + abs(c);\n    long side38", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long ad = abs(a - d);\n\
    \    long bd = abs(b - d);\n    long cd = abs(c - d);\n    long abc = ab + ac;\n\
    \    long bcd = bc + cd;\n    long abd = ab + bd;\n    long acd = ac + cd;\n \
    \   long abcd = abc + bcd;\n    long abdc = abd + cd;\n    long acdc = acd + cd;\n\
    \    long abcdb = abc + bcd;\n    long abdcb = abd + cdb;\n    long acdcb = acd\
    \ + cdb;\n    long abdcba = abd + cdb + abc;\n    long acdcba = acd + cdb + acc;\n\
    \    long abdcbac = abd + cdb + abc + acc;\n    long acdcbac = acd + cdb + acc\
    \ + abc;\n    long abdcbaca = abd + cdb + abc + acc + abc;\n    long acdcbaca\
    \ = acd + cdb + acc + abc + abc;\n    long abdcbacab = abd + cdb + abc + acc +\
    \ abc + abc;\n    long acdcbacab = acd + cdb + acc + abc + abc + abc;\n    long\
    \ abdcbacabc = abd + cdb + abc + acc + abc + abc + abc;\n    long acdcbacabc =\
    \ acd + cdb + acc + abc + abc + abc + abc;\n    long abdcbacabcd = abd + cdb +\
    \ abc + acc + abc + abc + abc + abc;\n    long acdcbacabcd = acd + cdb + acc +\
    \ abc + abc + abc + abc + abc;\n    long abdcbacabcde = abd + cdb + abc + acc\
    \ + abc + abc + abc + abc + abc;\n    long acdcbacabcde = acd + cdb + acc + abc\
    \ + abc + abc + abc + abc + abc;\n    long abdcbacabcdef = abd + cdb + abc + acc\
    \ + abc + abc + abc + abc + abc + abc;\n    long acdcbacabcdef = acd + cdb + acc\
    \ + abc + abc + abc + abc + abc + abc + abc;\n    long ab", "{\n    long side1\
    \ = abs(a) + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n  \
    \  long side3 = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) + abs(b) -\
    \ abs(c);\n    long side5 = abs(a) + abs(b) + abs(c);\n    long side6 = abs(a)\
    \ - abs(b) + abs(c);\n    long side7 = abs(a) - abs(b) - abs(c);\n    long side8\
    \ = abs(a) - abs(b) + abs(c);\n    long side9 = abs(a) + abs(b) - abs(c);\n  \
    \  long side10 = abs(a) - abs(b) + abs(c);\n    long side11 = abs(a) - abs(b)\
    \ - abs(c);\n    long side12 = abs(a) + abs(b) - abs(c);\n    long side13 = abs(a)\
    \ + abs(b) + abs(c);\n    long side14 = abs(a) - abs(b) - abs(c);\n    long side15\
    \ = abs(a) - abs(b) + abs(c);\n    long side16 = abs(a) + abs(b) + abs(c);\n \
    \   long side17 = abs(a) + abs(b) - abs(c);\n    long side18 = abs(a) - abs(b)\
    \ - abs(c);\n    long side19 = abs(a) - abs(b) + abs(c);\n    long side20 = abs(a)\
    \ + abs(b) + abs(c);\n    long side21 = abs(a) + abs(b) - abs(c);\n    long side22\
    \ = abs(a) - abs(b) + abs(c);\n    long side23 = abs(a) - abs(b) - abs(c);\n \
    \   long side24 = abs(a) + abs(b) + abs(c);\n    long side25 = abs(a) + abs(b)\
    \ - abs(c);\n    long side26 = abs(a) - abs(b) + abs(c);\n    long side27 = abs(a)\
    \ - abs(b) - abs(c);\n    long side28 = abs(a) - abs(b) + abs(c);\n    long side29\
    \ = abs(a) + abs(b) + abs(c);\n    long side30 = abs(a) + abs(b) - abs(c);\n \
    \   long side31 = abs(a) - abs(b) + abs(c);\n    long side32 = abs(a) - abs(b)\
    \ - abs(c);\n    long side33 = abs(a) - abs(b) + abs(c);\n    long side34 = abs(a)\
    \ + abs(b) + abs(c);\n    long side35 = abs(a) + abs(b) - abs(c);\n    long side36\
    \ = abs(a) - abs(b) + abs(c);\n    long side37 = abs(a) - abs(b) - abs(c);\n \
    \   long side38", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n \
    \   long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b -\
    \ c);\n    long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long abac\
    \ = abs(b - a);\n    long abcab = abs(b - c);\n    long acabc = abs(c - a);\n\
    \    long abcabc = abs(b - c);\n    long acabbc = abs(c - b);\n    long abcabbc\
    \ = abs(b - c);\n    long acabcabc = abs(c - a);\n    long abcabcabc = abs(b -\
    \ c);\n    long acabcabbc = abs(c - b);\n    long abcabcabbc = abs(b - c);\n \
    \   long acabcabcabc = abs(c - a);\n    long abcabcabbcabc = abs(b - c);\n   \
    \ long acabcabcabbc = abs(c - b);\n    long abcabcabbcabbc = abs(b - c);\n   \
    \ long acabcabcabbcabc = abs(c - a);\n    long abcabcabbcabbcabc = abs(b - c);\n\
    \    long acabcabcabbcabbc = abs(c - b);\n    long abcabcabbcabbcabbc = abs(b\
    \ - c);\n    long acabcabcabbcabbcabc = abs(c - a);\n    long abcabcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acabcabcabbcabbcabbc = abs(c - b);\n    long abcabcabbcabbcabbcabbc\
    \ = abs(b - c);\n    long acabcabcabbcabbcabbcabc = abs(c - a);\n    long abcabcabbcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acabcabcabbcabbcabbcabbc = abs(c - b);\n    long abcabcabbcabbcabbcabbcabbc\
    \ = abs(b - c);\n    long acabcabcabbcabbcabbcabbcabc = abs(c - a);\n    long\
    \ abcabcabbcabbcabbcabbcabbcabc = abs(b - c);\n    long acabcabcabbcabbcabbcabbcabbc\
    \ = abs(c - b);\n    long abcabcabbcabbcabbcabbcabbcabbc = abs(b - c);\n    long\
    \ acabcabcabbcabbcabbcabbcab", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc =\
    \ abs(b - c);\n    long acbc = abs(c - b);\n    long abbc = abs(b - b);\n    long\
    \ abac = abs(b - a);\n    long acab = abs(c - a);\n    long abcab = abs(b - c);\n\
    \    long acbcab = abs(c - b);\n    long abcabc = abs(b - c);\n    long acbcabc\
    \ = abs(c - b);\n    long abcabbc = abs(b - c);\n    long acbcabbc = abs(c - b);\n\
    \    long abcabcabc = abs(b - c);\n    long acbcabcabc = abs(c - b);\n    long\
    \ abcabcabbc = abs(b - c);\n    long acbcabcabbc = abs(c - b);\n    long abcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabc = abs(c - b);\n    long abcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabbc = abs(c - b);\n    long abcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabcabc = abs(c - b);\n    long abcabcabcabcabcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabcabbc = abs(c - b);\n    long abcabcabcabcabcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabcabcabcabcabc = abs(", "{\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n    long acd = abs(ac + bc);\n\
    \    long abcd = abs(abc);\n    long bcda = abs(bcd - acd);\n    long acdb = abs(acd\
    \ - ab);\n    long abcda = abs(abcd - acdb);\n    long bcdaa = abs(bcda - abcda);\n\
    \    long acbba = abs(acdba - abcda);\n    long acbca = abs(acdba - ab);\n   \
    \ long acbda = abs(acdba - bc);\n    long acbdaa = abs(acbda - abcda);\n    long\
    \ acbdaaa = abs(acbdaa - acbba);\n    long acbdaaab = abs(acbdaaab - acbca);\n\
    \    long acbdaaabc = abs(acbdaaabc - acbda);\n    long acbdaaabca = abs(acbdaaabca\
    \ - acbdaa);\n    long acbdaaabcaa = abs(acbdaaabcaa - acbdaaa);\n    long acbdaaabcaab\
    \ = abs(acbdaaabcaab - acbdaaab);\n    long acbdaaabcaabc = abs(acbdaaabcaabc\
    \ - acbdaaabc);\n    long acbdaaabcaabcd = abs(acbdaaabcaabcd - acbdaaabca);\n\
    \    long acbdaaabcaabcc = abs(acbdaaabcaabcc - acbdaaabca);\n    long acbdaaabcaabccd\
    \ = abs(acbdaaabcaabccd - acbdaaabcaa);\n    long acbdaaabcaabcccc = abs(acbdaaabcaabcccc\
    \ - acbdaaabcaaa);\n    long acbdaaabcaabccccd = abs(acbdaaabcaabccccd - acbdaaabcaaab);\n\
    \    long acbdaaabcaabcccccc = abs(acbdaaabcaabcccccc - acbdaaabcaaabb);\n   \
    \ long acbdaaabcaabccccccd = abs(acbdaaabcaabccccccd - acbdaaabcaaabbc);\n   \
    \ long acbdaaabcaabcccccccd = abs(acb", "{\n    long ab = abs(b - a);\n    long\
    \ ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc = abs(ab + ac);\n\
    \    long acb = abs(ac + bc);\n    long abbc = abs(ab + bc);\n    long acab =\
    \ abs(ac + ab);\n    long abcab = abs(ab + ab);\n    long acabc = abs(ac + abc);\n\
    \    long abcabc = abs(ab + abc);\n    long acbcab = abs(ac + bc);\n    long abcabbc\
    \ = abs(ab + bc);\n    long acbcabab = abs(ac + ab);\n    long abcabcab = abs(ab\
    \ + ab);\n    long acbcababc = abs(ac + abc);\n    long abcabcabc = abs(ab + abc);\n\
    \    long acbcababbc = abs(ac + bc);\n    long abcabcabbc = abs(ab + bc);\n  \
    \  long acbcababcab = abs(ac + ab);\n    long abcabcabcab = abs(ab + ab);\n  \
    \  long acbcababcabc = abs(ac + abc);\n    long abcabcabcabc = abs(ab + abc);\n\
    \    long acbcababcabbc = abs(ac + bc);\n    long abcabcabcabbc = abs(ab + bc);\n\
    \    long acbcababcabcab = abs(ac + ab);\n    long abcabcabcabcab = abs(ab + ab);\n\
    \    long acbcababcabcabc = abs(ac + abc);\n    long abcabcabcabcabc = abs(ab\
    \ + abc);\n    long acbcababcabcabbc = abs(ac + bc);\n    long abcabcabcabcabbc\
    \ = abs(ab + bc);\n    long acbcababcabcabcab = abs(ac + ab);\n    long abcabcabcabcabcab\
    \ = abs(ab + ab);\n    long acbcababcabcabcabc = abs(ac + abc);\n    long abcabcabcabcabcabc\
    \ = abs(ab + abc);\n    long acbcababcabcabcabbc = abs(ac + bc);\n    long abcabcabcabcabcabbc\
    \ = abs(ab + bc);\n    long acbcababcabcabcabcab = abs(ac + ab);\n    long abcabcabcabcabcabcab\
    \ = abs(ab + ab);\n    long acbcababcabcab", "{\n    long side1 = abs(a) + abs(b)\
    \ + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a)\
    \ - abs(b) + abs(c);\n    \n    bool isRightAngle = side1 == side2 && side2 ==\
    \ side3;\n    return isRightAngle;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b\
    \ - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb\
    \ * bc;\n    long abbc = abb * bc;\n    long acbcbc = acbcb * bc;\n    long abcbc\
    \ = abcb * bc;\n    long acbcbcbc = acbcbcb * bc;\n    long abcbcbc = abcbcb *\
    \ bc;\n    long acbcbcbcbc = acbcbcbcb * bc;\n    long abcbcbcbc = abcbcbcb *\
    \ bc;\n    long acbcbcbcbcbc = acbcbcbcbcb * bc;\n    long abcbcbcbcbc = abcbcbcbcb\
    \ * bc;\n    long acbcbcbcbcbcbc = acbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbc\
    \ = abcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbc = acbcbcbcbcbcbcb * bc;\n  \
    \  long abcbcbcbcbcbcbc = abcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbcbc =\
    \ acbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcb * bc;\n\
    \    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbc\
    \ * bc;\n    long abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbc * bc;\n    long\
    \ acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbc\
    \ * bc;\n    ", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return\
    \ false;\n    long e = Math.sqrt(d);\n    long f = (b + e * c) / a;\n    long\
    \ g = (b - e * c) / a;\n    return (f >= 0 && f <= 1 && g >= 0 && g <= 1);\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP asked\
    \ for a solution that doesn't require any libraries.\n<|/ c |>\n<| c |>\nI didn't\
    \ say it requires any libraries. I said it requires no libraries. And it does\
    \ answer the question. OP asked for a solution that doesn't require any libraries.\
    \ I provided a solution that doesn't require any libraries. OP asked for a solution\
    \ that doesn't require any libraries. I provided a solution that doesn't require\
    \ any libraries. OP asked for a solution that doesn't require any libraries. I\
    \ provided a solution that doesn't require any libraries. OP asked for a solution\
    \ that doesn't require any libraries. I provided a solution that doesn't require\
    \ any libraries.\n<|/ c |>\n<| c |>\nOP asked for a solution that doesn't require\
    \ any libraries. I provided a solution that doesn't require any libraries. OP\
    \ asked for a solution that doesn't require any libraries. I provided a solution\
    \ that doesn't require any libraries. OP asked for a solution that doesn't require\
    \ any libraries. I provided a solution that doesn't require any libraries. OP\
    \ asked for a solution that doesn't require any libraries. I provided a solution\
    \ that doesn't require any libraries. OP asked for a solution that doesn't require\
    \ any libraries. I provided a solution that doesn't require any libraries. OP\
    \ asked for a solution that doesn't require any libraries. I provided a solution\
    \ that doesn't require any libraries.\n<|/ c |>\n<| c |>\nOP asked for a solution\
    \ that doesn't require any libraries. I provided a solution that doesn't require\
    \ any libraries. OP asked for a solution that doesn't require any libraries. I\
    \ provided a solution that doesn't require any libraries. OP asked for a solution\
    \ that doesn't require any libraries. I provided a solution that doesn't require\
    \ any libraries. OP asked for a solution that doesn't require any libraries. I\
    \ provided a solution that doesn't require any libraries. OP asked for a solution\
    \ that doesn't require any libraries. I provided a solution that doesn't require\
    \ any libraries. OP asked for a solution that doesn't require any libraries. I\
    \ provided a solution that doesn't require any libraries. OP asked for a ", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long cb = abs(c - b);\n    \n    if (ab == ac)\n    {\n        if (ab ==\
    \ bc)\n        {\n            if (ab == cb)\n            {\n                return\
    \ true;\n            }\n            else\n            {\n                return\
    \ false;\n            }\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        return false;\n    }\n}\n\
    </code>\n<|/ a tags=c++,algorithm,geometry |>\n<| c |>\nThis doesn't work. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` but `right_angle_triangle(3, 4, 6)` returns `false`.\n\
    <|/ c |>\n<| c |>\n: Thanks for pointing that out. I've fixed the code.\n<|/ c\
    \ |>\n<| c |>\n: Thanks for pointing that out. I've fixed the code.\n<|/ c |>\n\
    <| c |>\n: Thanks for pointing that out. I've fixed the code.\n<|/ c |>\n<| c\
    \ |>\n: Thanks for pointing that out. I've fixed the code.\n<|/ c |>\n<| a tags=c++,algorithm,geometry\
    \ |>\n<code>", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return\
    \ false;\n    long e = Math.sqrt(d);\n    long f = (b + e) / (2 * a);\n    long\
    \ g = (c + e) / (2 * a);\n    return ((f < 0 && g > 0) || (f > 0 && g < 0));\n\
    }\n</code>\n<|/ a tags=c#,geometry,math |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to know if a triangle is right angled, not whether it has a right angled\
    \ triangle.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants to\
    \ know if a triangle is right angled, not whether it has a right angled triangle.\n\
    <|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants to know if a triangle\
    \ is right angled, not whether it has a right angled triangle.\n<|/ c |>\n<| a\
    \ dscore=4 |>\n<code>", "{\n    long ab = a - b;\n    long ac = a - c;\n    long\
    \ bc = b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc\
    \ = acb * bc;\n    long acbca = acbc * ca;\n    long abca = abc * ca;\n    long\
    \ abcab = abca * bc;\n    long abcabc = abcab * bc;\n    long abcabca = abcabc\
    \ * ca;\n    long abcabcab = abcabca * bc;\n    long abcabcabc = abcabcab * bc;\n\
    \    long abcabcabca = abcabcabc * ca;\n    long abcabcabcab = abcabcabca * bc;\n\
    \    long abcabcabcabc = abcabcabcab * bc;\n    long abcabcabcabca = abcabcabcabc\
    \ * ca;\n    long abcabcabcabcab = abcabcabcabca * bc;\n    long abcabcabcabcabc\
    \ = abcabcabcabcab * bc;\n    long abcabcabcabcabca = abcabcabcabcabc * ca;\n\
    \    long abcabcabcabcabcab = abcabcabcabcabca * bc;\n    long abcabcabcabcabcabc\
    \ = abcabcabcabcabcab * bc;\n    long abcabcabcabcabcabca = abcabcabcabcabcabc\
    \ * ca;\n    long abcabcabcabcabcabcab = abcabcabcabcabcabca * bc;\n    long abcabcabcabcabcabcabc\
    \ = abcabcabcabcabcabcab * bc;\n    long abcabcabcabcabcabcabcab = abcabcabcabcabcabcabca\
    \ * bc;\n    long abcabcabcabcabcabcabcabc = abcabcabcabcabcabcabcab * bc;\n \
    \   long abcabcabcabcabcabcabcab = abcabcabcabcabcabcabcabca * bc;\n    long abcabcabcabcabcabcabcabc\
    \ = abcabcabcabcabcabcabcabcab * bc;\n    long abcabcabcabcabcabcabcabca = abcabcabcabcabcabcabcabcabc\
    \ * ca;\n    long abcabcabcabcabcabcabcabcab = abcabcabcabcabcabcabcabcabca *\
    \ bc;\n    long abcabcabcabcabcabcabcabcabc = abcab", "{\n    long angle;\n  \
    \  bool isRightAngle = false;\n    \n    angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n\
    \    \n    if (angle > M_PI/2.0) \n    {\n        isRightAngle = true;\n    }\n\
    \    \n    return isRightAngle;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI believe\
    \ this would only work if the triangle is right angled, which is not necessarily\
    \ the case for many triangles.\n<|/ c |>\n<| c |>\nYes, you are right. My answer\
    \ was based on the assumption that a triangle is right angled triangle. Thanks\
    \ for pointing out.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc =\
    \ abs(ab + ac);\n    long bcd = abs(bc + ab);\n    long acd = abs(ac + ab);\n\
    \    long abcd = abs(abc + bcd);\n    long acdb = abs(acd + abc);\n    long abcda\
    \ = abs(abcd + acb);\n    long acdbc = abs(acdb + abc);\n    long acdbca = abs(acdbc\
    \ + acb);\n    long acdbcab = abs(acdbca + acb);\n    long acdbcabc = abs(acdbcab\
    \ + acb);\n    long acdbcabcd = abs(acdbcabc + acb);\n    long acdbcabcda = abs(acdbcabcd\
    \ + acb);\n    long acdbcabcdaa = abs(acdbcabcda + acb);\n    long acdbcabcdaab\
    \ = abs(acdbcabcdaa + acb);\n    long acdbcabcdaabc = abs(acdbcabcdaab + acb);\n\
    \    long acdbcabcdaabcd = abs(acdbcabcdaabcd + acb);\n    long acdbcabcdaabcda\
    \ = abs(acdbcabcdaabcda + acb);\n    long acdbcabcdaabcdaa = abs(acdbcabcdaabcdaa\
    \ + acb);\n    long acdbcabcdaabcdaab = abs(acdbcabcdaabcdaab + acb);\n    long\
    \ acdbcabcdaabcdaabc = abs(acdbcabcdaabcdaabc + acb);\n    long acdbcabcdaabcdaabcd\
    \ = abs(acdbcabcdaabcdaabcd + acb);\n    long acdbcabcdaabcdaabcda = abs(acdbcabcdaabcdaabcda\
    \ + acb);\n    long acdbcabcdaabcdaabcdaa = abs(acdbcabcdaabcdaabcdaa + acb);\n\
    \    long acdbcabcdaabcdaabcdaab = abs(acdbcabcdaabcdaabcdaab + acb);\n    long\
    \ acdbcabcdaabcdaabcdaabc = abs(acdbcabcdaabcdaabcdaabc + acb);\n    long acdbcabcdaabcdaabcdaabcd\
    \ = abs(acdbcabcdaabcdaabcdaabcd + acb);\n    long acdbcabcdaabc", "{\n    long\
    \ angle;\n    \n    angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n    \n    if\
    \ (angle < 0.0) \n    {\n        angle = -angle;\n    }\n    \n    if (angle >\
    \ std.pi) \n    {\n        angle = std.pi - angle;\n    }\n    \n    if (angle\
    \ > std.pi / 2.0) \n    {\n        return true;\n    }\n    \n    return false;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,trigonometry,geometry |>\n<code>\n\
    #include <iostream>\n#include <cmath>", "{\n    long ab = abs(b - a);\n    long\
    \ ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc = ab + bc;\n    long\
    \ acb = ac + ab;\n    long ac2ab = ac * ac;\n    long ac2bc = ac * bc;\n    long\
    \ ac2abc = ac2ab + ac2bc;\n    long ac2abbc = ac2ab * bc;\n    long ac2abbbc =\
    \ ac2ab * bc;\n    long ac2abbcc = ac2ab * bc;\n    long ac2bcba = ac * bc;\n\
    \    long ac2bcbb = ac * bc;\n    long ac2bcbc = ac * bc;\n    long ac2bcbca =\
    \ ac * bc;\n    long ac2bcbcb = ac * bc;\n    long ac2bcbcc = ac * bc;\n    long\
    \ ac2bcbcca = ac * bc;\n    long ac2bcbccb = ac * bc;\n    long ac2bcbccc = ac\
    \ * bc;\n    long ac2bcbccca = ac * bc;\n    long ac2bcbcccb = ac * bc;\n    long\
    \ ac2bcbcccc = ac * bc;\n    long ac2bcbcccca = ac * bc;\n    long ac2bcbccccb\
    \ = ac * bc;\n    long ac2bcbccccc = ac * bc;\n    long ac2bcbccccca = ac * bc;\n\
    \    long ac2bcbcccccb = ac * bc;\n    long ac2bcbcccccc = ac * bc;\n    long\
    \ ac2bcbcccccca = ac * bc;\n    long ac2bcbccccccb = ac * bc;\n    long ac2bcbccccccc\
    \ = ac * bc;\n    long ac2bcbccccccca = ac * bc;\n    long ac2bcbcccccccb = ac\
    \ * bc;\n    long ac2bcbccccccc = ac * bc;\n    long ac2bcbcccccca = ac * bc;\n\
    \    long ac2bcbccccccb = ac * bc;\n    long ac2bcbccccccc = ac * bc;\n    long\
    \ ac2bcbcccccca = ac * bc;\n    long ac2bcbccccccb = ac * bc;\n    long ac2bcb",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb = bc +\
    \ cb;\n    long acb = ac + cb;\n    long abbc = ab + bc;\n    long bcab = bc +\
    \ ac;\n    long cabc = cb + ac;\n    long abcab = abc + ab;\n    long bcbab =\
    \ bcb + ab;\n    long cabab = cab + ab;\n    long bcabab = bcab + ab;\n    long\
    \ cababc = cabab + ac;\n    long abcabc = abcab + ac;\n    long abcabbc = abcabc\
    \ + bc;\n    long abcabcb = abcabbc + cb;\n    long abcabcbc = abcabcb + bc;\n\
    \    long abcabcbcb = abcabcbc + cb;\n    long abcabcbcbc = abcabcbcb + bc;\n\
    \    long abcabcbcbcb = abcabcbcbc + cb;\n    long abcabcbcbcbc = abcabcbcbcb\
    \ + bc;\n    long abcabcbcbcbcb = abcabcbcbcbc + cb;\n    long abcabcbcbcbcbc\
    \ = abcabcbcbcbcb + bc;\n    long abcabcbcbcbcbcb = abcabcbcbcbcbc + cb;\n   \
    \ long abcabcbcbcbcbcbc = abcabcbcbcbcbcb + bc;\n    long abcabcbcbcbcbcbc = abcabcbcbcbcbcbc\
    \ + cb;\n    long abcabcbcbcbcbcbcb = abcabcbcbcbcbcbc + cb;\n    long abcabcbcbcbcbcbcbc\
    \ = abcabcbcbcbcbcbcb + bc;\n    long abcabcbcbcbcbcbcbcb = abcabcbcbcbcbcbcbc\
    \ + cb;\n    long abcabcbcbcbcbcbcbcb = abcabcbcbcbcbcbcbc + cb;\n    long abcabcbcbcbcbcbcbcb\
    \ = abcabcbcbcbcbcbcbc + cb;\n    long abcabcbcbcbcbcbcbcbc = abcabcbcbcbcbcbcbc\
    \ + cb;\n    long abcabcbcbcbcbcbcbcbc = abcabcbcbcb", "{\n    long angle;\n \
    \   \n    angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n    \n    if (angle >\
    \ PI/2) \n    {\n        angle = angle - PI;\n    }\n    \n    if (angle < -PI/2)\
    \ \n    {\n        angle = angle + PI;\n    }\n    \n    if (angle > PI) \n  \
    \  {\n        angle = angle - PI;\n    }\n    \n    if (angle < -PI) \n    {\n\
    \        angle = angle + PI;\n    }\n    \n    if (angle > PI/2) \n    {\n   \
    \     angle = angle - PI;\n    }\n    \n    if (angle < -PI/2) \n    {\n     \
    \   angle = angle + PI;\n    }\n    \n    if (angle > PI) \n    {\n        angle\
    \ = angle - PI;\n    }\n    \n    if (angle < -PI) \n    {\n        angle = angle\
    \ + PI;\n    }\n    \n    if (angle > PI/2) \n    {\n        angle = angle - PI;\n\
    \    }\n    \n    if (angle < -PI/2) \n    {\n        angle = angle + PI;\n  \
    \  }\n    \n    if (angle > PI) \n    {\n        angle = angle - PI;\n    }\n\
    \    \n    if (angle < -PI) \n    {\n        angle = angle + PI;\n    }\n    \n\
    \    if (angle > PI/2) \n    {\n        angle = angle - PI;\n    }\n    \n   \
    \ if (angle < -PI/2) \n    {\n        angle = angle + PI;\n    }\n    \n    if\
    \ (angle > PI) \n    {\n        angle = angle - PI;\n    }\n    \n    if (angle\
    \ < -PI) \n    {\n        angle = angle + PI;\n    }\n    \n    if (angle > PI/2)\
    \ \n    {\n        angle = angle - PI;\n    }\n    \n    if (angle < -PI/2) \n\
    \    {\n        angle = angle + PI;\n    }\n    \n    if (angle > PI) \n    {\n\
    \        angle = angle - PI;\n    }\n    \n    if (angle < -PI) \n    {\n    \
    \    angle = angle + PI;\n    }\n    \n    if (angle > PI/2) \n    {\n       \
    \ angle = angle - PI;\n    }\n    \n    if (angle < -PI/2) \n    {\n        angle\
    \ = angle + PI;\n    }\n    \n    if (angle > PI) \n    {\n        angle = angle\
    \ - PI;\n    }\n    \n    if (angle < -PI) \n    {\n        angle = angle + PI;\n\
    \    }\n    \n    if (", "{\n    long ab = abs(b - a);\n    long ac = abs(c -\
    \ a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n    long abc = ab\
    \ + ac;\n    long bcb = bc + cb;\n    long abbc = abb + bcc;\n    long abcc =\
    \ abc + cbb;\n    long abbb = abbc + cbb;\n    long abbc = abbc + cbb;\n    long\
    \ abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc = abbc + cbb;\n\
    \    long abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc = abbc\
    \ + cbb;\n    long abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc\
    \ = abbc + cbb;\n    long abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n  \
    \  long abbc = abbc + cbb;\n    long abcc = abcc + cbb;\n    long abbb = abbb\
    \ + cbb;\n    long abbc = abbc + cbb;\n    long abcc = abcc + cbb;\n    long abbb\
    \ = abbb + cbb;\n    long abbc = abbc + cbb;\n    long abcc = abcc + cbb;\n  \
    \  long abbb = abbb + cbb;\n    long abbc = abbc + cbb;\n    long abcc = abcc\
    \ + cbb;\n    long abbb = abbb + cbb;\n    long abbc = abbc + cbb;\n    long abcc\
    \ = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc = abbc + cbb;\n  \
    \  long abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc = abbc\
    \ + cbb;\n    long abcc = abcc + cbb;\n    long abbb = abbb + cbb;\n    long abbc\
    \ = abbc + cbb;\n    long abcc = abcc + cbb;\n    long ab", "{\n    long ab =\
    \ abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ abc = ab + bc;\n    long acb = ac + ab;\n    long abba = ab + ac;\n    long\
    \ acab = ac + ab;\n    long abcab = ab + ac + bc;\n    long acabc = ac + ab +\
    \ bc;\n    long abcabc = ab + ac + bc + abc;\n    long acabcb = ac + ab + bc +\
    \ abc;\n    long abcabcb = ab + ac + bc + abc;\n    long acabcba = ac + ab + bc\
    \ + abc + ba;\n    long abcabcba = ab + ac + bc + abc + ba;\n    long acabcbac\
    \ = ac + ab + bc + abc + ba + c;\n    long abcabcbac = ab + ac + bc + abc + ba\
    \ + c;\n    long acabcbaca = ac + ab + bc + abc + ba + c + a;\n    long abcabcbaca\
    \ = ab + ac + bc + abc + ba + c + a;\n    long acabcbacab = ac + ab + bc + abc\
    \ + ba + c + a + b;\n    long abcabcbacab = ab + ac + bc + abc + ba + c + a +\
    \ b;\n    long acabcbacabc = ac + ab + bc + abc + ba + c + a + b + c;\n    long\
    \ abcabcbacabc = ab + ac + bc + abc + ba + c + a + b + c;\n    long acabcbacabcb\
    \ = ac + ab + bc + abc + ba + c + a + b + c + b;\n    long abcabcbacabcb = ab\
    \ + ac + bc + abc + ba + c + a + b + c + b;\n    long acabcbacabcbc = ac + ab\
    \ + bc + abc + ba + c + a + b + c + b + c;\n    long abcabcbacabcbc = ab + ac\
    \ + bc + abc + ba + c + a + b + c + b + c;\n    long acabcbacabcbca = ac + ab\
    \ + bc + abc + ba + c + a + b + c + b + c + a;\n    long abcabcbacabcbca = ab\
    \ + ac + bc + abc + ba + c + a + b + c + b + c + a;\n    long acabcbacabcbcab\
    \ = ac + ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long cb = abs(c - b);\n    \n    long det = ab * bc -\
    \ ac * cb;\n    \n    if (det > 0)\n    {\n        long r = det / ab;\n      \
    \  long s = ac * bc + ab * cb;\n        \n        if (s > 0)\n        {\n    \
    \        long t = bc / bc;\n            \n            if (t > 0)\n           \
    \ {\n                return true;\n            }\n            else\n         \
    \   {\n                return false;\n            }\n        }\n        else\n\
    \        {\n            return false;\n        }\n    }\n    else\n    {\n   \
    \     return false;\n    }\n}", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long abc = ab + bc;\n    long acb = ac\
    \ + ab;\n    long ac2ab = ac * ac;\n    long ac2bc = ac * bc;\n    long ac2abc\
    \ = ac * abc;\n    long ac2bab = ac * bab;\n    long ac2acb = ac * acb;\n    long\
    \ ac2b2ab = ac * ac2 * ab;\n    long ac2b2ac = ac * ac2 * ac;\n    long ac2b2abc\
    \ = ac * ac2 * abc;\n    long ac2b2acb = ac * ac2 * acb;\n    long ac2b2ab2ac\
    \ = ac * ac2 * ab2 * ac;\n    long ac2b2ab2cb = ac * ac2 * ab2 * cb;\n    long\
    \ ac2b2ab2cba = ac * ac2 * ab2 * cba;\n    long ac2b2ab2cbac = ac * ac2 * ab2\
    \ * cbac;\n    long ac2b2ab2cbacb = ac * ac2 * ab2 * cbacb;\n    long ac2b2ab2cbacba\
    \ = ac * ac2 * ab2 * cbacba;\n    long ac2b2ab2cbacbacb = ac * ac2 * ab2 * cbacbac;\n\
    \    long ac2b2ab2cbacbacba = ac * ac2 * ab2 * cbacbacba;\n    long ac2b2ab2cbacbacbac\
    \ = ac * ac2 * ab2 * cbacbacbac;\n    long ac2b2ab2cbacbacbacb = ac * ac2 * ab2\
    \ * cbacbacbacba;\n    long ac2b2ab2cbacbacbacba = ac * ac2 * ab2 * cbacbacbacba;\n\
    \    long ac2b2ab2cbacbacbacbac = ac * ac2 * ab2 * cbacbacbacbac;\n    long ac2b2ab2cbacbacbacbacb\
    \ = ac * ac2 * ab2 * cbacbacbacbacba;\n    long ac2b2ab2cbacbacbacbacba = ac *\
    \ ac2 * ab2 * cbacbacbacbacba;\n    long ac2b2ab2cbacbacbacbacbacb = ac * ac2\
    \ * ab2 * cbacbacbacbacbac;\n    long ac2b2ab2cbacbacbacbacbacba = ac * ac2 *\
    \ ab2 * c", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bca = abs(bc + ac);\n\
    \    long acb = abs(ac + bc);\n    long abca = abs(abc);\n    long bcab = abs(bca);\n\
    \    long acbc = abs(acb);\n    long abcb = abs(abc);\n    long bcabc = abs(bcab);\n\
    \    long acbca = abs(acbc);\n    long abcca = abs(abc);\n    long bcabca = abs(bcabc);\n\
    \    long acbcab = abs(acbca);\n    long abccab = abs(abcca);\n    long bcabcab\
    \ = abs(bcabca);\n    long acbcabc = abs(acbcab);\n    long abccabc = abs(abccab);\n\
    \    long bcabcabc = abs(bcabcab);\n    long acbcabca = abs(acbcabc);\n    long\
    \ abccabca = abs(abccab);\n    long bcabcabca = abs(bcabcabc);\n    long acbcabcab\
    \ = abs(acbcabca);\n    long abccabcab = abs(abccabca);\n    long bcabcabcab =\
    \ abs(bcabcabca);\n    long acbcabcabc = abs(acbcabcab);\n    long abccabcabc\
    \ = abs(abccabcab);\n    long bcabcabcabc = abs(bcabcabcab);\n    long acbcabcabca\
    \ = abs(acbcabcabc);\n    long abccabcabca = abs(abccabcab);\n    long bcabcabcabca\
    \ = abs(bcabcabcabc);\n    long acbcabcabcab = abs(acbcabcabca);\n    long abccabcabcab\
    \ = abs(abccabcabca);\n    long bcabcabcabcab = abs(bcabcabcabca);\n    long acbcabcabcabc\
    \ = abs(acbcabcabcab);\n    long abccabcabcabc = abs(abccabcabcab);\n    long\
    \ bcabcabcabcabc = abs(bcabcabcabcab);\n    long acbcabcabcabca = abs(acbcabcabcabc);\n\
    \    long abccabcabcabca = abs(abccabcabcabca);\n    long bcabcabcabcabca = abs(bcabcabcabcabca);\n\
    \    long acbcab", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bca = abs(bc\
    \ + ac);\n    long acb = abs(ac + bc);\n    long abca = abs(abc);\n    long bcab\
    \ = abs(bca);\n    long acbc = abs(acb);\n    long abcb = abs(abc);\n    long\
    \ bcabc = abs(bcab);\n    long acbca = abs(acbc);\n    long abcca = abs(abc);\n\
    \    long bcabca = abs(bcabc);\n    long acbcab = abs(acbca);\n    long abccab\
    \ = abs(abcca);\n    long bcabcab = abs(bcabca);\n    long acbcabc = abs(acbcab);\n\
    \    long abccabc = abs(abccab);\n    long bcabcabc = abs(bcabcab);\n    long\
    \ acbcabca = abs(acbcabc);\n    long abccabca = abs(abccab);\n    long bcabcabca\
    \ = abs(bcabcabc);\n    long acbcabcab = abs(acbcabca);\n    long abccabcab =\
    \ abs(abccabca);\n    long bcabcabcab = abs(bcabcabca);\n    long acbcabcabc =\
    \ abs(acbcabcab);\n    long abccabcabc = abs(abccabcab);\n    long bcabcabcabc\
    \ = abs(bcabcabcab);\n    long acbcabcabca = abs(acbcabcabc);\n    long abccabcabca\
    \ = abs(abccabcab);\n    long bcabcabcabca = abs(bcabcabcabc);\n    long acbcabcabcab\
    \ = abs(acbcabcabca);\n    long abccabcabcab = abs(abccabcabca);\n    long bcabcabcabcab\
    \ = abs(bcabcabcabca);\n    long acbcabcabcabc = abs(acbcabcabcab);\n    long\
    \ abccabcabcabc = abs(abccabcabcab);\n    long bcabcabcabcabc = abs(bcabcabcabcab);\n\
    \    long acbcabcabcabca = abs(acbcabcabcabc);\n    long abccabcabcabca = abs(abccabcabcabca);\n\
    \    long bcabcabcabcabca = abs(bcabcabcabcabca);\n    long acbcab", "{\n    long\
    \ ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n   \
    \ long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n    long acd = abs(ac\
    \ + ab);\n    long abcd = abs(abc + bcd);\n    long acdb = abs(acd + abc);\n \
    \   long acbd = abs(acb + abc);\n    long acdbc = abs(acdb + acd);\n    long acbca\
    \ = abs(acbc + acd);\n    long acbcaa = abs(acbca);\n    long acbcaab = abs(acbcaa\
    \ + ab);\n    long acbcaabc = abs(acbcaab + abc);\n    long acbcaabca = abs(acbcaabc\
    \ + acd);\n    long acbcaabcab = abs(acbcaabca + ab);\n    long acbcaabcabc =\
    \ abs(acbcaabcab + abc);\n    long acbcaabcabca = abs(acbcaabcabc + acd);\n  \
    \  long acbcaabcabcab = abs(acbcaabcabca + ab);\n    long acbcaabcabcabc = abs(acbcaabcabcab\
    \ + abc);\n    long acbcaabcabcabca = abs(acbcaabcabcabc + acd);\n    long acbcaabcabcabcab\
    \ = abs(acbcaabcabcabca + ab);\n    long acbcaabcabcabcabc = abs(acbcaabcabcabcab\
    \ + abc);\n    long acbcaabcabcabcabca = abs(acbcaabcabcabcabc + acd);\n    long\
    \ acbcaabcabcabcabcab = abs(acbcaabcabcabcabca + ab);\n    long acbcaabcabcabcabcabc\
    \ = abs(acbcaabcabcabcabcab + abc);\n    long acbcaabcabcabcabcabca = abs(acbcaabcabcabcabcabc\
    \ + acd);\n    long acbcaabcabcabcabcabcab = abs(acbcaabcabcabcabcabca + ab);\n\
    \    long acbcaabcabcabcabcabcabc = abs(acbcaabcabcabcabcabcab + abc);\n    long\
    \ acbcaabcabcabcabcabcabca = abs(acbcaabcabcabcabcabcabc + acd);\n    ", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = abs(ab + ac);\n    long acb = abs(ac + bc);\n    long bca = abs(bc\
    \ - ac);\n    long abcb = abs(abc + bca);\n    long acbc = abs(acb + bc);\n  \
    \  long bcaa = abs(bca - ac);\n    long abcca = abs(abcc + acba);\n    long acbca\
    \ = abs(acbc + ac);\n    long bcaab = abs(bca + ab);\n    long abccab = abs(abcc\
    \ + abcba);\n    long acbcab = abs(acbc + acb);\n    long bcaba = abs(bca + ba);\n\
    \    long abccaa = abs(abcc + abcca);\n    long acbcaa = abs(acbc + acba);\n \
    \   long bcabab = abs(bca + cab);\n    long abccaba = abs(abcc + abccab);\n  \
    \  long acbcaba = abs(acbc + acbca);\n    long bcabcab = abs(bca + cabc);\n  \
    \  long abccabab = abs(abcc + abccaba);\n    long acbcabab = abs(acbc + acbcab);\n\
    \    long bcabcaba = abs(bca + cabca);\n    long abccababa = abs(abcc + abccabab);\n\
    \    long acbcababa = abs(acbc + acbcaba);\n    long bcabcabab = abs(bca + cabcab);\n\
    \    long abccababa = abs(abcc + abccababa);\n    long acbcababa = abs(acbc +\
    \ acbcabab);\n    long bcabcababa = abs(bca + cabcaba);\n    long abccababab =\
    \ abs(abcc + abccababa);\n    long acbcababab = abs(acbc + acbcababa);\n    long\
    \ bcabcababa = abs(bca + cabcabab);\n    long abccabababa = abs(abcc + abccabababa);\n\
    \    long acbcabababa = abs(acbc + acbcababab);\n    long bcabcabababa = abs(bca\
    \ + cabcababa);\n    long abccabababa = abs(abcc + abccabababa);\n    long acbcabababa\
    \ = abs(acbc + acbcabababa);\n    long bcab", "{\n    long d = b * b - 4 * a *\
    \ c;\n    if (d < 0) return false;\n    long root = (-b + std.sqrt(d)) / (2 *\
    \ a);\n    if (root >= 0 && root <= 1) return true;\n    return false;\n}", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ab;\n\
    \    long ac2bc = ac * bc;\n    long ac2abc = ac * abc;\n    long ac2bab = ac\
    \ * bab;\n    long ac2acb = ac * acb;\n    long ac2abbc = ac * abbc;\n    long\
    \ ac2babc = ac * babc;\n    long ac2babbc = ac * babbc;\n    long ac2acbc = ac\
    \ * acbc;\n    long ac2babbca = ac * babbca;\n    long ac2babbcab = ac * babbcab;\n\
    \    long ac2babbcabc = ac * babbcabc;\n    long ac2babbcabcd = ac * babbcabcd;\n\
    \    long ac2babbcabcde = ac * babbcabcde;\n    long ac2babbcabcdef = ac * babbcabcdef;\n\
    \    long ac2babbcabcdefg = ac * babbcabcdefg;\n    long ac2babbcabcdefgh = ac\
    \ * babbcabcdefgh;\n    long ac2babbcabcdefghi = ac * babbcabcdefghi;\n    long\
    \ ac2babbcabcdefghij = ac * babbcabcdefghij;\n    long ac2babbcabcdefghijk = ac\
    \ * babbcabcdefghijk;\n    long ac2babbcabcdefghijkl = ac * babbcabcdefghijkl;\n\
    \    long ac2babbcabcdefghijkll = ac * babbcabcdefghijkll;\n    long ac2babbcabcdefghijklm\
    \ = ac * babbcabcdefghijklm; \n    long ac2babbcabcdefghijklmn = ac * babbcabcdefghijkln;\n\
    \    long ac2babbcabcdefghijklno = ac * babbcabcdefghijklno;\n    long ac2babbcabcdefghijklnop\
    \ = ac * babbcabcdefgh", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long\
    \ side2 = abs(a) + abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n\
    \    long side4 = abs(a) - abs(b) - abs(c);\n    long side5 = abs(a) + abs(b)\
    \ - abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7 = abs(a)\
    \ - abs(b) - abs(c);\n    long side8 = abs(a) + abs(b) + abs(c);\n    long side9\
    \ = abs(a) - abs(b) + abs(c);\n    long side10 = abs(a) - abs(b) - abs(c);\n \
    \   long side11 = abs(a) + abs(b) + abs(c);\n    long side12 = abs(a) - abs(b)\
    \ + abs(c);\n    long side13 = abs(a) - abs(b) - abs(c);\n    long side14 = abs(a)\
    \ + abs(b) - abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n    long side16\
    \ = abs(a) - abs(b) - abs(c);\n    long side17 = abs(a) + abs(b) + abs(c);\n \
    \   long side18 = abs(a) - abs(b) + abs(c);\n    long side19 = abs(a) - abs(b)\
    \ - abs(c);\n    long side20 = abs(a) + abs(b) - abs(c);\n    long side21 = abs(a)\
    \ - abs(b) + abs(c);\n    long side22 = abs(a) - abs(b) - abs(c);\n    long side23\
    \ = abs(a) + abs(b) - abs(c);\n    long side24 = abs(a) - abs(b) + abs(c);\n \
    \   long side25 = abs(a) - abs(b) - abs(c);\n    long side26 = abs(a) + abs(b)\
    \ + abs(c);\n    long side27 = abs(a) - abs(b) + abs(c);\n    long side28 = abs(a)\
    \ - abs(b) - abs(c);\n    long side29 = abs(a) + abs(b) + abs(c);\n    long side30\
    \ = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a) - abs(b) - abs(c);\n \
    \   long side32 = abs(a) + abs(b) + abs(c);\n    long side33 = abs(a) - abs(b)\
    \ + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n    long side35 = abs(a)\
    \ + abs(b) + abs(c);\n    long side36 = abs(a) - abs(b) + abs(c);\n    long side37\
    \ = abs(a) - abs(b) - abs(c);\n    long side38", "{\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0)\n        return false;\n    long root = (-b + sqrt(d))\
    \ / (2 * a);\n    if (root < 0)\n        return false;\n    long x = sqrt(root);\n\
    \    if (x < a)\n        return false;\n    return true;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nI believe that your solution fails for `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nI believe that your solution fails for `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nI believe that your solution fails for `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nI believe that your solution fails for `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nI believe that your solution fails for `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| a tags=c++,geometry,trigonometry |>\n<code>", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc =\
    \ abs(b - c);\n    long acb = abs(c - b);\n    long abbc = abs(b - b);\n    long\
    \ acbc = abs(c - b);\n    long abbcd = abs(b - c);\n    long acbcdab = abs(c -\
    \ b);\n    long abbcda = abs(b - a);\n    long acbcdabc = abs(c - b);\n    long\
    \ abbcdaab = abs(b - a);\n    long acbcdabca = abs(c - b);\n    long abbcdaabc\
    \ = abs(b - a);\n    long acbcdabcab = abs(c - b);\n    long abbcdaabcd = abs(b\
    \ - a);\n    long acbcdabbca = abs(c - b);\n    long abbcdaabca = abs(b - a);\n\
    \    long acbcdabcabd = abs(c - b);\n    long abbcdaabcbd = abs(b - a);\n    long\
    \ acbcdabbcab = abs(c - b);\n    long abbcdaabcbca = abs(b - a);\n    long acbcdabbcabd\
    \ = abs(c - b);\n    long abbcdaabbc = abs(b - a);\n    long acbcdabbcbd = abs(c\
    \ - b);\n    long abbcdaabbca = abs(b - a);\n    long acbcdabbcbca = abs(c - b);\n\
    \    long abbcdaabbcbd = abs(b - a);\n    long acbcdabbcbcd = abs(c - b);\n  \
    \  long abbcdaabbcbca = abs(b - a);\n    long acbcdabbcbcbd = abs(c - b);\n  \
    \  long abbcdaabbcbcba = abs(b - a);\n    long acbcdabbcbcbcd = abs(c - b);\n\
    \    long abbcdaabbcbcbca = abs(b - a);\n    long acbcdabbcbcbcbd = abs(c - b);\n\
    \    long abbcdaabbcbcbcba = abs(b - a);\n    long acbcdabbcbcbcbcd = abs(c -\
    \ b);\n    long abbcdaabbcbcbcbca = abs(b - a);\n    long acbcdabbcbcbcbcbd =\
    \ abs(c - b);\n    long abbcdaabbcbcbcbcba = abs(b", "{\n    long side1 = abs(a)\
    \ + abs(b) + abs(c);\n    long side2 = abs(a) + abs(b) - abs(c);\n    long side3\
    \ = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) - abs(b) - abs(c);\n  \
    \  long side5 = abs(a) + abs(b) - abs(c);\n    long side6 = abs(a) - abs(b) +\
    \ abs(c);\n    long side7 = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a)\
    \ + abs(b) + abs(c);\n    long side9 = abs(a) - abs(b) + abs(c);\n    long side10\
    \ = abs(a) - abs(b) - abs(c);\n    long side11 = abs(a) + abs(b) + abs(c);\n \
    \   long side12 = abs(a) - abs(b) + abs(c);\n    long side13 = abs(a) - abs(b)\
    \ - abs(c);\n    long side14 = abs(a) + abs(b) - abs(c);\n    long side15 = abs(a)\
    \ - abs(b) + abs(c);\n    long side16 = abs(a) + abs(b) + abs(c);\n    long side17\
    \ = abs(a) - abs(b) + abs(c);\n    long side18 = abs(a) - abs(b) - abs(c);\n \
    \   long side19 = abs(a) + abs(b) - abs(c);\n    long side20 = abs(a) - abs(b)\
    \ - abs(c);\n    long side21 = abs(a) + abs(b) + abs(c);\n    long side22 = abs(a)\
    \ - abs(b) + abs(c);\n    long side23 = abs(a) - abs(b) - abs(c);\n    long side24\
    \ = abs(a) + abs(b) - abs(c);\n    long side25 = abs(a) - abs(b) + abs(c);\n \
    \   long side26 = abs(a) - abs(b) - abs(c);\n    long side27 = abs(a) + abs(b)\
    \ - abs(c);\n    long side28 = abs(a) - abs(b) + abs(c);\n    long side29 = abs(a)\
    \ - abs(b) - abs(c);\n    long side30 = abs(a) + abs(b) + abs(c);\n    long side31\
    \ = abs(a) - abs(b) + abs(c);\n    long side32 = abs(a) - abs(b) - abs(c);\n \
    \   long side33 = abs(a) + abs(b) - abs(c);\n    long side34 = abs(a) - abs(b)\
    \ + abs(c);\n    long side35 = abs(a) - abs(b) - abs(c);\n    long side36 = abs(a)\
    \ + abs(b) + abs(c);\n    long side37 = abs(a) - abs(b) + abs(c);\n    long side38",
  "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n   \
    \ long e = Math.sqrt(d);\n    long f = (b + e * c) / a;\n    long g = (b - e *\
    \ c) / a;\n    return g * g > f * f;\n}\n</code>\n<|/ a tags=c#,algorithm |>\n\
    <| c |>\nThis doesn't seem to work. Try it with the input `a = 3, b = 4, c = 5`\n\
    <|/ c |>\n<| c |>\nIt works. I tested it with the input you provided. What input\
    \ did you use?\n<|/ c |>\n<| c |>\nI used `a = 3, b = 4, c = 5`\n<|/ c |>\n<|\
    \ c |>\nI used `a = 3, b = 4, c = 5`\n<|/ c |>\n<| c |>\nI used `a = 3, b = 4,\
    \ c = 5`\n<|/ c |>\n<| a |>\nThe algorithm is simple:\n<code>", "{\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ acb = abs(c - b);\n    long abc = abs(b - c);\n    long abbc = abs(b - b);\n\
    \    long abac = abs(b - a);\n    long acab = abs(c - a);\n    long acbc = abs(c\
    \ - b);\n    long accab = abs(c - c);\n    long abcab = abs(b - c);\n    long\
    \ abcabc = abs(b - c);\n    long abcabbc = abs(b - b);\n    long abcabac = abs(b\
    \ - a);\n    long abcabacb = abs(c - a);\n    long abcabacbc = abs(c - b);\n \
    \   long abcabacbcab = abs(c - c);\n    long abcabacbcabc = abs(c - b);\n    long\
    \ abcabacbcabbc = abs(c - b);\n    long abcabacbcabbcabc = abs(c - c);\n    long\
    \ abcabacbcabbcabbc = abs(c - b);\n    long abcabacbcabbcabbcabc = abs(c - c);\n\
    \    long abcabacbcabbcabbcabbc = abs(c - b);\n    long abcabacbcabbcabbcabbcabc\
    \ = abs(c - c);\n    long abcabacbcabbcabbcabbcabbc = abs(c - b);\n    long abcabacbcabbcabbcabbcabbcabc\
    \ = abs(c - c);\n    long abcabacbcabbcabbcabbcabbcabbc = abs(c - b);\n    long\
    \ abcabacbcabbcabbcabbcabbcabbcabc = abs(c - c);\n    long abcabacbcabbcabbcabbcabbcabbcabbcabc\
    \ = abs(c - b);\n    long abcabacbcabbcabbcabbcabbcabbcabbcabbc = abs(c - c);\n\
    \    long abcabacbcabbcabbcabbcabbcabbcabbcabbcabc = abs(c - b);\n    long abcabacbcabbcabbcabbcabbcabbcabbcabbcabc\
    \ = abs(c - c);\n    long abcabacbcabbcabbcabbcabbcabbcabbcabbcabcabc = abs(c\
    \ - b);\n    long abcabacbcabbcabbcabbcabbcabbcabbcabbcabbcabcabc = abs(c - c);\n\
    \    ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc\
    \ = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n\
    \    long acd = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n    long acbd\
    \ = abs(acd + bc);\n    long abcdb = abs(abcd + bcd);\n    long acdbc = abs(acbd\
    \ + bc);\n    long abcdbc = abs(abcdb + bcd);\n    long acbdbc = abs(acdbc + bc);\n\
    \    long abcdbcd = abs(abcdbc + bcd);\n    long acbdbcd = abs(acbdbc + bcd);\n\
    \    long abcdbcde = abs(abcdbcd + bcd);\n    long acbdbcde = abs(acbdbcd + bcd);\n\
    \    long abcdbcdef = abs(abcdbcde + bcd);\n    long acbdbcdef = abs(acbdbcdef\
    \ + bcd);\n    long abcdbcdefg = abs(abcdbcdef + bcd);\n    long acbdbcdefg =\
    \ abs(acbdbcdefg + bcd);\n    long abcdbcdefgh = abs(abcdbcdefg + bcd);\n    long\
    \ acbdbcdefgh = abs(acbdbcdefgh + bcd);\n    long abcdbcdefghi = abs(abcdbcdefgh\
    \ + bcd);\n    long acbdbcdefghi = abs(acbdbcdefghi + bcd);\n    long abcdbcdefghij\
    \ = abs(abcdbcdefghi + bcd);\n    long acbdbcdefghij = abs(acbdbcdefghij + bcd);\n\
    \    long abcdbcdefghijk = abs(abcdbcdefghij + bcd);\n    long acbdbcdefghijk\
    \ = abs(acbdbcdefghijk + bcd);\n    long abcdbcdefghijkl = abs(abcdbcdefghijk\
    \ + bcd);\n    long acbdbcdefghijkl = abs(acbdbcdefghijkl + bcd);\n    long abcdbcdefghijkl\
    \ = abs(abcdbcdefghijkl + bcd);\n    long acbdbcdefghij", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c\
    \ - b);\n    \n    bool isRightAngle = (ab > ac) && (ac > bc) && (bc > cb);\n\
    \    return isRightAngle;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    long angle;\n    angle = std.math.toDegrees(std.math.angleBetween(std.math.vector3(b,c,a),\
    \ std.math.vector3(b,c,a)));\n    return angle >= 90;\n}", "{\n    long side1\
    \ = abs(b - c);\n    long side2 = abs(a - c);\n    long side3 = abs(a - b);\n\
    \    long side4 = abs(b - a);\n    long side5 = abs(b - c);\n    long side6 =\
    \ abs(a - b);\n    long side7 = abs(a - c);\n    long side8 = abs(b - a);\n  \
    \  long side9 = abs(b - c);\n    long side10 = abs(a - b);\n    long side11 =\
    \ abs(a - c);\n    long side12 = abs(b - a);\n    long side13 = abs(a - b);\n\
    \    long side14 = abs(b - c);\n    long side15 = abs(a - b);\n    long side16\
    \ = abs(a - c);\n    long side17 = abs(b - a);\n    long side18 = abs(a - b);\n\
    \    long side19 = abs(a - c);\n    long side20 = abs(b - a);\n    long side21\
    \ = abs(a - b);\n    long side22 = abs(a - c);\n    long side23 = abs(b - a);\n\
    \    long side24 = abs(a - b);\n    long side25 = abs(a - c);\n    long side26\
    \ = abs(b - a);\n    long side27 = abs(a - b);\n    long side28 = abs(a - c);\n\
    \    long side29 = abs(b - a);\n    long side30 = abs(a - b);\n    long side31\
    \ = abs(a - c);\n    long side32 = abs(b - a);\n    long side33 = abs(a - b);\n\
    \    long side34 = abs(a - c);\n    long side35 = abs(b - a);\n    long side36\
    \ = abs(a - b);\n    long side37 = abs(a - c);\n    long side38 = abs(b - a);\n\
    \    long side39 = abs(a - b);\n    long side40 = abs(a - c);\n    long side41\
    \ = abs(b - a);\n    long side42 = abs(a - b);\n    long side43 = abs(a - c);\n\
    \    long side44 = abs(b - a);\n    long side45 = abs(a - b);\n    long side46\
    \ = abs(a - c);\n    long side47 = abs(b - a);\n    long side48 = abs(a - b);\n\
    \    long side49 = abs(a - c);\n    long side50 = abs(b - a);\n    long side51\
    \ = abs(a - b);\n    long side52 = abs(a - c);\n    long side53 = abs(b - a);\n\
    \    long side54 = abs(a - b);\n    long side55 = abs(a - c);\n    long side56\
    \ = abs(b", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b -\
    \ c;\n    long abc = ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n\
    \    long acbc = ac + bc;\n    long abcab = abc + ab;\n    long acbcab = acbc\
    \ + ac;\n    long abcabc = abcab + acbc;\n    long acbcabc = acbcab + abc;\n \
    \   long abcabcd = abcabc + acbcd;\n    long acbcabcd = acbcabc + abcd;\n    long\
    \ abcabcde = abcabcd + acbce;\n    long acbcabcde = acbcabcd + abce;\n    long\
    \ abcabcdef = abcabcde + acbdef;\n    long acbcabcdef = acbcabcde + abdef;\n \
    \   long abcabcdefg = abcabcdef + acbdefg;\n    long acbcabcdefg = acbcabcdef\
    \ + abdefg;\n    long abcabcdefgh = abcabcdefg + acbdefgh;\n    long acbcabcdefgh\
    \ = acbcabcdefg + abdefgh;\n    long abcabcdefghi = abcabcdefgh + acbdefghi;\n\
    \    long acbcabcdefghi = acbcabcdefgh + abdefghi;\n    long abcabcdefghij = abcabcdefghi\
    \ + acbdefghij;\n    long acbcabcdefghij = acbcabcdefghi + abdefghij;\n    long\
    \ abcabcdefghijk = abcabcdefghij + acbdefghijk;\n    long acbcabcdefghijk = acbcabcdefghij\
    \ + abdefghijk;\n    long abcabcdefghijkl = abcabcdefghijk + acbdefghijkl;\n \
    \   long acbcabcdefghijkl = acbcabcdefghijk + abdefghijkl;\n    long abcabcdefghijkm\
    \ = abcabcdefghijkl + acbdefghijkm;\n    long acbcabcdefghijkm = acbcabcdefghij",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb = bc +\
    \ cb;\n    long abbc = abb + bcc;\n    long abcc = abc + cbb;\n    long abbb =\
    \ abbc + cbb;\n    long abbba = abbb + abba;\n    long abbca = abbc + abca;\n\
    \    long abccb = abcc + cbcb;\n    long abccc = abcc + cccb;\n    long abbbc\
    \ = abbb + cbcb;\n    long abbccb = abbc + cccb;\n    long abbccc = abbc + cbbc;\n\
    \    long abcccb = abcc + cbcc;\n    long abcccb = abcc + cccb;\n    long abcccc\
    \ = abcc + cccc;\n    long abbbcc = abbb + cbcc;\n    long abbcccb = abbc + cccb;\n\
    \    long abbcccc = abbc + cccc;\n    long abcccb = abcc + cbcc;\n    long abccccb\
    \ = abcc + cccb;\n    long abccccc = abcc + cccc;\n    long abbbccb = abbb + cbcc;\n\
    \    long abbccccb = abbc + cccb;\n    long abbccccc = abbc + cccc;\n    long\
    \ abccccb = abcc + cbcc;\n    long abccccc = abcc + cccb;\n    long abccccc =\
    \ abcc + cccc;\n    long abbbccc = abbb + cbcc;\n    long abbccccb = abbc + cccb;\n\
    \    long abbccccc = abbc + cccc;\n    long abccccb = abcc + cbcc;\n    long abccccc\
    \ = abcc + cccb;\n    long abccccc = abcc + cccc;\n    long abbbccc = abbb + cbcc;\n\
    \    long abbccccb = abbc + cccb;\n    long abbccccc = abbc + cccc;\n    long\
    \ abccccb = abcc + cbcc;\n    long ", "{\n    long ab = abs(b - a);\n    long\
    \ ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n  \
    \  long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c\
    \ - b);\n    long abac = abs(b - a);\n    long abcab = abs(b - c);\n    long acbcab\
    \ = abs(c - b);\n    long abcabc = abs(b - c);\n    long acbcabb = abs(c - b);\n\
    \    long abcabbc = abs(b - c);\n    long acbcabbc = abs(c - b);\n    long abcabbcab\
    \ = abs(b - c);\n    long acbcabbcab = abs(c - b);\n    long abcabbcabc = abs(b\
    \ - c);\n    long acbcabbcabb = abs(c - b);\n    long abcabbcabbc = abs(b - c);\n\
    \    long acbcabbcabbc = abs(c - b);\n    long abcabbcabbcab = abs(b - c);\n \
    \   long acbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabc = abs(b - c);\n\
    \    long acbcabbcabbcabb = abs(c - b);\n    long abcabbcabbcabbc = abs(b - c);\n\
    \    long acbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcab = abs(b -\
    \ c);\n    long acbcabbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabb = abs(c - b);\n    long abcabbcabbcabbcabbcabbc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabbcab = abs(c - b);\n    ", "{\n\
    \    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb\
    \ = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n    long abbc\
    \ = abb * bc;\n    long abcc = abc * bc;\n    long acbcc = acbcc * bc;\n    long\
    \ abbcc = abbcc * bc;\n    long abccc = abcc * bc;\n    long acbccc = acbccc *\
    \ bc;\n    long abbccc = abbccc * bc;\n    long abcccb = abcccb * bc;\n    long\
    \ acbcccb = acbcccb * bc;\n    long abbcccb = abbcccb * bc;\n    long abcccbc\
    \ = abcccbc * bc;\n    long acbcccbc = acbcccbc * bc;\n    long abbcccbc = abbcccbc\
    \ * bc;\n    long abcccbcb = abcccbcb * bc;\n    long acbcccbcb = acbcccbcb *\
    \ bc;\n    long abbcccbcb = abbcccbcb * bc;\n    long abcccbcbc = abcccbcbc *\
    \ bc;\n    long acbcccbcb = acbcccbcb * bc;\n    long abbcccbcb = abbcccbcb *\
    \ bc;\n    long abcccbcbc = abcccbcbc * bc;\n    long acbcccbcb = acbcccbcb *\
    \ bc;\n    long abbcccbcb = abbcccbcb * bc;\n    long abcccbcbc = abcccbcbc *\
    \ bc;\n    long acbcccbcb = acbcccbcb * bc;\n    long abbcccbcb = abbcccbcb *\
    \ bc;\n    long abcccbcbc = abcccbcbc * bc;\n    long acbcccbcb = acbcccbcb *\
    \ bc;\n    long abbcccbcb = abbcccbcb * bc;\n    long abcccbcbc = abcccbcbc *\
    \ bc;\n    long acbcccbcb = acbcccbcb * bc;\n    ", "{\n    long angle;\n    bool\
    \ result;\n    \n    angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n    if (angle\
    \ > PI/2.0) \n    {\n        result = false;\n    }\n    else \n    {\n      \
    \  result = true;\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,trigonometry,geometry\
    \ |>\n<| c |>\nThis doesn't work. `acos` returns `double`, not `bool`.\n<|/ c\
    \ |>\n<| c |>\n: It does work. `acos` returns `double`, not `bool`. `acos` returns\
    \ `double`, not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`,\
    \ not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not\
    \ `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`.\
    \ `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`. `acos`\
    \ returns `double`, not `bool`. `acos` returns `double`, not `bool`. `acos` returns\
    \ `double`, not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`,\
    \ not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not\
    \ `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`.\
    \ `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`. `acos`\
    \ returns `double`, not `bool`. `acos` returns `double`, not `bool`. `acos` returns\
    \ `double`, not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`,\
    \ not `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not\
    \ `bool`. `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`.\
    \ `acos` returns `double`, not `bool`. `acos` returns `double`, not `bool`. `acos`\
    \ returns `double`, not `bool`. ", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n\
    \    long side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b)\
    \ + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a)\
    \ + abs(b) + abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7\
    \ = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n  \
    \  long side9 = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) - abs(b) +\
    \ abs(c);\n    long side11 = abs(a) - abs(b) - abs(c);\n    long side12 = abs(a)\
    \ + abs(b) - abs(c);\n    long side13 = abs(a) + abs(b) + abs(c);\n    long side14\
    \ = abs(a) - abs(b) - abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n \
    \   long side16 = abs(a) + abs(b) + abs(c);\n    long side17 = abs(a) - abs(b)\
    \ + abs(c);\n    long side18 = abs(a) - abs(b) - abs(c);\n    long side19 = abs(a)\
    \ + abs(b) - abs(c);\n    long side20 = abs(a) - abs(b) + abs(c);\n    long side21\
    \ = abs(a) - abs(b) - abs(c);\n    long side22 = abs(a) + abs(b) + abs(c);\n \
    \   long side23 = abs(a) - abs(b) + abs(c);\n    long side24 = abs(a) - abs(b)\
    \ - abs(c);\n    long side25 = abs(a) + abs(b) + abs(c);\n    long side26 = abs(a)\
    \ - abs(b) + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n    long side28\
    \ = abs(a) - abs(b) + abs(c);\n    long side29 = abs(a) + abs(b) + abs(c);\n \
    \   long side30 = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a) - abs(b)\
    \ - abs(c);\n    long side32 = abs(a) + abs(b) - abs(c);\n    long side33 = abs(a)\
    \ + abs(b) + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n    long side35\
    \ = abs(a) - abs(b) + abs(c);\n    long side36 = abs(a) + abs(b) - abs(c);\n \
    \   long side37 = abs(a) + abs(b) + abs(c);\n    long side38", "{\n    long side1\
    \ = abs(a) + abs(b) + abs(c);\n    long side2 = abs(a) + abs(b) - abs(c);\n  \
    \  long side3 = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) - abs(b) -\
    \ abs(c);\n    \n    if (side1 == side2 && side2 == side3 && side3 == side4)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n \
    \   long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long abac = abs(b\
    \ - a);\n    long abcab = abs(b - c);\n    long acbcab = abs(c - b);\n    long\
    \ accabb = abs(c - a);\n    long abcabc = abs(b - c);\n    long abcabbc = abs(b\
    \ - b);\n    long acbcabbc = abs(c - b);\n    long accabbca = abs(c - a);\n  \
    \  long abcabcab = abs(b - c);\n    long acbcabcab = abs(c - b);\n    long accabbcaba\
    \ = abs(c - a);\n    long abcabcabc = abs(b - c);\n    long acbcabcabc = abs(c\
    \ - b);\n    long accabbcabca = abs(c - a);\n    long abcabcabbc = abs(b - c);\n\
    \    long acbcabcabbc = abs(c - b);\n    long accabbcabbca = abs(c - a);\n   \
    \ long abcabcabcab = abs(b - c);\n    long acbcabcabcab = abs(c - b);\n    long\
    \ accabbcabcaba = abs(c - a);\n    long abcabcabcabc = abs(b - c);\n    long acbcabcabcabc\
    \ = abs(c - b);\n    long accabbcabcabca = abs(c - a);\n    long abcabcabcabbc\
    \ = abs(b - c);\n    long acbcabcabcabbc = abs(c - b);\n    long accabbcabcabbca\
    \ = abs(c - a);\n    long abcabcabcabcab = abs(b - c);\n    long acbcabcabcabcab\
    \ = abs(c - b);\n    long accabbcabcabcaba = abs(c - a);\n    long abcabcabcabcabc\
    \ = abs(b - c);\n    long acbcabcabcabcabc = abs(c - b);\n    long accabbcabcabcabca\
    \ = abs(c - a);\n    long abcabcabcabcabbc = abs(b - c);\n    long acbcabcabcabcabbc\
    \ = abs(c - b);\n    long accabbcabcabcabbca = abs(c - a);\n    long abcabcabcabcabcab\
    \ = abs(b - c);\n    long acbcabcabcabcabcab = abs(c - b);", "{\n    long ab =\
    \ abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb = bc + cb;\n    long\
    \ acb = ac + cb;\n    long abac = ab + acb;\n    long bcab = bc+ cb;\n    long\
    \ cabb = cb + bc;\n    long abcab = abc + abb;\n    long bcbcab = bcb + cab;\n\
    \    long cabbcb = cab + bcb;\n    long abcabcb = abcab + bcbcab;\n    long bcabcab\
    \ = abcabc + cabbcb;\n    long cabbcbc = cabbcb + abcabc;\n    long abcabcab =\
    \ abcabcab + cabbcbc;\n    long cabbcbcb = cabbcbcb + abcabcab;\n    long abcabcabc\
    \ = abcabcabc + cabbcbcb;\n    long cabbcbcbc = cabbcbcbc + abcabcabc;\n    long\
    \ abcabcabcb = abcabcabcb + cabbcbcbc;\n    long cabbcbcbcb = cabbcbcbcb + abcabcabcb;\n\
    \    long abcabcabcb = abcabcabcb + cabbcbcbcb;\n    long cabbcbcbcb = cabbcbcbcb\
    \ + abcabcabcb;\n    long abcabcabcb = abcabcabcb + cabbcbcbcb;\n    long cabbcbcbcb\
    \ = cabbcbcbcb + abcabcabcb;\n    long abcabcabcb = abcabcabcb + cabbcbcbcb;\n\
    \    long cabbcbcbcb = cabbcbcbcb + abcabcabcb;\n    long abcabcabcb = abcabcabcb\
    \ + cabbcbcbcb;\n    long cabbcbcbcb = cabbcbcbcb + abcabcabcb;\n    long abcabcabcb\
    \ = abcabcabcb + cabbcbcbcb;\n    long cabbcbcbcb = cabbcbcbcb + abcabcabcb;\n\
    \    long abcabcabcb = abcabcabcb + cabbcbcbcb;\n    long cabbcbcbcb = cabbcbcbcb\
    \ + abcabcabcb;\n    long abcabcabcb = abcab", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c -\
    \ b);\n    long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc\
    \ = abs(c - b);\n    long abbcd = abs(b - c);\n    long acbcdab = abs(c - b);\n\
    \    long acbcdac = abs(c - c);\n    long abbcda = abs(b - a);\n    long acbcdabc\
    \ = abs(c - b);\n    long acbcdabca = abs(c - a);\n    long abbcdaab = abs(b -\
    \ a);\n    long acbcdabcab = abs(c - b);\n    long acbcdabcaba = abs(c - a);\n\
    \    long abbcdaabc = abs(b - a);\n    long acbcdabcabac = abs(c - b);\n    long\
    \ acbcdabcabaca = abs(c - a);\n    long abbcdaabbc = abs(b - a);\n    long acbcdabcabacab\
    \ = abs(c - b);\n    long acbcdabcabacaba = abs(c - a);\n    long abbcdaabbcabc\
    \ = abs(b - a);\n    long acbcdabcabacabca = abs(c - b);\n    long acbcdabcabacabcaa\
    \ = abs(c - a);\n    long abbcdaabbcabcabc = abs(b - a);\n    long acbcdabcabacabcab\
    \ = abs(c - b);\n    long acbcdabcabacabcaba = abs(c - a);\n    long abbcdaabbcabcabcabc\
    \ = abs(b - a);\n    long acbcdabcabacabcabcab = abs(c - b);\n    long acbcdabcabacabcabcaba\
    \ = abs(c - a);\n    long abbcdaabbcabcabcabcabc = abs(b - a);\n    long acbcdabcabacabcabcabcab\
    \ = abs(c - b);\n    long acbcdabcabacabcabcabcaba = abs(c - a);\n    long abbcdaabbcabcabcabcabcabc\
    \ = abs(b - a);\n    long acbcdabcabacabcabcabcabcab = abs(c - b);\n    long acbcdabcabacabcabcabcabcaba\
    \ = abs(c - a);\n    long abbcdaabbcabcabcabcabcabcabc = abs(b - a);\n    long\
    \ acbcdab", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b -\
    \ c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb *\
    \ bc;\n    long abbc = abb * bc;\n    long acbcbc = acbcb * bc;\n    long abcbc\
    \ = abcb * bc;\n    long acbcbcbc = acbcbcb * bc;\n    long abcbcbc = abcbcb *\
    \ bc;\n    long acbcbcbcbc = acbcbcbcb * bc;\n    long abcbcbcbc = abcbcbcb *\
    \ bc;\n    long acbcbcbcbcbc = acbcbcbcbcb * bc;\n    long abcbcbcbcbc = abcbcbcbcb\
    \ * bc;\n    long acbcbcbcbcbcbc = acbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbc\
    \ = abcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbc = acbcbcbcbcbcbcb * bc;\n  \
    \  long abcbcbcbcbcbcbc = abcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbcbc =\
    \ acbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcb * bc;\n\
    \    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcb\
    \ * bc;\n    long abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcb * bc;\n    long\
    \ acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbcb\
    \ * bc;\n    ", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc =\
    \ b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb\
    \ * bc;\n    long acbc_abc = acbc + abc;\n    long acbc_abc_ab = acbc_abc * ab;\n\
    \    long acbc_abc_abc_ab = acbc_abc_ab * abc;\n    long acbc_abc_abc_abc_ab =\
    \ acbc_abc_abc_ab * abc_ab;\n    long acbc_abc_abc_abc_abc_ab = acbc_abc_abc_abc_ab\
    \ * abc_abc_ab;\n    long acbc_abc_abc_abc_abc_abc_ab = acbc_abc_abc_abc_abc_ab\
    \ * abc_abc_abc_ab;\n    long acbc_abc_abc_abc_abc_abc_abc_ab = acbc_abc_abc_abc_abc_abc_ab\
    \ * abc_abc_abc_abc_ab;\n    long acbc_abc_abc_abc_abc_abc_abc_abc_ab = acbc_abc_abc_abc_abc_abc_abc_ab\
    \ * abc_abc_abc_abc_abc_ab;\n    long acbc_abc_abc_abc_abc_abc_abc_abc_abc_ab\
    \ = acbc_abc_abc_abc_abc_abc_abc_abc_ab * abc_abc_abc_abc_abc_abc_ab;\n    long\
    \ acbc_abc_abc_abc_abc_abc_abc_abc_abc_abc_ab = acbc_abc_abc_abc_abc_abc_abc_abc_abc_ab\
    \ * abc_abc_abc_abc_abc_abc_abc_ab;\n    long acbc_abc_abc_abc_abc_abc_abc_abc_abc_abc_abc_ab\
    \ = acbc_abc_abc_abc_abc_abc_abc_abc_abc_abc_ab * abc_abc_abc_abc_abc_abc_abc_abc_ab;\n\
    \    long acbc_abc_abc_abc_abc_abc_abc_abc_abc_abc_ab", "{\n    long side1 = abs(a)\
    \ + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n    long side3\
    \ = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n  \
    \  long side5 = abs(a) - abs(b) + abs(c);\n    long side6 = abs(a) + abs(b) -\
    \ abs(c);\n    long side7 = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a)\
    \ + abs(b) + abs(c);\n    long side9 = abs(a) - abs(b) + abs(c);\n    long side10\
    \ = abs(a) + abs(b) - abs(c);\n    long side11 = abs(a) - abs(b) - abs(c);\n \
    \   long side12 = abs(a) + abs(b) + abs(c);\n    long side13 = abs(a) - abs(b)\
    \ + abs(c);\n    long side14 = abs(a) + abs(b) - abs(c);\n    long side15 = abs(a)\
    \ - abs(b) - abs(c);\n    long side16 = abs(a) + abs(b) + abs(c);\n    long side17\
    \ = abs(a) - abs(b) + abs(c);\n    long side18 = abs(a) + abs(b) - abs(c);\n \
    \   long side19 = abs(a) - abs(b) - abs(c);\n    long side20 = abs(a) + abs(b)\
    \ + abs(c);\n    long side21 = abs(a) - abs(b) + abs(c);\n    long side22 = abs(a)\
    \ + abs(b) - abs(c);\n    long side23 = abs(a) - abs(b) - abs(c);\n    long side24\
    \ = abs(a) + abs(b) + abs(c);\n    long side25 = abs(a) - abs(b) + abs(c);\n \
    \   long side26 = abs(a) + abs(b) - abs(c);\n    long side27 = abs(a) - abs(b)\
    \ - abs(c);\n    long side28 = abs(a) + abs(b) + abs(c);\n    long side29 = abs(a)\
    \ - abs(b) + abs(c);\n    long side30 = abs(a) + abs(b) - abs(c);\n    long side31\
    \ = abs(a) - abs(b) - abs(c);\n    long side32 = abs(a) + abs(b) + abs(c);\n \
    \   long side33 = abs(a) - abs(b) + abs(c);\n    long side34 = abs(a) + abs(b)\
    \ - abs(c);\n    long side35 = abs(a) - abs(b) - abs(c);\n    long side36 = abs(a)\
    \ + abs(b) + abs(c);\n    long side37 = abs(a) - abs(b) + abs(c);\n    long side38",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long acb = abs(c - b);\n    \n    if (ab > ac && ab > bc) \n    {\n\
    \        if (ac > acb) return true;\n        else return false;\n    }\n    else\
    \ \n    {\n        if (bc > ab) return true;\n        else return false;\n   \
    \ }\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try it with the input `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with the input `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with the input `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with the input `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| c |>\nIt does work. Try it with the input `right_angle_triangle(1,1,1)`\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "{\n    long d = b * b - 4 * a * c;\n   \
    \ if (d < 0)\n        return false;\n    long e = Math.sqrt(d);\n    long f =\
    \ (b + e) / (2 * a);\n    long g = (c + e) / (2 * a);\n    long h = (b - e) /\
    \ (2 * a);\n    return ((f < 0 && g < 0 && h < 0) || (f > 0 && g > 0 && h > 0));\n\
    }\n</code>\n<|/ a tags=c#,geometry |>\n<| c |>\nThis doesn't answer the question,\
    \ which is about a triangle with sides a, b and c.\n<|/ c |>\n<| c |>\nThe question\
    \ was about a triangle with sides a, b and c. Your answer doesn't answer the question.\n\
    <|/ c |>\n<| c |>\nThe question was about a triangle with sides a, b and c. Your\
    \ answer doesn't answer the question.\n<|/ c |>\n<| c |>\nThe question was about\
    \ a triangle with sides a, b and c. Your answer doesn't answer the question.\n\
    <|/ c |>\n<| c |>\nThe question was about a triangle with sides a, b and c. Your\
    \ answer doesn't answer the question.\n<|/ c |>\n<| a tags=c#,geometry |>\n<code>\n\
    public static bool IsRightAngledTriangle(long a, long b, long c)\n{\n    long\
    \ d = b * b - 4 * a * c;\n    if (d < 0)\n        return false;\n    long e =\
    \ Math.Sqrt(d);\n    long f = (b + e) / (2 * a);\n    long g = (c + e) / (2 *\
    \ a);\n    long h = (b - e) / (2 * a);\n    return ((f < 0 && g < 0 && h < 0)\
    \ || (f > 0 && g > 0 && h > 0));\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ doesn't answer the question, which is about a triangle with sides a, b and c.\n\
    <|/ c |>\n<| c |>\nThe question was about a triangle with sides a, b and c. Your\
    \ answer doesn't answer the question.\n<|/ c |>\n<| c |>\nThe question was about\
    \ a triangle with sides a, b and c. Your answer doesn't answer the question.\n\
    <|/ c |>\n<| a tags=c#,geometry |>\n<code>\npublic static bool IsRightAngledTriangle(long\
    \ a, long b, long c)\n{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n   \
    \     return false;\n    long e = Math.", "{\n    long ab = abs(b - a);\n    long\
    \ ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n  \
    \  long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long abac = abs(b\
    \ - a);\n    long acab = abs(c - a);\n    long acbc = abs(c - b);\n    long accab\
    \ = abs(c - c);\n    long bcab = abs(b - c);\n    long bcabc = abs(b - c);\n \
    \   long bcabbc = abs(b - b);\n    long bcabac = abs(b - a);\n    long bcabbca\
    \ = abs(b - b);\n    long bcabacb = abs(b - a);\n    long bcabacca = abs(b - c);\n\
    \    long cabb = abs(c - b);\n    long cabc = abs(c - c);\n    long cabbc = abs(c\
    \ - b);\n    long cabcab = abs(c - c);\n    long cabbca = abs(c - a);\n    long\
    \ cabcabc = abs(c - c);\n    long cabcabbc = abs(c - b);\n    long cabcabac =\
    \ abs(c - a);\n    long cabcabbca = abs(c - b);\n    long cabcabacb = abs(c -\
    \ a);\n    long cabcabacca = abs(c - c);\n    long cabcabbcab = abs(c - b);\n\
    \    long cabcabbcabc = abs(c - b);\n    long cabcabbcabca = abs(c - b);\n   \
    \ long cabcabbcabcabc = abs(c - b);\n    long cabcabbcabcabca = abs(c - b);\n\
    \    long cabcabbcabcabcabc = abs(c - b);\n    long cabcabbcabcabcabca = abs(c\
    \ - b);\n    long cabcabbcabcabcabcabc = abs(c - b);\n    long cabcabbcabcabcabcabca\
    \ = abs(c - b);\n    long cabcabbcabcabcabcabcabc = abs(c - b);\n    long cabcabbcabcabcabcabcabca\
    \ = abs(c - b);\n    long cabcabbcabcabcabcabcabcabc = abs(c - b);\n    long cabcabbcabcabcabcabcabcabca\
    \ = abs(c - b);\n    long cabcabbcabcabcabcabcabcabcabc = abs(c - b);\n    long\
    \ cabcabbcabcabcabcabcabcabcabca = abs(c - b);\n    long cabcabbcabcabcabcabcabcabcabcabc\
    \ = abs(c - b);\n    long cabcabbcab", "{\n    long d = b * b - 4 * a * c;\n \
    \   if (d < 0)\n        return false;\n    long e = Math.sqrt(d);\n    long f\
    \ = (b + e) / (2 * a);\n    long g = (c + e) / (2 * a);\n    return ((f < 0 &&\
    \ g > 0) || (f > 0 && g < 0));\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work.\
    \ Try it with the triangle `(3, 3, 3)`.\n<|/ c |>\n<| c |>\nIt works. I tested\
    \ it with the triangle (3, 3, 3). Can you give me the test case where it fails?\n\
    <|/ c |>\n<| c |>\nIt fails for `(3, 3, 3)`. The triangle is right angled, but\
    \ the function returns false.\n<|/ c |>\n<| c |>\nI tested it with the triangle\
    \ (3, 3, 3). Can you give me the test case where it fails?\n<|/ c |>\n<| c |>\n\
    It fails for `(3, 3, 3)`. The triangle is right angled, but the function returns\
    \ false.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c -\
    \ b);\n    long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc\
    \ = abs(c - b);\n    long acbca = abs(c - a);\n    long abca = abs(b - a);\n \
    \   long abcab = abs(b - c);\n    long abcabc = abs(b - b);\n    long abcabca\
    \ = abs(c - a);\n    long abcabcab = abs(b - c);\n    long abcabcabc = abs(b -\
    \ b);\n    long abcabcabca = abs(c - a);\n    long abcabcabcab = abs(b - c);\n\
    \    long abcabcabcabc = abs(b - b);\n    long abcabcabcabca = abs(c - a);\n \
    \   long abcabcabcabcab = abs(b - c);\n    long abcabcabcabcabc = abs(b - b);\n\
    \    long abcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcab = abs(b -\
    \ c);\n    long abcabcabcabcabcabc = abs(b - b);\n    long abcabcabcabcabcabca\
    \ = abs(c - a);\n    long abcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabc = abs(b - b);\n    long abcabcabcabcabcabcabcabca\
    \ = abs(c - a);\n    long abcabcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabcabcabca = abs(c - a);\n    long\
    \ abcabcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabcabcabca = abs(c - a);\n    long\
    \ abcabcabcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabcabcabcabca = abs(c - a);", "{\n\
    \    long angle;\n    bool isRightAngle = false;\n    \n    // Calculate the angle\
    \ between three sides\n    angle = atan2(b, a) - atan2(c,a);\n    \n    // If\
    \ the angle is greater than 90 degree\n    if (angle > M_PI)\n    {\n        isRightAngle\
    \ = true;\n    }\n    \n    return isRightAngle;\n}", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c\
    \ - b);\n    long abc = ab + ac;\n    long bcb = bc + cb;\n    long abbc = abb\
    \ + bcc;\n    long abcc = abc + cbb;\n    long abbb = abbc + cbb;\n    long abbba\
    \ = abbb + abba;\n    long abbca = abbb + abca;\n    long abccb = abcc + cbcb;\n\
    \    long abccc = abcc + cccb;\n    long abccb = abccc + cbcb;\n    long abbbac\
    \ = abbbac + abbac;\n    long abbcaa = abbcaa + abcaa;\n    long abcccb = abcccb\
    \ + cccb;\n    long abccca = abccca + ccca;\n    long abbbaca = abbbaca + abbaca;\n\
    \    long abbcaaa = abbcaaa + abcaaa;\n    long abcccbc = abcccbc + cccb;\n  \
    \  long abcccaa = abcccaa + ccca;\n    long abbbacaa = abbbacaa + abbaca;\n  \
    \  long abbcaaaa = abbcaaaa + abcaaa;\n    long abcccbcb = abcccbcb + cccb;\n\
    \    long abcccaaa = abcccaaa + ccca;\n    long abbbacaaa = abbbacaaa + abbaca;\n\
    \    long abbcaaaaa = abbcaaaaa + abcaaa;\n    long abcccbccb = abcccbccb + cccb;\n\
    \    long abcccaaaa = abcccaaaa + ccca;\n    long abbbacaaaa = abbbacaaaa + abbaca;\n\
    \    long abbcaaaaaa = abbcaaaaaa + abcaaa;\n    long abcccbcccb = abcccbcccb\
    \ + cccb;\n    long abcccaaaaa = abcccaaaaa + ccca;\n    long abbbacaaaaa = abbbacaaaaa\
    \ + abbaca;\n    long abbcaaaaaaa = abbcaaaaaaa + ab", "{\n    long angle;\n \
    \   bool isRight;\n    \n    angle = std.math.angle(std.math.radians(a), std.math.radians(b),\
    \ std.math.radians(c));\n    isRight = angle >= std.math.radians(90);\n    \n\
    \    return isRight;\n}", "{\n    long ab = abs(b - a);\n    long ac = abs(c -\
    \ a);\n    long bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd =\
    \ abs(bc + ab);\n    long acd = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n\
    \    long acdb = abs(acd + abc);\n    long acbc = abs(acdb + abc);\n    long acdbc\
    \ = abs(acdbc + bcd);\n    long acbca = abs(acbc + acd);\n    long acbcab = abs(acbca);\n\
    \    long acbcabc = abs(acbcab);\n    long acbcabcd = abs(acbcabcd);\n    long\
    \ acbcabcda = abs(acbcabcda);\n    long acbcabcdaa = abs(acbcabcdaa);\n    long\
    \ acbcabcdaaa = abs(acbcabcdaaa);\n    long acbcabcdaaab = abs(acbcabcdaaab);\n\
    \    long acbcabcdaaabc = abs(acbcabcdaaabc);\n    long acbcabcdaaabca = abs(acbcabcdaaabca);\n\
    \    long acbcabcdaaabcaa = abs(acbcabcdaaabcaa);\n    long acbcabcdaaabcaaa =\
    \ abs(acbcabcdaaabcaaa);\n    long acbcabcdaaabcaaab = abs(acbcabcdaaabcaaab);\n\
    \    long acbcabcdaaabcaaabc = abs(acbcabcdaaabcaaabc);\n    long acbcabcdaaabcaaabca\
    \ = abs(acbcabcdaaabcaaabca);\n    long acbcabcdaaabcaaabcaa = abs(acbcabcdaaabcaaabcaa);\n\
    \    long acbcabcdaaabcaaabcaaa = abs(acbcabcdaaabcaaabcaaa);\n    long acbcabcdaaabcaaabcaaab\
    \ = abs(acbcabcdaaabcaaabcaaab);\n    long acbcabcdaaabcaaabcaaabc = abs(acbcabcdaaabcaaabcaaabc);\n\
    \    long acbcabcdaaabcaaabcaaabca = abs(acbcabcdaaabcaaabcaaabca);\n    long\
    \ acbcabcdaaabcaaabca", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long\
    \ side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n\
    \    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a) + abs(b)\
    \ + abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7 = abs(a)\
    \ - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n    long side9\
    \ = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) - abs(b) - abs(c);\n \
    \   long side11 = abs(a) - abs(b) + abs(c);\n    long side12 = abs(a) + abs(b)\
    \ - abs(c);\n    long side13 = abs(a) + abs(b) + abs(c);\n    long side14 = abs(a)\
    \ - abs(b) - abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n    long side16\
    \ = abs(a) + abs(b) + abs(c);\n    long side17 = abs(a) - abs(b) - abs(c);\n \
    \   long side18 = abs(a) - abs(b) + abs(c);\n    long side19 = abs(a) + abs(b)\
    \ - abs(c);\n    long side20 = abs(a) - abs(b) - abs(c);\n    long side21 = abs(a)\
    \ + abs(b) + abs(c);\n    long side22 = abs(a) - abs(b) + abs(c);\n    long side23\
    \ = abs(a) - abs(b) - abs(c);\n    long side24 = abs(a) + abs(b) - abs(c);\n \
    \   long side25 = abs(a) - abs(b) - abs(c);\n    long side26 = abs(a) - abs(b)\
    \ + abs(c);\n    long side27 = abs(a) + abs(b) - abs(c);\n    long side28 = abs(a)\
    \ + abs(b) + abs(c);\n    long side29 = abs(a) - abs(b) + abs(c);\n    long side30\
    \ = abs(a) - abs(b) - abs(c);\n    long side31 = abs(a) - abs(b) + abs(c);\n \
    \   long side32 = abs(a) + abs(b) - abs(c);\n    long side33 = abs(a) + abs(b)\
    \ + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n    long side35 = abs(a)\
    \ - abs(b) + abs(c);\n    long side36 = abs(a) - abs(b) - abs(c);\n    long side37\
    \ = abs(a) + abs(b) - abs(c);\n    long side38", "{\n    long side1 = b - a;\n\
    \    long side2 = c - a;\n    long side3 = b - c;\n    long side4 = c - b;\n \
    \   long side5 = side1 + side2 + side3 + side4;\n    long side6 = side1 - side2\
    \ - side3 - side4;\n    long side7 = side1 + side3 - side4;\n    long side8 =\
    \ side1 - side2 + side3;\n    long side9 = side1 + side2 + side4;\n    long side10\
    \ = side1 - side3 - side4;\n    long side11 = side1 + side2 + side3;\n    long\
    \ side12 = side1 - side2 + side4;\n    long side13 = side1 + side3 - side4;\n\
    \    long side14 = side1 - side3 + side4;\n    long side15 = side1 + side2 + side4;\n\
    \    long side16 = side1 - side2 - side3 + side4;\n    long side17 = side1 + side3\
    \ - side4;\n    long side18 = side1 - side3 + side4;\n    long side19 = side1\
    \ + side2 - side4;\n    long side20 = side1 - side2 + side4;\n    long side21\
    \ = side1 + side3 - side4;\n    long side22 = side1 - side3 - side4;\n    long\
    \ side23 = side1 + side2 + side4;\n    long side24 = side1 - side2 + side4;\n\
    \    long side25 = side1 + side3 - side4;\n    long side26 = side1 - side3 + side4;\n\
    \    long side27 = side1 + side2 + side4;\n    long side28 = side1 - side2 + side4;\n\
    \    long side29 = side1 + side3 - side4;\n    long side30 = side1 - side3 + side4;\n\
    \    long side31 = side1 + side2 - side4;\n    long side32 = side1 - side2 + side4;\n\
    \    long side33 = side1 + side3 - side4;\n    long side34 = side1 - side3 + side4;\n\
    \    long side35 = side1 + side2 + side4;\n    long side36 = side1 - side2 + side4;\n\
    \    long side37 = side1 + side3 - side4;\n    long side38 = side1 - side3 + side4;\n\
    \    long side39 = side1 + side2 + side4;\n    long side40 = side1 - side2 + side4;\n\
    \    long side41 = side1 + side3 - side4;\n    long side42 = side1 - side3 + side4;\n\
    \    long side43 = side1 + side2 + side4;\n    long side44 = side1 - side2 + side4;\n\
    \    long ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n\
    \    long acd = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n    long acbd\
    \ = abs(acd + abc);\n    long acdbc = abs(acbd + acd);\n    long acdbcd = abs(acdbc\
    \ + abcd);\n    long acdbcde = abs(acdbcd + abdc);\n    long acdbcdef = abs(acdbcdef\
    \ + abde);\n    long acdbcdefg = abs(acdbcdef + abdef);\n    long acdbcdefgh =\
    \ abs(acdbcdefg + abdefg);\n    long acdbcdefghi = abs(acdbcdefgh + abdefgh);\n\
    \    long acdbcdefghij = abs(acdbcdefghi + abdefghi);\n    long acdbcdefghijk\
    \ = abs(acdbcdefghij + abdefghij);\n    long acdbcdefghijkl = abs(acdbcdefghijk\
    \ + abdefghijk);\n    long acdbcdefghijkl = abs(acdbcdefghijkl + abdefghijkl);\n\
    \    long acdbcdefghijklm = abs(acdbcdefghijkl + abdefghijklm);\n    long acdbcdefghijklm\
    \ = abs(acdbcdefghijklm + abdefghijklm);\n    long acdbcdefghijklm = abs(acdbcdefghijklm\
    \ + abdefghijklm);\n    long acdbcdefghijklm = abs(acdbcdefghijklm + abdefghijklm);\n\
    \    long acdbcdefghijklm = abs(acdbcdefghijklm + abdefghijklm);\n    long acdbcdefghijklm\
    \ = abs(acdbcdefghijklm + abdefghijklm);\n    long acdbcdefghijklm = abs(acdbcdefghijklm\
    \ + abdefghijklm);\n    long acdbcdefghijklm = abs(acdbcdefghijklm + abdefghijklm);\n\
    \    long acdbcdef", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc\
    \ + ab);\n    long acd = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n    long\
    \ acdb = abs(acd + abc);\n    long abcda = abs(abcd + acb);\n    long acdbc =\
    \ abs(acdb + abc);\n    long acdbca = abs(acdbc + acb);\n    long acdbcab = abs(acdbca\
    \ + acb);\n    long acdbcabc = abs(acdbcab + acb);\n    long acdbcabcd = abs(acdbcabc\
    \ + acb);\n    long acdbcabcda = abs(acdbcabcd + acb);\n    long acdbcabcdaa =\
    \ abs(acdbcabcda + acb);\n    long acdbcabcdaaa = abs(acdbcabcdaa + acb);\n  \
    \  long acdbcabcdaaab = abs(acdbcabcdaaab + acb);\n    long acdbcabcdaaabc = abs(acdbcabcdaaabc\
    \ + acb);\n    long acdbcabcdaaabcd = abs(acdbcabcdaaabcd + acb);\n    long acdbcabcdaaabcda\
    \ = abs(acdbcabcdaaabcda + acb);\n    long acdbcabcdaaabcdaa = abs(acdbcabcdaaabcdaa\
    \ + acb);\n    long acdbcabcdaaabcdaaa = abs(acdbcabcdaaabcdaaa + acb);\n    long\
    \ acdbcabcdaaabcdaaab = abs(acdbcabcdaaabcdaaab + acb);\n    long acdbcabcdaaabcdaaabc\
    \ = abs(acdbcabcdaaabcdaaabc + acb);\n    long acdbcabcdaaabcdaaabcd = abs(acdbcabcdaaabcdaaabcd\
    \ + acb);\n    long acdbcabcdaaabcdaaabcda = abs(acdbcabcdaaabcdaaabcda + acb);\n\
    \    long acdbcabcdaaabcdaaabcdaa = abs(acdbcabcdaaabcdaaabcdaa + acb);\n    long\
    \ acdbcabcdaaabcdaaabcdaaa = abs(acdbcabcdaaabcda", "{\n    long ab = abs(b -\
    \ a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c\
    \ - b);\n    long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long abac\
    \ = abs(c - a);\n    long acab = abs(c - b);\n    long acbc = abs(c - c);\n  \
    \  long abcab = abs(b - c);\n    long abcabc = abs(b - c);\n    long abcabbc =\
    \ abs(b - b);\n    long abcabac = abs(c - a);\n    long abcabbca = abs(b - c);\n\
    \    long abcabbcab = abs(b - c);\n    long abcabbcabc = abs(b - b);\n    long\
    \ abcabbcabca = abs(c - a);\n    long abcabbcabcab = abs(b - c);\n    long abcabbcabcabc\
    \ = abs(b - b);\n    long abcabbcabcabca = abs(c - a);\n    long abcabbcabcabcab\
    \ = abs(b - c);\n    long abcabbcabcabcabc = abs(b - b);\n    long abcabbcabcabcabca\
    \ = abs(c - a);\n    long abcabbcabcabcabcab = abs(b - c);\n    long abcabbcabcabcabcabc\
    \ = abs(b - b);\n    long abcabbcabcabcabcabca = abs(c - a);\n    long abcabbcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabbcabcabcabcabcabc = abs(b - b);\n    long abcabbcabcabcabcabcabca\
    \ = abs(c - a);\n    long abcabbcabcabcabcabcabcab = abs(b - c);\n    long abcabbcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabbcabcabcabcabcabcabcabca = abs(c - a);\n    long\
    \ abcabbcabcabcabcabcabcabcab = abs(b - c);\n    long abcabbcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabbcabcabcabcabcabcabcabcabca = abs(c - a);\n   \
    \ long abcabbcabcabcabcabcabcabcabcab = abs(b - c);\n    long abcabbcabcabcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabbcabcabcabcabcabcabcabcabcabca = abs(c - a);\n\
    \    ", "{\n    long angle;\n    long angle1;\n    long angle2;\n    long angle3;\n\
    \    angle = acos((b*b + c*c - a*a)/(2*b*c));\n    angle1 = atan2(b,c);\n    angle2\
    \ = atan2(a,c);\n    angle3 = atan2(a,b);\n    if (angle1 < angle2 && angle1 <\
    \ angle3)\n        return true;\n    else\n        return false;\n}\n</code>\n\
    <|/ a tags=c++,trigonometry,geometry |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns `NaN` when `a` is `0`.\n<|/ c |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns `NaN` when `a` is `0`.\n<|/ c |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns `NaN` when `a` is `0`.\n<|/ c |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns `NaN` when `a` is `0`.\n<|/ c |>\n<| c |>\nThis code doesn't work. `acos`\
    \ returns `NaN` when `a` is `0`.\n<|/ c |>\n<| a dscore=5 |>\n<code>", "{\n  \
    \  long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb\
    \ = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n    long abbc\
    \ = abb * bc;\n    long abcc = abc * bc;\n    long acbcc = acbcc * bc;\n    long\
    \ abbbc = abbb * bc;\n    long abbcc = abbcc * bc;\n    long abccc = abcc * bc;\n\
    \    long acbccc = acbccc * bc;\n    long abbbcc = abbbc * bc;\n    long abbccc\
    \ = abbccc * bc;\n    long abcccb = abccc * bc;\n    long acbcccb = acbcccb *\
    \ bc;\n    long abbbccb = abbbcc * bc;\n    long abbcccb = abbcccb * bc;\n   \
    \ long abcccbc = abcccb * bc;\n    long acbcccbb = acbcccbb * bc;\n    long abbbccbb\
    \ = abbbccbb * bc;\n    long abbcccbb = abbcccbb * bc;\n    long abcccbbc = abcccbb\
    \ * bc;\n    long acbcccbbc = acbcccbbc * bc;\n    long abbbccbbc = abbbccbbc\
    \ * bc;\n    long abbcccbbc = abbcccbbc * bc;\n    long abcccbbcb = abcccbbcb\
    \ * bc;\n    long acbcccbbcb = acbcccbbcb * bc;\n    long abbbccbbcb = abbbccbbcb\
    \ * bc;\n    long abbcccbbcb = abbcccbbcb * bc;\n    long abcccbbcbc = abcccbbcbc\
    \ * bc;\n    long acbcccbbcbc = acbcccbbcbc * bc;\n    long abbbccbbcbc = abbbccbbcbc\
    \ * bc;\n    long abbcccbbcbc = abbcccbbcbc * bc;\n    long abcccbbcbcb = abcccbbcbcb",
  "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb\
    \ = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb * bc;\n    long abbc\
    \ = abb * bc;\n    long abbb = abb * bb;\n    long abbba = abbb * ba;\n    long\
    \ abbbc = abb * bc;\n    long abbca = abb * ca;\n    long abbcd = abb * cd;\n\
    \    long abbce = abb * ce;\n    long abbcef = abb * cef;\n    long abbcefg =\
    \ abb * cefg;\n    long abbcefgh = abb * cefgh;\n    long abbcefghi = abb * cefghi;\n\
    \    long abbcefghij = abb * cefghij;\n    long abbcefghijk = abb * cefghijk;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbcefghijkl = abb * cefghijkl;\n    long abbcefghijkl = abb * cefghijkl;\n\
    \    long abbce", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc\
    \ = b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc =\
    \ acb * bc;\n    long abbc = abb * bc;\n    long acbcbc = acbcb * bc;\n    long\
    \ abcbc = abcb * bc;\n    long acbcbcbc = acbcbcb * bc;\n    long abcbcbc = abcbcb\
    \ * bc;\n    long acbcbcbcbc = acbcbcbcb * bc;\n    long abcbcbcbc = abcbcbcb\
    \ * bc;\n    long acbcbcbcbcbc = acbcbcbcbcb * bc;\n    long abcbcbcbcbc = abcbcbcbcb\
    \ * bc;\n    long acbcbcbcbcbcbc = acbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbc\
    \ = abcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbc = acbcbcbcbcbcbcb * bc;\n  \
    \  long abcbcbcbcbcbcbc = abcbcbcbcbcbcb * bc;\n    long acbcbcbcbcbcbcbcbc =\
    \ acbcbcbcbcbcbcbcb * bc;\n    long abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcb * bc;\n\
    \    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbc\
    \ * bc;\n    long abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbc * bc;\n    long\
    \ acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbc * bc;\n    long abcbcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbcbcbc * bc;\n    long acbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbc\
    \ * bc;\n    ", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0) return false;\n\
    \    long e = Math.sqrt(d);\n    long f = (long) (-b + e);\n    long g = (long)\
    \ (-b - e);\n    long h = (long) (a);\n    long i = (long) (b);\n    long j =\
    \ (long) (c);\n    long k = (long) (a);\n    long l = (long) (b);\n    long m\
    \ = (long) (c);\n    long n = (long) (a);\n    long o = (long) (b);\n    long\
    \ p = (long) (c);\n    long q = (long) (a);\n    long r = (long) (b);\n    long\
    \ s = (long) (c);\n    long t = (long) (a);\n    long u = (long) (b);\n    long\
    \ v = (long) (c);\n    long w = (long) (a);\n    long x = (long) (b);\n    long\
    \ y = (long) (c);\n    long z = (long) (a);\n    long A = (long) (b);\n    long\
    \ B = (long) (c);\n    long C = (long) (a);\n    long D = (long) (b);\n    long\
    \ E = (long) (c);\n    long F = (long) (a);\n    long G = (long) (b);\n    long\
    \ H = (long) (c);\n    long I = (long) (a);\n    long J = (long) (b);\n    long\
    \ K = (long) (c);\n    long L = (long) (a);\n    long M = (long) (b);\n    long\
    \ N = (long) (c);\n    long O = (long) (a);\n    long P = (long) (b);\n    long\
    \ Q = (long) (c);\n    long R = (long) (a);\n    long S = (long) (b);\n    long\
    \ T = (long) (c);\n    long U = (long) (a);\n    long V = (long) (b);\n    long\
    \ W = (long) (c);\n    long X = (long) (a);\n    long Y = (long) (b);\n    long\
    \ Z = (long) (c);\n    long aa = a;\n    long bb = b;\n    long cc = c;\n    long\
    \ dd = d;\n    long ee = e;\n    long ff = f;\n    long gg = g;\n    long hh =\
    \ h;\n    long ii = i;\n    long jj = j;\n    long kk = k;\n    long ll = l;\n\
    \    long mm = m;", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b -\
    \ c);\n    long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long abbcd\
    \ = abs(b - c);\n    long acbcdab = abs(c - b);\n    long acbcdabc = abs(c - b);\n\
    \    long abbcda = abs(b - a);\n    long acbcdabca = abs(c - b);\n    long acbcdabcbc\
    \ = abs(c - b);\n    long abbcdaac = abs(b - a);\n    long acbcdabcaab = abs(c\
    \ - b);\n    long acbcdabcbcba = abs(c - b);\n    long abbcdaacbc = abs(b - a);\n\
    \    long acbcdabcaabbc = abs(c - b);\n    long acbcdabcbcbaac = abs(c - b);\n\
    \    long abbcdaacbcdab = abs(b - a);\n    long acbcdabcaabbcbc = abs(c - b);\n\
    \    long acbcdabcbcbaacb = abs(c - b);\n    long abbcdaacbcdabc = abs(b - a);\n\
    \    long acbcdabcaabbcbcd = abs(c - b);\n    long acbcdabcbcbaacbc = abs(c -\
    \ b);\n    long abbcdaacbcdabca = abs(b - a);\n    long acbcdabcaabbcbcdb = abs(c\
    \ - b);\n    long acbcdabcbcbaacbca = abs(c - b);\n    long abbcdaacbcdabcab =\
    \ abs(b - a);\n    long acbcdabcaabbcbcdbc = abs(c - b);\n    long acbcdabcbcbaacbcab\
    \ = abs(c - b);\n    long abbcdaacbcdabcabc = abs(b - a);\n    long acbcdabcaabbcbcdbcd\
    \ = abs(c - b);\n    long acbcdabcbcbaacbcabc = abs(c - b);\n    long abbcdaacbcdabcabcd\
    \ = abs(b - a);\n    long acbcdabcaabbcbcdbcda = abs(c - b);\n    long acbcdabcbcbaacbcabcd\
    \ = abs(c - b);\n    long abbc", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n\
    \    long side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b)\
    \ + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a)\
    \ + abs(b) + abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7\
    \ = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n  \
    \  long side9 = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) - abs(b) +\
    \ abs(c);\n    long side11 = abs(a) - abs(b) - abs(c);\n    long side12 = abs(a)\
    \ + abs(b) - abs(c);\n    long side13 = abs(a) + abs(b) + abs(c);\n    long side14\
    \ = abs(a) - abs(b) + abs(c);\n    long side15 = abs(a) - abs(b) - abs(c);\n \
    \   long side16 = abs(a) + abs(b) - abs(c);\n    long side17 = abs(a) - abs(b)\
    \ + abs(c);\n    long side18 = abs(a) - abs(b) - abs(c);\n    long side19 = abs(a)\
    \ + abs(b) - abs(c);\n    long side20 = abs(a) - abs(b) + abs(c);\n    long side21\
    \ = abs(a) - abs(b) - abs(c);\n    long side22 = abs(a) + abs(b) - abs(c);\n \
    \   long side23 = abs(a) - abs(b) + abs(c);\n    long side24 = abs(a) - abs(b)\
    \ - abs(c);\n    long side25 = abs(a) + abs(b) - abs(c);\n    long side26 = abs(a)\
    \ - abs(b) + abs(c);\n    long side27 = abs(a) - abs(b) - abs(c);\n    long side28\
    \ = abs(a) - abs(b) + abs(c);\n    long side29 = abs(a) + abs(b) - abs(c);\n \
    \   long side30 = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a) - abs(b)\
    \ - abs(c);\n    long side32 = abs(a) + abs(b) - abs(c);\n    long side33 = abs(a)\
    \ - abs(b) + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n    long side35\
    \ = abs(a) + abs(b) - abs(c);\n    long side36 = abs(a) - abs(b) + abs(c);\n \
    \   long side37 = abs(a) - abs(b) - abs(c);\n    long side38", "{\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ acb = abs(c - b);\n    long abc = abs(b - c);\n    long abbc = abs(b - b);\n\
    \    long acbc = abs(c - b);\n    long abac = abs(b - a);\n    long abcab = abs(b\
    \ - c);\n    long acbcab = abs(c - b);\n    long abcabc = abs(b - c);\n    long\
    \ acbcabb = abs(c - b);\n    long abcabbc = abs(b - c);\n    long acbcabbc = abs(c\
    \ - b);\n    long abcabbcab = abs(b - c);\n    long acbcabbcab = abs(c - b);\n\
    \    long abcabbcabc = abs(b - c);\n    long acbcabbcabb = abs(c - b);\n    long\
    \ abcabbcabbc = abs(b - c);\n    long acbcabbcabbc = abs(c - b);\n    long abcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabb = abs(c - b);\n    long abcabbcabbcabbc\
    \ = abs(b - c);\n    long acbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabbc = abs(c - b);\n    long abcabbcabbcabbcabbcabbcab\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabbcab = abs(c - b);\n    long abcabbcabbcabbcabbcabbcabc\
    \ = abs(b - c);\n    long acbcabbcabbcabbcabbcabbcabbc = abs(", "{\n    long ab\
    \ = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n\
    \    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n\
    \    long abbcd = abbc + acbc;\n    long acbcdab = acbc + abbc;\n    long abbcda\
    \ = abbc + acbd;\n    long acbcdabc = acbc + abbcd;\n    long abbcdaab = abbc\
    \ + acbda;\n    long acbcdabca = acbc + abbcda;\n    long abbcdaabc = abbc + acbdaabc;\n\
    \    long acbcdabcab = acbc + abbcdaabc;\n    long abbcdaabca = abbc + acbdaabca;\n\
    \    long acbcdabcabc = acbc + abbcdaabca;\n    long abbcdaabcab = abbc + acbdaabcab;\n\
    \    long acbcdabcabca = acbc + abbcdaabcab;\n    long abbcdaabcabc = abbc + acbdaabcabc;\n\
    \    long acbcdabcabcab = acbc + abbcdaabcabc;\n    long abbcdaabcabca = abbc\
    \ + acbdaabcabca;\n    long acbcdabcabcabc = acbc + abbcdaabcabca;\n    long abbcdaabcabcab\
    \ = abbc + acbdaabcabcab;\n    long acbcdabcabcabca = acbc + abbcdaabcabcab;\n\
    \    long abbcdaabcabcabc = abbc + acbdaabcabcabc;\n    long acbcdabcabcabcab\
    \ = acbc + abbcdaabcabcab;\n    long abbcdaabcabcabca = abbc + acbdaabcabcabca;\n\
    \    long acbcdabcabcabcabc = acbc + abbcdaabcabcabca;\n    long abbcdaabcabcabcab\
    \ = abbc + acbdaabcabcabcab;\n    long acbcdabcabcabcabca = acbc + abbcdaabcabcabcab;\n\
    \    long abbcdaabcabcabcabcd = ", "{\n    long ab = abs(b - a);\n    long ac\
    \ = abs(c - a);\n    long bc = abs(b - c);\n    long abc = abs(ab + ac + bc);\n\
    \    long abc_ab = abc + ab;\n    long abc_ac = abc + ac;\n    long abc_bc = abc\
    \ + bc;\n    long abc_abc = abc + abc;\n    long abc_abc_ab = abc + abc_ab;\n\
    \    long abc_abc_ac = abc + abc_ac;\n    long abc_abc_bc = abc + abc_bc;\n  \
    \  long abc_abc_abc = abc + abc_abc;\n    long abc_abc_abc_ab = abc + abc_abc_ab;\n\
    \    long abc_abc_abc_ac = abc + abc_abc_ac;\n    long abc_abc_abc_bc = abc +\
    \ abc_abc_bc;\n    long abc_abc_abc_abc = abc + abc_abc_abc;\n    long abc_abc_abc_abc_ab\
    \ = abc + abc_abc_abc_ab;\n    long abc_abc_abc_abc_ac = abc + abc_abc_abc_ac;\n\
    \    long abc_abc_abc_abc_bc = abc + abc_abc_abc_bc;\n    long abc_abc_abc_abc_abc\
    \ = abc + abc_abc_abc_abc;\n    long abc_abc_abc_abc_abc_ab = abc + abc_abc_abc_abc_ab;\n\
    \    long abc_abc_abc_abc_abc_ac = abc + abc_abc_abc_abc_ac;\n    long abc_abc_abc_abc_abc_bc\
    \ = abc + abc_abc_abc_abc_bc;\n    long abc_abc_abc_abc_abc_abc = abc + abc_abc_abc_abc_abc;\n\
    \    long abc_abc_abc_abc_abc_abc_ab = abc + abc_abc_abc_abc_abc_ab;\n    long\
    \ abc_abc_abc_abc_abc_abc_ac = abc + abc_abc_abc_abc_ac;\n    long abc_abc_abc_abc_abc_abc_bc\
    \ = abc + abc_abc_abc_abc_bc;\n    long ab", "{\n    long ab = abs(b - a);\n \
    \   long ac = abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n\
    \    long abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c\
    \ - b);\n    long abac = abs(b - a);\n    long abcab = abs(b - c);\n    long acbcab\
    \ = abs(c - b);\n    long accabb = abs(c - a);\n    long abcabc = abs(b - c);\n\
    \    long acbcabc = abs(c - b);\n    long abcabbc = abs(b - c);\n    long accabbc\
    \ = abs(c - a);\n    long abcabcab = abs(b - c);\n    long acbcabcab = abs(c -\
    \ b);\n    long accabcabb = abs(c - a);\n    long abcabcabc = abs(b - c);\n  \
    \  long acbcabcabc = abs(c - b);\n    long abcabcabbc = abs(b - c);\n    long\
    \ accabcabbc = abs(c - a);\n    long abcabcabcab = abs(b - c);\n    long acbcabcabcab\
    \ = abs(c - b);\n    long accabcabcabb = abs(c - a);\n    long abcabcabcabc =\
    \ abs(b - c);\n    long acbcabcabcabc = abs(c - b);\n    long abcabcabcabbc =\
    \ abs(b - c);\n    long accabcabcabbc = abs(c - a);\n    long abcabcabcabcab =\
    \ abs(b - c);\n    long acbcabcabcabcab = abs(c - b);\n    long accabcabcabcabb\
    \ = abs(c - a);\n    long abcabcabcabcabc = abs(b - c);\n    long acbcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabbc = abs(b - c);\n    long accabcabcabcabbc\
    \ = abs(c - a);\n    long abcabcabcabcabcab = abs(b - c);\n    long acbcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabbc = abs(b - c);\n    long accabcabcabcabbc\
    \ = abs(c - a);\n    long abcabcabcabcabcab = abs(b - c);\n    long acbcabcabcabcabc\
    \ = abs(c - b);\n    long abcabcabcabcabbc = abs(b - c);\n    long accabcabcabcabbc\
    \ = abs(c - a);\n    long abcabcabcabcabcab", "{\n    long ab = abs(b - a);\n\
    \    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c - b);\n\
    \    long abc = ab + ac;\n    long bcb = bc + cb;\n    long acb = ac + cb;\n \
    \   long abbc = ab + bc;\n    long bcab = bc + ac;\n    long cabc = cb + ac;\n\
    \    long abcab = abc + ab;\n    long bcbcab = bc + bc;\n    long cabcab = cab\
    \ + cb;\n    long abbcabc = abbc + ab;\n    long bcabcabc = bcabc + bc;\n    long\
    \ cabbcabc = cabcab + cb;\n    long abcabbc = abcabc + ac;\n    long bcbcabcabc\
    \ = bcbcabc + bc;\n    long cabbcbcabc = cabbcabc + cb;\n    long abcabcabc =\
    \ abcabcab + ac;\n    long bcbcabbcabc = bcbcabcabc + bc;\n    long cabbcbcbcabc\
    \ = cabbcbcabc + cb;\n    long abcabcabcabc = abcabcabcab + ac;\n    long bcbcabbcbcabc\
    \ = bcbcabbcabc + bc;\n    long cabbcbcbcbcabc = cabbcbcbcabc + cb;\n    long\
    \ abcabcabcabcabc = abcabcabcabcab + ac;\n    long bcbcabbcbcbcabc = bcbcabbcbcabc\
    \ + bc;\n    long cabbcbcbcbcabc = cabbcbcbcbcabc + cb;\n    long abcabcabcabcabc\
    \ = abcabcabcabcab + ac;\n    long bcbcabbcbcbcabc = bcbcabbcbcbcabc + bc;\n \
    \   long cabbcbcbcbcbcabc = cabbcbcbcbcbcabc + cb;\n    long abcabcabcabcabc =\
    \ abcabcabcabcabc + ac;\n    long bcbcabbcbcbcabc = bcbcabbcbcbcabc + bc;\n  \
    \  long cabbcbcbcbcbcabc = cabbcbcbcbcbcabc + cb;\n    long abcabcabcabcabc =\
    \ abcabcabcabcabc + ac;\n    long bcbcabbcbcbcabc = bcbcabbcbcbcabc + bc;\n  \
    \  long cabbcbcbcb", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b -\
    \ c);\n    long bca = abs(c - a);\n    long abca = abs(b - c);\n    long abbc\
    \ = abs(b - a);\n    long abcab = abs(c - a);\n    long abcabc = abs(c - b);\n\
    \    long abcabcb = abs(c - c);\n    long abcabcba = abs(b - a);\n    long abcabcbac\
    \ = abs(b - c);\n    long abcabcbacb = abs(b - b);\n    long abcabcbacba = abs(c\
    \ - a);\n    long abcabcbacbac = abs(c - b);\n    long abcabcbacbacb = abs(c -\
    \ c);\n    long abcabcbacbacba = abs(b - a);\n    long abcabcbacbacbac = abs(b\
    \ - c);\n    long abcabcbacbacba = abs(b - b);\n    long abcabcbacbacbac = abs(c\
    \ - a);\n    long abcabcbacbacba = abs(c - b);\n    long abcabcbacbacbac = abs(c\
    \ - c);\n    long abcabcbacbacba = abs(b - a);\n    long abcabcbacbacbac = abs(b\
    \ - c);\n    long abcabcbacbacba = abs(b - b);\n    long abcabcbacbacbac = abs(c\
    \ - a);\n    long abcabcbacbacba = abs(c - b);\n    long abcabcbacbacbac = abs(c\
    \ - c);\n    long abcabcbacbacba = abs(b - a);\n    long abcabcbacbacbac = abs(b\
    \ - c);\n    long abcabcbacbacba = abs(b - b);\n    long abcabcbacbacbac = abs(c\
    \ - a);\n    long abcabcbacbacba = abs(c - b);\n    long abcabcbacbacbac = abs(c\
    \ - c);\n    long abcabcbacbacba = abs(b - a);\n    long abcabcbacbacbac = abs(b\
    \ - c);\n    long abcabcbacbacba = abs(b - b);\n    long abcabcbacbacbac = abs(c\
    \ - a);\n    long abcabcbacbacba = abs(c - b);\n    long abcabcbacbacbac = abs(c\
    \ - c);\n    long abcabcbacbacba = abs(b - a);\n", "{\n    long ab = a - b;\n\
    \    long ac = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n    long\
    \ acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n    long\
    \ abbcd = abbc + acbc;\n    long acbcdab = acbc + abbc;\n    long abbcdac = abbc\
    \ + acbc;\n    long acbcdabc = acbc + abbc;\n    long abbcdacb = abbc + acbc;\n\
    \    long acbcdabbc = acbc + abbc;\n    long abbcdacbd = abbc + acbc;\n    long\
    \ acbcdabbcd = acbc + abbc;\n    long abbcdacbcdab = abbc + acbc + ab;\n    long\
    \ acbcdabbcdac = acbc + abbc + a;\n    long abbcdacbcdabc = abbc + acbc + ab;\n\
    \    long acbcdabbcdacb = acbc + abbc + a;\n    long abbcdacbcdabbc = abbc + acbc\
    \ + ab;\n    long acbcdabbcdacbc = acbc + abbc + a;\n    long abbcdacbcdabbcd\
    \ = abbc + acbc + ab;\n    long acbcdabbcdacbcdab = acbc + abbc + a + b;\n   \
    \ long abbcdacbcdabbcdac = abbc + acbc + a + b;\n    long acbcdabbcdacbcdabc =\
    \ acbc + abbc + a + b;\n    long abbcdacbcdabbcdacb = abbc + acbc + a + b;\n \
    \   long acbcdabbcdacbcdabbc = acbc + abbc + a + b;\n    long abbcdacbcdabbcdacbd\
    \ = abbc + acbc + a + b;\n    long acbcdabbcdacbcdabbcd = acbc + abbc + a + b;\n\
    \    long abbcdacbcdabbcdacbcdab = abbc + acbc + a + b + c;\n    long acbcdabbcdacbcdabbcdac\
    \ = acbc + ab", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n   \
    \ long bc = abs(b - c);\n    long ad = abs(a - d);\n    long bd = abs(b - d);\n\
    \    long cd = abs(c - d);\n    long abc = ab + ac;\n    long bcd = bc + cd;\n\
    \    long acd = ac + cd;\n    long abbc = abc + bcd;\n    long acdb = acd + bcd;\n\
    \    long abac = abc + acd;\n    long abbd = abbc + bcd;\n    long abca = abc\
    \ + acd;\n    long abbc = abbc + acd;\n    long abac = abac + acd;\n    long abbd\
    \ = abbd + acd;\n    long abca = abca + acd;\n    long abbc = abbc + acd;\n  \
    \  long abac = abac + acd;\n    long abbd = abbd + acd;\n    long abca = abca\
    \ + acd;\n    long abbc = abbc + acd;\n    long abac = abac + acd;\n    long abbd\
    \ = abbd + acd;\n    long abca = abca + acd;\n    long abbc = abbc + acd;\n  \
    \  long abac = abac + acd;\n    long abbd = abbd + acd;\n    long abca = abca\
    \ + acd;\n    long abbc = abbc + acd;\n    long abac = abac + acd;\n    long abbd\
    \ = abbd + acd;\n    long abca = abca + acd;\n    long abbc = abbc + acd;\n  \
    \  long abac = abac + acd;\n    long abbd = abbd + acd;\n    long abca = abca\
    \ + acd;\n    long abbc = abbc + acd;\n    long abac = abac + acd;\n    long abbd\
    \ = abbd + acd;\n    long abca = abca + acd;\n    long abbc = abbc + acd;\n  \
    \  long abac = abac + acd;\n    long abbd = abbd + acd;\n    long abca = abca\
    \ + acd;\n    long abbc = abbc + acd;\n    long abac = abac + acd;\n    long abbd\
    \ = ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc =\
    \ abs(b - c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb\
    \ = bc + cb;\n    long acb = ac + cb;\n    long abac = ab + acb;\n    long bcab\
    \ = bc + cb;\n    long cab = cb + ab;\n    long abcab = ab + acb + bc + cb;\n\
    \    long acbcab = ac + cb + ab + bc;\n    long abcabc = ab + acb + bc + cab;\n\
    \    long acbcabc = ac + cb + ab + bc + cab;\n    long abcabcb = ab + acb + bc\
    \ + cab + bc;\n    long acbcabcb = ac + cb + ab + bc + cab + bc;\n    long abcabcbc\
    \ = ab + acb + bc + cab + bc + ac;\n    long acbcabcbc = ac + cb + ab + bc + cab\
    \ + bc + ac;\n    long abcabcbcb = ab + acb + bc + cab + bc + ac + cb;\n    long\
    \ acbcabcbcb = ac + cb + ab + bc + cab + bc + ac + cb;\n    long abcabcbcbc =\
    \ ab + acb + bc + cab + bc + ac + cb + ab;\n    long acbcabcbcbc = ac + cb + ab\
    \ + bc + cab + bc + ac + cb + ab;\n    long abcabcbcbcb = ab + acb + bc + cab\
    \ + bc + ac + cb + ab + bc;\n    long acbcabcbcbcb = ac + cb + ab + bc + cab +\
    \ bc + ac + cb + ab + bc;\n    long abcabcbcbcbc = ab + acb + bc + cab + bc +\
    \ ac + cb + ab + bc + ac;\n    long acbcabcbcbcbc = ac + cb + ab + bc + cab +\
    \ bc + ac + cb + ab + bc + ac;\n    long abcabcbcbcbcb = ab + acb + bc + cab +\
    \ bc + ac + cb + ab + bc + ac + cb;\n    long acbcabcbcbcbcb = ac + cb + ab +\
    \ bc + cab + bc + ac + cb + ", "{\n    long angle;\n    bool result;\n    \n \
    \   angle = acos((b*b + c*c - a*a) / (2.0*b*c));\n    \n    if (angle > M_PI_2)\n\
    \    {\n        result = true;\n    }\n    else\n    {\n        result = false;\n\
    \    }\n    \n    return result;\n}", "{\n    long d = b * b - 4 * a * c;\n  \
    \  if (d < 0) return false;\n    long sq = d / 2;\n    long t1 = (-b + sq) / a;\n\
    \    long t2 = (-b - sq) / a;\n    return t1 >= 0 && t1 <= 1 && t2 >= 0 && t2\
    \ <= 1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>", "{\n    long\
    \ ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n   \
    \ long abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ab;\n  \
    \  long ac2bc = ac * bc;\n    long ac2abc = ac * abc;\n    long ac2acb = ac *\
    \ acb;\n    long ac2bab = ac * bab;\n    long ac2babc = ac * babc;\n    long ac2babca\
    \ = ac * babca;\n    long ac2babcab = ac * babcab;\n    long ac2babcabc = ac *\
    \ babcabc;\n    long ac2babcabcd = ac * babcabcd;\n    long ac2babcabcd2 = ac\
    \ * babcabcd2;\n    long ac2babcabcd2e = ac * babcabcd2e;\n    long ac2babcabcd2f\
    \ = ac * babcabcd2f;\n    long ac2babcabcd2g = ac * babcabcd2g;\n    long ac2babcabcd2h\
    \ = ac * babcabcd2h;\n    long ac2babcabcd2i = ac * babcabcd2i;\n    long ac2babcabcd2j\
    \ = ac * babcabcd2j;\n    long ac2babcabcd2k = ac * babcabcd2k;\n    long ac2babcabcd2l\
    \ = ac * babcabcd2l;\n    long ac2babcabcd2m = ac * babcabcd2m;\n    long ac2babcabcd2n\
    \ = ac * babcabcd2n;\n    long ac2babcabcd2o = ac * babcabcd2o;\n    long ac2babcabcd2p\
    \ = ac * babcabcd2p;\n    long ac2babcabcd2q = ac * babcabcd2q;\n    long ac2babcabcd2r\
    \ = ac * babcabcd2r;\n    long ac2babcabcd2s = ac * babcabcd2s;\n    long ac2babcabcd2t\
    \ = ac * babcabcd2t;\n    long ac2babcabcd2u = ac * babcabcd2u;\n    long ac2babcabcd2v\
    \ = ac * babcabcd2v;\n    long ac2babcabcd2w = ac * babcabcd2w;\n    long ac2b",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long abc = abs(ab + ac);\n    long bcd = abs(bc + ab);\n    long acd\
    \ = abs(ac + ab);\n    long abcd = abs(abc + bcd);\n    long acdb = abs(acd +\
    \ abc);\n    long abcda = abs(abcd + acdb);\n    long acdbc = abs(acdb + abc);\n\
    \    long abcdbc = abs(abcda + acdbc);\n    long acdbca = abs(acdbc + abcda);\n\
    \    long abcdbca = abs(abcdbc + acdbca);\n    long acdbcab = abs(acdbca + abcdbc);\n\
    \    long abcdbcab = abs(abcdbca + acdbcab);\n    long acdbcabc = abs(acdbcab\
    \ + abcdbca);\n    long abcdbcabc = abs(abcdbcab + acdbcabc);\n    long acdbcabca\
    \ = abs(acdbcabc + abcdbcab);\n    long abcdbcabca = abs(abcdbcabc + acdbcabca);\n\
    \    long acdbcabcab = abs(acdbcabca + abcdbcabc);\n    long abcdbcabcab = abs(abcdbcabca\
    \ + acdbcabcab);\n    long acdbcabcabc = abs(acdbcabcab + abcdbcabca);\n    long\
    \ abcdbcabcabc = abs(abcdbcabcab + acdbcabcabc);\n    long acdbcabcabca = abs(acdbcabcabc\
    \ + abcdbcabcab);\n    long abcdbcabcabca = abs(abcdbcabcabc + acdbcabcabca);\n\
    \    long acdbcabcabcab = abs(acdbcabcabca + abcdbcabcab);\n    long abcdbcabcabcab\
    \ = abs(abcdbcabcabca + acdbcabcabcab);\n    long acdbcabcabcabc = abs(acdbcabcabcab\
    \ + abcdbcabcabca);\n    long abcdbcabcabcabc = abs(abcdbcabcabcab + acdbcabcabcabc);\n\
    \    long acdbcabcabcabca = abs(acdbcabcabcabc + abcdbcabcabcab);\n    long abcdbcabcabcabca\
    \ = abs(abcdbcabcabcabc + acdbcabcabcabca);\n    long acdbcabcabcabcab = abs(acdbcabcabcabca\
    \ + abcdb", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b -\
    \ c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n    long acbc = acb *\
    \ bc;\n    long abbc = abb * bc;\n    long acbcab = acb * cab;\n    long abcab\
    \ = abb * cab;\n    long acbcabc = acbcab * bc;\n    long abcabcb = abcab * bc;\n\
    \    long acbcabcb = acbcabcb * bc;\n    long abcabcbc = abcabcb * bc;\n    long\
    \ acbcabcbc = acbcabcbc * bc;\n    long abcabcbcb = abcabcbcb * bc;\n    long\
    \ acbcabcbcb = acbcabcbcb * bc;\n    long abcabcbcbc = abcabcbcbc * bc;\n    long\
    \ acbcabcbcbc = acbcabcbcbc * bc;\n    long abcabcbcbcb = abcabcbcbcb * bc;\n\
    \    long acbcabcbcbcb = acbcabcbcbcb * bc;\n    long abcabcbcbcbc = abcabcbcbcbc\
    \ * bc;\n    long acbcabcbcbcbc = acbcabcbcbcbc * bc;\n    long abcabcbcbcbcb\
    \ = abcabcbcbcbcb * bc;\n    long acbcabcbcbcbcb = acbcabcbcbcbcb * bc;\n    long\
    \ abcabcbcbcbcbc = abcabcbcbcbcbc * bc;\n    long acbcabcbcbcbcbc = acbcabcbcbcbcbc\
    \ * bc;\n    long abcabcbcbcbcbcb = abcabcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcb\
    \ = acbcabcbcbcbcbcb * bc;\n    long abcabcbcbcbcbcbc = abcabcbcbcbcbcbc * bc;\n\
    \    long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * bc;\n    long abcabcbcbcbcbcbcb\
    \ = abcabcbcbcbcbcbcb * bc;\n    long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc *\
    \ bc", "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n\
    \    long abc = ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n\
    \    long acbc = ac + bc;\n    long abcab = ab + ac;\n    long acbca = ac + bc;\n\
    \    long abcabc = ab + ac;\n    long acbcab = ac + bc;\n    long abcabcb = ab\
    \ + ac;\n    long acbcabc = ac + bc;\n    long abcabcba = ab + ac;\n    long acbcabca\
    \ = ac + bc;\n    long abcabcab = ab + ac;\n    long acbcabcab = ac + bc;\n  \
    \  long abcabcabc = ab + ac;\n    long acbcabcabc = ac + bc;\n    long abcabcabca\
    \ = ab + ac;\n    long acbcabcabca = ac + bc;\n    long abcabcabcab = ab + ac;\n\
    \    long acbcabcabcab = ac + bc;\n    long abcabcabcabc = ab + ac;\n    long\
    \ acbcabcabcabc = ac + bc;\n    long abcabcabcabca = ab + ac;\n    long acbcabcabcabca\
    \ = ac + bc;\n    long abcabcabcabcab = ab + ac;\n    long acbcabcabcabcab = ac\
    \ + bc;\n    long abcabcabcabcabc = ab + ac;\n    long acbcabcabcabcabc = ac +\
    \ bc;\n    long abcabcabcabcabca = ab + ac;\n    long acbcabcabcabcabca = ac +\
    \ bc;\n    long abcabcabcabcabcab = ab + ac;\n    long acbcabcabcabcabcab = ac\
    \ + bc;\n    long abcabcabcabcabcabc = ab + ac;\n    long acbcabcabcabcabcabc\
    \ = ac + bc;\n    long abcabcabcabcabcabca = ab + ac;\n    long acbcabcabcabcabcabca\
    \ = ac + bc;\n    long abcabcabcabcabcabcab = ab + ac;\n    long acbcabcabcabcabcabcab\
    \ = ac + bc;\n    long abcabcabcabcabcabcabc = ab", "{\n    long ab = a - b;\n\
    \    long ac = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n    long\
    \ acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n    long\
    \ abbcd = abbc + acbc;\n    long acbcdab = acbc + abbc;\n    long abbcda = abbc\
    \ + acbd;\n    long acbcdabc = acbcdab + abbcda;\n    long abbcdaab = abbcda +\
    \ acbcdab;\n    long acbcdabca = acbcdabc + abbcdaab;\n    long abbcdaabc = abbcdaab\
    \ + acbcdabc;\n    long acbcdabcd = acbcdabc + abbcdaabc;\n    long abbcdaabcdab\
    \ = abbcdaabcd + acbcdabcd;\n    long acbcdabcdabc = acbcdabcdab + abbcdaabcd;\n\
    \    long abbcdaabcdabcd = abbcdaabcdabc + acbcdabcdabc;\n    long acbcdabcdabcdab\
    \ = acbcdabcdabcd + abbcdaabcdab;\n    long abbcdaabcdabcdac = abbcdaabcdabcdab\
    \ + acbcdabcdabcdab;\n    long acbcdabcdabcdabcd = acbcdabcdabcdabc + abbcdaabcdabcd;\n\
    \    long abbcdaabcdabcdabcde = abbcdaabcdabcdabcd + acbcdabcdabcdabcde;\n   \
    \ long acbcdabcdabcdabcdef = acbcdabcdabcdabcde + abbcdaabcdabcdabcdef;\n    long\
    \ abbcdaabcdabcdabcdefg = abbcdaabcdabcdabcdef + acbcdabcdabcdabcdefg;\n    long\
    \ acbcdabcdabcdabcdefgh = acbcdabcdabcdabcdefg + abbcdaabcdabcdabcdefgh;\n   \
    \ long abbcdaabcdabcdabcdefghi = abbcdaabcdabcdabcdefgh + acbcdabcdabcdabcdefghi;\n\
    \    long acbcdabcdabcdabcdefghij = acbcdabcdabcdabcdefghi + abbcdaabcdabcdabcdefghij;\n\
    \    long abbcdaabcdabcdabcdefghijk = abbcdaabcdabcdabcdefgh", "{\n    long ab\
    \ = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long acb = ac * bc;\n\
    \    long abc = ab * bc;\n    long abbc = ab * bc;\n    long acbc = ac * bc;\n\
    \    long abac = ab * ac;\n    long abcab = ab * abc;\n    long acbcab = ac *\
    \ bc * abc;\n    long acbcabc = ac * bc * abc;\n    long abcabc = ab * abc * abc;\n\
    \    long abcabcb = ab * abc * abc * bc;\n    long abcabcbc = ab * abc * abc *\
    \ bc * bc;\n    long abcabcbcd = ab * abc * abc * bc * bc * bc;\n    long abcabcbcde\
    \ = ab * abc * abc * bc * bc * bc * bc;\n    long abcabcbcdef = ab * abc * abc\
    \ * bc * bc * bc * bc * bc;\n    long abcabcbcdefg = ab * abc * abc * bc * bc\
    \ * bc * bc * bc * bc;\n    long abcabcbcdefgh = ab * abc * abc * bc * bc * bc\
    \ * bc * bc * bc * bc;\n    long abcabcbcdefghi = ab * abc * abc * bc * bc * bc\
    \ * bc * bc * bc * bc * bc;\n    long abcabcbcdefghij = ab * abc * abc * bc *\
    \ bc * bc * bc * bc * bc * bc * bc * bc;\n    long abcabcbcdefghijk = ab * abc\
    \ * abc * bc * bc * bc * bc * bc * bc * bc * bc * bc * bc;\n    long abcabcbcdefghijkl\
    \ = ab * abc * abc * bc * bc * bc * bc * bc * bc * bc * bc * bc * bc;\n    long\
    \ abcabcbcdefghijklmn = ab * abc * abc * bc * bc * bc * bc * bc * bc * bc * bc\
    \ * bc * bc * bc;\n    long abcabcbcdefghijklmn1 = ab * abc * abc * bc * bc *\
    \ bc * bc * bc * bc * bc * bc * bc * bc * bc;\n    long abcabcbcdefghijklm", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac * ab;\n\
    \    long ac2ac = ac * ac;\n    long ac2bc = ac * bc;\n    long ac2abc = ac2ab\
    \ + ac2bc;\n    long ac2bab = ac2bc + ac2ab;\n    long ac2acb = ac2ac + ac2bc;\n\
    \    long ac2bcab = ac2acb + ac2bab;\n    long ac2abcab = ac2abc + ac2bcab;\n\
    \    long ac2bcabc = ac2bcab + ac2abc;\n    long ac2abcabc = ac2abcab + ac2bcabc;\n\
    \    long ac2bcabcb = ac2bcabc + ac2abcb;\n    long ac2abcabcb = ac2abcabcb +\
    \ ac2bcabcb;\n    long ac2bcabcbc = ac2bcabcbc + ac2abcbc;\n    long ac2abcabcbc\
    \ = ac2abcabcbc + ac2bcabcbc;\n    long ac2bcabcbcb = ac2bcabcbca + ac2abcbcb;\n\
    \    long ac2abcabcbcb = ac2abcabcbcb + ac2bcabcbcb;\n    long ac2bcabcbcbc =\
    \ ac2bcabcbcbc + ac2abcbcbc;\n    long ac2abcabcbcbc = ac2abcabcbcbc + ac2bcabcbcbc;\n\
    \    long ac2bcabcbcbcb = ac2bcabcbcbca + ac2abcbcbc;\n    long ac2abcabcbcbcb\
    \ = ac2abcabcbcbcb + ac2bcabcbcbcb;\n    long ac2bcabcbcbcbc = ac2bcabcbcbcbc\
    \ + ac2abcbcbc;\n    long ac2abcabcbcbcbc = ac2abcabcbcbcbc + ac2bcabcbcbcbc;\n\
    \    long ac2bcabcbcbcbcb = ac2bcabcbcbcbca + ac2abcbcbc;\n    long ac2abcabcbcbcbcb\
    \ = ac2abcabcbcbcbcb + ac2bcabcbcbcbcb;\n    long ac2bcabcbcbcbcbc = ac2bcab",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    \n    if (ab > ac && ab > bc) \n    {\n\
    \        if (ab > cb) \n        {\n            return true;\n        }\n    }\n\
    \    else \n    {\n        if (ac > bc) \n        {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n</code>\n<|/ a tags=c++,c++11 |>\n<|\
    \ c |>\nThis doesn't work. Try it with `right_angle_triangle(3, 4, 5)`.\n<|/ c\
    \ |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/ c |>\n\
    <| c |>\nThis doesn't work. Try it with `right_angle_triangle(3, 4, 5)`.\n<|/\
    \ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code now.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work. Try it with `right_angle_triangle(3, 4, 5)`.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long ab = a - b;\n    long ac = a\
    \ - c;\n    long bc = b - c;\n    long acb = ac * bc;\n    long abc = ab * bc;\n\
    \    long acbc = acb * bc;\n    long acbc_abc = acbc + abc;\n    long acbc_abc_ac\
    \ = acbc_abc * ac;\n    long acbc_abc_acb = acbc_abc_ac * bc;\n    long acbc_abc_acbc\
    \ = acbc_abc_acb * c;\n    long acbc_abc_acbc_ac = acbc_abc_acbc + ac;\n    long\
    \ acbc_abc_acbc_acb = acbc_abc_acbc_ac * b;\n    long acbc_abc_acbc_acbc = acbc_abc_acbc_acb\
    \ * c;\n    long acbc_abc_acbc_acbc_ac = acbc_abc_acbc_acbc + acb;\n    long acbc_abc_acbc_acbc_acb\
    \ = acbc_abc_acbc_acbc + acbc;\n    long acbc_abc_acbc_acbc_acbc = acbc_abc_acbc_acbc_ac\
    \ + acbc_abc;\n    long acbc_abc_acbc_acbc_acbc_abc = acbc_abc_acbc_acbc_acbc\
    \ + acbc_abc_ac;\n    long acbc_abc_acbc_acbc_acbc_abc_ac = acbc_abc_acbc_acbc_acbc_abc\
    \ + acbc_abc_acb;\n    long acbc_abc_acbc_acbc_acbc_abc_acb = acbc_abc_acbc_acbc_acbc_abc_ac\
    \ + acbc_abc_acbc;\n    long acbc_abc_acbc_acbc_acbc_abc_acbc = acbc_abc_acbc_acbc_acbc_abc_acb\
    \ + acbc_abc_acbc_abc;\n    long acbc_abc_acbc_acbc_acbc_abc_acbc_abc = acbc_abc_acbc_acbc_acbc_abc_acb",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    \n    if (ab > ac && ab > bc && ab > cb)\n\
    \        return true;\n    return false;\n}\n</code>\n<|/ a tags=c++,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>", "{\n    long ab = abs(b - a);\n    long ac =\
    \ abs(c - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long\
    \ abc = abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c - b);\n\
    \    long acbca = abs(c - a);\n    long abca = abs(b - a);\n    long abcab = abs(b\
    \ - c);\n    long abcabc = abs(b - b);\n    long abcabca = abs(c - a);\n    long\
    \ abcabcab = abs(b - c);\n    long abcabcabc = abs(b - b);\n    long abcabcabca\
    \ = abs(c - a);\n    long abcabcabcab = abs(b - c);\n    long abcabcabcabc = abs(b\
    \ - b);\n    long abcabcabcabca = abs(c - a);\n    long abcabcabcabcab = abs(b\
    \ - c);\n    long abcabcabcabcabc = abs(b - b);\n    long abcabcabcabcabca = abs(c\
    \ - a);\n    long abcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabc = abs(b - b);\n    long abcabcabcabcabcabcabca\
    \ = abs(c - a);\n    long abcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc = abs(b - b);\n    long\
    \ abcabcabcabcabcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc = abs(b - b);\n    long\
    \ abcabcabcabcabcabcabcabcabca = abs(c - a);\n    long abcabcabcabcabcabcabcabcabcab\
    \ = abs(b - c);\n    long abcabcabcabcabcabcabcabcabcabc = abs(b - b);\n    long\
    \ abcabcabcabcabcabcabcabcabcabca = abs(c - a);", "{\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0)\n        return false;\n    long e = (long) Math.sqrt(d);\n\
    \    long f = (long) Math.sqrt(a + b + c);\n    long g = (long) Math.sqrt(a +\
    \ b - c);\n    long h = (long) Math.sqrt(a - b - c);\n    long i = (long) Math.sqrt(a\
    \ + b + c - e);\n    long j = (long) Math.sqrt(a + b - c + e);\n    long k = (long)\
    \ Math.sqrt(a - b + c + e);\n    long l = (long) Math.sqrt(a - b - c + e);\n \
    \   long m = (long) Math.sqrt(a + b + c + e + f);\n    long n = (long) Math.sqrt(a\
    \ + b - c + e - f);\n    long o = (long) Math.sqrt(a - b + c + e + f);\n    long\
    \ p = (long) Math.sqrt(a - b - c + e - f);\n    long q = (long) Math.sqrt(a +\
    \ b + c + e + g);\n    long r = (long) Math.sqrt(a + b - c + e - g);\n    long\
    \ s = (long) Math.sqrt(a - b + c + e + g);\n    long t = (long) Math.sqrt(a -\
    \ b - c + e - g);\n    long u = (long) Math.sqrt(a + b + c + e + h);\n    long\
    \ v = (long) Math.sqrt(a + b - c + e - h);\n    long w = (long) Math.sqrt(a -\
    \ b + c + e + h);\n    long x = (long) Math.sqrt(a - b - c + e - h);\n    long\
    \ y = (long) Math.sqrt(a + b + c + e + i);\n    long z = (long) Math.sqrt(a +\
    \ b - c + e - i);\n    long A = (long) Math.sqrt(a + b + c - e);\n    long B =\
    \ (long) Math.sqrt(a + b - c);\n    long C = (long) Math.sqrt(a - b - c);\n  \
    \  long D = (long) Math.sqrt(a - b + c);\n    long E = (long) Math.sqrt(a + b\
    \ + c + f);\n    long F = (long) Math.sqrt(a + b - c + f);\n    long G = (long)\
    \ Math.sqrt(a - b - c + f);\n    long H = (long) Math.sqrt(a - b + c + f);\n \
    \   long I = (long) Math.sqrt(a + b + c + g);\n    long J = (long) Math.sqrt(a\
    \ + b - c + g);\n    long K = (long) Math.sqrt(a - b + ", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long abc =\
    \ abs(ab + ac);\n    long acb = abs(ac + bc);\n    long abbc = abs(ab + bc);\n\
    \    long acbc = abs(ac + bc);\n    long abcab = abs(abc + acb);\n    long acbcab\
    \ = abs(acbc + abbc);\n    long abcabc = abs(abc + acbc + abbc);\n    long acbcabc\
    \ = abs(acbc + abbc + abcab);\n    long abcabcb = abs(abcabc + acbcab);\n    long\
    \ acbcabcb = abs(acbcabc + abbcab + abcabcb);\n    long abcabcbc = abs(abcabcb\
    \ + acbcabcb);\n    long acbcabcbc = abs(acbcabcbc + abbcabcbc + abcabcbc);\n\
    \    long abcabcbcd = abs(abcabcbc + acbcabcbc + acbcabcbcd + abcabcbcd);\n  \
    \  long acbcabcbcd = abs(acbcabcbcd + abbcabcbcd + abcabcbcd + abcabcbcd);\n \
    \   long abcabcbcde = abs(abcabcbcd + acbcabcbcd + acbcabcbcde + abcabcbcde);\n\
    \    long acbcabcbcde = abs(acbcabcbcde + abbcabcbcde + abcabcbcde + abcabcbcde);\n\
    \    long abcabcbcdef = abs(abcabcbcde + acbcabcbcde + acbcabcbcdef + abcabcbcdef);\n\
    \    long acbcabcbcdef = abs(acbcabcbcdef + abbcabcbcdef + abcabcbcdef + abcabcbcdef);\n\
    \    long abcabcbcdefg = abs(abcabcbcdef + acbcabcbcdef + acbcabcbcdefg + abcabcbcdefg);\n\
    \    long acbcabcbcdefg = abs(acbcabcbcdefg + abbcabcbcdefg + abcabcbcdefg + abcabcbcdefg);\n\
    \    long abcabcbcdefgh = abs(abcabcbcdefg + acbcabcbcdefg + acbcabcbcdef", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bcb = bc + cb;\n\
    \    long abbc = abb + bcc;\n    long acbc = acb + cbb;\n    long abac = abac\
    \ + abbc;\n    long acab = acab + acbc;\n    long abcab = abcab + abac;\n    long\
    \ acabc = acabc + acab;\n    long abcabc = abcabc + abcab;\n    long acabcb =\
    \ acabcc + acabcb;\n    long abcabcb = abcabcb + abcabcc;\n    long acabcbb =\
    \ acabcbb + acabcba;\n    long abcabcbb = abcabcbb + abcabcba;\n    long acabcba\
    \ = acabcba + acabcbb;\n    long abcabcba = abcabcba;\n    long acabcbb = acabcbb;\n\
    \    long abcabcba = abcabcba;\n    long acabcba = acabcba;\n    long abcabcba\
    \ = abcabcba;\n    long acabcba = acabcba;\n    long abcabcba = abcabcba;\n  \
    \  long acabcba = acabcba;\n    long abcabcba = abcabcba;\n    long acabcba =\
    \ acabcba;\n    long abcabcba = abcabcba;\n    long acabcba = acabcba;\n    long\
    \ abcabcba = abcabcba;\n    long acabcba = acabcba;\n    long abcabcba = abcabcba;\n\
    \    long acabcba = acabcba;\n    long abcabcba = abcabcba;\n    long acabcba\
    \ = acabcba;\n    long abcabcba = abcabcba;\n    long acabcba = acabcba;\n   \
    \ long abcabcba = abcabcba;\n    long acabcba = acabcba;\n    long abcabcba =\
    \ abcabcba;\n    long acabcba = acabcba;\n    long abcabcba = abcabc", "{\n  \
    \  long angle;\n    long angle1;\n    long angle2;\n    long angle3;\n    angle\
    \ = acos((b * b + c * c - a * a) / (2 * b * c));\n    angle1 = atan2(b,c);\n \
    \   angle2 = atan2(-b,-c);\n    angle3 = atan2(-b,c);\n    if (angle > angle1\
    \ && angle > angle2 && angle > angle3)\n        return true;\n    else\n     \
    \   return false;\n}\n</code>\n<|/ a tags=c++,geometry,trigonometry,math |>\n\
    <| c |>\nThis doesn't work if `a`, `b` and `c` are all equal.  It also doesn't\
    \ work if `a` is zero.\n<|/ c |>\n<| c |>\nI agree with you. My answer was meant\
    \ to be a general solution. I'll edit my answer to include a solution for all\
    \ cases.\n<|/ c |>\n<| c |>\nI believe that your solution will fail for `a==0`.\n\
    <|/ c |>\n<| c |>\nI believe that your solution will fail for `a==0`.\n<|/ c |>\n\
    <| c |>\nI believe that your solution will fail for `a==0`.\n<|/ c |>\n<| a |>\n\
    <code>", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc\
    \ = abs(b - c);\n    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long\
    \ abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long abbcd = abs(b - c);\n\
    \    long acbcd = abs(c - b);\n    long abbcde = abs(b - c);\n    long acbcde\
    \ = abs(c - b);\n    long abbcdef = abs(b - c);\n    long acbcdef = abs(c - b);\n\
    \    long abbcdefg = abs(b - c);\n    long acbcdefg = abs(c - b);\n    long abbcdefgh\
    \ = abs(b - c);\n    long acbcdefgh = abs(c - b);\n    long abbcdefghi = abs(b\
    \ - c);\n    long acbcdefghi = abs(c - b);\n    long abbcdefghij = abs(b - c);\n\
    \    long acbcdefghij = abs(c - b);\n    long abbcdefghijk = abs(b - c);\n   \
    \ long acbcdefghijk = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n    long abbcdefghijkl = abs(b - c);\n    long\
    \ acbcdefghijkl = abs(c - b);\n", "{\n    long ab = abs(b - a);\n    long ac =\
    \ abs(c - a);\n    long bc = abs(b - c);\n    long bd = abs(d - b);\n    long\
    \ cd = abs(c - d);\n    long abc = ab + ac;\n    long bcd = bc + bd;\n    long\
    \ abcd = abc + bcd;\n    long acbd = ac + bd;\n    long acbc = ac + bc;\n    long\
    \ acbca = ac + bc + a;\n    long acbcbc = ac + bc + c + b;\n    long acbcbca =\
    \ ac + bc + c + b + a;\n    long acbcbcd = ac + bc + c + b + d;\n    long acbcbcda\
    \ = ac + bc + c + b + d + a;\n    long acbcbcdbc = ac + bc + c + b + d + b;\n\
    \    long acbcbcdbca = ac + bc + c + b + d + b + a;\n    long acbcbcdbcd = ac\
    \ + bc + c + b + d + b + d;\n    long acbcbcdbcda = ac + bc + c + b + d + b +\
    \ d + a;\n    long acbcbcdbcdbc = ac + bc + c + b + d + b + d + b;\n    long acbcbcdbcdbca\
    \ = ac + bc + c + b + d + b + d + b + a;\n    long acbcbcdbcdbcd = ac + bc + c\
    \ + b + d + b + d + b + d;\n    long acbcbcdbcdbcda = ac + bc + c + b + d + b\
    \ + d + b + d + a;\n    long acbcbcdbcdbcdbc = ac + bc + c + b + d + b + d + b\
    \ + d + b;\n    long acbcbcdbcdbcdbca = ac + bc + c + b + d + b + d + b + d +\
    \ b + a;\n    long acbcbcdbcdbcdbcd = ac + bc + c + b + d + b + d + b + d + b\
    \ + d;\n    long acbcbcdbcdbcdbcda = ac + bc + c + b + d + b + d + b + d + b +\
    \ d + a;\n    long acbcbcdbcdbcdbcdbc = ac + bc + c + b + d + b + d + b + d +\
    \ b + d + b;\n    long ac", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long acb = abs(ac - bc);\n    long abc\
    \ = abs(ab - bc);\n    long abbc = abs(ab - bc);\n    long abac = abs(ab - ac);\n\
    \    long abcab = abs(ab - ac);\n    long abcabc = abs(ab - ac);\n    long abcabcb\
    \ = abs(ab - ac);\n    long abcabcba = abs(ab - ac);\n    long abcabcbac = abs(ab\
    \ - ac);\n    long abcabcbaca = abs(ab - ac);\n    long abcabcbacab = abs(ab -\
    \ ac);\n    long abcabcbacabc = abs(ab - ac);\n    long abcabcbacabcb = abs(ab\
    \ - ac);\n    long abcabcbacabcba = abs(ab - ac);\n    long abcabcbacabcbac =\
    \ abs(ab - ac);\n    long abcabcbacabcbaca = abs(ab - ac);\n    long abcabcbacabcbacab\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabc = abs(ab - ac);\n    long abcabcbacabcbacabcb\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabcba = abs(ab - ac);\n    long abcabcbacabcbacabcbac\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabcbaca = abs(ab - ac);\n    long abcabcbacabcbacabcbacab\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabcbacabc = abs(ab - ac);\n    long\
    \ abcabcbacabcbacabcbacabcb = abs(ab - ac);\n    long abcabcbacabcbacabcbacabcba\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabcbacabcbac = abs(ab - ac);\n    long\
    \ abcabcbacabcbacabcbacabcbaca = abs(ab - ac);\n    long abcabcbacabcbacabcbacabcbacab\
    \ = abs(ab - ac);\n    long abcabcbacabcbacabcbacabcba", "{\n    long ab = abs(b\
    \ - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long cb = abs(c\
    \ - b);\n    \n    if (ab > ac && ab > bc) {\n        return true;\n    }\n  \
    \  \n    if (ac > ab && ac > bc) {\n        return true;\n    }\n    \n    if\
    \ (bc > ab && bc > ac) {\n        return true;\n    }\n    \n    return false;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it out with a =\
    \ b = c = 1.\n<|/ c |>\n<| c |>\nI tested it and it works. I used the example\
    \ you gave. Can you give me an example where it doesn't work?\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I used the example you gave. Can you give me an\
    \ example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I used the example you gave. Can you give me an example where it doesn't work?\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I used the example you gave. Can\
    \ you give me an example where it doesn't work?\n<|/ c |>\n<| a |>\n<code>", "{\n\
    \    long d = b * b - 4 * a * c;\n    if (d < 0) return false;\n    long e = Math.sqrt(d);\n\
    \    long f = (b + e) / (2 * a);\n    long g = (c + e) / (2 * a);\n    long h\
    \ = (b - e) / (2 * a);\n    if (f < 0 || g < 0 || h < 0) return false;\n    if\
    \ (f > g) return true;\n    if (f > h) return true;\n    return false;\n}\n</code>\n\
    <|/ a tags=c#,math |>\n<| c |>\nThis code doesn't work. Try it for a=1, b=2, c=3.\
    \ You'll get an incorrect answer of true.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I tested it for a=1, b=2, c=3. It returns true. Are you sure you tested\
    \ it correctly?\n<|/ c |>\n<| c |>\nI tested it for a=1, b=2, c=3. My code returns\
    \ true. Are you sure you tested it correctly?\n<|/ c |>\n<| c |>\nI tested it\
    \ for a=1, b=2, c=3. My code returns true. Are you sure you tested it correctly?\n\
    <|/ c |>\n<| c |>\nI tested it for a=1, b=2, c=3. My code returns true. Are you\
    \ sure you tested it correctly?\n<|/ c |>\n<| a |>\n<code>", "{\n    long side1\
    \ = abs(a) + abs(b) + abs(c);\n    long side2 = abs(a) - abs(b) - abs(c);\n  \
    \  long side3 = abs(a) - abs(b) + abs(c);\n    long side4 = abs(a) + abs(b) -\
    \ abs(c);\n    long side5 = abs(a) + abs(b) + abs(c);\n    long side6 = abs(a)\
    \ - abs(b) + abs(c);\n    long side7 = abs(a) - abs(b) - abs(c);\n    long side8\
    \ = abs(a) - abs(b) + abs(c);\n    long side9 = abs(a) + abs(b) - abs(c);\n  \
    \  long side10 = abs(a) - abs(b) + abs(c);\n    long side11 = abs(a) - abs(b)\
    \ - abs(c);\n    long side12 = abs(a) + abs(b) - abs(c);\n    long side13 = abs(a)\
    \ + abs(b) + abs(c);\n    long side14 = abs(a) - abs(b) - abs(c);\n    long side15\
    \ = abs(a) - abs(b) + abs(c);\n    long side16 = abs(a) + abs(b) + abs(c);\n \
    \   long side17 = abs(a) - abs(b) + abs(c);\n    long side18 = abs(a) - abs(b)\
    \ - abs(c);\n    long side19 = abs(a) + abs(b) - abs(c);\n    long side20 = abs(a)\
    \ - abs(b) - abs(c);\n    long side21 = abs(a) + abs(b) + abs(c);\n    long side22\
    \ = abs(a) - abs(b) + abs(c);\n    long side23 = abs(a) - abs(b) - abs(c);\n \
    \   long side24 = abs(a) + abs(b) - abs(c);\n    long side25 = abs(a) - abs(b)\
    \ + abs(c);\n    long side26 = abs(a) - abs(b) - abs(c);\n    long side27 = abs(a)\
    \ + abs(b) + abs(c);\n    long side28 = abs(a) - abs(b) + abs(c);\n    long side29\
    \ = abs(a) - abs(b) - abs(c);\n    long side30 = abs(a) + abs(b) - abs(c);\n \
    \   long side31 = abs(a) - abs(b) + abs(c);\n    long side32 = abs(a) - abs(b)\
    \ - abs(c);\n    long side33 = abs(a) + abs(b) - abs(c);\n    long side34 = abs(a)\
    \ - abs(b) - abs(c);\n    long side35 = abs(a) + abs(b) + abs(c);\n    long side36\
    \ = abs(a) - abs(b) + abs(c);\n    long side37 = abs(a) - abs(b) - abs(c);\n \
    \   long side38", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n    long side2\
    \ = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b) + abs(c);\n  \
    \  long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a) + abs(b) +\
    \ abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7 = abs(a)\
    \ - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n    long side9\
    \ = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) - abs(b) + abs(c);\n \
    \   long side11 = abs(a) - abs(b) - abs(c);\n    long side12 = abs(a) + abs(b)\
    \ - abs(c);\n    long side13 = abs(a) + abs(b) + abs(c);\n    long side14 = abs(a)\
    \ - abs(b) + abs(c);\n    long side15 = abs(a) - abs(b) - abs(c);\n    long side16\
    \ = abs(a) + abs(b) - abs(c);\n    long side17 = abs(a) - abs(b) + abs(c);\n \
    \   long side18 = abs(a) - abs(b) - abs(c);\n    long side19 = abs(a) + abs(b)\
    \ - abs(c);\n    long side20 = abs(a) - abs(b) + abs(c);\n    long side21 = abs(a)\
    \ - abs(b) - abs(c);\n    long side22 = abs(a) + abs(b) - abs(c);\n    long side23\
    \ = abs(a) + abs(b) + abs(c);\n    long side24 = abs(a) - abs(b) + abs(c);\n \
    \   long side25 = abs(a) - abs(b) - abs(c);\n    long side26 = abs(a) + abs(b)\
    \ - abs(c);\n    long side27 = abs(a) - abs(b) + abs(c);\n    long side28 = abs(a)\
    \ - abs(b) - abs(c);\n    long side29 = abs(a) + abs(b) - abs(c);\n    long side30\
    \ = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a) - abs(b) - abs(c);\n \
    \   long side32 = abs(a) + abs(b) - abs(c);\n    long side33 = abs(a) + abs(b)\
    \ + abs(c);\n    long side34 = abs(a) - abs(b) + abs(c);\n    long side35 = abs(a)\
    \ - abs(b) - abs(c);\n    long side36 = abs(a) + abs(b) - abs(c);\n    long side37\
    \ = abs(a) - abs(b) + abs(c);\n    long side38", "{\n    long d = b * b - 4 *\
    \ a * c;\n    if (d < 0)\n        return false;\n    long e = Math.sqrt(d);\n\
    \    long f = (b + e) / (2 * a);\n    long g = (c + e) / (2 * a);\n    long h\
    \ = (b - e) / (2 * a);\n    return ((f < 0 && g < 0 && h < 0) || (f > 0 && g >\
    \ 0 && h > 0));\n}\n</code>\n<|/ a tags=c#,math |>\n<| c |>\nI believe this only\
    \ checks if a triangle is right angled, not if it's a right angled triangle. For\
    \ example, `right_angle_triangle(1,1,1)` returns `true`, but `right_angle_triangle(1,1,2)`\
    \ returns `false`.\n<|/ c |>\n<| c |>\nYes, you are right. My mistake. I've edited\
    \ my answer accordingly.\n<|/ c |>\n<| c |>\nI believe this only checks if a triangle\
    \ is right angled, not if it's a right angled triangle. For example, `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,1,2)` returns `false`.\n<|/ c |>\n\
    <| c |>\nYes, you are right. My mistake. I've edited my answer accordingly.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "{\n    long ab = abs(b - a);\n    long ac\
    \ = abs(c - a);\n    long bc = abs(b - c);\n    long abc = ab + bc;\n    long\
    \ acb = ac + ab;\n    long abba = ab + ac;\n    long acca = ac + ab;\n    long\
    \ abcab = ab + ac + bc;\n    long accab = ac + ab + bc;\n    long acbca = ac +\
    \ ab + bc;\n    long abcabc = ab + ac + bc + abc;\n    long accabb = ac + ab +\
    \ bc + abc;\n    long acbcab = ac + ab + bc + abc;\n    long acbcabc = ac + ab\
    \ + bc + abc;\n    long abcabcb = ab + ac + bc + abc;\n    long accabbc = ac +\
    \ ab + bc + abc;\n    long acbcabb = ac + ab + bc + abc;\n    long acbcabcb =\
    \ ac + ab + bc + abc;\n    long abcabcbc = ab + ac + bc + abc;\n    long accabbca\
    \ = ac + ab + bc + abc;\n    long acbcabba = ac + ab + bc + abc;\n    long acbcabcab\
    \ = ac + ab + bc + abc;\n    long acbcabcabc = ac + ab + bc + abc;\n    long abcabcabcb\
    \ = ab + ac + bc + abc;\n    long accabbcaba = ac + ab + bc + abc;\n    long acbcabcabba\
    \ = ac + ab + bc + abc;\n    long acbcabcabcab = ac + ab + bc + abc;\n    long\
    \ acbcabcabcabc = ac + ab + bc + abc;\n    long abcabcabcabcb = ab + ac + bc +\
    \ abc;\n    long accabbcabcaba = ac + ab + bc + abc;\n    long acbcabcabcabba\
    \ = ac + ab + bc + abc;\n    long acbcabcabcabcab = ac + ab + bc + abc;\n    long\
    \ acbcabcabcabcabc = ac + ab + bc + abc;\n    long abcabcabcabcabcb = ab + ac\
    \ + bc + abc;\n    long accabbcabcabcaba = ac + ab + bc + abc;\n    long acb",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long abac = ab +\
    \ ac;\n    long acab = ac + ab;\n    long acbc = ac + bc;\n    long abacb = abac\
    \ + acb;\n    long abcab = abac + abc;\n    long abcbc = abac + bc;\n    long\
    \ abcabc = abcab + acbc;\n    long abcbcd = abcab + bc;\n    long abcabcd = abcabc\
    \ + acbd;\n    long abcbcde = abcabc + bcd;\n    long abcabcde = abcabcde + acbe;\n\
    \    long abcbcdef = abcabcde + bce;\n    long abcabcdef = abcabcdef + acbf;\n\
    \    long abcbcdefg = abcabcdef + bcf;\n    long abcabcdefg = abcabcdefg + acbg;\n\
    \    long abcbcdefgh = abcabcdefg + bch;\n    long abcabcdefgh = abcabcdefgh +\
    \ accb;\n    long abcbcdefghi = abcabcdefgh + bci;\n    long abcabcdefghi = abcabcdefghi\
    \ + acbc;\n    long abcbcdefghij = abcabcdefghi + bcd;\n    long abcabcdefghij\
    \ = abcabcdefghij + acbe;\n    long abcbcdefghijk = abcabcdefghij + bce;\n   \
    \ long abcabcdefghijk = abcabcdefghijk + acbf;\n    long abcbcdefghijkl = abcabcdefghijk\
    \ + bcf;\n    long abcabcdefghijkl = abcabcdefghijkl + acbg;\n    long abcbcdefghijklmn\
    \ = abcabcdefghijkl + bch;\n    long abcabcdefghijklmn = abcabcdefghijklmn + accb;\n\
    \    long abcbcdefghijklmn1 = abcabcdefghijklmn + bci;\n    long abcabcdefghij",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long bca = bc;\n\
    \    long cab = cb;\n    long acb = ac;\n    long bcaab = bc + ac;\n    long cabac\
    \ = cb + ac;\n    long abcab = ab + cb;\n    long bcabc = bc + cb;\n    long cabbc\
    \ = cb + bc;\n    long cabacb = cab + acb;\n    long abcabc = abc + cb;\n    long\
    \ bcabcb = bc + cb;\n    long cabbcb = cb + bc;\n    long cabacbc = cab + acb;\n\
    \    long abcabcb = abc + cb;\n    long bcabcbc = bc + cb;\n    long cabbcbc =\
    \ cb + bc;\n    long cabacbca = cab + acb;\n    long abcabcbc = abc + cb;\n  \
    \  long bcabcbca = bc + cb;\n    long cabbcbca = cb + bc;\n    long cabacbcaab\
    \ = cab + acb;\n    long abcabcbca = abc + cb;\n    long bcabcbcaab = bc + cb;\n\
    \    long cabbcbcaab = cb + bc;\n    long cabacbcaabc = cab + acb;\n    long abcabcbcaab\
    \ = abc + cb;\n    long bcabcbcaabc = bc + cb;\n    long cabbcbcaabc = cb + bc;\n\
    \    long cabacbcaabbc = cab + acb;\n    long abcabcbcaabc = abc + cb;\n    long\
    \ bcabcbcaabbc = bc + cb;\n    long cabbcbcaabbc = cb + bc;\n    long cabacbcaabbcd\
    \ = cab + acb;\n    long abcabcbcaabbcd = abc + cb;\n    long bcabcbcaabbcd =\
    \ bc + cb;\n    long cabbcbcaabbcd = cb + bc;\n    long cabacbcaabbcdd = cab +\
    \ acb;\n    long abcabcbcaabbcdd = abc + cb;\n    long bcabcbcaabbcdd = bc + cb;\n\
    \    long cabbcbca", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n\
    \    long bc = abs(b - c);\n    long cb = abs(c - b);\n    \n    bool isRightAngle\
    \ = (ab >= ac && ab >= bc && ab >= cb);\n    \n    return isRightAngle;\n}", "{\n\
    \    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n\
    \    long acb = abs(c - b);\n    long abc = abs(b - c);\n    long acbc = abs(c\
    \ - b);\n    long abcb = abs(b - c);\n    long abcab = abs(c - b);\n    long acbcab\
    \ = abs(c - b);\n    long abcabc = abs(b - c);\n    long acbcabc = abs(c - b);\n\
    \    long abcabcb = abs(b - c);\n    long acbcabcb = abs(c - b);\n    long abcabcbc\
    \ = abs(b - c);\n    long acbcabcbc = abs(c - b);\n    long abcabcbcb = abs(b\
    \ - c);\n    long acbcabcbcb = abs(c - b);\n    long abcabcbcbc = abs(b - c);\n\
    \    long acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long\
    \ acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc\
    \ = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc = abs(c\
    \ - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc = abs(c - b);\n\
    \    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc = abs(c - b);\n    long\
    \ abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb\
    \ = abs(b - c);\n    long acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b\
    \ - c);\n    long acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n\
    \    long acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long\
    \ acbcabcbcbc = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc\
    \ = abs(c - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcabcbcbc = abs(c\
    \ - b);\n    long abcabcbcbcb = abs(b - c);\n    long acbcab", "{\n    long side1\
    \ = (a + b + c) / 2;\n    long side2 = (b + c + a) / 2;\n    long side3 = (c +\
    \ a + b) / 2;\n    long side4 = side1 + side2 + side3;\n    long side5 = side2\
    \ + side3 + side4;\n    long side6 = side3 + side4 + side5;\n    long side7 =\
    \ side4 + side5 + side6;\n    long side8 = side5 + side6 + side7;\n    long side9\
    \ = side6 + side7 + side8;\n    long side10 = side7 + side8 + side9;\n    long\
    \ side11 = side8 + side9 + side10;\n    long side12 = side9 + side10 + side11;\n\
    \    long side13 = side10 + side11 + side12;\n    long side14 = side11 + side12\
    \ + side13;\n    long side15 = side12 + side13 + side14;\n    long side16 = side13\
    \ + side14 + side15;\n    long side17 = side14 + side15 + side16;\n    long side18\
    \ = side15 + side16 + side17;\n    long side19 = side16 + side17 + side18;\n \
    \   long side20 = side17 + side18 + side19;\n    long side21 = side18 + side19\
    \ + side20;\n    long side22 = side19 + side20 + side21;\n    long side23 = side20\
    \ + side21 + side22;\n    long side24 = side21 + side22 + side23;\n    long side25\
    \ = side22 + side23 + side24;\n    long side26 = side23 + side24 + side25;\n \
    \   long side27 = side24 + side25 + side26;\n    long side28 = side25 + side26\
    \ + side27;\n    long side29 = side26 + side27 + side28;\n    long side30 = side27\
    \ + side28 + side29;\n    long side31 = side28 + side29 + side30;\n    long side32\
    \ = side29 + side30 + side31;\n    long side33 = side30 + side31 + side32;\n \
    \   long side34 = side31 + side32 + side33;\n    long side35 = side32 + side33\
    \ + side34;\n    long side36 = side33 + side34 + side35;\n    long side37 = side34\
    \ + side35 + side36", "{\n    long d = b * b - 4 * a * c;\n    if (d < 0)\n  \
    \      return false;\n    long root = d*d / (2 * a);\n    if (root < 0)\n    \
    \    return false;\n    long s = (-b + root) / (2 * a);\n    if (s < 0)\n    \
    \    return false;\n    long t = (-b - root) / (2 * a);\n    if (t < 0)\n    \
    \    return false;\n    long u = (-b + root) / (2 * a);\n    if (u < 0)\n    \
    \    return false;\n    long v = (-b - root) / (2 * a);\n    if (v < 0)\n    \
    \    return false;\n    long w = sqrt(u * u + v * v + w * w);\n    if (w < 0)\n\
    \        return false;\n    if (u == v)\n        return w > 0;\n    if (u == w)\n\
    \        return v > 0;\n    if (v == w)\n        return u > 0;\n    return true;\n\
    }\n</code>\n<|/ a tags=c++,geometry,math |>\n<| c |>\nThis doesn't work. `right_angle_triangle(1,1,1)`\
    \ returns `true`, but `right_angle_triangle(1,1,2)` returns `false`. See [this\
    \ answer](https://stackoverflow.com/a/45447732/2521214) for a correct implementation.\n\
    <|/ c |>\n<| a |>\n<code>", "{\n    long ab = abs(b - a);\n    long ac = abs(c\
    \ - a);\n    long bc = abs(b - c);\n    long acb = abs(c - b);\n    long abc =\
    \ abs(b - c);\n    long abbc = abs(b - b);\n    long acbc = abs(c - b);\n    long\
    \ acbca = abs(c - a);\n    long abca = abs(b - a);\n    long abcab = abs(b - c);\n\
    \    long abcabc = abs(b - b);\n    long abcabbc = abs(b - c);\n    long abcabbca\
    \ = abs(b - a);\n    long abcabcab = abs(b - c);\n    long abcabcabc = abs(b -\
    \ b);\n    long abcabcabbc = abs(b - c);\n    long abcabcabbca = abs(b - a);\n\
    \    long abcabcabcab = abs(b - c);\n    long abcabcabcabc = abs(b - b);\n   \
    \ long abcabcabcabbc = abs(b - c);\n    long abcabcabcabbca = abs(b - a);\n  \
    \  long abcabcabcabcab = abs(b - c);\n    long abcabcabcabcabc = abs(b - b);\n\
    \    long abcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabbca = abs(b -\
    \ a);\n    long abcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabc =\
    \ abs(b - b);\n    long abcabcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabcabbca\
    \ = abs(b - a);\n    long abcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabcabcabbca\
    \ = abs(b - a);\n    long abcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcabcabbc = abs(b - c);\n    long abcabcabcabcabcabcabcabbca\
    \ = abs(b - a);\n    long abcabcabcabcabcabcabcabcab = abs(b - c);\n    long abcabcabcabcabcabcabcabcabc\
    \ = abs(b - b);\n    long abcabcabcabcabcabcab", "{\n    long ab = a - b;\n  \
    \  long ac = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n    long acb\
    \ = ac + bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n    long abac\
    \ = ab + ac;\n    long acab = ac + ab;\n    long abcab = ab + ac + bc;\n    long\
    \ acbcab = ac + bc + ab;\n    long abcabc = ab + ac + bc + ab;\n    long acbcabc\
    \ = ac + bc + ab + c;\n    long abcabcb = ab + ac + bc + ab + c;\n    long acbcabcb\
    \ = ac + bc + ab + c + b;\n    long abcabcbc = ab + ac + bc + ab + c + b;\n  \
    \  long acbcabcbc = ac + bc + ab + c + b + c;\n    long abcabcbcb = ab + ac +\
    \ bc + ab + c + b + c;\n    long acbcabcbcb = ac + bc + ab + c + b + c + b;\n\
    \    long abcabcbcbc = ab + ac + bc + ab + c + b + c + b;\n    long acbcabcbcbc\
    \ = ac + bc + ab + c + b + c + b + c;\n    long abcabcbcbcb = ab + ac + bc + ab\
    \ + c + b + c + b + c;\n    long acbcabcbcbcb = ac + bc + ab + c + b + c + b +\
    \ c + b;\n    long abcabcbcbcbc = ab + ac + bc + ab + c + b + c + b + c + b;\n\
    \    long acbcabcbcbcbc = ac + bc + ab + c + b + c + b + c + b + c;\n    long\
    \ abcabcbcbcbcb = ab + ac + bc + ab + c + b + c + b + c + b + c;\n    long acbcabcbcbcbcb\
    \ = ac + bc + ab + c + b + c + b + c + b + c + b;\n    long abcabcbcbcbcbc = ab\
    \ + ac + bc + ab + c + b + c + b + c + b + c;\n    long acbcabcbcbcbcbc = ac +\
    \ bc + ab + c + b + c + b + c + b + c + b + c;\n    long abcabcbcbcbcbcb = ab\
    \ + ac + ", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long\
    \ bc = abs(b - c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long\
    \ abac = ab + ac;\n    long acab = ac + ab;\n    long acbc = ac + bc;\n    long\
    \ abacbc = abac + acbc;\n    long abcabc = abac + abbc;\n    long abcabcd = abcabc\
    \ + acbd;\n    long abcabcde = abcabc + abce;\n    long abcabcdef = abcabcde +\
    \ acdef;\n    long abcabcdefg = abcabcdef + abdeg;\n    long abcabcdefgh = abcabcdefg\
    \ + acdeg;\n    long abcabcdefghi = abcabcdefgh + abdeg;\n    long abcabcdefghij\
    \ = abcabcdefghi + acdeg;\n    long abcabcdefghijk = abcabcdefghij + abdeg;\n\
    \    long abcabcdefghijkl = abcabcdefghijk + acdeg;\n    long abcabcdefghijklmn\
    \ = abcabcdefghijkl + abdeg;\n    long abcabcdefghijklmnno = abcabcdefghijklmn\
    \ + acdeg;\n    long abcabcdefghijklmnnop = abcabcdefghijklmnno + abdeg;\n   \
    \ long abcabcdefghijklmnnopq = abcabcdefghijklmnnop + acdeg;\n    long abcabcdefghijklmnnopr\
    \ = abcabcdefghijklmnnopq + abdeg;\n    long abcabcdefghijklmnnoprs = abcabcdefghijklmnnopr\
    \ + acdeg;\n    long abcabcdefghijklmnnoprst = abcabcdefghijklmnnoprs + abdeg;\n\
    \    long abcabcdefghijklmnnoprstu = abcabcdefghijklmnnoprst + acdeg;\n    long\
    \ abcabcdefghijklmnnoprstuv = abcabcdefghijklmnnoprstu + abdeg;\n    long abcabcdefghijklmn",
  "{\n    long ab = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long abc\
    \ = ab + bc;\n    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc\
    \ = ac + bc;\n    long abcab = abc + acb;\n    long abcabc = abc + acbc;\n   \
    \ long abcabcb = abc + acbc + bc;\n    long abcabcbc = abc + acbc + bc;\n    long\
    \ abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n\
    \    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc +\
    \ bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc\
    \ + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd\
    \ = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long\
    \ abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n\
    \    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc +\
    \ bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc\
    \ + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd\
    \ = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long\
    \ abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n\
    \    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc + acbc +\
    \ bc + cd;\n    long abcabcbcd = abc + acbc + bc + cd;\n    long abcabcbcd = abc\
    \ + ac", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc\
    \ = abs(b - c);\n    long cb = abs(c - b);\n    \n    bool isRightAngle = false;\n\
    \    \n    if (ab == ac)\n    {\n        if (ab == bc)\n        {\n          \
    \  if (ab == cb)\n            {\n                isRightAngle = true;\n      \
    \      }\n        }\n    }\n    \n    return isRightAngle;\n}", "{\n    long ab\
    \ = a - b;\n    long ac = a - c;\n    long bc = b - c;\n    long abc = ab + bc;\n\
    \    long acb = ac + bc;\n    long abbc = ab + bc;\n    long acbc = ac + bc;\n\
    \    long abbcd = abbc + acbc;\n    long acbcdab = acbcd + abbc;\n    long abbcda\
    \ = abbcd + acb;\n    long acbcdabc = acbcdab + abbc;\n    long abbcdaa = abbcda+\
    \ acb;\n    long acbcdabca = acbcdabc+ abbc;\n    long abbcdaaa = abbcdaa+ acb;\n\
    \    long acbcdabcab = acbcdabca+ abbc;\n    long abbcdaaaa = abbcdaaa+ acb;\n\
    \    long acbcdabcabc = acbcdabcab+ abbc;\n    long abbcdaaaaa = abbcdaaaaa+ acb;\n\
    \    long acbcdabcabcd = acbcdabcabcd+ abbc;\n    long abbcdaaaaaa = abbcdaaaaaa+\
    \ acb;\n    long acbcdabcabcde = acbcdabcabcde+ abbc;\n    long abbcdaaaaaaa =\
    \ abbcdaaaaaaa+ acb;\n    long acbcdabcabcdef = acbcdabcabcdef+ abbc;\n    long\
    \ abbcdaaaaaaaa = abbcdaaaaaaaa+ acb;\n    long acbcdabcabcdefg = acbcdabcabcdefg+\
    \ abbc;\n    long abbcdaaaaaaaab = abbcdaaaaaaaab+ acb;\n    long acbcdabcabcdefgh\
    \ = acbcdabcabcdefgh+ abbc;\n    long abbcdaaaaaaaabc = abbcdaaaaaaaabc+ acb;\n\
    \    long acbcdabcabcdefghi = acbcdabcabcdefghi+ abbc;\n    long abbcdaaaaaaaabcc\
    \ = abbcdaaaaaaaabcc+ acb;\n    long acbcdabcabcdefghia = acbcdabcabcdefghia+\
    \ abbc;\n    long abbcdaaaaaaaabccd = abbcda", "{\n    long angle;\n    long angle1;\n\
    \    long angle2;\n    long angle3;\n    long angle4;\n    long angle5;\n    long\
    \ angle6;\n    long angle7;\n    long angle8;\n    long angle9;\n    long angle10;\n\
    \    long angle11;\n    long angle12;\n    long angle13;\n    long angle14;\n\
    \    long angle15;\n    long angle16;\n    long angle17;\n    long angle18;\n\
    \    long angle19;\n    long angle20;\n    long angle21;\n    long angle22;\n\
    \    long angle23;\n    long angle24;\n    long angle25;\n    long angle26;\n\
    \    long angle27;\n    long angle28;\n    long angle29;\n    long angle30;\n\
    \    long angle31;\n    long angle32;\n    long angle33;\n    long angle34;\n\
    \    long angle35;\n    long angle36;\n    long angle37;\n    long angle38;\n\
    \    long angle39;\n    long angle40;\n    long angle41;\n    long angle42;\n\
    \    long angle43;\n    long angle44;\n    long angle45;\n    long angle46;\n\
    \    long angle47;\n    long angle48;\n    long angle49;\n    long angle50;\n\
    \    long angle51;\n    long angle52;\n    long angle53;\n    long angle54;\n\
    \    long angle55;\n    long angle56;\n    long angle57;\n    long angle58;\n\
    \    long angle59;\n    long angle60;\n    long angle61;\n    long angle62;\n\
    \    long angle63;\n    long angle64;\n    long angle65;\n    long angle66;\n\
    \    long angle67;\n    long angle68;\n    long angle69;\n    long angle70;\n\
    \    long angle71;\n    long angle72;\n    long angle73;\n    long angle74;\n\
    \    long angle75;\n    long angle76;\n    long angle77;\n    long angle78;\n\
    \    long angle79;\n    long angle80;\n    long angle81;\n    long angle82;\n\
    \    long angle83;\n    long angle84;\n    long angle85;\n    long angle86;\n\
    \    long angle87;\n    long angle", "{\n    long side1 = abs(a) + abs(b) + abs(c);\n\
    \    long side2 = abs(a) - abs(b) - abs(c);\n    long side3 = abs(a) - abs(b)\
    \ + abs(c);\n    long side4 = abs(a) + abs(b) - abs(c);\n    long side5 = abs(a)\
    \ + abs(b) + abs(c);\n    long side6 = abs(a) - abs(b) + abs(c);\n    long side7\
    \ = abs(a) - abs(b) - abs(c);\n    long side8 = abs(a) - abs(b) + abs(c);\n  \
    \  long side9 = abs(a) + abs(b) - abs(c);\n    long side10 = abs(a) - abs(b) +\
    \ abs(c);\n    long side11 = abs(a) - abs(b) - abs(c);\n    long side12 = abs(a)\
    \ + abs(b) - abs(c);\n    long side13 = abs(a) + abs(b) + abs(c);\n    long side14\
    \ = abs(a) - abs(b) - abs(c);\n    long side15 = abs(a) - abs(b) + abs(c);\n \
    \   long side16 = abs(a) + abs(b) + abs(c);\n    long side17 = abs(a) - abs(b)\
    \ + abs(c);\n    long side18 = abs(a) - abs(b) - abs(c);\n    long side19 = abs(a)\
    \ + abs(b) + abs(c);\n    long side20 = abs(a) - abs(b) + abs(c);\n    long side21\
    \ = abs(a) - abs(b) - abs(c);\n    long side22 = abs(a) + abs(b) - abs(c);\n \
    \   long side23 = abs(a) + abs(b) + abs(c);\n    long side24 = abs(a) - abs(b)\
    \ - abs(c);\n    long side25 = abs(a) - abs(b) + abs(c);\n    long side26 = abs(a)\
    \ + abs(b) + abs(c);\n    long side27 = abs(a) - abs(b) + abs(c);\n    long side28\
    \ = abs(a) - abs(b) - abs(c);\n    long side29 = abs(a) + abs(b) - abs(c);\n \
    \   long side30 = abs(a) - abs(b) + abs(c);\n    long side31 = abs(a) - abs(b)\
    \ - abs(c);\n    long side32 = abs(a) + abs(b) - abs(c);\n    long side33 = abs(a)\
    \ + abs(b) + abs(c);\n    long side34 = abs(a) - abs(b) - abs(c);\n    long side35\
    \ = abs(a) - abs(b) + abs(c);\n    long side36 = abs(a) + abs(b) + abs(c);\n \
    \   long side37 = abs(a) - abs(b) + abs(c);\n    long side38", "{\n    long ab\
    \ = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b - c);\n    long\
    \ abc = abs(ab + ac);\n    long bca = abs(bc + ac);\n    long abca = abs(abc +\
    \ ac);\n    long bcab = abs(bc + ab);\n    long abcab = abs(abc + ab);\n    long\
    \ bcba = abs(bc + ba);\n    long abcaba = abs(abc + aba);\n    long bcbaa = abs(bc\
    \ + baa);\n    long abcaba_bcbaa = abs(abc + aba_bcba);\n    long bcbaa_bcaba\
    \ = abs(bc + baa_bcab);\n    long abcaba_bcbaa_bcaba = abs(abc + aba_bcba_bcab);\n\
    \    long bcbaa_bcaba_bcaba_bcaba = abs(bc + baa_bcab_bcab);\n    long abcaba_bcbaa_bcaba_bcaba_bcaba\
    \ = abs(abc + aba_bcba_bcab_bcab);\n    long bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(bc + baa_bcab_bcab_bcab);\n    long abcaba_bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(abc + aba_bcba_bcab_bcab_bcab);\n    long bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(bc + baa_bcab_bcab_bcab_bcab);\n    long abcaba_bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(abc + aba_bcba_bcab_bcab_bcab_bcab);\n    long bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(bc + baa_bcab_bcab_bcab_bcab_bcab);\n    long abcaba_bcbaa_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba_bcaba\
    \ = abs(abc + aba_bcba_bcab_bcab_bcab_bcab);\n    long bcbaa_bcaba_bcaba_bcaba_b",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long abc = ab + bc;\n    long acb = ac + ab;\n    long ac2ab = ac *\
    \ ab;\n    long ac2ac = ac * ac;\n    long ac2bc = ac * bc;\n    long ac2abc =\
    \ ac2ab + ac2bc;\n    long ac2bab = ac2bc + ac2ab;\n    long ac2acb = ac2ac +\
    \ ac2bc;\n    long ac2bca = ac2bc + ac2ac;\n    long ac2abca = ac2abc + ac2acb;\n\
    \    long ac2bcab = ac2bca + ac2abca;\n    long ac2bcabc = ac2bcab + ac2abca;\n\
    \    long ac2bcabcb = ac2bcabc + ac2abca;\n    long ac2bcabcba = ac2bcabcb + ac2abca;\n\
    \    long ac2bcabcbb = ac2bcabca + ac2abca;\n    long ac2bcabcbbc = ac2bcabcbb\
    \ + ac2abca;\n    long ac2bcabcbbcd = ac2bcabcbbc + ac2abca;\n    long ac2bcabcbbcde\
    \ = ac2bcabcbbcd + ac2abca;\n    long ac2bcabcbbcdef = ac2bcabcbbcde + ac2abca;\n\
    \    long ac2bcabcbbcdefg = ac2bcabcbbcdef + ac2abca;\n    long ac2bcabcbbcdefgh\
    \ = ac2bcabcbbcdefg + ac2abca;\n    long ac2bcabcbbcdefghi = ac2bcabcbbcdefgh\
    \ + ac2abca;\n    long ac2bcabcbbcdefghij = ac2bcabcbbcdefghi + ac2abca;\n   \
    \ long ac2bcabcbbcdefghijk = ac2bcabcbbcdefghij + ac2abca;\n    long ac2bcabcbbcdefghijkl\
    \ = ac2bcabcbbcdefghijk + ac2abca;\n    long ac2bcabcbbcdefghijklmn = ac2bcabcbbcdefghijklmn\
    \ + ac", "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc\
    \ = abs(b - c);\n    long cb = abs(c - b);\n    long abc = ab + ac;\n    long\
    \ bcb = bc + cb;\n    long acb = ac + cb;\n    long abbc = ab + bc;\n    long\
    \ acbc = ac + cb;\n    long abbcd = abbc + acbc;\n    long acbcd = acbc + bcd;\n\
    \    long abbcde = abbcd + acbcd;\n    long acbcde = acbcd + bcd;\n    long abbcdef\
    \ = abbcde + acbcde;\n    long acbcdef = acbcde + bcd;\n    long abbcdefg = abbcdef\
    \ + acbcdef;\n    long acbcdefg = acbcdef + bcd;\n    long abbcdefgh = abbcdefg\
    \ + acbcdefg;\n    long acbcdefgh = acbcdefg + bcd;\n    long abbcdefghi = abbcdefgh\
    \ + acbcdefgh;\n    long acbcdefghi = acbcdefgh + bcd;\n    long abbcdefghij =\
    \ abbcdefghi + acbcdefghi;\n    long acbcdefghij = acbcdefghi + bcd;\n    long\
    \ abbcdefghijk = abbcdefghij + acbcdefghij;\n    long acbcdefghijk = acbcdefghij\
    \ + bcd;\n    long abbcdefghijkl = abbcdefghijk + acbcdefghijk;\n    long acbcdefghijkl\
    \ = acbcdefghijk + bcd;\n    long abbcdefghijklmno = abbcdefghijkl + acbcdefghijkl;\n\
    \    long acbcdefghijklmno = acbcdefghijkl + bcd;\n    long abbcdefghijklmnop\
    \ = abbcdefghijklmno + acbcdefghijklmno;\n    long acbcdefghijklmnop = acbcdefghijklmno\
    \ + bcd;\n    long abbcdefghijklmnopq = abbcdefghijklmnop + acbcdefghijklmnop;\n",
  "{\n    long ab = abs(b - a);\n    long ac = abs(c - a);\n    long bc = abs(b -\
    \ c);\n    long cb = abs(c - b);\n    \n    if (ab > ac && ab > bc) \n    {\n\
    \        if (ab > cb) \n        {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n</code>\n<|/ a tags=c++,algorithm,geometry |>\n<| c |>\n\
    This doesn't work. Try it with `right_angle_triangle(3, 4, 5)`\n<|/ c |>\n<| c\
    \ |>\nIt works. I tested it before posting it.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `right_angle_triangle(3, 4, 5)`\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it before posting it.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ `right_angle_triangle(3, 4, 5)`\n<|/ c |>\n<| a tags=c++,algorithm,geometry\
    \ |>\n<code>"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

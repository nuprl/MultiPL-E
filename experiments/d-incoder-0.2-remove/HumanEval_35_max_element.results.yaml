language: d
name: HumanEval_35_max_element
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor\
    \ (int i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\t\
    for (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn square of all elements in the list.\n\
    \            \n*/\nlong square_element(long[] l) \n{\n\tlong square = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++) \n\t{\n\t\tsquare = square + l[i] * l[i];\n\t\
    }\n\treturn square;\n}\n/*\nReturn sum of all elements in the list.\n        \
    \    \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\ndouble prod_elements(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    prod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn square of all elements in the\
    \ list.\n            \n*/\ndouble square_elements(double[] l) \n{\n\tdouble square\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tsquare = square + l[i]\
    \ * l[i];\n\t}\n\treturn square;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nfloat prod_\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd3rzownl.d(132): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3rzownl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax\
    \ = l[i];\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcimom84u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] > max) {\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n          \
    \  \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] < min) {\n\t\t\tmin = l[i];\n\t\t\
    }\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n      \
    \      \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; i++) {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) {\n\t\t\
    prod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong i;\n\t\
    for (i = 0; i < l.length; i++) {\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tdouble i;\n\tfor (i = 0; i < l.length; i++) {\n\
    \t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat i;\n\
    \tfor (i = 0; i < l.length; i++) {\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_iy6ilh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++) \n\t\tif (l[i] > max) \n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t\t\
    if (l[i] < min) \n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++) \n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong\
    \ abs = 0;\n\tfor (i = 0; i < l.length; i++) \n\t\tabs = max(abs, l[i]);\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor\
    \ (i = 0; i < l.length; i++) \n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs = 0;\n\tfor (i = 0; i < l.length; i++) \n\t\t\
    abs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73h6fc2p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn median of all elements in the list.\n \
    \           \n*/\nlong median_element(long[] l) \n{\n\tlong mid = l.length / 2;\n\
    \tlong median = l[mid];\n\tfor (int i = mid; i < l.length; i++)\n\t\tif (l[i]\
    \ < median)\n\t\t\tmedian = l[i];\n\tfor (int i = mid; i > 0; i--)\n\t\tif (l[i]\
    \ > median)\n\t\t\tmedian = l[i];\n\treturn median;\n}\n/*\nReturn standard deviation\
    \ of all elements in the list.\n            \n*/\ndouble std_element(long[] l)\
    \ \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += pow(l[i]\
    \ - median_element(l), 2);\n\treturn sqrt(sum / (l.length - 1));\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_element(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\ndouble prod_element(double[] l) \n{\n\tdouble prod = 1;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\n\
    Return median of all elements in the list.\n            \n*/\ndouble median_element(double[]\
    \ l) \n{\n\tdouble mid = l.length / 2;\n\tdouble median = l[mid];\n\tfor (int\
    \ i = mid; i < l.length; i++)\n\t\tif (l[i] < median)\n\t\t\tmedian = l[i];\n\t\
    for (int i = mid; i > 0; i--)\n\t\tif (l[i] > median)\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb82o1_nd.d(110): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb82o1_nd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max_element = 0;\n\tlong i;\n\t\
    for(i = 0; i < l.length; i++){\n\t\tif(l[i] > max_element){\n\t\t\tmax_element\
    \ = l[i];\n\t\t}\n\t}\n\treturn max_element;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6cf2q4mt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list that\
    \ are less than the given value.\n            \n*/\nlong sum_element_less_than(long[]\
    \ l, long value) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\
    \tif (l[i] < value)\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list that are less than the given value.\n          \
    \  \n*/\nlong product_element_less_than(long[] l, long value) \n{\n\tlong product\
    \ = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i] < value)\n\t\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list that\
    \ are greater than the given value.\n            \n*/\nlong sum_element_greater_than(long[]\
    \ l, long value) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\
    \tif (l[i] > value)\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list that are greater than the given value.\n       \
    \     \n*/\nlong product_element_greater_than(long[] l, long value) \n{\n\tlong\
    \ product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i] > value)\n\t\
    \t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list that are equal to the given value.\n            \n*/\nlong sum_element_equal_to(long[]\
    \ l, long value) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\
    \tif (l[i] == value)\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list that are equal to the given value.\n           \
    \ \n*/\nlong product_element_equal_to(long[] \nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1xco18by.d(113): Error: found \''unittest\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1xco18by.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i,j;\n\tlong max;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tmax=l[i];\n\t\tfor(j=i+1;j<l.length;j++)\n\t\t{\n\t\t\tif(l[j]>max)\n\
    \t\t\t{\n\t\t\t\tmax=l[j];\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn\
    \ minimum element in the list.\n            \n*/\nlong min_element(long[] l) \n\
    {\n\tint i,j;\n\tlong min;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tmin=l[i];\n\t\t\
    for(j=i+1;j<l.length;j++)\n\t\t{\n\t\t\tif(l[j]<min)\n\t\t\t{\n\t\t\t\tmin=l[j];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\tlong sum=0;\n\t\
    for(i=0;i<l.length;i++)\n\t{\n\t\tsum+=l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod=1;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tprod*=l[i];\n\
    \t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n        \
    \    \n*/\ndouble sum_element_double(double[] l) \n{\n\tint i;\n\tdouble sum=0;\n\
    \tfor(i=0;i<l.length;i++)\n\t{\n\t\tsum+=l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_element_double(double[]\
    \ l) \n{\n\tint i;\n\tdouble prod=1;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tprod*=l[i];\n\
    \t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n        \
    \    \n*/\nfloat sum_element_float(float[] l) \n{\n\tint i;\n\tfloat sum=0;\n\t\
    for(i=0;i<l.length;i++)\n\t{\n\t\tsum+=l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tint i;\n\tfloat prod=1;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tprod*=l[i];\n\
    \t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n        \
    \    \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphg0tnbnx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3f1mmkax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i] > max) {\n\t\t\t\
    max = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tstd.sort(l);\n\
    \tmin = l[0];\n\tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i] < min) {\n\
    \t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i) {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_array(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i) {\n\t\tprod *=\
    \ l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_array(double[] l) \n{\n\tdouble sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i) {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\ndouble prod_array(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i) {\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_array(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i) {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat prod_array(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; ++i) {\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9cp20qj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i <\
    \ l.length; i++) {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_element(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) {\n\t\t\
    sum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list.\n            \n*/\nlong product_element(long[] l) \n{\n\tlong product\
    \ = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) {\n\t\tproduct *= l[i];\n\t\
    }\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n       \
    \     \n*/\ndouble sum_element_double(double[] l) \n{\n\tdouble sum = 0;\n\tdouble\
    \ i;\n\tfor (i = 0; i < l.length; i++) {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\ndouble product_element_double(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tdouble i;\n\tfor (i = 0; i < l.length; i++)\
    \ {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nfloat sum_element_float(float[] l) \n{\n\tfloat\
    \ sum = 0;\n\tfloat i;\n\tfor (i = 0; i < l.length; i++) {\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nfloat product_element_float(float[] l) \n{\n\tfloat product = 1;\n\
    \tfloat i;\n\tfor (i = 0; i < l.length; i++) {\n\t\tproduct *= l[i];\n\t}\n\t\
    return product;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj67t72yy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gxx4d6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\
    \t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n        \
    \    \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tfor (int i =\
    \ 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n  \
    \          \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    product *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\t\
    long abs = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    float abs_element(float[] l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxi_sf5k4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i=1;\
    \ i<l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i=1; i<l.length; i++)\n\t\tif(l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong product = 1;\n\tfor(i=1; i<l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_elements(long[] l) \n{\n\tint i;\n\tlong\
    \ abs = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_elements(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor(i=1; i<l.length;\
    \ i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_elements(float[] l)\
    \ \n{\n\tint i;\n\tfloat abs = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4stm0t8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i) {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tint i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong prod_element(long[] l) \n\
    {\n\tint i;\n\tlong prod;\n\tprod = 1;\n\tfor (i = 0; i < l.length; ++i)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong\
    \ abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs;\n\t\
    abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn0a56941.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin\
    \ = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t\
    {\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\tprod\
    \ = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tprod *= l[i];\n\t}\n\treturn\
    \ prod;\n}\n/*\nReturn absolute value of all elements in the list.\n         \
    \   \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\t\
    for (i = 0; i < l.length; i++) \n\t{\n\t\tabs += l[i];\n\t}\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tabs += l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\
    \ \n\t{\n\t\tabs += l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of\
    \ all elements in the list.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd0bboyf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i,j;\n\tlong max;\n\tfor(i=0,j=l.length-1;i<j;i++,j--)\n\
    \t{\n\t\tif(l[i]>l[j])\n\t\t{\n\t\t\tmax=l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    max=l[j];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i,j;\n\tlong min;\n\t\
    for(i=0,j=l.length-1;i<j;i++,j--)\n\t{\n\t\tif(l[i]<l[j])\n\t\t{\n\t\t\tmin=l[i];\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tmin=l[j];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\nlong sum_element(long[]\
    \ l) \n{\n\tint i;\n\tlong sum=0;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tsum+=l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\tlong prod=1;\n\t\
    for(i=0;i<l.length;i++)\n\t{\n\t\tprod=prod*l[i];\n\t}\n\treturn prod;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tabs=abs+l[i]*l[i];\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs=0;\n\
    \tfor(i=0;i<l.length;i++)\n\t{\n\t\tabs=abs+l[i]*l[i];\n\t}\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nfloat\
    \ abs_element(float[] l) \n{\n\tint i;\n\tfloat abs=0;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tabs=abs+l[i]*l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmexu16vu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; ++i)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong product_element(long[] l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i =\
    \ 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs\
    \ = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\
    \tdouble abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ long abs_element(long long[] l) \n{\n\tint i;\n\tlong long abs = 0;\n\tfor (i\
    \ = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l, int size) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor (i = 0; i < size; ++i)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nfloat abs_element(float[] l, int size)\
    \ \n{\n\tint i;\n\tfloat abs = 0;\n\tfor (i = 0; i < \nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk1qczeca.d(94): Error: no identifier for declarator long\n/tmp/tmpk1qczeca.d(94):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmpk1qczeca.d(94): Error:
    semicolon expected following function declaration\n/tmp/tmpk1qczeca.d(94): Error:
    no identifier for declarator l\n/tmp/tmpk1qczeca.d(94): Error: Declaration expected,
    not \'')\''\n/tmp/tmpk1qczeca.d(97): Error: no identifier for declarator long\n/tmp/tmpk1qczeca.d(98):
    Error: Declaration expected, not \''for\''\n/tmp/tmpk1qczeca.d(98): Error: no
    identifier for declarator i\n/tmp/tmpk1qczeca.d(98): Error: Declaration expected,
    not \''<\''\n/tmp/tmpk1qczeca.d(98): Error: Declaration expected, not \''++\''\n/tmp/tmpk1qczeca.d(100):
    Error: Declaration expected, not \''return\''\n/tmp/tmpk1qczeca.d(101): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1qczeca.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpci1oyvo_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxufep7ea.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; ++i)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\
    \tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_array(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_array(long[] l) \n{\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_array(long[]\
    \ l, long d) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_array(long[] l, long d, long e) \n{\n\tlong i;\n\tfor (i\
    \ = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_array(long[]\
    \ l, long d, long e, long f) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\
    \t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_array(long[] l, long d, long e, long\
    \ f, long g) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_array(long[] l, long d, long e, long f, long g, long h)\
    \ \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\t\
    return l;\n}\n/*\n\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgjtb1_8q.d(118): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgjtb1_8q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3324tvl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i =\
    \ 0; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoe29n7el.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong long sum_elements(long long[] l) \n{\n\tlong long sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong long\
    \ product_elements(long long[] l) \n{\n\tlong long product = 1;\n\tfor (int i\
    \ = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\nulong sum_elements(ulong[]\
    \ l) \n{\n\tulong sum = 0;\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ga0qfm_.d(96): Error: no identifier for declarator long\n/tmp/tmp6ga0qfm_.d(96):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmp6ga0qfm_.d(96): Error:
    semicolon expected following function declaration\n/tmp/tmp6ga0qfm_.d(96): Error:
    no identifier for declarator l\n/tmp/tmp6ga0qfm_.d(96): Error: Declaration expected,
    not \'')\''\n/tmp/tmp6ga0qfm_.d(99): Error: Declaration expected, not \''for\''\n/tmp/tmp6ga0qfm_.d(99):
    Error: no identifier for declarator i\n/tmp/tmp6ga0qfm_.d(99): Error: Declaration
    expected, not \''<\''\n/tmp/tmp6ga0qfm_.d(99): Error: Declaration expected, not
    \''++\''\n/tmp/tmp6ga0qfm_.d(101): Error: Declaration expected, not \''return\''\n/tmp/tmp6ga0qfm_.d(102):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ga0qfm_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_elements(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_elements(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i <\
    \ l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_elements(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdskqmf5s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19_aaqsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float[] l)\
    \ \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp05uo6m7h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsfv4_kym.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbb3ikgip.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\ti++;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nwj4lq0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float[] l)\
    \ \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp05uo6m7h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tif(l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor(i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n  \
    \          \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\t\
    for(i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor(i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\ndouble sum_element_double(double[] l) \n{\n\t\
    double sum = 0;\n\tdouble i;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tsum +=\
    \ l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tdouble i;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\
    \t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\tfloat\
    \ i;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfloat i;\n\tfor(i = 0; i < l.length; i++) \n\
    \t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeesvuwvq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\
    \tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    long sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long prod_element(long[] l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\t\
    long abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplt5u6zc8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5n52aqs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.csort(l);\n\tmax =\
    \ l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax =\
    \ l[i];\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponu58zym.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tlong i;\n\tfor(i = 0;\
    \ i < (long)l.length; i++) \n\t{\n\t\tif(l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsycuxehe.d(10): Error: C style cast illegal, use cast(long)l.length\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsycuxehe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tfor(i=0;i<l.length;i++){\n\
    \t\tif(l[i]>max){\n\t\t\tmax=l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum\
    \ element in the list.\n            \n*/\nlong min_element(long[] l) \n{\n\tint\
    \ i;\n\tlong min;\n\tfor(i=0;i<l.length;i++){\n\t\tif(l[i]<min){\n\t\t\tmin=l[i];\n\
    \t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n  \
    \          \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\tlong sum=0;\n\tfor(i=0;i<l.length;i++){\n\
    \t\tsum+=l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list.\n            \n*/\nlong prod_element(long[] l) \n{\n\tint i;\n\tlong prod=1;\n\
    \tfor(i=0;i<l.length;i++){\n\t\tprod*=l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<l.length;i++){\n\t\tabs=abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_sum(long[] l) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<l.length;i++){\n\
    \t\tabs=abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_prod(long[] l) \n{\n\tint i;\n\tlong\
    \ abs=1;\n\tfor(i=0;i<l.length;i++){\n\t\tabs*=l[i];\n\t}\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ abs_max(long[] l) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<l.length;i++){\n\
    \t\tabs=max(abs,l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_min(long[] l) \n{\n\tint i;\n\
    \tlong abs=0;\n\tfor(i=0;i<l.length;i++){\n\t\tabs=min(abs,l[i]);\n\t}\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nlong abs_avg(long[] l\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnktowxha.d(128): Error: found \''unittest\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnktowxha.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\
    \t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n        \
    \    \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tfor (int i =\
    \ 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n  \
    \          \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    prod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    prod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcx8sauox.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor(i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\
    \treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor(i=1;\
    \ i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_elements(long[] l) \n{\n\tint i;\n\tlong sum;\n\tsum = 0;\n\tfor(i=0; i<l.length;\
    \ i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\
    \tlong prod;\n\tprod = 1;\n\tfor(i=0; i<l.length; i++)\n\t\tprod *= l[i];\n\t\
    return prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    double sum_elements(double[] l) \n{\n\tint i;\n\tdouble sum;\n\tsum = 0;\n\tfor(i=0;\
    \ i<l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tint i;\n\tdouble prod;\n\tprod = 1;\n\tfor(i=0; i<l.length; i++)\n\
    \t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tint i;\n\tfloat sum;\n\
    \tsum = 0;\n\tfor(i=0; i<l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat prod;\n\tprod = 1;\n\tfor(i=0; i<l.length; i++)\n\t\
    \tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqu2gt_72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = 0;\n\tfor(i =\
    \ 0; i < l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = 0;\n\tfor(i = 0; i < l.length; i++)\n\t{\n\t\t\
    if(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong product_element(long[] l) \n{\n\tint i;\n\tlong product = 1;\n\tfor(i\
    \ = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list with specified type.\n            \n*/\nlong\
    \ sum_elements(long[] l, int type) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0;\
    \ i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list with specified type.\n            \n*/\nlong product_elements(long[]\
    \ l, int type) \n{\n\tint i;\n\tlong product = 1;\n\tfor(i = 0; i < l.length;\
    \ i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list with specified type.\n            \n*/\ndouble sum_elements(double[]\
    \ l, int type) \n{\n\tint i;\n\tdouble sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\
    \t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list with specified type.\n            \n*/\ndouble product_elements(double[]\
    \ l, int type) \n{\n\tint i;\n\tdouble product = 1;\n\tfor(i = 0; i < l.length;\
    \ i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list with specified type.\n            \n*/\nfloat sum_elements(float[]\
    \ l, int type) \n{\n\tint i;\n\tfloat sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\
    \t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list with specified type.\n            \n*/\nfloat product_elements(float[]\
    \ l, int type) \n{\n\tint i;\n\tfloat product = 1;\n\tfor(i = 0; i < \nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2yi00mab.d(125): Error: expression expected, not \''unittest\''\n/tmp/tmp2yi00mab.d(126):
    Error: found \''{\'' when expecting \'';\'' following for condition\n/tmp/tmp2yi00mab.d(127):
    Error: expression expected, not \''alias\''\n/tmp/tmp2yi00mab.d(127): Error: found
    \''candidate\'' when expecting \'')\''\n/tmp/tmp2yi00mab.d(127): Error: found
    \''=\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yi00mab.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvlxwdcw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\t\n\tmax = l[0];\n\
    \tfor(i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\
    \treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmlfq8rzg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; ++i)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long prod_element(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor (i = 0; i\
    \ < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_element2(long[] l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ ++i)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_element3(long[] l) \n{\n\t\
    long i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_element4(long[] l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\
    \t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element5(long[] l) \n{\n\tlong i;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nlong abs_element6(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_element7(long[] l) \n{\n\t\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplr3iupx2.d(125): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplr3iupx2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = 0;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\t\
    if(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong product_element(long[] l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum\
    \ of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tint i;\n\tdouble sum = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements(double[] l) \n{\n\tint i;\n\tdouble\
    \ prod = 1;\n\tfor(i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat sum = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nfloat product_elements(float[] l) \n{\n\tint i;\n\tfloat prod\
    \ = 1;\n\tfor(i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppux6r_vs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i=1;\
    \ i<l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i=1; i<l.length; i++)\n\t\tif(l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong product = 1;\n\tfor(i=1; i<l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list with\
    \ specified type.\n            \n*/\nlong sum_elements(long[] l, int type) \n\
    {\n\tint i;\n\tlong sum = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tif(type == 0)\n\
    \t\t\tsum += l[i];\n\t\telse if(type == 1)\n\t\t\tsum += l[i] * l[i];\n\t\telse\
    \ if(type == 2)\n\t\t\tsum += l[i] * l[i] * l[i];\n\t\telse if(type == 3)\n\t\t\
    \tsum += l[i] * l[i] * l[i] * l[i];\n\t\telse if(type == 4)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if(type == 5)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if(type == 6)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if(type == 7)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if(type == 8)\n\t\
    \t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\t\
    else if(type == 9)\n\t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i]\
    \ * l[i] * l[i] * l[i];\n\t\telse if(type == 10)\n\t\t\tsum += l[i] * l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0b668od6.d(83): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp0b668od6.d(90): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0b668od6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19_aaqsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\
    \tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of\
    \ all elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n\
    {\n\tlong sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nlong product_elements(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\
    \tfor(i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\ndouble sum_elements_double(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_elements_float(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor(i\
    \ = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_elements_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\
    \tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu782o7se.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor (i\
    \ = 0; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tif\
    \ (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_element(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i =\
    \ 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_element_double(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tdouble i;\n\tfor (i = 0; i < l.length; i++)\n\t\
    \tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tdouble i;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\t\
    return product;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\tfloat i;\n\tfor\
    \ (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfloat i;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0c59g3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbb3ikgip.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gxx4d6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\ti++;\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n   \
    \         \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i = 0;\n\
    \twhile (i < l.length) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\t\
    long i = 0;\n\twhile (i < l.length) \n\t{\n\t\tsum += l[i];\n\t\ti++;\n\t}\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong product_elements(long[] l) \n{\n\tlong product = 1;\n\tlong i = 0;\n\t\
    while (i < l.length) \n\t{\n\t\tproduct *= l[i];\n\t\ti++;\n\t}\n\treturn product;\n\
    }\n/*\nReturn mean of all elements in the list.\n            \n*/\ndouble mean_elements(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < l.length) \n\t{\n\t\tsum\
    \ += l[i];\n\t\ti++;\n\t}\n\treturn (double)sum / l.length;\n}\n/*\nReturn median\
    \ of all elements in the list.\n            \n*/\ndouble median_elements(long[]\
    \ l) \n{\n\tlong mid = l.length / 2;\n\tlong sum = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) \n\t{\n\t\tsum += l[i];\n\t\ti++;\n\t}\n\tif (l.length % 2 ==\
    \ 0) \n\t{\n\t\treturn (double)sum / mid;\n\t} \n\telse \n\t{\n\t\treturn (double)sum\
    \ / mid + l[mid];\n\t}\n}\n/*\nReturn standard deviation of all elements in the\
    \ list.\n            \n*/\ndouble std_dev_elements(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i = 0;\n\twhile (i < l.length) \n\t{\n\t\tsum += l[i] * l[i];\n\t\
    \ti++;\n\t}\n\treturn (double)Math.sqrt(sum / (l.length - 1));\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_elements_double(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i = 0;\n\twhile (i < l.length\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_6k07uo1.d(81): Error: C style cast illegal, use cast(double)sum\n/tmp/tmp_6k07uo1.d(99):
    Error: C style cast illegal, use cast(double)sum\n/tmp/tmp_6k07uo1.d(103): Error:
    C style cast illegal, use cast(double)sum\n/tmp/tmp_6k07uo1.d(119): Error: C style
    cast illegal, use cast(double)Math.sqrt(sum / (l.length - 1))\n/tmp/tmp_6k07uo1.d(130):
    Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp_6k07uo1.d(137): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_6k07uo1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax\
    \ = l[i];\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcimom84u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i = 1; i <\
    \ l.length; i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\
    \tlong product = 1;\n\tfor(i = 0; i < l.length; i++){\n\t\tproduct *= l[i];\n\t\
    }\n\treturn product;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs = 0;\n\
    \tfor(i = 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float[] l)\
    \ \n{\n\tint i;\n\tfloat abs = 0;\n\tfor(i = 0; i < l.length; i++){\n\t\tabs =\
    \ abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsilt0ar8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; ++i)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\t\
    int i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\tlong product;\n\
    \tproduct = 1;\n\tfor (i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn absolute value of all elements in the list.\n      \
    \      \n*/\nlong abs_elements(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_elements(double[] l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i\
    \ = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nfloat abs_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong long abs_elements(long long[]\
    \ l) \n{\n\tint i;\n\tlong long abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\ndouble abs_elements(double[]\
    \ l, int size) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i = 0; i < size;\
    \ ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn \nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3kznvod2.d(99): Error: no identifier for declarator long\n/tmp/tmp3kznvod2.d(99):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmp3kznvod2.d(99): Error:
    semicolon expected following function declaration\n/tmp/tmp3kznvod2.d(99): Error:
    no identifier for declarator l\n/tmp/tmp3kznvod2.d(99): Error: Declaration expected,
    not \'')\''\n/tmp/tmp3kznvod2.d(102): Error: no identifier for declarator long\n/tmp/tmp3kznvod2.d(103):
    Error: no identifier for declarator abs\n/tmp/tmp3kznvod2.d(103): Error: Declaration
    expected, not \''=\''\n/tmp/tmp3kznvod2.d(104): Error: Declaration expected, not
    \''for\''\n/tmp/tmp3kznvod2.d(104): Error: no identifier for declarator i\n/tmp/tmp3kznvod2.d(104):
    Error: Declaration expected, not \''<\''\n/tmp/tmp3kznvod2.d(104): Error: Declaration
    expected, not \''++\''\n/tmp/tmp3kznvod2.d(106): Error: Declaration expected,
    not \''return\''\n/tmp/tmp3kznvod2.d(107): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3kznvod2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor(int i = 1; i < l.length; i++)\n\t\tif(l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\
    \tfor(int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong prod_array(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor(int i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\
    \treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\ndouble sum_array(double[] l) \n{\n\tdouble sum = 0;\n\tfor(int i = 0; i <\
    \ l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all\
    \ elements in the list.\n            \n*/\ndouble prod_array(double[] l) \n{\n\
    \tdouble prod = 1;\n\tfor(int i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\t\
    return prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_array(float[] l) \n{\n\tfloat sum = 0;\n\tfor(int i = 0; i < l.length;\
    \ i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nfloat prod_array(float[] l) \n{\n\tfloat prod\
    \ = 1;\n\tfor(int i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxawmks6r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float[] l)\
    \ \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp05uo6m7h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor(int\
    \ i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7or3fheg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong product_array(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\ndouble sum_array(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\ndouble product_array(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nfloat sum_array(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int i\
    \ = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_array(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp924syhiy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i = 1; i < l.length; ++i)\n\t\t\
    if(l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong product = 1;\n\tfor(i = 0; i < l.length; ++i)\n\t\t\
    product *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\t\
    long abs = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_max(long[] l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_min(long[]\
    \ l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tabs\
    \ = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_sum(long[] l) \n{\n\tint i;\n\tlong\
    \ abs = 0;\n\tfor(i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nlong abs_product(long[] l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_max(long[]\
    \ l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor(i = 0; i < l.length; ++i)\n\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpceo29oo1.d(122): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpceo29oo1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i <\
    \ l.length; i++) {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nlong product_elements(long[] l) \n{\n\tlong product = 1;\n\t\
    long i;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product =\
    \ 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor (i = 0;\
    \ i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\
    \tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwjalvtt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++) \n\t\tif (l[i] > max) \n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++) \n\t\tif (l[i]\
    \ < min) \n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_element_double(double[] l) \n{\n\tdouble sum = 0;\n\
    \tfor (int i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\ndouble product_element_double(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\t\
    for (int i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9d8l5zu9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i = 1; i <\
    \ l.length; i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong prod_element(long[] l) \n{\n\tint i;\n\t\
    long prod = 1;\n\tfor(i = 0; i < l.length; i++){\n\t\tprod *= l[i];\n\t}\n\treturn\
    \ prod;\n}\n/*\nReturn absolute value of all elements in the list.\n         \
    \   \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor(i =\
    \ 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor(i = 0; i < l.length; i++){\n\t\t\
    abs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\
    \tfloat abs = 0;\n\tfor(i = 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\t}\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcdw91rq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max_val;\n\t\n\tmax_val\
    \ = l[0];\n\tfor(i = 1; i < l.length; i++){\n\t\tif(l[i] > max_val)\n\t\t\tmax_val\
    \ = l[i];\n\t}\n\treturn max_val;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp30sjoewq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_element(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i =\
    \ 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\ndouble abs_element(double[] l) \n{\n\tdouble i;\n\tfor (i = 0; i\
    \ < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7fowltyo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyq2t_b9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n \
    \           \n*/\ndouble sum_element_double(double[] l) \n{\n\tint i;\n\tdouble\
    \ sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\ndouble product_element_double(double[]\
    \ l) \n{\n\tint i;\n\tdouble prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_element_float(float[] l) \n{\n\tint i;\n\tfloat sum\
    \ = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tint i;\n\tfloat prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcunzr52d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\t\n\tmax = l[0];\n\
    \t\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\t\
    max = l[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}\n/*\nReturn minimum element in the\
    \ list.\n            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\
    \t\n\tmin = l[0];\n\t\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] <\
    \ min) \n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\t\n\treturn min;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\nlong sum_element(long[]\
    \ l) \n{\n\tint i;\n\tlong sum;\n\t\n\tsum = 0;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tsum += l[i];\n\t}\n\t\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nlong prod_element(long[] l)\
    \ \n{\n\tint i;\n\tlong prod;\n\t\n\tprod = 1;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tprod *= l[i];\n\t}\n\t\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs;\n\t\n\tabs = 0;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tabs += l[i];\n\t}\n\t\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tint i;\n\tdouble abs;\n\t\n\tabs = 0;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tabs += l[i];\n\t}\n\t\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs;\n\t\n\tabs = 0;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tabs += l[i];\n\t}\n\t\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsz282feq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max_element = 0;\n\tlong i;\n\t\
    for(i = 0; i < l.length; ++i)\n\t{\n\t\tif(l[i] > max_element)\n\t\t\tmax_element\
    \ = l[i];\n\t}\n\treturn max_element;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tlong min_element = 0;\n\t\
    long i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min_element)\n\t\t\
    \tmin_element = l[i];\n\t}\n\treturn min_element;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\t\
    product *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\ndouble sum_element_double(double[] l) \n{\n\tdouble\
    \ sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    double product_element_double(double[] l) \n{\n\tdouble product = 1;\n\tlong i;\n\
    \tfor(i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_element_float(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nfloat product_element_float(float[] l) \n{\n\tfloat product\
    \ = 1;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4s6uhg06.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor(i = 1; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n          \
    \  \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\
    \tfor(i = 1; i < l.length; i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t\
    }\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n      \
    \      \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\tlong sum;\n\tsum = 0;\n\
    \tfor(i = 0; i < l.length; i++){\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong product;\n\tproduct = 1;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor(i = 0; i < l.length; i++){\n\
    \t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\
    \tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor(i = 0; i < l.length; i++){\n\t\tabs\
    \ = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\
    \tfloat abs;\n\tabs = 0;\n\tfor(i = 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ipq1isv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tif(l[i]>max)\n\t\t\tmax=l[i];\n\t}\n\treturn max;\n}\n/*\nReturn minimum\
    \ element in the list.\n            \n*/\nlong min_element(long[] l) \n{\n\tint\
    \ i;\n\tlong min;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tif(l[i]<min)\n\t\t\tmin=l[i];\n\
    \t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n         \
    \   \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\tlong sum=0;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tsum+=l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\
    \tlong prod=1;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tprod*=l[i];\n\t}\n\treturn\
    \ prod;\n}\n/*\nReturn absolute value of all elements in the list.\n         \
    \   \n*/\nlong abs_elements(long[] l) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tabs=abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_elements(long[] l, int n)\
    \ \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tabs=abs(l[i]);\n\t\
    }\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_elements(long[] l, int n, int m) \n{\n\tint i;\n\t\
    long abs=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tabs=abs(l[i]);\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_elements(long[] l, int n, int m, int n) \n{\n\tint i;\n\tlong abs=0;\n\
    \tfor(i=0;i<n;i++)\n\t{\n\t\tabs=abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_elements(long[]\
    \ l, int n, int m, int n, int m) \n{\n\tint i;\n\tlong abs=0;\n\tfor(i=0;i<n;i++)\n\
    \t{\n\t\tabs=abs(l[i]);\n\t}\n\treturn abs;\n\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0rd5fxek.d(130): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0rd5fxek.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin\
    \ = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t\
    {\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\tlong product;\n\
    \tproduct = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\
    \t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\ndouble sum_elements(double[] l) \n{\n\tint i;\n\tdouble sum;\n\t\
    sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    double product_elements(double[] l) \n{\n\tint i;\n\tdouble product;\n\tproduct\
    \ = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t}\n\t\
    return product;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_elements(float[] l) \n{\n\tint i;\n\tfloat sum;\n\tsum = 0;\n\t\
    for (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat product;\n\tproduct = 1;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum\
    \ of all elements in the list.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx8u27r2m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor(i = 1; i < l.length; i++)\n\t\t\
    if(l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor(i = 0; i < l.length; i++)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list with\
    \ given predicate.\n            \n*/\nlong sum_elements_pred(long[] l, bool pred)\
    \ \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\t\tif(pred(l[i]))\n\
    \t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list with given predicate.\n            \n*/\nlong product_elements_pred(long[]\
    \ l, bool pred) \n{\n\tint i;\n\tlong prod = 1;\n\tfor(i = 0; i < l.length; i++)\n\
    \t\tif(pred(l[i]))\n\t\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of\
    \ all elements in the list with given predicate.\n            \n*/\nlong sum_elements_not_pred(long[]\
    \ l, bool pred) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++)\n\
    \t\tif(!pred(l[i]))\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list with given predicate.\n            \n*/\nlong product_elements_not_pred(long[]\
    \ l, bool pred) \n{\n\tint i;\n\tlong prod = 1;\n\tfor(i = 0; i < l.length; i++)\n\
    \t\tif(!pred(l[i]))\n\t\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of\
    \ all elements in the list with given predicate.\n            \n*/\nlong sum_elements_not_pred(long[]\
    \ l, bool pred, long init) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length;\
    \ i++)\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8b6ky8o9.d(113): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8b6ky8o9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax =\
    \ l[i];\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n         \
    \   \n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tstd.sort(l);\n\tmin =\
    \ l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] < min)\n\t\t\tmin =\
    \ l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tfor(int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong prod_element(long[] l) \n\
    {\n\tlong prod = 1;\n\tfor(int i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\t\
    return prod;\n}\n/*\nReturn absolute value of all elements in the list.\n    \
    \        \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor(int i =\
    \ 0; i < l.length; ++i)\n\t\tabs = l[i] < 0 ? -l[i] : l[i];\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor(int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = l[i] < 0 ? -l[i] : l[i];\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor(int i = 0; i < l.length; ++i)\n\t\tabs = l[i]\
    \ < 0 ? -l[i] : l[i];\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxmrowdu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i=1; i<l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i=1; i<l.length; i++)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum;\n\tsum = 0;\n\tfor (i=1; i<l.length; i++)\n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nlong prod_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\tprod = 1;\n\
    \tfor (i=1; i<l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor (i=1; i<l.length; i++)\n\t\t\
    abs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\
    \tdouble abs;\n\tabs = 0;\n\tfor (i=1; i<l.length; i++)\n\t\tabs = max(abs, l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs;\n\tabs\
    \ = 0;\n\tfor (i=1; i<l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvz6bsqui.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i] > max) {\n\t\t\t\
    max = l[i];\n\t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pjru73y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n          \
    \  \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\t\t\
    }\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n      \
    \      \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = l[i] < 0 ? -l[i] :\
    \ l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = l[i] < 0 ? -l[i] :\
    \ l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = l[i] < 0 ? -l[i] : l[i];\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwvenlbem.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\ti++;\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n   \
    \         \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i = 0;\n\
    \twhile (i < l.length) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\t\
    long i = 0;\n\twhile (i < l.length) \n\t{\n\t\tsum += l[i];\n\t\ti++;\n\t}\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong product_element(long[] l) \n{\n\tlong product = 1;\n\tlong i = 0;\n\t\
    while (i < l.length) \n\t{\n\t\tproduct *= l[i];\n\t\ti++;\n\t}\n\treturn product;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_element(long[] l) \n{\n\tlong i = 0;\n\tlong sum = 0;\n\twhile (i < l.length)\
    \ \n\t{\n\t\tsum += l[i];\n\t\ti++;\n\t}\n\treturn sum;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tdouble i = 0;\n\tdouble sum = 0;\n\twhile (i < l.length) \n\t{\n\t\
    \tsum += l[i];\n\t\ti++;\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value of\
    \ all elements in the list.\n            \n*/\nfloat abs_element(float[] l) \n\
    {\n\tfloat i = 0;\n\tfloat sum = 0;\n\twhile (i < l.length) \n\t{\n\t\tsum +=\
    \ l[i];\n\t\ti++;\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpof4jd8bz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3324tvl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tlong i;\n\tfor(i = 0;\
    \ i < (long)l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t\
    }\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzzwxceqs.d(10): Error: C style cast illegal, use cast(long)l.length\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzzwxceqs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++) \n\t{\n\t\tif(l[i] > max) \n\t\t\tmax = l[i];\n\t}\n\
    \treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzefwhfed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i <\
    \ l.length; i++) {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_array(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nlong prod_array(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_array(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\ndouble abs_array(double[] l) \n{\n\tdouble i;\n\tfor (i = 0; i <\
    \ l.length; i++)\n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_array(float[] l) \n\
    {\n\tfloat i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\treturn\
    \ l;\n}\n/*\nReturn absolute value of all elements in the list.\n            \n\
    */\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8dyazfbg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\t\n\t\
    for (i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t\
    }\n\t\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n           \
    \ \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min = l[0];\n\t\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t\
    }\n\t\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n       \
    \     \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\t\n\t\
    for (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\t\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\t\n\tfor (i = 0; i < l.length; i++)\n\t\
    \tprod *= l[i];\n\t\n\treturn prod;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\t\
    long abs = 0;\n\t\n\tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\
    \t\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs\
    \ = 0;\n\t\n\tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\
    \t\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs = 0;\n\
    \t\n\tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\t\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2avtc409.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_ch3rlr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin\
    \ = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t\
    {\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\tlong product;\n\t\
    product = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t\
    }\n\treturn product;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs\
    \ = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tabs = abs(l[i]);\n\t}\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_max(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > abs) \n\t\t{\n\t\t\tabs\
    \ = l[i];\n\t\t}\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_min(long[] l) \n{\n\tint i;\n\tlong\
    \ abs;\n\tabs = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] <\
    \ abs) \n\t\t{\n\t\t\tabs = l[i];\n\t\t}\n\t}\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_sum(long[] l)\
    \ \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\nunittest\n{\n    alias candidate = max_element;\n\n \
    \   assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp4_10b5i.d(134): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp4_10b5i.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min = l[0];\n\tfor(int i = 1; i < l.length;\
    \ i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tfor(int i = 0; i < l.length; i++){\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_elements(long[] l) \n{\n\tlong product = 1;\n\tfor(int\
    \ i = 0; i < l.length; i++){\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ abs_elements(long[] l) \n{\n\tlong abs = 0;\n\tfor(int i = 0; i < l.length;\
    \ i++){\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\ndouble abs_elements(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor(int i = 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_elements(float[] l) \n{\n\tfloat abs = 0;\n\tfor(int\
    \ i = 0; i < l.length; i++){\n\t\tabs = abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6yu323ll.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j97b338.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n \
    \           \n*/\ndouble sum_elements(double[] l) \n{\n\tint i;\n\tdouble sum\
    \ = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tint i;\n\tdouble prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tint i;\n\tfloat sum =\
    \ 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzmb4_n2r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn88791tf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list that are less than the given value.\n            \n*/\nlong sum_element_less_than(long[]\
    \ l, long value) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif (l[i] < value) \n\t\t{\n\t\t\tsum += l[i];\n\t\t}\n\t}\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list that are less than\
    \ the given value.\n            \n*/\nlong product_element_less_than(long[] l,\
    \ long value) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif (l[i] < value) \n\t\t{\n\t\t\tproduct *= l[i];\n\t\t}\n\t\
    }\n\treturn product;\n}\n/*\nReturn sum of all elements in the list that are greater\
    \ than the given value.\n            \n*/\nlong sum_element_greater_than(long[]\
    \ l, long value) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif (l[i] > value) \n\t\t{\n\t\t\tsum += l[i];\n\t\t}\n\t}\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list that are greater\
    \ than the given value.\n            \n*/\nlong product_element_greater_than(long[]\
    \ l, long value) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif (l[i] > value) \n\t\t{\n\t\t\tproduct *= l[i];\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd6u9me5s.d(128): Error: found \''unittest\'' instead of statement\n/tmp/tmpd6u9me5s.d(135):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpd6u9me5s.d(135):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd6u9me5s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax =\
    \ l[i];\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1bcbt57.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i\
    \ < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_element(long[] l) \n{\n\tlong product\
    \ = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\t\
    return product;\n}\n/*\nReturn absolute value of all elements in the list.\n \
    \           \n*/\nlong abs_element(long[] l) \n{\n\tlong i;\n\tlong sum = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i] * l[i];\n\treturn sum;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ abs_sum(long[] l) \n{\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length;\
    \ ++i)\n\t\tsum += l[i] * l[i];\n\treturn sum;\n}\n/*\nReturn absolute value of\
    \ all elements in the list.\n            \n*/\nlong abs_product(long[] l) \n{\n\
    \tlong i;\n\tlong product = 1;\n\tfor (i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i] * l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_max(long[] l) \n{\n\tlong i;\n\tlong\
    \ max = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax =\
    \ l[i];\n\treturn max;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_min(long[] l) \n{\n\tlong i;\n\tlong min = 0;\n\t\
    for (i = 0; i < l.length; ++i)\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn\
    \ min;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nlong abs_sum(long[] l) \n{\n\tlong i;\n\tlong \nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw9y510tf.d(126): Error: no identifier for declarator long\n/tmp/tmpw9y510tf.d(126):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpw9y510tf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.csort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax\
    \ = l[i];\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n       \
    \     \n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tstd.csort(l);\n\tmin\
    \ = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i] < min)\n\t\t\tmin\
    \ = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n   \
    \         \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i =\
    \ 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn sum of\
    \ all elements in the list.\n            \n*/\ndouble sum_array(double[] l) \n\
    {\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_array(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn sum of all elements in\
    \ the list.\n            \n*/\nlong sum_array(int[] l) \n{\n\tlong sum = 0;\n\t\
    for (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_array(double2[]\
    \ l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum +=\
    \ l[i].x;\n\treturn sum;\n}\n/*\nReturn sum of all elements in the list.\n   \
    \         \n*/\nfloat sum_array(float2[] l) \n{\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i].x;\n\treturn sum;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\nlong sum_array(int2[] l)\
    \ \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i].x;\n\
    \treturn sum;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\ndouble sum_array(double3[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i\
    \ < l.length; ++i)\n\t\tsum += l[i].x;\n\treturn sum;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nfloat sum_array(\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc_u2a5oe.d(123): Error: basic type expected, not unittest\n/tmp/tmpc_u2a5oe.d(123):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpc_u2a5oe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max_val = l[0];\n\tlong max_idx\
    \ = 1;\n\tfor(int i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] > max_val)\n\t\t\
    {\n\t\t\tmax_val = l[i];\n\t\t\tmax_idx = i;\n\t\t}\n\t}\n\treturn max_idx;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbpkzt40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list with specified\
    \ type.\n            \n*/\nlong sum_elements(long[] l, int type) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tif (type == 0)\n\t\t\tsum +=\
    \ l[i];\n\t\telse if (type == 1)\n\t\t\tsum += l[i] * l[i];\n\t\telse if (type\
    \ == 2)\n\t\t\tsum += l[i] * l[i] * l[i];\n\t\telse if (type == 3)\n\t\t\tsum\
    \ += l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 4)\n\t\t\tsum += l[i] *\
    \ l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 5)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 6)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 7)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 8)\n\
    \t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\
    \telse if (type == 9)\n\t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] *\
    \ l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 10)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if\
    \ (type == 11)\n\t\t\tsum += l[i]\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyj3ukwaw.d(80): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpyj3ukwaw.d(87): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyj3ukwaw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor(i=1;\
    \ i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeid7ovhf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min = l[0];\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\
    \t\tprod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn square root of sum of all\
    \ elements in the list.\n            \n*/\ndouble sqrt(long sum) \n{\n\tdouble\
    \ root;\n\troot = sqrt(sum);\n\treturn root;\n}\n/*\nReturn square root of product\
    \ of all elements in the list.\n            \n*/\ndouble sqrt(long prod) \n{\n\
    \tdouble root;\n\troot = sqrt(prod);\n\treturn root;\n}\n/*\nReturn square root\
    \ of sum of all elements in the list.\n            \n*/\ndouble sqrt(double sum)\
    \ \n{\n\tdouble root;\n\troot = sqrt(sum);\n\treturn root;\n}\n/*\nReturn square\
    \ root of product of all elements in the list.\n            \n*/\ndouble sqrt(double\
    \ prod) \n{\n\tdouble root;\n\troot = sqrt(prod);\n\treturn root;\n}\n/*\nReturn\
    \ square root of sum of all elements in the list.\n            \n*/\ndouble sqrt(int\
    \ sum) \n{\n\tdouble root;\n\troot = sqrt(sum);\n\treturn root;\n}\n/*\nReturn\
    \ square root of product of all elements in the list.\n            \n*/\ndouble\
    \ sqrt(int prod) \n{\n\tdouble root;\n\troot = sqrt(prod);\n\treturn root;\n}\n\
    /*\nReturn square root of sum of all elements in the list.\n            \n*/\n\
    double sqrt(short sum) \n{\n\tdouble root;\n\troot = sqrt(sum);\n\treturn root;\n\
    }\n/*\n\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuiswpedd.d(134): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuiswpedd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3324tvl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tstd.carray<long,\
    \ 1> a(l);\n\tmax = a[0];\n\tfor(i = 1; i < a.length; i++)\n\t{\n\t\tif(a[i] >\
    \ max)\n\t\t\tmax = a[i];\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpimuinc55.d(10): Error: found \'',\'' when expecting \''.\''
    following long\n/tmp/tmpimuinc55.d(10): Error: found \''1\'' when expecting identifier
    following \''long.\''\n/tmp/tmpimuinc55.d(10): Error: found \''>\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimuinc55.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvlxwdcw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gxx4d6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_element(long[] l) \n\
    {\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tl[i] = abs(l[i]);\n\t\
    }\n\treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n  \
    \          \n*/\nlong abs_element_long(long[] l) \n{\n\tlong i;\n\tfor (i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\ndouble abs_element_double(double[]\
    \ l) \n{\n\tdouble i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tl[i] = abs(l[i]);\n\
    \t}\n\treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element_float(float[] l) \n{\n\tfloat i;\n\tfor (i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptulyhwbk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin\
    \ = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t\
    {\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\tprod\
    \ = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tprod *= l[i];\n\t}\n\treturn\
    \ prod;\n}\n/*\nReturn absolute value of all elements in the list.\n         \
    \   \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\t\
    for (i = 0; i < l.length; i++) \n\t{\n\t\tabs += l[i] * l[i];\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor\
    \ (i = 0; i < l.length; i++) \n\t{\n\t\tabs += l[i] * l[i];\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    float abs_element(float[] l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tabs += l[i] * l[i];\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlfvge_u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; ++i)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_element(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i =\
    \ 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum\
    \ += l[i] * l[i];\n\treturn sum;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tdouble\
    \ i;\n\tdouble sum = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i] * l[i];\n\
    \treturn sum;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nfloat abs_element(float[] l) \n{\n\tfloat i;\n\tfloat sum = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i] * l[i];\n\treturn sum;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb9vlexlh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max_val = 0;\n\tlong max_pos =\
    \ 0;\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tif(l[i] > max_val)\n\t\t{\n\
    \t\t\tmax_val = l[i];\n\t\t\tmax_pos = i;\n\t\t}\n\t}\n\treturn max_pos;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min_val = 0;\n\tlong min_pos = 0;\n\tfor(int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tif(l[i] < min_val)\n\t\t{\n\t\t\tmin_val = l[i];\n\t\t\tmin_pos\
    \ = i;\n\t\t}\n\t}\n\treturn min_pos;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\t\
    for(int i = 0; i < l.length; i++)\n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\t\
    product *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list.\n            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum\
    \ = 0;\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    double product_elements(double[] l) \n{\n\tdouble product = 1;\n\tfor(int i =\
    \ 0; i < l.length; i++)\n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_elements(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tsum\
    \ += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nfloat product_elements(float[] l) \n{\n\tfloat product = 1;\n\
    \tfor(int i = 0; i < l.length; i++)\n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq2ghp5p4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list with\
    \ specified type.\n            \n*/\nlong sum_elements(long[] l, int type) \n\
    {\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tif (type == 0)\n\
    \t\t\tsum += l[i];\n\t\telse if (type == 1)\n\t\t\tsum += l[i] * l[i];\n\t\telse\
    \ if (type == 2)\n\t\t\tsum += l[i] * l[i] * l[i];\n\t\telse if (type == 3)\n\t\
    \t\tsum += l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 4)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 5)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 6)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 7)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 8)\n\
    \t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\
    \telse if (type == 9)\n\t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] *\
    \ l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 10)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if\
    \ (type == 11)\n\t\t\tsum += l[i]\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5as3bc79.d(80): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp5as3bc79.d(87): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5as3bc79.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\
    \t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n\
    */\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t\
    }\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n           \
    \ \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor (i =\
    \ 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; ++i)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list divided\
    \ by number of elements in the list.\n            \n*/\ndouble sum_elements_divided_by_elements(long[]\
    \ l, int n) \n{\n\tint i;\n\tdouble sum = 0;\n\tfor (i = 0; i < n; ++i)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list\
    \ divided by number of elements in the list.\n            \n*/\ndouble product_elements_divided_by_elements(long[]\
    \ l, int n) \n{\n\tint i;\n\tdouble prod = 1;\n\tfor (i = 0; i < n; ++i)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list divided\
    \ by number of elements in the list.\n            \n*/\nfloat sum_elements_divided_by_elements(long[]\
    \ l, int n) \n{\n\tint i;\n\tfloat sum = 0;\n\tfor (i = 0; i < n; ++i)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list divided\
    \ by number of elements in the list.\n            \n*/\nfloat product_elements_divided_by_elements(long[]\
    \ l, int n) \n{\n\tint i;\n\tfloat prod = 1;\n\tfor (i = 0; i < n; ++i)\n\t\t\
    prod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list divided\
    \ by number of elements in the list.\n            \n*/\ndouble sum_elements_divided_by_elements(double[]\
    \ l, int n) \n{\n\tint i;\n\tdouble sum = 0;\n\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0hh1lnb8.d(115): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hh1lnb8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements_double(double[] l) \n{\n\tdouble sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\ndouble product_elements_double(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements_float(float[] l) \n{\n\tfloat sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nfloat product_elements_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8k5umjg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxcdjl31.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_elements(long[] l) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i] * l[i];\n\treturn sum;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i <\
    \ l.length; ++i)\n\t\tsum += l[i] * l[i];\n\treturn sum;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_elements(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i]\
    \ * l[i];\n\treturn sum;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3xbg9fwv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk7ilrj6r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long prod_element(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor (i = 0; i\
    \ < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_sum(long[] l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++)\n\t\tl[i] = abs(l[i]);\n\treturn sum_element(l);\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_prod(long[] l)\
    \ \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\t\
    return prod_element(l);\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_max(long[] l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++)\n\t\tl[i] = abs(l[i]);\n\treturn max_element(l);\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_min(long[] l)\
    \ \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tl[i] = abs(l[i]);\n\t\
    return min_element(l);\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_avg(long[] l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length;\
    \ i++)\n\t\tl[i] = abs(l[i]);\n\treturn sum_element(l) / l.length;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_max(long[]\
    \ l, long x) \n{\n\tlong i;\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_pptyt9r.d(125): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pptyt9r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++) \n\t\tif (l[i] > max) \n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ijoplnp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j97b338.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i =\
    \ 0; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor(i = 0; i < l.length;\
    \ i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_element(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; i++){\n\t\tsum\
    \ += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nlong prod_element(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\
    \tfor(i = 0; i < l.length; i++){\n\t\tprod *= l[i];\n\t}\n\treturn prod;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ abs_element(long[] l) \n{\n\tlong i;\n\tfor(i = 0; i < l.length; i++){\n\t\t\
    l[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element_long(long[] l) \n{\n\tlong\
    \ i;\n\tfor(i = 0; i < l.length; i++){\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_element_int(long[] l) \n{\n\tlong i;\n\tfor(i = 0; i < l.length; i++){\n\
    \t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element_double(long[] l) \n{\n\tlong\
    \ i;\n\tfor(i = 0; i < l.length; i++){\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_element_float(long[] l) \n{\n\tlong i;\n\tfor(i = 0; i < l.length; i++){\n\
    \t\tl[i] = abs(l[i]);\n\t}\n\treturn l;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element_byte(long[] l) \n{\n\tlong\
    \ i;\n\tfor(i = 0; i < l.length; i++){\n\t\tl[i] = abs(l[i]);\n\t}\n\treturn \n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd7g_dzss.d(129): Error: expression expected, not \''unittest\''\n/tmp/tmpd7g_dzss.d(130):
    Error: found \''{\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7g_dzss.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdc4tgi05.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.csort(l);\n\tmax =\
    \ l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax =\
    \ l[i];\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n         \
    \   \n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tstd.csort(l);\n\tmin\
    \ = l[0];\n\tfor(int i = 1; i < l.length; ++i)\n\t\tif(l[i] < min)\n\t\t\tmin\
    \ = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n   \
    \         \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\tfor(int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong prod_array(long[] l) \n{\n\
    \tlong prod = 1;\n\tfor(int i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn\
    \ prod;\n}\n/*\nReturn absolute value of all elements in the list.\n         \
    \   \n*/\nlong abs_array(long[] l) \n{\n\tlong abs = 0;\n\tfor(int i = 0; i <\
    \ l.length; ++i)\n\t\tabs = std.abs(l[i]);\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\ndouble abs_array(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor(int i = 0; i < l.length; ++i)\n\t\tabs = std.abs(l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nfloat abs_array(float[] l) \n{\n\tfloat abs = 0;\n\tfor(int i\
    \ = 0; i < l.length; ++i)\n\t\tabs = std.abs(l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9hnfg1l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l));\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, abs(l));\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float l) \n\
    {\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_hcf90ts.d(114): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_hcf90ts.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs\
    \ = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor\
    \ (i = 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    float abs_element(float[] l) \n{\n\tint i;\n\tfloat abs = 0;\n\tfor (i = 0; i\
    \ < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong long abs_element(long\
    \ long[] l) \n{\n\tint i;\n\tlong long abs = 0;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of\
    \ all elements in the list.\n            \n*/\ndouble abs_element(double[] l,\
    \ int i) \n{\n\tint j;\n\tdouble abs = 0;\n\tfor (j = 0; j < i; j++)\n\t\tabs\
    \ = max(abs, abs(l[j]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nfloat abs_element(float[] l, int i) \n{\n\t\
    int j;\n\tfloat abs = 0;\n\tfor (j = 0; j < i; j++)\n\t\tabs = max(\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg89dh7_9.d(92): Error: no identifier for declarator long\n/tmp/tmpg89dh7_9.d(92):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmpg89dh7_9.d(92): Error:
    semicolon expected following function declaration\n/tmp/tmpg89dh7_9.d(92): Error:
    no identifier for declarator l\n/tmp/tmpg89dh7_9.d(92): Error: Declaration expected,
    not \'')\''\n/tmp/tmpg89dh7_9.d(95): Error: no identifier for declarator long\n/tmp/tmpg89dh7_9.d(96):
    Error: Declaration expected, not \''for\''\n/tmp/tmpg89dh7_9.d(96): Error: no
    identifier for declarator i\n/tmp/tmpg89dh7_9.d(96): Error: Declaration expected,
    not \''<\''\n/tmp/tmpg89dh7_9.d(96): Error: no identifier for declarator i\n/tmp/tmpg89dh7_9.d(96):
    Error: Declaration expected, not \''++\''\n/tmp/tmpg89dh7_9.d(98): Error: Declaration
    expected, not \''return\''\n/tmp/tmpg89dh7_9.d(99): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg89dh7_9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i=1;\
    \ i<l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6od9kdkw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_element(long[] l) \n\
    {\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum\
    \ += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(double[] l) \n{\n\tlong i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\
    \treturn sum;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nlong abs_element(float[] l) \n{\n\tlong i;\n\tlong sum = 0;\n\t\
    for (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nlong\
    \ abs_element(int[] l) \n{\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_element(short[] l)\
    \ \n{\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\t\
    sum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\n\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0zin0ib.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t\ti++;\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i = 0;\n\twhile (i < l.length)\
    \ {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t\ti++;\n\t}\n\treturn min;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_element(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i = 0;\n\twhile (i < l.length) {\n\t\tsum +=\
    \ l[i];\n\t\ti++;\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in\
    \ the list.\n            \n*/\nlong prod_element(long[] l) \n{\n\tlong prod =\
    \ 1;\n\tlong i = 0;\n\twhile (i < l.length) {\n\t\tprod *= l[i];\n\t\ti++;\n\t\
    }\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong i = 0;\n\tlong abs =\
    \ 0;\n\twhile (i < l.length) {\n\t\tabs = abs(l[i]);\n\t\ti++;\n\t}\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tdouble i = 0;\n\tdouble abs = 0;\n\
    \twhile (i < l.length) {\n\t\tabs = abs(l[i]);\n\t\ti++;\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    float abs_element(float[] l) \n{\n\tfloat i = 0;\n\tfloat abs = 0;\n\twhile (i\
    \ < l.length) {\n\t\tabs = abs(l[i]);\n\t\ti++;\n\t}\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwj06wwn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2sdzk6j3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_array(long[] l) \n{\n\tlong sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\nlong prod_array(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\ndouble sum_array(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\ndouble prod_array(double[] l)\
    \ \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\
    \treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_array(float[] l) \n{\n\tfloat sum = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nfloat prod_array(float[] l) \n{\n\tfloat prod\
    \ = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_4ajr75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsfv4_kym.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq0h1u41b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long prod_element(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor (i = 0; i\
    \ < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\ndouble sum_elements(double[] l) \n\
    {\n\tdouble sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\ndouble prod_elements(double[] l) \n{\n\tdouble prod = 1;\n\t\
    long i;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_elements(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nfloat prod_elements(float[] l) \n{\n\tfloat prod = 1;\n\tlong\
    \ i;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyv53qm5k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbb3ikgip.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor(i=1; i<l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor(i=1; i<l.length; i++)\n\t\
    \tif(l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\tsum = 0;\n\tfor(i=0; i<l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long prod_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\tprod = 1;\n\tfor(i=0;\
    \ i<l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor(i=0; i<l.length; i++)\n\t\t\
    abs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\
    \tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor(i=0; i<l.length; i++)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\t\
    float abs;\n\tabs = 0;\n\tfor(i=0; i<l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpus5zr9z5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\
    }\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n          \
    \  \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\t\t\
    }\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n      \
    \      \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\t\
    product *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\t\
    long abs = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_max(long[] l) \n{\n\tlong abs = 0;\n\tfor (int i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tabs = max(abs, abs(l[i]));\n\t}\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_min(long[] l) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++)\
    \ \n\t{\n\t\tabs = min(abs, abs(l[i]));\n\t}\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_sum(long[] l)\
    \ \n{\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs +=\
    \ abs(l[i]);\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_product(long[] l) \n{\n\tlong abs =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tabs *= abs(l[i]);\n\t}\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nlong abs_max(long[] l, long max) \n{\n\tlong abs = 0;\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf39nc836.d(132): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf39nc836.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\
    \tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\t\
    long sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_elements(long[] l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum\
    \ of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product =\
    \ 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_elements(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nfloat product_elements(float[] l) \n{\n\tfloat product = 1;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\n\
    Return sum of all elements in the list.\n            \n*/\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0_3c__6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\
    \treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_element(long[] l) \n{\n\tlong product\
    \ = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\ndouble sum_element_double(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_element_float(float[]\
    \ l) \n{\n\tfloat sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nfloat product_element_float(float[] l) \n{\n\tfloat product = 1;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5ggyktv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = l[i] < 0 ? -l[i] : l[i];\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tabs = l[i] < 0 ? -l[i] : l[i];\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = l[i]\
    \ < 0 ? -l[i] : l[i];\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5twjt5cf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i=1; i<l.length;\
    \ i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvzz67j2u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\
    \tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of\
    \ all elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\
    \tlong sum = 0;\n\tlong i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\nlong product_element(long[] l) \n{\n\tlong product = 1;\n\tlong\
    \ i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    double sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tdouble i;\n\tfor(i =\
    \ 0; i < l.length; ++i)\n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tdouble i;\n\tfor(i = 0; i < l.length; ++i)\n\
    \t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum\
    \ = 0;\n\tfloat i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\tsum += l[i];\n\t\
    }\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n       \
    \     \n*/\nfloat product_elements(float[] l) \n{\n\tfloat product = 1;\n\tfloat\
    \ i;\n\tfor(i = 0; i < l.length; ++i)\n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvuv8oc0b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = 0;\n\tfor(i =\
    \ 0; i < l.length; i++) \n\t{\n\t\tif(l[i] > max) \n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tint i;\n\tlong min = 0;\n\tfor(i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tif(l[i] < min) \n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\
    \tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\tlong\
    \ product = 1;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t\
    }\n\treturn product;\n}\n/*\nReturn sum of all elements in the list that are less\
    \ than the given value.\n            \n*/\nlong sum_less_than(long[] l, long value)\
    \ \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\t\
    if(l[i] < value) \n\t\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list that are less than the given value.\n          \
    \  \n*/\nlong product_less_than(long[] l, long value) \n{\n\tint i;\n\tlong product\
    \ = 1;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i] < value) \n\t\t\tproduct\
    \ *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list\
    \ that are greater than the given value.\n            \n*/\nlong sum_greater_than(long[]\
    \ l, long value) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < l.length; i++)\
    \ \n\t{\n\t\tif(l[i] > value) \n\t\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list that are greater than the given value.\n\
    \            \n*/\nlong product_greater_than(long[] l, long value) \n{\n\tint\
    \ i;\n\tlong product = 1;\n\tfor(i = 0; i < l.length; i++) \n\t{\n\t\tif(l[i]\
    \ > value) \n\t\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum\
    \ of all elements in the list that are equal to the given value.\n           \
    \ \n*/\nlong sum_equal(long\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwu_9v9w3.d(125): Error: found \''unittest\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwu_9v9w3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max_el = l[0];\n\tfor(i=1;\
    \ i<l.length; i++)\n\t\tif(l[i] > max_el)\n\t\t\tmax_el = l[i];\n\treturn max_el;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd__wjnu2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0mf3alqn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn max;\n}\n/*\nReturn\
    \ minimum element in the list.\n            \n*/\nlong min_element(long[] l) \n\
    {\n\tlong min = 0;\n\tlong i;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tif(l[i] < min)\n\
    \t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\t\
    long i;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tprod\
    \ *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_elements(long[] l) \n{\n\tlong i;\n\
    \tlong abs = 0;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tabs = abs(l[i]);\n\t}\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_max(long[] l) \n{\n\tlong i;\n\tlong abs = 0;\n\tfor(i=0;i<l.length;i++)\n\
    \t{\n\t\tif(l[i] > abs)\n\t\t\tabs = l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_min(long[]\
    \ l) \n{\n\tlong i;\n\tlong abs = 0;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tif(l[i]\
    \ < abs)\n\t\t\tabs = l[i];\n\t}\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_sum(long[] l) \n{\n\
    \tlong i;\n\tlong abs = 0;\n\tfor(i=0;i<l.length;i++)\n\t{\n\t\tabs += l[i];\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_product(long[] l) \n{\n\tlong i;\n\tlong abs = 0;\n\
    \tfor(i=0;i<l.length;i++)\n\t{\n\t\tabs *= l[i];\n\t}\n\treturn abs;\n}\n/*\n\
    Return absolute \nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6udzqrre.d(132): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6udzqrre.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2sdzk6j3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14rf3qn0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t\tif (l[i] > max) \n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; i++) \n\t\
    \tif (l[i] < min) \n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\t\
    long sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nlong product_elements(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t\tproduct *= l[i];\n\treturn product;\n}\n\
    /*\nReturn sum of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product =\
    \ 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor (i = 0;\
    \ i < l.length; i++) \n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\
    \t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list.\n            \n*/\nlong sum_elements(short[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_elements(short[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i\
    \ = 0; i < l.length; i++) \n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\n\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmw1gys6g.d(124): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmw1gys6g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; ++i)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3f1mmkax.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhbu64jp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; ++i)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_elements(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i\
    \ = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product =\
    \ 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor (i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\
    \tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj2hwq74f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tfor(i = 0; i\
    \ < (int)(l.length / 2); ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tfor(i = 0; i < (int)(l.length\
    \ / 2); ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor(i = 0; i < (int)(l.length / 2); ++i)\n\
    \t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\
    \tlong product = 1;\n\tfor(i = 0; i < (int)(l.length / 2); ++i)\n\t{\n\t\tproduct\
    \ *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_elements(long[] l) \n{\n\tint i;\n\t\
    long abs = 0;\n\tfor(i = 0; i < (int)(l.length / 2); ++i)\n\t{\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\ndouble abs_elements(double[] l) \n{\n\tint i;\n\tdouble abs\
    \ = 0;\n\tfor(i = 0; i < (int)(l.length / 2); ++i)\n\t{\n\t\tabs = abs(l[i]);\n\
    \t}\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_elements(float[] l) \n{\n\tint i;\n\tfloat abs =\
    \ 0;\n\tfor(i = 0; i < (int)(l.length / 2); ++i)\n\t{\n\t\tabs = abs(l[i]);\n\t\
    }\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_elements(long l) \n{\n\tint i;\n\tlong abs = 0;\n\t\
    for(i = 0; i < (int)(l.length / 2); ++i)\n\t{\n\t\tabs = abs(l[i]);\n\t}\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the \nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdxyh56qn.d(10): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(25): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(40): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(54): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(68): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(82): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(96): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(110): Error: C style cast illegal, use cast(int)(l.length
    / 2)\n/tmp/tmpdxyh56qn.d(116): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpdxyh56qn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2wz_xbn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnh7755n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_ch3rlr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\
    \tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\t\
    long sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_elements(long[] l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_elements(long[]\
    \ l) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_elements(long[] l, long max) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_elements(long[] l, long min, long max) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nlong abs_elements(long[]\
    \ l, long min, long max, long step) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_elements(long[]\
    \ l, long min, long max, long step, long scale) \n{\n\tlong abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nlong abs_elements(long[]\
    \ l, long min, long max, long step, long scale, long offset) \n{\n\tlong abs =\
    \ 0;\n\t\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp831wozie.d(113): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp831wozie.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\ndouble sum_element_double(double[] l) \n{\n\t\
    double sum = 0;\n\tdouble i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum\
    \ += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tdouble i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\
    \t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\tfloat\
    \ i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    float product_element_float(float[] l) \n{\n\tfloat product = 1;\n\tfloat i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcpx4_fd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; ++i)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\t\
    return sum;\n}\n/*\nReturn product of all elements in the list.\n            \n\
    */\nlong prod_element(long[] l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0;\
    \ i < l.length; ++i)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tint i;\n\tlong abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs\
    \ = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\
    \tdouble abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa4657_z5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n\
    /*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_max(long[] l) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_min(long[] l) \n{\n\tlong\
    \ abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = min(abs, l[i]);\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_sum(long[] l) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tabs += l[i];\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_product(long[] l) \n\
    {\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs *= l[i];\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nlong abs_max(long[] l) \n{\n\tlong abs = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nlong abs_min(long[] l)\
    \ \n{\n\tlong abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa4p7z_yn.d(123): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa4p7z_yn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\t\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n\
    \            \n*/\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\t\n\
    \tmin = l[0];\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\
    \t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum;\n\t\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum +=\
    \ l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nlong prod_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\t\
    \n\tprod = 1;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tprod *= l[i];\n\t}\n\
    \treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\ndouble sum_elements(double[] l) \n{\n\tint i;\n\tdouble sum;\n\t\n\tsum =\
    \ 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    double prod_elements(double[] l) \n{\n\tint i;\n\tdouble prod;\n\t\n\tprod = 1;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tprod *= l[i];\n\t}\n\treturn prod;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nfloat sum_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat sum;\n\t\n\tsum = 0;\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all\
    \ elements in the list.\n            \n*/\nfloat prod_elements(float[] l) \n{\n\
    \tint i;\n\tfloat prod;\n\t\n\tprod = 1;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tprod *= l[i];\n\t}\n\treturn prod;\n}\n/*\nReturn sum of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpna7wp45l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i;\n\tfor (i\
    \ = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = 0;\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n  \
    \          \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble\
    \ sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\
    \t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n     \
    \       \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product = 1;\n\
    \tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t}\n\
    \treturn product;\n}\n/*\nReturn sum of all elements in the list.\n          \
    \  \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\
    \t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyb_hotjt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\
    \treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_elements(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tlong\
    \ product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\t\
    return product;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpin2eqzwt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i =\
    \ 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0v51hgg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; ++i)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_element(long[] l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i =\
    \ 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list.\n            \n*/\ndouble sum_element_double(double[]\
    \ l) \n{\n\tdouble sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\tproduct *= l[i];\n\t\
    return product;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product\
    \ of all elements in the list.\n            \n*/\nfloat product_element_float(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; ++i)\n\t\
    \tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpga6ppes3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tlong i;\n\tfor(i = 0;\
    \ i < (long)l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong\
    \ min_element(long[] l) \n{\n\tlong min;\n\tlong i;\n\tfor(i = 0; i < (long)l.length;\
    \ i++)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn min;\n}\n/*\n\
    Return sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tlong sum = 0;\n\tlong i;\n\tfor(i = 0; i < (long)l.length; i++)\n\t\
    {\n\t\tsum += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements\
    \ in the list.\n            \n*/\nlong product_elements(long[] l) \n{\n\tlong\
    \ product = 1;\n\tlong i;\n\tfor(i = 0; i < (long)l.length; i++)\n\t{\n\t\tproduct\
    \ *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    double i;\n\tfor(i = 0; i < (double)l.length; i++)\n\t{\n\t\tsum += l[i];\n\t\
    }\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n       \
    \     \n*/\ndouble product_elements(double[] l) \n{\n\tdouble product = 1;\n\t\
    double i;\n\tfor(i = 0; i < (double)l.length; i++)\n\t{\n\t\tproduct *= l[i];\n\
    \t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfloat i;\n\
    \tfor(i = 0; i < (float)l.length; i++)\n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfloat i;\n\tfor(i = 0; i < (float)l.length;\
    \ i++)\n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of\
    \ all elements in the list.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph34tz4bt.d(10): Error: C style cast illegal, use cast(long)l.length\n/tmp/tmph34tz4bt.d(25):
    Error: C style cast illegal, use cast(long)l.length\n/tmp/tmph34tz4bt.d(40): Error:
    C style cast illegal, use cast(long)l.length\n/tmp/tmph34tz4bt.d(54): Error: C
    style cast illegal, use cast(long)l.length\n/tmp/tmph34tz4bt.d(68): Error: C style
    cast illegal, use cast(double)l.length\n/tmp/tmph34tz4bt.d(82): Error: C style
    cast illegal, use cast(double)l.length\n/tmp/tmph34tz4bt.d(96): Error: C style
    cast illegal, use cast(float)l.length\n/tmp/tmph34tz4bt.d(110): Error: C style
    cast illegal, use cast(float)l.length\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmph34tz4bt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\ndouble sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\t\
    for (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\ndouble product_elements(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nfloat sum_elements(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tfloat product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdc4tgi05.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tmax = l[0];\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min;\n\tmin = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\
    \tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    long sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    long product_element(long[] l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\t\
    long abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = abs(l[i]);\n\t\
    return abs;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tabs = abs(l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tabs = abs(l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl9t7cz6d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float[] l)\
    \ \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp041i289u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor(i\
    \ = 1; i < l.length; i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8iktk7w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; i++)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\t\
    int i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\tlong prod;\n\
    \tprod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_elements(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor (i =\
    \ 0; i < l.length; i++)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\ndouble abs_elements(double[]\
    \ l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of\
    \ all elements in the list.\n            \n*/\nfloat abs_elements(float[] l) \n\
    {\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    abs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpanxfbra3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i = 1;\
    \ i < l.length; i++) \n\t{\n\t\tif(l[i] > max) \n\t\t\tmax = l[i];\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg13088m1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor(int i=1; i<l.length;\
    \ i++)\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n}\n/*\nReturn minimum\
    \ element in the list.\n            \n*/\nlong min_element(long[] l) \n{\n\tlong\
    \ min = l[0];\n\tfor(int i=1; i<l.length; i++)\n\t\tif(l[i] < min)\n\t\t\tmin\
    \ = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n   \
    \         \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum = 0;\n\tfor(int i=0;\
    \ i<l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong product_elements(long[] l)\
    \ \n{\n\tlong product = 1;\n\tfor(int i=0; i<l.length; i++)\n\t\tproduct *= l[i];\n\
    \treturn product;\n}\n/*\nReturn sum of all elements in the list with specified\
    \ type.\n            \n*/\nlong sum_elements(long[] l, long type) \n{\n\tlong\
    \ sum = 0;\n\tfor(int i=0; i<l.length; i++)\n\t\tif(l[i] == type)\n\t\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list with\
    \ specified type.\n            \n*/\nlong product_elements(long[] l, long type)\
    \ \n{\n\tlong product = 1;\n\tfor(int i=0; i<l.length; i++)\n\t\tif(l[i] == type)\n\
    \t\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list with specified type.\n            \n*/\ndouble sum_elements(double[]\
    \ l, double type) \n{\n\tdouble sum = 0;\n\tfor(int i=0; i<l.length; i++)\n\t\t\
    if(l[i] == type)\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list with specified type.\n            \n*/\ndouble product_elements(double[]\
    \ l, double type) \n{\n\tdouble product = 1;\n\tfor(int i=0; i<l.length; i++)\n\
    \t\tif(l[i] == type)\n\t\t\tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn\
    \ sum of all elements in the list with specified type.\n            \n*/\nfloat\
    \ sum_elements(float[] l, float type) \n{\n\tfloat sum = 0;\n\tfor(int i=0; i<l.length;\
    \ i++)\n\t\tif(l[i] == type)\n\t\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list with specified type.\n            \n*/\n\
    float product_elements(float[] l, float type) \n{\n\tfloat product = 1;\n\tfor(int\
    \ i=0; i<l.length; i++)\n\t\tif(\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_n8_9bi8.d(117): Error: expression expected, not \''unittest\''\n/tmp/tmp_n8_9bi8.d(118):
    Error: found \''{\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp_n8_9bi8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tlong i;\n\tfor(i = 0;\
    \ i < (long)l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\t\
    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf2jwkef3.d(10): Error: C style cast illegal, use cast(long)l.length\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf2jwkef3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = 0;\n\tlong i = 0;\n\twhile\
    \ (i < l.length) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\ti++;\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nwj4lq0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list with\
    \ specified type.\n            \n*/\nlong sum_elements(long[] l, int type) \n\
    {\n\tlong sum = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tif (type == 0)\n\
    \t\t\tsum += l[i];\n\t\telse if (type == 1)\n\t\t\tsum += l[i] * l[i];\n\t\telse\
    \ if (type == 2)\n\t\t\tsum += l[i] * l[i] * l[i];\n\t\telse if (type == 3)\n\t\
    \t\tsum += l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 4)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 5)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 6)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 7)\n\t\t\tsum += l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 8)\n\
    \t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\
    \telse if (type == 9)\n\t\t\tsum += l[i] * l[i] * l[i] * l[i] * l[i] * l[i] *\
    \ l[i] * l[i] * l[i] * l[i];\n\t\telse if (type == 10)\n\t\t\tsum += l[i] * l[i]\
    \ * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i] * l[i];\n\t\telse if\
    \ (type == 11)\n\t\t\tsum += l[i]\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5as3bc79.d(80): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmp5as3bc79.d(87): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5as3bc79.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max_el = l[0];\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max_el)\n\t\t\tmax_el = l[i];\n\t\
    return max_el;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min_el = l[0];\n\tfor (i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] < min_el)\n\t\t\tmin_el = l[i];\n\treturn min_el;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong sum_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum\
    \ += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\nlong product_elements(long[] l) \n{\n\tint i;\n\tlong product\
    \ = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\ndouble sum_elements(double[]\
    \ l) \n{\n\tint i;\n\tdouble sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\t\
    sum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_elements(double[] l) \n{\n\tint i;\n\tdouble\
    \ product = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    float sum_elements(float[] l) \n{\n\tint i;\n\tfloat sum = 0;\n\tfor (i = 0; i\
    \ < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nfloat product_elements(float[]\
    \ l) \n{\n\tint i;\n\tfloat product = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\
    \tproduct *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpygqozz35.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum =\
    \ 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tlong abs = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tdouble abs = 0;\n\tfor (int i =\
    \ 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat abs = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tabs = max(abs,\
    \ abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0v51hgg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; i++)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\nlong prod_element(long[] l) \n{\n\tint i;\n\tlong prod;\n\t\
    prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod *= l[i];\n\treturn prod;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    long abs_element(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\tfor (i =\
    \ 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double[]\
    \ l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nfloat abs_element(float[] l) \n{\n\t\
    int i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tabs =\
    \ max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl4e9ot8m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9tyb5aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\tstd.sort(l);\n\tmax =\
    \ l[0];\n\tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i] > max) {\n\t\t\t\
    max = l[i];\n\t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pjru73y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max_val = l[0];\n\t\
    for (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max_val)\n\t\t\tmax_val = l[i];\n\
    \treturn max_val;\n}\n/*\nReturn minimum element in the list.\n            \n\
    */\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min_val = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i)\n\t\tif (l[i] < min_val)\n\t\t\tmin_val = l[i];\n\t\
    return min_val;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nlong sum_element(long[] l) \n{\n\tint i;\n\tlong sum = 0;\n\tfor (i = 0; i\
    \ < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong prod_element(long[] l) \n\
    {\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\
    \treturn prod;\n}\n/*\nReturn absolute value of all elements in the list.\n  \
    \          \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs = 0;\n\t\
    for (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor (i = 0;\
    \ i < l.length; ++i)\n\t\tabs = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs\
    \ = max(abs, abs(l[i]));\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long l) \n{\n\treturn abs(l);\n\
    }\n/*\nReturn absolute value of all elements in the list.\n            \n*/\n\
    double abs_element(double l) \n{\n\treturn abs(l);\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nfloat abs_element(float l) \n\
    {\n\treturn abs(l);\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nlong abs_element(long l) \n{\n\treturn abs(l);\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\ndouble abs_element(double\
    \ l) \n{\n\treturn abs(l);\n}\n/*\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgyxqyr2z.d(128): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgyxqyr2z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; ++i) {\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\t\
    }\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\n\
    long min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i\
    \ = 1; i < l.length; ++i) {\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\treturn\
    \ min;\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\nlong\
    \ sum_element(long[] l) \n{\n\tint i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of\
    \ all elements in the list.\n            \n*/\nlong product_element(long[] l)\
    \ \n{\n\tint i;\n\tlong prod;\n\tprod = 1;\n\tfor (i = 0; i < l.length; ++i)\n\
    \t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\t\
    long abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\
    \treturn abs;\n}\n/*\nReturn absolute value of all elements in the list.\n   \
    \         \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs;\n\t\
    abs = 0;\n\tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nfloat abs_element(float[] l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\
    \tfor (i = 0; i < l.length; ++i)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7wbjvyn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn absolute value\
    \ of all elements in the list.\n            \n*/\nlong abs_element(long[] l) \n\
    {\n\tlong i;\n\tlong sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum\
    \ += l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn absolute value of all elements in\
    \ the list.\n            \n*/\ndouble abs_element(double[] l) \n{\n\tdouble i;\n\
    \tdouble sum = 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t\
    }\n\treturn sum;\n}\n/*\nReturn absolute value of all elements in the list.\n\
    \            \n*/\nfloat abs_element(float[] l) \n{\n\tfloat i;\n\tfloat sum =\
    \ 0;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprxns2e2n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t\tif (l[i] > max) \n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong i;\n\tfor (i = 1; i < l.length; i++) \n\t\
    \tif (l[i] < min) \n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    long sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\tsum += l[i];\n\
    \treturn sum;\n}\n/*\nReturn product of all elements in the list.\n          \
    \  \n*/\nlong product_element(long[] l) \n{\n\tlong prod = 1;\n\tlong i;\n\tfor\
    \ (i = 0; i < l.length; i++) \n\t\tprod *= l[i];\n\treturn prod;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nlong abs_element(long[]\
    \ l) \n{\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\ndouble abs_element(double[] l) \n{\n\tdouble i;\n\tfor (i = 0; i\
    \ < l.length; i++) \n\t\tl[i] = abs(l[i]);\n\treturn l;\n}\n/*\nReturn absolute\
    \ value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tfloat i;\n\tfor (i = 0; i < l.length; i++) \n\t\tl[i] = abs(l[i]);\n\
    \treturn l;\n}\n/*\nReturn absolute value of all elements in the list.\n     \
    \       \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5prrj8n9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n      \
    \      \n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\tlong i;\n\t\
    for (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n\
    \            \n*/\nlong sum_element(long[] l) \n{\n\tlong sum = 0;\n\tlong i;\n\
    \tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_element(long[]\
    \ l) \n{\n\tlong product = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t\
    {\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\ndouble sum_element_double(double[] l) \n{\n\t\
    double sum = 0;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum +=\
    \ l[i];\n\t}\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n\
    \            \n*/\ndouble product_element_double(double[] l) \n{\n\tdouble product\
    \ = 1;\n\tlong i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\
    \t}\n\treturn product;\n}\n/*\nReturn sum of all elements in the list.\n     \
    \       \n*/\nfloat sum_element_float(float[] l) \n{\n\tfloat sum = 0;\n\tlong\
    \ i;\n\tfor (i = 0; i < l.length; i++) \n\t{\n\t\tsum += l[i];\n\t}\n\treturn\
    \ sum;\n}\n/*\nReturn product of all elements in the list.\n            \n*/\n\
    float product_element_float(float[] l) \n{\n\tfloat product = 1;\n\tlong i;\n\t\
    for (i = 0; i < l.length; i++) \n\t{\n\t\tproduct *= l[i];\n\t}\n\treturn product;\n\
    }\n/*\nReturn sum of all elements in the list.\n            \n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcal7xnch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_ch3rlr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\tmax = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; i++)\n\
    \t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all\
    \ elements in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\t\
    int i;\n\tlong sum;\n\tsum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i];\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n \
    \           \n*/\nlong product_element(long[] l) \n{\n\tint i;\n\tlong product;\n\
    \tproduct = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tproduct *= l[i];\n\treturn\
    \ product;\n}\n/*\nReturn absolute value of all elements in the list.\n      \
    \      \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs;\n\tabs = 0;\n\
    \tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n\
    /*\nReturn absolute value of all elements in the list.\n            \n*/\ndouble\
    \ abs_element(double[] l) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i =\
    \ 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn\
    \ absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nlong long abs_element(long long[] l)\
    \ \n{\n\tint i;\n\tlong long abs;\n\tabs = 0;\n\tfor (i = 0; i < l.length; i++)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\ndouble abs_element(double[] l, int\
    \ size) \n{\n\tint i;\n\tdouble abs;\n\tabs = 0;\n\tfor (i = 0; i < size; i++)\n\
    \t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all\
    \ elements in the list.\n            \n*/\nfloat abs_element(float[] \nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvvqz3u8y.d(99): Error: no identifier for declarator long\n/tmp/tmpvvqz3u8y.d(99):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmpvvqz3u8y.d(99): Error:
    semicolon expected following function declaration\n/tmp/tmpvvqz3u8y.d(99): Error:
    no identifier for declarator l\n/tmp/tmpvvqz3u8y.d(99): Error: Declaration expected,
    not \'')\''\n/tmp/tmpvvqz3u8y.d(102): Error: no identifier for declarator long\n/tmp/tmpvvqz3u8y.d(103):
    Error: no identifier for declarator abs\n/tmp/tmpvvqz3u8y.d(103): Error: Declaration
    expected, not \''=\''\n/tmp/tmpvvqz3u8y.d(104): Error: Declaration expected, not
    \''for\''\n/tmp/tmpvvqz3u8y.d(104): Error: no identifier for declarator i\n/tmp/tmpvvqz3u8y.d(104):
    Error: Declaration expected, not \''<\''\n/tmp/tmpvvqz3u8y.d(104): Error: no identifier
    for declarator i\n/tmp/tmpvvqz3u8y.d(104): Error: Declaration expected, not \''++\''\n/tmp/tmpvvqz3u8y.d(106):
    Error: Declaration expected, not \''return\''\n/tmp/tmpvvqz3u8y.d(107): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvvqz3u8y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i];\n\treturn product;\n}\n/*\nReturn sum of all elements in the list divided\
    \ by number of elements in the list.\n            \n*/\ndouble sum_elements_divided_by_length(long[]\
    \ l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum +=\
    \ l[i] / l.length;\n\treturn sum;\n}\n/*\nReturn product of all elements in the\
    \ list divided by number of elements in the list.\n            \n*/\ndouble product_elements_divided_by_length(long[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i] / l.length;\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list divided by number of elements in the list.\n            \n*/\ndouble\
    \ sum_elements_divided_by_length(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tsum += l[i] / l.length;\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list divided by number of elements in the\
    \ list.\n            \n*/\ndouble product_elements_divided_by_length(double[]\
    \ l) \n{\n\tdouble product = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t\tproduct\
    \ *= l[i] / l.length;\n\treturn product;\n}\n/*\nReturn sum of all elements in\
    \ the list divided by number of elements in the list.\n            \n*/\ndouble\
    \ sum_elements_divided_by_length(float[] l) \n{\n\tdouble sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t\tsum += l[i] / l.length;\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list divided by number of elements in the\
    \ list.\n            \n*/\ndouble product_elements_divided_by_length\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu4pvwgbf.d(108): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu4pvwgbf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max;\n\t\n\tmax = l[0];\n\
    \tfor(i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\t}\n\
    \t\n\treturn max;\n}\n/*\nReturn minimum element in the list.\n            \n\
    */\nlong min_element(long[] l) \n{\n\tint i;\n\tlong min;\n\t\n\tmin = l[0];\n\
    \tfor(i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\
    \t\n\treturn min;\n}\n/*\nReturn sum of all elements in the list.\n          \
    \  \n*/\nlong sum_elements(long[] l) \n{\n\tint i;\n\tlong sum;\n\t\n\tsum = 0;\n\
    \tfor(i=1; i<l.length; i++)\n\t\tsum += l[i];\n\t\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tint i;\n\tlong prod;\n\t\n\tprod = 1;\n\tfor(i=1; i<l.length; i++)\n\
    \t\tprod *= l[i];\n\t\n\treturn prod;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\ndouble sum_elements_double(double[] l) \n{\n\tint i;\n\
    \tdouble sum;\n\t\n\tsum = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tsum += l[i];\n\
    \t\n\treturn sum;\n}\n/*\nReturn product of all elements in the list.\n      \
    \      \n*/\ndouble product_elements_double(double[] l) \n{\n\tint i;\n\tdouble\
    \ prod;\n\t\n\tprod = 1;\n\tfor(i=1; i<l.length; i++)\n\t\tprod *= l[i];\n\t\n\
    \treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n            \n\
    */\nfloat sum_elements_float(float[] l) \n{\n\tint i;\n\tfloat sum;\n\t\n\tsum\
    \ = 0;\n\tfor(i=1; i<l.length; i++)\n\t\tsum += l[i];\n\t\n\treturn sum;\n}\n\
    /*\nReturn product of all elements in the list.\n            \n*/\nfloat product_elements_float(float[]\
    \ l) \n{\n\tint i;\n\tfloat prod;\n\t\n\tprod = 1;\n\tfor(i=1; i<l.length; i++)\n\
    \t\tprod *= l[i];\n\t\n\treturn prod;\n}\n/*\nReturn sum of all elements in the\
    \ list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_x71a7as.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tint i;\n\tlong max = l[0];\n\tfor (i\
    \ = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tint i;\n\tlong min = l[0];\n\tfor (i = 1; i < l.length; i++)\n\t\t\
    if (l[i] < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_element(long[] l) \n{\n\tint i;\n\t\
    long sum = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong prod_element(long[]\
    \ l) \n{\n\tint i;\n\tlong prod = 1;\n\tfor (i = 0; i < l.length; i++)\n\t\tprod\
    \ *= l[i];\n\treturn prod;\n}\n/*\nReturn absolute value of all elements in the\
    \ list.\n            \n*/\nlong abs_element(long[] l) \n{\n\tint i;\n\tlong abs\
    \ = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn\
    \ abs;\n}\n/*\nReturn absolute value of all elements in the list.\n          \
    \  \n*/\ndouble abs_element(double[] l) \n{\n\tint i;\n\tdouble abs = 0;\n\tfor\
    \ (i = 0; i < l.length; i++)\n\t\tabs = max(abs, l[i]);\n\treturn abs;\n}\n/*\n\
    Return absolute value of all elements in the list.\n            \n*/\nfloat abs_element(float[]\
    \ l) \n{\n\tint i;\n\tfloat abs = 0;\n\tfor (i = 0; i < l.length; i++)\n\t\tabs\
    \ = max(abs, l[i]);\n\treturn abs;\n}\n/*\nReturn absolute value of all elements\
    \ in the list.\n            \n*/\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8vix75jk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmy7rcfk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tlong i;\n\tfor\
    \ (i = 1; i < l.length; i++)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxufep7ea.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977712
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\ndouble sum_elements_double(double[] l) \n{\n\tdouble sum = 0;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\n\
    Return product of all elements in the list.\n            \n*/\ndouble product_elements_double(double[]\
    \ l) \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nfloat sum_elements_float(float[] l) \n{\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn\
    \ product of all elements in the list.\n            \n*/\nfloat product_elements_float(float[]\
    \ l) \n{\n\tfloat prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn sum of all elements in the list.\n    \
    \        \n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvhwfqdq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the list.\n          \
    \  \n*/\nlong max_element(long[] l) \n{\n\tlong max = l[0];\n\tfor (int i = 1;\
    \ i < l.length; ++i)\n\t\tif (l[i] > max)\n\t\t\tmax = l[i];\n\treturn max;\n\
    }\n/*\nReturn minimum element in the list.\n            \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length; ++i)\n\t\tif (l[i]\
    \ < min)\n\t\t\tmin = l[i];\n\treturn min;\n}\n/*\nReturn sum of all elements\
    \ in the list.\n            \n*/\nlong sum_elements(long[] l) \n{\n\tlong sum\
    \ = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n\
    }\n/*\nReturn product of all elements in the list.\n            \n*/\nlong product_elements(long[]\
    \ l) \n{\n\tlong prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *=\
    \ l[i];\n\treturn prod;\n}\n/*\nReturn mean of all elements in the list.\n   \
    \         \n*/\ndouble mean_elements(long[] l) \n{\n\tlong sum = 0;\n\tfor (int\
    \ i = 0; i < l.length; ++i)\n\t\tsum += l[i];\n\treturn (double)sum / l.length;\n\
    }\n/*\nReturn standard deviation of all elements in the list.\n            \n\
    */\ndouble std_dev_elements(long[] l) \n{\n\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn (double)Math.sqrt((double)l.length\
    \ / sum);\n}\n/*\nReturn sum of all elements in the list.\n            \n*/\n\
    double sum_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0; i <\
    \ l.length; ++i)\n\t\tsum += l[i];\n\treturn sum;\n}\n/*\nReturn product of all\
    \ elements in the list.\n            \n*/\ndouble product_elements(double[] l)\
    \ \n{\n\tdouble prod = 1;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tprod *= l[i];\n\
    \treturn prod;\n}\n/*\nReturn mean of all elements in the list.\n            \n\
    */\ndouble mean_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn (double)sum / l.length;\n}\n\
    /*\nReturn standard deviation of all elements in the list.\n            \n*/\n\
    double std_dev_elements(double[] l) \n{\n\tdouble sum = 0;\n\tfor (int i = 0;\
    \ i < l.length; ++i)\n\t\tsum += l[i];\n\treturn (double)Math.sqrt((double)l.length\
    \ / sum);\n}\n/*\n\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8_lw2zv5.d(57): Error: C style cast illegal, use cast(double)sum\n/tmp/tmp8_lw2zv5.d(68):
    Error: C style cast illegal, use cast(double)l.length\n/tmp/tmp8_lw2zv5.d(68):
    Error: C style cast illegal, use cast(double)Math.sqrt(cast(double)l.length /
    sum)\n/tmp/tmp8_lw2zv5.d(101): Error: C style cast illegal, use cast(double)sum\n/tmp/tmp8_lw2zv5.d(112):
    Error: C style cast illegal, use cast(double)l.length\n/tmp/tmp8_lw2zv5.d(112):
    Error: C style cast illegal, use cast(double)Math.sqrt(cast(double)l.length /
    sum)\n/tmp/tmp8_lw2zv5.d(114): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8_lw2zv5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977713

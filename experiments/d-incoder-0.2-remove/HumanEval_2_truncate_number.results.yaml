language: d
name: HumanEval_2_truncate_number
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = trunc(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hlsan5d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number;\n    float integerPart = number;\n\
    \    float remainder = 0;\n    \n    while(integerPart > 0)\n    {\n        remainder\
    \ = integerPart % 10;\n        integerPart = integerPart / 10;\n        decimals\
    \ = decimals * 10 + remainder;\n    }\n    \n    return decimals;\n}\n/*\n Given\
    \ a positive floating point number, it can be decomposed into\n    and integer\
    \ part (largest integer smaller than given number) and decimals\n    (leftover\
    \ part always smaller than 1).\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplbry3tj5.d(26): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplbry3tj5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fractionalPart;\n    float integerPart;\n    \n    fractionalPart\
    \ = number - trunc(number);\n    integerPart = trunc(number);\n    \n    return\
    \ fractionalPart + integerPart;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5uhhj9j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpom5pdohs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    float result;\n    float temp;\n    int exponent;\n    int decimal_point;\n\
    \    int decimal_point_position;\n    int decimal_point_position2;\n    int decimal_point_position3;\n\
    \    int decimal_point_position4;\n    int decimal_point_position5;\n    int decimal_point_position6;\n\
    \    int decimal_point_position7;\n    int decimal_point_position8;\n    int decimal_point_position9;\n\
    \    int decimal_point_position10;\n    int decimal_point_position11;\n    int\
    \ decimal_point_position12;\n    int decimal_point_position13;\n    int decimal_point_position14;\n\
    \    int decimal_point_position15;\n    int decimal_point_position16;\n    int\
    \ decimal_point_position17;\n    int decimal_point_position18;\n    int decimal_point_position19;\n\
    \    int decimal_point_position20;\n    int decimal_point_position21;\n    int\
    \ decimal_point_position22;\n    int decimal_point_position23;\n    int decimal_point_position24;\n\
    \    int decimal_point_position25;\n    int decimal_point_position26;\n    int\
    \ decimal_point_position27;\n    int decimal_point_position28;\n    int decimal_point_position29;\n\
    \    int decimal_point_position30;\n    int decimal_point_position31;\n    int\
    \ decimal_point_position32;\n    int decimal_point_position33;\n    int decimal_point_position34;\n\
    \    int decimal_point_position35;\n    int decimal_point_position36;\n    int\
    \ decimal_point_position37;\n    int decimal_point_position38;\n    int decimal_point_position39;\n\
    \    int decimal_point_position40;\n    int decimal_point_position41;\n    int\
    \ decimal_point_position42;\n    int decimal_point_position43;\n    int decimal_point_position44;\n\
    \    int decimal_point_position45;\n    int decimal_point_position46;\n    int\
    \ decimal_point_position47;\n    int decimal_point_position48;\n    int decimal_point_position49;\n\
    \    int decimal_point_position50;\n    int decimal_point_position51;\n    int\
    \ decimal_point_position52;\n    int decimal_point_position53;\n    int decimal_point_position54;\n\
    \    int decimal_point_position55;\n    int decimal_point_position56;\n    int\
    \ decimal_point_position57;\n    int decimal_point_position58;\n    int decimal_point_position59;\n\
    \    int decimal_point_position60;\n    int decimal_point_position61;\n    int\
    \ decimal_point_position62;\n    int decimal_point_position63;\n    int decimal_point_position64;\n\
    \    int decimal_point_position65;\n    int decimal_point_position66;\n    int\
    \ decimal_point_position67;\n    int decimal_point_position68;\n    int decimal_point_position69;\n\
    \    int decimal_point_position70;\n    int decimal_point_position7\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphm8bbxhy.d(91): Error: semicolon expected, not \''unittest\''\n/tmp/tmphm8bbxhy.d(91):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmphm8bbxhy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    int int_part = 0;\n    float\
    \ decimal_part = 0.0;\n    \n    while(trunc_number >= 1)\n    {\n        trunc_number\
    \ = trunc_number / 10.0;\n        int_part++;\n    }\n    \n    decimal_part =\
    \ trunc_number - int_part;\n    \n    return decimal_part;\n}\nunittest\n{\n \
    \   alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph6nwm0i8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integerPart = 0.0;\n    \n\
    \    while(number > 0.0)\n    {\n        float remainder = number % 1.0f;\n  \
    \      \n        decimals += remainder;\n        integerPart += remainder;\n \
    \       \n        number = number / 1.0f;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoz60i8pu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number / float.pow(2, 32);\n    decimalPart = number\
    \ - integerPart * float.pow(2, 32);\n    \n    return decimalPart;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3o68p2x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    \n    quotient = number / 10.0;\n    remainder = number\
    \ % 10.0;\n    \n    decimals = remainder;\n    \n    return quotient + decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0dqp4syj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    \n  \
    \  return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpka9cm8a1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimals;\n    int integerPart;\n\
    \    \n    integerPart = int(number);\n    \n    remainder = number - integerPart;\n\
    \    \n    decimals = remainder * pow(10.0, -integerPart);\n    \n    return decimals;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=c++,floating-point,truncate |>\n<code>\n\
    float truncate_number(float number) \n{\n    float remainder;\n    float decimals;\n\
    \    int integerPart;\n    \n    integerPart = int(number);\n    \n    remainder\
    \ = number - integerPart;\n    \n    decimals = remainder * pow(10.0, -integerPart);\n\
    \    \n    return decimals;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=c++,floating-point,truncate\
    \ |>\n<code>\nfloat truncate_number(float number) \n{\n    float remainder;\n\
    \    float decimals;\n    int integerPart;\n    \n    integerPart = int(number);\n\
    \    \n    remainder = number - integerPart;\n    \n    decimals = remainder *\
    \ pow(10.0, -integerPart);\n    \n    return decimals;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\nfloat truncate_number(float number) \n{\n    float remainder;\n\
    \    float decimals;\n    int integerPart;\n    \n    integerPart = int(number);\n\
    \    \n    remainder = number - integerPart;\n    \n    decimals = remainder *\
    \ pow(10.0, -integerPart);\n    \n    return decimals;\n}\n</code>\n<|/ a tags=c++,floating-point,truncate\
    \ |>\n<| a tags=c++,floating-point,truncate |>\n<code>\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimals;\n    int integerPart;\n\
    \    \n    integerPart = int(number);\n    \n    remainder = number - integerPart;\n\
    \    \n    decimals = remainder * pow(10.0, -integerPart);\n    \n    return decimals;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfloat truncate_number(float number)\
    \ \n{\n    float remainder;\n    float decimals;\n    int integerPart;\n    \n\
    \    integerPart = \nunittest\n{\n    alias candidate = truncate_number;\n\n \
    \   assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n   \
    \ assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxdt22vf2.d(17): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpxdt22vf2.d(17): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpxdt22vf2.d(25): Error: Declaration expected, not
    \''<\''\n/tmp/tmpxdt22vf2.d(35): Error: no identifier for declarator integerPart\n/tmp/tmpxdt22vf2.d(35):
    Error: Declaration expected, not \''=\''\n/tmp/tmpxdt22vf2.d(37): Error: no identifier
    for declarator remainder\n/tmp/tmpxdt22vf2.d(37): Error: Declaration expected,
    not \''=\''\n/tmp/tmpxdt22vf2.d(39): Error: no identifier for declarator decimals\n/tmp/tmpxdt22vf2.d(39):
    Error: Declaration expected, not \''=\''\n/tmp/tmpxdt22vf2.d(41): Error: Declaration
    expected, not \''return\''\n/tmp/tmpxdt22vf2.d(42): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdt22vf2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    float result;\n    \n    quotient = number;\n    decimals = 1;\n    \n  \
    \  while(quotient > 1) {\n        remainder = quotient % 10;\n        quotient\
    \ = quotient / 10;\n        decimals = decimals * 10 + remainder;\n    }\n   \
    \ \n    result = number - decimals;\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqj1n8xp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    \n  \
    \  return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpka9cm8a1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fraction = number - trunc(number);\n    float decimal\
    \ = fraction % 1;\n    return decimal;\n}\nunittest\n{\n    alias candidate =\
    \ truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmar5lis2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = floorf(number);\n    decimalPart = number-integerPart;\n\
    \    \n    remainder = number-integerPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89hnc3d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    \n \
    \   while(number > 0.0) {\n        float remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    \n  \
    \  return result + decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nt2mbem.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    \n  \
    \  while(number > 0.0)\n    {\n        float remainder = number % 1.0;\n     \
    \   \n        if(remainder > 0.0)\n        {\n            int_part += remainder;\n\
    \            \n            number /= 1.0;\n        }\n        else\n        {\n\
    \            decimals += remainder;\n            \n            number /= 1.0;\n\
    \        }\n    }\n    \n    return int_part + decimals;\n}\nunittest\n{\n   \
    \ alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n \
    \   assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppgory5ew.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        float remainder = number % 1.0;\n    \
    \    number = number;\n        decimals += remainder;\n    }\n    \n    return\
    \ result + decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwgjm6ayg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    \n    integerPart\
    \ = number;\n    decimalPart = number - integerPart;\n    \n    return decimalPart;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnqcpjqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number - (int)number;\n    decimalPart = number - integerPart;\n\
    \    \n    remainder = decimalPart % 1;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5jtwmsgy.d(17): Error: C style cast illegal, use cast(int)number\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5jtwmsgy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    int_part = int(number);\n\
    \    frac_part = number - int_part;\n    return frac_part;\n}\nunittest\n{\n \
    \   alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafinvxf6.d(15): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpafinvxf6.d(15): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafinvxf6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 1;\n        number\
    \ = number / 1;\n        decimals = decimals + remainder;\n    }\n    \n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m5fmex_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    \n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7egpt3b3.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp7egpt3b3.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7egpt3b3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = floor(number);\n    \n    if (int_part\
    \ == number)\n    {\n        decimals = 0.0;\n    }\n    else\n    {\n       \
    \ remainder = number - int_part;\n        decimals = remainder * pow(10.0, floor(log10(remainder)));\n\
    \    }\n    \n    return int_part + decimals;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhfjrkfu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - floor(number);\n    return floor(number)\
    \ + decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp262s8j5l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder = 0;\n    \n  \
    \  while(result > 0)\n    {\n        remainder = result % 10;\n        result\
    \ = result / 10;\n    }\n    \n    return remainder;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6aoep5rf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integerPart;\n    float decimalPart;\n    \n    integerPart\
    \ = int(number);\n    decimalPart = number - integerPart;\n    \n    return decimalPart;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoyi5ncwu.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpoyi5ncwu.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoyi5ncwu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    remainder = decimalPart % 1;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxvq7kb6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = floor(number);\n    \n    if (int_part\
    \ == number) {\n        decimals = 0.0;\n    } else {\n        decimals = number\
    \ - int_part;\n    }\n    \n    remainder = number - int_part;\n    \n    return\
    \ remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeym2hku7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm2noaze4.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpm2noaze4.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2noaze4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    float temp;\n    float temp2;\n    float temp3;\n    float temp4;\n    float\
    \ temp5;\n    float temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n\
    \    float temp10;\n    float temp11;\n    float temp12;\n    float temp13;\n\
    \    float temp14;\n    float temp15;\n    float temp16;\n    float temp17;\n\
    \    float temp18;\n    float temp19;\n    float temp20;\n    float temp21;\n\
    \    float temp22;\n    float temp23;\n    float temp24;\n    float temp25;\n\
    \    float temp26;\n    float temp27;\n    float temp28;\n    float temp29;\n\
    \    float temp30;\n    float temp31;\n    float temp32;\n    float temp33;\n\
    \    float temp34;\n    float temp35;\n    float temp36;\n    float temp37;\n\
    \    float temp38;\n    float temp39;\n    float temp40;\n    float temp41;\n\
    \    float temp42;\n    float temp43;\n    float temp44;\n    float temp45;\n\
    \    float temp46;\n    float temp47;\n    float temp48;\n    float temp49;\n\
    \    float temp50;\n    float temp51;\n    float temp52;\n    float temp53;\n\
    \    float temp54;\n    float temp55;\n    float temp56;\n    float temp57;\n\
    \    float temp58;\n    float temp59;\n    float temp60;\n    float temp61;\n\
    \    float temp62;\n    float temp63;\n    float temp64;\n    float temp65;\n\
    \    float temp66;\n    float temp67;\n    float temp68;\n    float temp69;\n\
    \    float temp70;\n    float temp71;\n    float temp72;\n    float temp73;\n\
    \    float temp74;\n    float temp75;\n    float temp76;\n    float temp77;\n\
    \    float temp78;\n    float temp79;\n    float temp80;\n    float temp81;\n\
    \    float temp82;\n    float temp83;\n    float temp84;\n    float temp85;\n\
    \    float temp\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprful4xwr.d(102): Error: semicolon expected, not \''unittest\''\n/tmp/tmprful4xwr.d(102):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprful4xwr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=c++,floating-point,c\
    \ |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include\
    \ <math.h>\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptkr9xk1m.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmptkr9xk1m.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmptkr9xk1m.d(21): Error: Declaration expected, not
    \''<\''\n/tmp/tmptkr9xk1m.d(33): Error: Declaration expected, not \''assert\''\n/tmp/tmptkr9xk1m.d(34):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptkr9xk1m.d(35): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptkr9xk1m.d(36): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkr9xk1m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    \n    int_part = int(number);\n\
    \    frac_part = number - int_part;\n    \n    return frac_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf23yf0m7.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpf23yf0m7.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf23yf0m7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    remainder = decimalPart % 1;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxvq7kb6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    return trunc(number);\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqkch_ila.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimal;\n    int integer;\n  \
    \  \n    integer = int(number);\n    remainder = number - integer;\n    decimal\
    \ = remainder * pow(10.0, floor(log10(remainder)));\n    \n    return decimal;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptl5rf5pr.d(17): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmptl5rf5pr.d(17): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl5rf5pr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimal = number - int(number);\n    return decimal;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1qv1anva.d(13): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp1qv1anva.d(13): Error: semicolon expected, not \'')\''\n/tmp/tmp1qv1anva.d(13):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1qv1anva.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    \n    integerPart\
    \ = number;\n    decimalPart = number - integerPart;\n    \n    return decimalPart;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnqcpjqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    \n  \
    \  return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpka9cm8a1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    \n    while(result\
    \ > 1) {\n        remainder = result % 10;\n        result = result / 10;\n  \
    \      result = result + remainder;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr6b23t5q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number;\n    float int_part = 0;\n    float\
    \ remainder = 0;\n    \n    while(number > 0)\n    {\n        remainder = number\
    \ % 10;\n        int_part = int_part * 10 + remainder;\n        number = number\
    \ / 10;\n    }\n    \n    return decimals;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2n10308b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ fraction = number;\n    \n    while(fraction > 0.0) {\n        fraction = fraction\
    \ / 10.0;\n        decimals++;\n    }\n    \n    return result + decimals;\n}\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprf3xal8g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    int decimal_part;\n\
    \    \n    integer_part = trunc(number);\n    \n    decimal_part = number - integer_part;\n\
    \    \n    remainder = number - integer_part - decimal_part;\n    \n    return\
    \ remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62zcznjw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    int decimal_point;\n\
    \    \n    while(number > 0)\n    {\n        remainder = number % 10;\n      \
    \  number = number / 10;\n        decimal_point = (int)remainder;\n        result\
    \ = result + remainder * pow(10.0, decimal_point);\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp1v_pwtb.d(21): Error: C style cast illegal, use cast(int)remainder\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp1v_pwtb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integerPart = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    integerPart = number;\n    \n    while(integerPart\
    \ > 0.0)\n    {\n        remainder = integerPart % 10.0;\n        integerPart\
    \ = integerPart / 10.0;\n        decimals = decimals + remainder;\n    }\n   \
    \ \n    return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7rz2y6o9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = trunc(number);\n    \n    decimal_part = number - integer_part;\n    \n  \
    \  return decimal_part;\n}\n/*\n Given a positive floating point number, it can\
    \ be decomposed into\n    and integer part (largest integer smaller than given\
    \ number) and decimals\n    (leftover part always smaller than 1).\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv6qmbj_6.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpv6qmbj_6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    \n    while(result\
    \ > 1) {\n        remainder = result % 1;\n        result = result / 1;\n    \
    \    result = remainder;\n    }\n    \n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8aoo4ku6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fraction = number - truncate_number(floorf(number));\n\
    \    return fraction;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo67cqty.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = int(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\n/*\n Given a positive floating point number, it can be decomposed into\n  \
    \  and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp3dg2x18.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpp3dg2x18.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpp3dg2x18.d(21): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3dg2x18.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = 0;\n    float remainder = 0;\n    float temp\
    \ = 0;\n    float temp2 = 0;\n    float temp3 = 0;\n    float temp4 = 0;\n   \
    \ float temp5 = 0;\n    float temp6 = 0;\n    float temp7 = 0;\n    float temp8\
    \ = 0;\n    float temp9 = 0;\n    float temp10 = 0;\n    float temp11 = 0;\n \
    \   float temp12 = 0;\n    float temp13 = 0;\n    float temp14 = 0;\n    float\
    \ temp15 = 0;\n    float temp16 = 0;\n    float temp17 = 0;\n    float temp18\
    \ = 0;\n    float temp19 = 0;\n    float temp20 = 0;\n    float temp21 = 0;\n\
    \    float temp22 = 0;\n    float temp23 = 0;\n    float temp24 = 0;\n    float\
    \ temp25 = 0;\n    float temp26 = 0;\n    float temp27 = 0;\n    float temp28\
    \ = 0;\n    float temp29 = 0;\n    float temp30 = 0;\n    float temp31 = 0;\n\
    \    float temp32 = 0;\n    float temp33 = 0;\n    float temp34 = 0;\n    float\
    \ temp35 = 0;\n    float temp36 = 0;\n    float temp37 = 0;\n    float temp38\
    \ = 0;\n    float temp39 = 0;\n    float temp40 = 0;\n    float temp41 = 0;\n\
    \    float temp42 = 0;\n    float temp43 = 0;\n    float temp44 = 0;\n    float\
    \ temp45 = 0;\n    float temp46 = 0;\n    float temp47 = 0;\n    float temp48\
    \ = 0;\n    float temp49 = 0;\n    float temp50 = 0;\n    float temp51 = 0;\n\
    \    float temp52 = 0;\n    float temp53 = 0;\n    float temp54 = 0;\n    float\
    \ temp55 = 0;\n    float temp56 = 0;\n    float temp57 = 0;\n    float temp58\
    \ = 0;\n    float temp59 = 0;\n    float temp60 = 0;\n    float temp61 = 0;\n\
    \    float temp62 = 0;\n    float temp63 = 0;\n    float temp64 = 0;\n    float\
    \ temp65 = 0;\n    float temp66 = 0;\n    float temp67 = 0;\n    float temp68\
    \ = 0;\n    float temp69 = 0;\n    float temp70 = 0;\n    float temp71 = 0;\n\
    \    float temp72 = 0;\n    float temp73 = 0;\n    float temp74 = 0;\n    float\
    \ temp75 = 0;\n    float temp76 = 0;\n    float temp77 = 0;\n    float temp78\
    \ = 0;\n    float temp79 = 0;\n    float temp80 = 0;\n    float temp81 = 0;\n\
    \    float temp82 = 0;\n    float temp83 = 0;\n    float temp84 = 0;\n\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu7e3c1d_.d(100): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7e3c1d_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm2noaze4.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpm2noaze4.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2noaze4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient_remainder = 0.0;\n    float quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_remainder = 0.0;\n    float quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_remainder = 0.0;\n    float quotient_quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_remainder_remainder = 0.0;\n  \
    \  float quotient_quotient_quotient_quotient_remainder = 0.0;\n    float quotient_quotient_quotient_quotient_remainder\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float\
    \ quotient_quotient_quotient_quotient_remainder_remainder = 0.0;\n    float quotient_quotient_quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_remainder =\
    \ 0.0;\n    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float\
    \ quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n\
    \    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float\
    \ quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n\
    \    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float\
    \ quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient = 0.0;\n\
    \    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float quotient_quotient_quotient_quotient_remainder_quotient\
    \ = 0.0;\n    float quotient_quotient_quotient_quotient_quotient = 0.0;\n    float\
    \ quotient_quotient_quotient_quotient_remain\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa3ahj1ku.d(49): Error: semicolon expected, not \''unittest\''\n/tmp/tmpa3ahj1ku.d(49):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpa3ahj1ku.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0) {\n        remainder = number\
    \ % 1;\n        number = number / 1;\n        decimals = decimals + remainder;\n\
    \    }\n    \n    result = result - decimals;\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeuv884ni.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    \n    quotient = number;\n    decimals = 1;\n    \n    while(quotient > 1)\n\
    \    {\n        remainder = quotient % 10;\n        quotient = quotient / 10;\n\
    \        decimals = decimals * 10 + remainder;\n    }\n    \n    return number\
    \ - decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpte03x8yl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    float decimals;\n\
    \    float temp;\n    int exponent;\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnij785de.d(18): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnij785de.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 1;\n    float\
    \ remainder = 0;\n    \n    while(result > 0)\n    {\n        remainder = result\
    \ % 10;\n        result = result / 10;\n        decimals = decimals * 10 + remainder;\n\
    \    }\n    \n    return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4mmm71hw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder =\
    \ number % 10.0;\n        number = number / 10.0;\n        decimals = decimals\
    \ + remainder;\n        int_part = int_part + remainder;\n    }\n    \n    return\
    \ decimals;\n}\n/*\n Given a positive floating point number, it can be decomposed\
    \ into\n    and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_oci51u.d(27): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp2_oci51u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 1;\n    float\
    \ integer = 0;\n    \n    while(result > 0)\n    {\n        integer += result\
    \ % 10;\n        result /= 10;\n        decimals++;\n    }\n    \n    return integer\
    \ + decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0v4jdxw9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    if (decimalPart > 0.0f)\n    {\n        remainder = decimalPart;\n  \
    \  }\n    else\n    {\n        remainder = 0.0f;\n    }\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fk17fhq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    int integerPart;\n    \n    integerPart\
    \ = int(number);\n    decimalPart = number - integerPart;\n    \n    return decimalPart;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyeeeuhs_.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpyeeeuhs_.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyeeeuhs_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = floor(number);\n    decimalPart = number - integerPart;\n\
    \    \n    remainder = number-integerPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtcuds5g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = int(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsd37y10.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpbsd37y10.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsd37y10.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - truncate_number(number);\n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv7ty66py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integerPart = 0.0;\n    \n\
    \    integerPart = floor(number);\n    \n    if (number - integerPart > FLT_EPSILON)\n\
    \    {\n        decimals = number - integerPart;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8crfd9bi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    float integer_part;\n    \n    integer_part = floor(number);\n    \n    decimals\
    \ = number - integer_part;\n    \n    quotient = integer_part * pow(10.0, decimals);\n\
    \    \n    remainder = number - quotient;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouxgjcly.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ intPart;\n    \n    intPart = floor(number);\n    \n    while(number > intPart)\
    \ {\n        decimals += 1;\n        number -= intPart;\n    }\n    \n    remainder\
    \ = number - intPart;\n    \n    return remainder;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgc_owawr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder =\
    \ number % 10.0;\n        number = number / 10.0;\n        decimals = decimals\
    \ + remainder;\n        int_part = int_part + remainder;\n    }\n    \n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfysij5jk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1e69t2er.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integerPart;\n    \n    integerPart\
    \ = int(number);\n    remainder = number - integerPart;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyboap5jj.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpyboap5jj.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyboap5jj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = trunc(number);\n    \n    decimal_part = number - integer_part;\n    \n  \
    \  return decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9wmjps.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ result = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder = number\
    \ % 10.0;\n        number = number / 10.0;\n        decimals = decimals + remainder;\n\
    \    }\n    \n    result = number + decimals;\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ju5s5b8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fractionalPart = number - trunc(number);\n    float decimalPart\
    \ = fractionalPart * (float)(pow(10, floor(log10(fractionalPart))));\n    return\
    \ decimalPart;\n}\n</code>\n<|/ a tags=c++,floating-point,truncate |>\n<| c |>\n\
    This doesn't work if the number is negative.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ for negative numbers. Try it with `truncate_number(-10.5)`.\n<|/ c |>\n<| c\
    \ |>\n: It works for negative numbers. Try it with `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| c |>\n: It works for negative numbers. Try it with `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| c |>\n: It works for negative numbers. Try it with `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| a tags=c++,floating-point,truncate |>\n<code>\nfloat truncate_number(float\
    \ number) \n{\n    float fractionalPart = number - trunc(number);\n    float decimalPart\
    \ = fractionalPart * (float)(pow(10, floor(log10(fractionalPart))));\n    return\
    \ decimalPart;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work if the\
    \ number is negative.\n<|/ c |>\n<| c |>\nIt doesn't work for negative numbers.\
    \ Try it with `truncate_number(-10.5)`.\n<|/ c |>\n<| c |>\nIt works for negative\
    \ numbers. Try it with `truncate_number(-10.5)`.\n<|/ c |>\n<| a tags=c++,floating-point,truncate\
    \ |>\n<code>\nfloat truncate_number(float number) \n{\n    float fractionalPart\
    \ = number - trunc(number);\n    float decimalPart = fractionalPart * (float)(pow(10,\
    \ floor(log10(fractionalPart))));\n    return decimalPart;\n}\n</code>\n<|/ a\
    \ dscore=4 |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c |>\n\
    <| c |>\nIt doesn't work for negative numbers. Try it with `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| c |>\nIt works for negative numbers. Try it with `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>\nfloat truncate_number(float number) \n{\n\
    \    float fractionalPart = number - \nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc9_tgcxh.d(14): Error: C style cast illegal, use cast(float)pow(10,
    floor(log10(fractionalPart)))\n/tmp/tmpc9_tgcxh.d(17): Error: Declaration expected,
    not \''<\''\n/tmp/tmpc9_tgcxh.d(20): Error: unterminated character constant\n/tmp/tmpc9_tgcxh.d(23):
    Error: unterminated character constant\n/tmp/tmpc9_tgcxh.d(39): Error: C style
    cast illegal, use cast(float)pow(10, floor(log10(fractionalPart)))\n/tmp/tmpc9_tgcxh.d(40):
    Error: Declaration expected, not \''return\''\n/tmp/tmpc9_tgcxh.d(41): Error:
    unrecognized declaration\n/tmp/tmpc9_tgcxh.d(45): Error: unterminated character
    constant\n/tmp/tmpc9_tgcxh.d(48): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc9_tgcxh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float decimals = 0.0;\n \
    \   float remainder = 0.0;\n    \n    while(trunc_number > 0.0)\n    {\n     \
    \   remainder = trunc_number % 10.0;\n        trunc_number = trunc_number / 10.0;\n\
    \        decimals = decimals + remainder;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdztn1rz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = int(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsd37y10.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpbsd37y10.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsd37y10.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    \n    int_part = int(number);\n\
    \    frac_part = number - int_part;\n    \n    return frac_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf23yf0m7.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpf23yf0m7.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf23yf0m7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimal = number - floor(number);\n    return decimal;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1y_kufg_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integer_part = 0.0;\n    \n\
    \    while(number > 0.0)\n    {\n        float remainder = number % 1.0;\n   \
    \     \n        if(remainder > 0.0)\n        {\n            decimals += remainder;\n\
    \        }\n        \n        number /= 1.0;\n        integer_part += number;\n\
    \    }\n    \n    return integer_part + decimals;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvqcdn39.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    \n    int_part = int(number);\n\
    \    frac_part = number - int_part;\n    \n    return frac_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf23yf0m7.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpf23yf0m7.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf23yf0m7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float decimals = 0.0;\n \
    \   float remainder = 0.0;\n    \n    while(trunc_number > 0.0)\n    {\n     \
    \   remainder = trunc_number % 10.0;\n        trunc_number = trunc_number / 10.0;\n\
    \        decimals = decimals + remainder;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdztn1rz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    float result\
    \ = trunc(number);\n    \n    return result + decimals;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph1irpl8f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    float temp;\n    float temp2;\n    float temp3;\n    float temp4;\n    float\
    \ temp5;\n    float temp6;\n    float temp7;\n    float temp8;\n    float temp9;\n\
    \    float temp10;\n    float temp11;\n    float temp12;\n    float temp13;\n\
    \    float temp14;\n    float temp15;\n    float temp16;\n    float temp17;\n\
    \    float temp18;\n    float temp19;\n    float temp20;\n    float temp21;\n\
    \    float temp22;\n    float temp23;\n    float temp24;\n    float temp25;\n\
    \    float temp26;\n    float temp27;\n    float temp28;\n    float temp29;\n\
    \    float temp30;\n    float temp31;\n    float temp32;\n    float temp33;\n\
    \    float temp34;\n    float temp35;\n    float temp36;\n    float temp37;\n\
    \    float temp38;\n    float temp39;\n    float temp40;\n    float temp41;\n\
    \    float temp42;\n    float temp43;\n    float temp44;\n    float temp45;\n\
    \    float temp46;\n    float temp47;\n    float temp48;\n    float temp49;\n\
    \    float temp50;\n    float temp51;\n    float temp52;\n    float temp53;\n\
    \    float temp54;\n    float temp55;\n    float temp56;\n    float temp57;\n\
    \    float temp58;\n    float temp59;\n    float temp60;\n    float temp61;\n\
    \    float temp62;\n    float temp63;\n    float temp64;\n    float temp65;\n\
    \    float temp66;\n    float temp67;\n    float temp68;\n    float temp69;\n\
    \    float temp70;\n    float temp71;\n    float temp72;\n    float temp73;\n\
    \    float temp74;\n    float temp75;\n    float temp76;\n    float temp77;\n\
    \    float temp78;\n    float temp79;\n    float temp80;\n    float temp81;\n\
    \    float temp82;\n    float temp83;\n    float temp84;\n    float temp85;\n\
    \    float temp\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprful4xwr.d(102): Error: semicolon expected, not \''unittest\''\n/tmp/tmprful4xwr.d(102):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprful4xwr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    \n    integerPart\
    \ = number;\n    decimalPart = number - integerPart;\n    \n    return decimalPart;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnqcpjqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = trunc(number);\n    \n    decimal_part = number - integer_part;\n    \n  \
    \  return decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9wmjps.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    \n    while(result\
    \ > 1)\n    {\n        remainder = result % 10;\n        result = result / 10;\n\
    \        result = result + remainder;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdul07g5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder;\n    float\
    \ decimals;\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoi_36f_t.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoi_36f_t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = floorf(number);\n    decimalPart = number-integerPart;\n\
    \    \n    remainder = number-integerPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89hnc3d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder =\
    \ number % 10.0;\n        decimals = decimals + remainder;\n        number = number\
    \ / 10.0;\n    }\n    \n    result = result + decimals;\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdvgwnzo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fraction = number - trunc(number);\n    return fraction;\n\
    }\n/*\n Given a positive floating point number, it can be decomposed into\n  \
    \  and integer part (largest integer smaller than given number) and decimals\n\
    \    (leftover part always smaller than 1).\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph2_awos6.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmph2_awos6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integerPart;\n    \n    integerPart\
    \ = int(number);\n    remainder = number - integerPart;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyboap5jj.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpyboap5jj.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyboap5jj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = int(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsd37y10.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpbsd37y10.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsd37y10.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    \n  \
    \  int_part = floor(number);\n    \n    if (int_part == number) {\n        decimals\
    \ = 0.0;\n    } else {\n        decimals = number - int_part;\n    }\n    \n \
    \   return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_9p34x_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder = 0;\n  \
    \  float decimal = 0;\n    float int_part = 0;\n    float decimal_part = 0;\n\
    \    int decimal_count = 0;\n    \n    while(trunc_number > 0)\n    {\n      \
    \  remainder = trunc_number % 10;\n        trunc_number = trunc_number / 10;\n\
    \        decimal = remainder;\n        \n        int_part = trunc_number;\n  \
    \      decimal_part = decimal + int_part;\n        \n        if(decimal_part >\
    \ 1)\n        {\n            decimal_count++;\n        }\n    }\n    \n    return\
    \ decimal_part * pow(10, decimal_count);\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw3l9nfxg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf5ccowrl.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5ccowrl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float intPart = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    intPart = number;\n    \n    while(number > 0.0)\n\
    \    {\n        remainder = number % 10.0;\n        number = number / 10.0;\n\
    \        decimals = decimals + remainder;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpztoyjlmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    while(decimalPart > 1)\n    {\n        decimalPart /= 10;\n        integerPart\
    \ *= 10;\n    }\n    \n    remainder = decimalPart;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp26yv8z8s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    float remainder;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    remainder = number - integerPart - decimalPart;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjddosbfa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    float decimals;\n\
    \    \n    quotient = number;\n    \n    while(quotient > 1)\n    {\n        remainder\
    \ = quotient % 1;\n        quotient = quotient / 1;\n        decimals = remainder;\n\
    \    }\n    \n    return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3q42g4ve.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = number;\n    \n    while(int_part > 0.0)\n\
    \    {\n        remainder = int_part % 10.0;\n        int_part = int_part / 10.0;\n\
    \        decimals = decimals + remainder;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ka11ppn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number % 1;\n    float int_part = number /\
    \ 1;\n    float result = int_part;\n    \n    if(decimals > 0)\n    {\n      \
    \  result = result + decimals;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5x2647lm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = number - truncate_number(number);\n\
    \    \n    if (number > 0)\n    {\n        float power = 1;\n        \n      \
    \  while (power < decimals)\n        {\n            power *= 10;\n        }\n\
    \        \n        result = truncate_number(number/power) * power;\n    }\n  \
    \  \n    return result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3f_68nf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    int_part = trunc(number);\n\
    \    frac_part = number - int_part;\n    return frac_part;\n}\n/*\n Given a positive\
    \ floating point number, it can be decomposed into\n    and integer part (largest\
    \ integer smaller than given number) and decimals\n    (leftover part always smaller\
    \ than 1).\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp70_nyr9.d(19): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpp70_nyr9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    \n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7egpt3b3.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp7egpt3b3.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7egpt3b3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    int integerPart;\n    \n    decimalPart\
    \ = number - floor(number);\n    integerPart = floor(number);\n    \n    return\
    \ decimalPart;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n   \
    \ assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd1_6qhdx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    float decimal_part;\n\
    \    \n    integer_part = trunc(number);\n    \n    remainder = number - integer_part;\n\
    \    \n    decimal_part = remainder;\n    \n    return decimal_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3x5_7gf4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = trunc(number);\n    \n    decimal_part = number - integer_part;\n    \n  \
    \  return decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9wmjps.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    return trunc(number);\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqkch_ila.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1e69t2er.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float temp = 0.0;\n    float temp2 = 0.0;\n    float temp3\
    \ = 0.0;\n    float temp4 = 0.0;\n    float temp5 = 0.0;\n    float temp6 = 0.0;\n\
    \    float temp7 = 0.0;\n    float temp8 = 0.0;\n    float temp9 = 0.0;\n    float\
    \ temp10 = 0.0;\n    float temp11 = 0.0;\n    float temp12 = 0.0;\n    float temp13\
    \ = 0.0;\n    float temp14 = 0.0;\n    float temp15 = 0.0;\n    float temp16 =\
    \ 0.0;\n    float temp17 = 0.0;\n    float temp18 = 0.0;\n    float temp19 = 0.0;\n\
    \    float temp20 = 0.0;\n    float temp21 = 0.0;\n    float temp22 = 0.0;\n \
    \   float temp23 = 0.0;\n    float temp24 = 0.0;\n    float temp25 = 0.0;\n  \
    \  float temp26 = 0.0;\n    float temp27 = 0.0;\n    float temp28 = 0.0;\n   \
    \ float temp29 = 0.0;\n    float temp30 = 0.0;\n    float temp31 = 0.0;\n    float\
    \ temp32 = 0.0;\n    float temp33 = 0.0;\n    float temp34 = 0.0;\n    float temp35\
    \ = 0.0;\n    float temp36 = 0.0;\n    float temp37 = 0.0;\n    float temp38 =\
    \ 0.0;\n    float temp39 = 0.0;\n    float temp40 = 0.0;\n    float temp41 = 0.0;\n\
    \    float temp42 = 0.0;\n    float temp43 = 0.0;\n    float temp44 = 0.0;\n \
    \   float temp45 = 0.0;\n    float temp46 = 0.0;\n    float temp47 = 0.0;\n  \
    \  float temp48 = 0.0;\n    float temp49 = 0.0;\n    float temp50 = 0.0;\n   \
    \ float temp51 = 0.0;\n    float temp52 = 0.0;\n    float temp53 = 0.0;\n    float\
    \ temp54 = 0.0;\n    float temp55 = 0.0;\n    float temp56 = 0.0;\n    float temp57\
    \ = 0.0;\n    float temp58 = 0.0;\n    float temp59 = 0.0;\n    float temp60 =\
    \ 0.0;\n    float temp61 = 0.0;\n    float temp62 = 0.0;\n    float temp63 = 0.0;\n\
    \    float temp64 = 0.0;\n    float temp65 = 0.0;\n    float temp66 = 0.0;\n \
    \   float temp67 = 0.0;\n    float temp68 = 0.0;\n    \nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpizv32zfx.d(85): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizv32zfx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    \n    quotient = number;\n    \n    while(quotient > 1.0)\n\
    \    {\n        remainder = quotient - 1.0;\n        quotient = remainder / 10.0;\n\
    \        decimals += remainder;\n    }\n    \n    return decimals;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuf239ss2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimal;\n    int integer;\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx4wz523z.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4wz523z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integerPart;\n    \n    integerPart\
    \ = int(number);\n    remainder = number - integerPart;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyboap5jj.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpyboap5jj.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyboap5jj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float quotient;\n    int exponent;\n\
    \    \n    exponent = float_to_int(number);\n    quotient = number / float(pow(10.0,\
    \ exponent));\n    remainder = number % float(pow(10.0, exponent));\n    \n  \
    \  return remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsq5mb1yh.d(18): Error: found \''(\'' when expecting \''.\''
    following float\n/tmp/tmpsq5mb1yh.d(18): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpsq5mb1yh.d(19): Error: found \''(\'' when expecting
    \''.\'' following float\n/tmp/tmpsq5mb1yh.d(19): Error: found \'')\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq5mb1yh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    while(decimalPart > 1) {\n        decimalPart /= 10;\n        integerPart\
    \ *= 10;\n    }\n    \n    return integerPart;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqcsywps6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder = 0;\n  \
    \  float decimal_part = 0;\n    float decimal_part_remainder = 0;\n    float decimal_part_remainder_magnitude\
    \ = 0;\n    float decimal_part_remainder_magnitude2 = 0;\n    float decimal_part_remainder_magnitude3\
    \ = 0;\n    float decimal_part_remainder_magnitude4 = 0;\n    float decimal_part_remainder_magnitude5\
    \ = 0;\n    float decimal_part_remainder_magnitude6 = 0;\n    float decimal_part_remainder_magnitude7\
    \ = 0;\n    float decimal_part_remainder_magnitude8 = 0;\n    float decimal_part_remainder_magnitude9\
    \ = 0;\n    float decimal_part_remainder_magnitude10 = 0;\n    float decimal_part_remainder_magnitude11\
    \ = 0;\n    float decimal_part_remainder_magnitude12 = 0;\n    float decimal_part_remainder_magnitude13\
    \ = 0;\n    float decimal_part_remainder_magnitude14 = 0;\n    float decimal_part_remainder_magnitude15\
    \ = 0;\n    float decimal_part_remainder_magnitude16 = 0;\n    float decimal_part_remainder_magnitude17\
    \ = 0;\n    float decimal_part_remainder_magnitude18 = 0;\n    float decimal_part_remainder_magnitude19\
    \ = 0;\n    float decimal_part_remainder_magnitude20 = 0;\n    float decimal_part_remainder_magnitude21\
    \ = 0;\n    float decimal_part_remainder_magnitude22 = 0;\n    float decimal_part_remainder_magnitude23\
    \ = 0;\n    float decimal_part_remainder_magnitude24 = 0;\n    float decimal_part_remainder_magnitude25\
    \ = 0;\n    float decimal_part_remainder_magnitude26 = 0;\n    float decimal_part_remainder_magnitude27\
    \ = 0;\n    float decimal_part_remainder_magnitude28 = 0;\n    float decimal_part_remainder_magnitude29\
    \ = 0;\n    float decimal_part_remainder_magnitude30 = 0;\n    float decimal_part_remainder_magnitude31\
    \ = 0;\n    float decimal_part_remainder_magnitude32 = 0;\n    float decimal_part_remainder_magnitude33\
    \ = 0;\n    float decimal_part_remainder_magnitude34 = 0;\n    float decimal_part_remainder_magnitude35\
    \ = 0;\n    float decimal_part_remainder_magnitude36 = 0;\n    float decimal_part_remainder_magnitude37\
    \ = 0;\n    float decimal_part_remainder_magnitude38 = 0;\n    float decimal_part_remainder_magnitude39\
    \ = 0;\n    float decimal_part_remainder_magnitude40 = 0;\n    float decimal_part_remainder_magnitude41\
    \ = 0;\n    float decimal_part_remainder_magnitude42 = 0;\n    float decimal_part_remainder_magnitude43\
    \ = 0;\n    float decimal_part_remainder_magnitude44 = 0;\n    float decimal_part_remainder_magnitude45\
    \ = 0;\n    float decimal_part_remainder_magnitude46 = 0;\n    float decimal_part_remainder_magnitude47\
    \ = 0;\n    float decimal_part_remainder_magnitude48 = 0;\n    float decimal_part_remainder_magnitude49\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7is64r3j.d(66): Error: semicolon expected, not \''unittest\''\n/tmp/tmp7is64r3j.d(66):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7is64r3j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = number;\n    decimalPart = number - integerPart;\n  \
    \  \n    remainder = decimalPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5tx79mge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    \n    integerPart\
    \ = trunc(number);\n    decimalPart = number - integerPart;\n    \n    return\
    \ decimalPart;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n   \
    \ assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq2c67g_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        remainder = number % 10.0;\n        number\
    \ = number / 10.0;\n        decimals = decimals + remainder;\n    }\n    \n  \
    \  return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpka9cm8a1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimals;\n    float intPart;\n\
    \    \n    intPart = number;\n    \n    decimals = number - intPart;\n    \n \
    \   while(decimals > 0)\n    {\n        remainder = decimals % 10;\n        decimals\
    \ = decimals / 10;\n        intPart = intPart * 10 + remainder;\n    }\n    \n\
    \    return intPart;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprw03v187.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result = result / 10;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cc9j68s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    \n \
    \   while(number > 0.0)\n    {\n        float remainder = number % 1;\n      \
    \  \n        if(remainder > decimals)\n        {\n            decimals = remainder;\n\
    \        }\n        \n        number = number / 1;\n    }\n    \n    return result\
    \ + decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppmnal6nz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    \n \
    \   while(result > 1.0f) {\n        result += 1.0f;\n        decimals += 1.0f;\n\
    \    }\n    \n    while(result < 0.0f) {\n        result += 1.0f;\n        decimals\
    \ -= 1.0f;\n    }\n    \n    return result - decimals;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkuob77r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number % 1;\n    float int_part = (number\
    \ - decimals) / 1;\n    return int_part;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpakx_llw9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    \n \
    \   while(number > 0.0) {\n        number = number - 0.5;\n        decimals =\
    \ decimals + 0.5;\n    }\n    \n    result = result - decimals;\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7nx861_n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float intPart = 0.0;\n    \n   \
    \ intPart = floor(number);\n    \n    if (intPart > 0.0) \n    {\n        decimals\
    \ = number - intPart;\n    }\n    \n    return decimals;\n}\nunittest\n{\n   \
    \ alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n \
    \   assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmwjsq1fd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    \n    int_part = int(number);\n\
    \    frac_part = number - int_part;\n    \n    return frac_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf23yf0m7.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpf23yf0m7.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf23yf0m7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integerPart = 0.0;\n    \n\
    \    while(number > 0.0)\n    {\n        float remainder = number % 1;\n     \
    \   \n        number = number / 1;\n        \n        integerPart = integerPart\
    \ + remainder;\n        decimals = decimals + remainder;\n    }\n    \n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpghu8pja0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimal = number - trunc(number);\n    return decimal;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1nuhqm8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integerPart;\n    int decimalPart;\n\
    \    \n    integerPart = int(number);\n    decimalPart = number - integerPart;\n\
    \    \n    remainder = decimalPart % 1;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy2kln5j3.d(17): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpy2kln5j3.d(17): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy2kln5j3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = floor(number);\n    decimalPart = number - integerPart;\n\
    \    \n    remainder = number-integerPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtcuds5g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf5ccowrl.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5ccowrl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ intPart = 0.0;\n    float fractionalPart = 0.0;\n    \n    while(result > 0.0)\
    \ {\n        fractionalPart = result - intPart;\n        intPart = result;\n \
    \       result = fractionalPart * 10.0;\n        decimals += result;\n    }\n\
    \    \n    return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiiimk8d1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = number;\n    float\
    \ remainder = 0;\n    \n    while(decimals > 0)\n    {\n        remainder = number\
    \ % 10;\n        number = number / 10;\n        decimals--;\n    }\n    \n   \
    \ if(number > 0)\n    {\n        result = remainder;\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjlwfp6wx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integer_part;\n    float decimal_part;\n\
    \    \n    integer_part = floor(number);\n    \n    remainder = number - integer_part;\n\
    \    \n    decimal_part = remainder;\n    \n    return decimal_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlb7xmm4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimal;\n    float integer;\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuiugxd7m.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuiugxd7m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder = 0;\n  \
    \  float decimal_part = 0;\n    float decimal_part_remainder = 0;\n    float decimal_part_remainder_magnitude\
    \ = 0;\n    float decimal_part_remainder_magnitude2 = 0;\n    float decimal_part_remainder_magnitude3\
    \ = 0;\n    float decimal_part_remainder_magnitude4 = 0;\n    float decimal_part_remainder_magnitude5\
    \ = 0;\n    float decimal_part_remainder_magnitude6 = 0;\n    float decimal_part_remainder_magnitude7\
    \ = 0;\n    float decimal_part_remainder_magnitude8 = 0;\n    float decimal_part_remainder_magnitude9\
    \ = 0;\n    float decimal_part_remainder_magnitude10 = 0;\n    float decimal_part_remainder_magnitude11\
    \ = 0;\n    float decimal_part_remainder_magnitude12 = 0;\n    float decimal_part_remainder_magnitude13\
    \ = 0;\n    float decimal_part_remainder_magnitude14 = 0;\n    float decimal_part_remainder_magnitude15\
    \ = 0;\n    float decimal_part_remainder_magnitude16 = 0;\n    float decimal_part_remainder_magnitude17\
    \ = 0;\n    float decimal_part_remainder_magnitude18 = 0;\n    float decimal_part_remainder_magnitude19\
    \ = 0;\n    float decimal_part_remainder_magnitude20 = 0;\n    float decimal_part_remainder_magnitude21\
    \ = 0;\n    float decimal_part_remainder_magnitude22 = 0;\n    float decimal_part_remainder_magnitude23\
    \ = 0;\n    float decimal_part_remainder_magnitude24 = 0;\n    float decimal_part_remainder_magnitude25\
    \ = 0;\n    float decimal_part_remainder_magnitude26 = 0;\n    float decimal_part_remainder_magnitude27\
    \ = 0;\n    float decimal_part_remainder_magnitude28 = 0;\n    float decimal_part_remainder_magnitude29\
    \ = 0;\n    float decimal_part_remainder_magnitude30 = 0;\n    float decimal_part_remainder_magnitude31\
    \ = 0;\n    float decimal_part_remainder_magnitude32 = 0;\n    float decimal_part_remainder_magnitude33\
    \ = 0;\n    float decimal_part_remainder_magnitude34 = 0;\n    float decimal_part_remainder_magnitude35\
    \ = 0;\n    float decimal_part_remainder_magnitude36 = 0;\n    float decimal_part_remainder_magnitude37\
    \ = 0;\n    float decimal_part_remainder_magnitude38 = 0;\n    float decimal_part_remainder_magnitude39\
    \ = 0;\n    float decimal_part_remainder_magnitude40 = 0;\n    float decimal_part_remainder_magnitude41\
    \ = 0;\n    float decimal_part_remainder_magnitude42 = 0;\n    float decimal_part_remainder_magnitude43\
    \ = 0;\n    float decimal_part_remainder_magnitude44 = 0;\n    float decimal_part_remainder_magnitude45\
    \ = 0;\n    float decimal_part_remainder_magnitude46 = 0;\n    float decimal_part_remainder_magnitude47\
    \ = 0;\n    float decimal_part_remainder_magnitude48 = 0;\n    float decimal_part_remainder_magnitude49\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7is64r3j.d(66): Error: semicolon expected, not \''unittest\''\n/tmp/tmp7is64r3j.d(66):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7is64r3j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = 0;\n    float remainder = 0;\n    float temp\
    \ = 0;\n    float temp2 = 0;\n    float temp3 = 0;\n    float temp4 = 0;\n   \
    \ float temp5 = 0;\n    float temp6 = 0;\n    float temp7 = 0;\n    float temp8\
    \ = 0;\n    float temp9 = 0;\n    float temp10 = 0;\n    float temp11 = 0;\n \
    \   float temp12 = 0;\n    float temp13 = 0;\n    float temp14 = 0;\n    float\
    \ temp15 = 0;\n    float temp16 = 0;\n    float temp17 = 0;\n    float temp18\
    \ = 0;\n    float temp19 = 0;\n    float temp20 = 0;\n    float temp21 = 0;\n\
    \    float temp22 = 0;\n    float temp23 = 0;\n    float temp24 = 0;\n    float\
    \ temp25 = 0;\n    float temp26 = 0;\n    float temp27 = 0;\n    float temp28\
    \ = 0;\n    float temp29 = 0;\n    float temp30 = 0;\n    float temp31 = 0;\n\
    \    float temp32 = 0;\n    float temp33 = 0;\n    float temp34 = 0;\n    float\
    \ temp35 = 0;\n    float temp36 = 0;\n    float temp37 = 0;\n    float temp38\
    \ = 0;\n    float temp39 = 0;\n    float temp40 = 0;\n    float temp41 = 0;\n\
    \    float temp42 = 0;\n    float temp43 = 0;\n    float temp44 = 0;\n    float\
    \ temp45 = 0;\n    float temp46 = 0;\n    float temp47 = 0;\n    float temp48\
    \ = 0;\n    float temp49 = 0;\n    float temp50 = 0;\n    float temp51 = 0;\n\
    \    float temp52 = 0;\n    float temp53 = 0;\n    float temp54 = 0;\n    float\
    \ temp55 = 0;\n    float temp56 = 0;\n    float temp57 = 0;\n    float temp58\
    \ = 0;\n    float temp59 = 0;\n    float temp60 = 0;\n    float temp61 = 0;\n\
    \    float temp62 = 0;\n    float temp63 = 0;\n    float temp64 = 0;\n    float\
    \ temp65 = 0;\n    float temp66 = 0;\n    float temp67 = 0;\n    float temp68\
    \ = 0;\n    float temp69 = 0;\n    float temp70 = 0;\n    float temp71 = 0;\n\
    \    float temp72 = 0;\n    float temp73 = 0;\n    float temp74 = 0;\n    float\
    \ temp75 = 0;\n    float temp76 = 0;\n    float temp77 = 0;\n    float temp78\
    \ = 0;\n    float temp79 = 0;\n    float temp80 = 0;\n    float temp81 = 0;\n\
    \    float temp82 = 0;\n    float temp83 = 0;\n    float temp84 = 0;\n\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu7e3c1d_.d(100): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7e3c1d_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    \n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7egpt3b3.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp7egpt3b3.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7egpt3b3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    \n    quotient = number / pow(10.0, decimals);\n    remainder\
    \ = number - quotient * pow(10.0, decimals);\n    \n    return remainder;\n}\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4xk3uof8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    float decimals = number -\
    \ truncate_number(number);\n    \n    while(decimals > 0)\n    {\n        result\
    \ += 1;\n        decimals -= 1;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7281d0mg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   while(number > 0.0) {\n        remainder = number % 10;\n        number =\
    \ number / 10;\n        decimals = decimals + remainder;\n    }\n    \n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsvxbdqb5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = trunc(number);\n    \n    decimal_part = number - integer_part;\n    \n  \
    \  return decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyu9wmjps.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ remainder = 0.0;\n    float temp;\n    int exponent = 0;\n    int digits = 0;\n\
    \    bool isNegative = false;\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnriyonue.d(20): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnriyonue.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number % 1;\n    float result = number - decimals;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5i8wjndp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1) \n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpegp3852t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    float quotient2 = 0.0;\n    float quotient3 = 0.0;\n  \
    \  float quotient4 = 0.0;\n    float quotient5 = 0.0;\n    float quotient6 = 0.0;\n\
    \    float quotient7 = 0.0;\n    float quotient8 = 0.0;\n    float quotient9 =\
    \ 0.0;\n    float quotient10 = 0.0;\n    float quotient11 = 0.0;\n    float quotient12\
    \ = 0.0;\n    float quotient13 = 0.0;\n    float quotient14 = 0.0;\n    float\
    \ quotient15 = 0.0;\n    float quotient16 = 0.0;\n    float quotient17 = 0.0;\n\
    \    float quotient18 = 0.0;\n    float quotient19 = 0.0;\n    float quotient20\
    \ = 0.0;\n    float quotient21 = 0.0;\n    float quotient22 = 0.0;\n    float\
    \ quotient23 = 0.0;\n    float quotient24 = 0.0;\n    float quotient25 = 0.0;\n\
    \    float quotient26 = 0.0;\n    float quotient27 = 0.0;\n    float quotient28\
    \ = 0.0;\n    float quotient29 = 0.0;\n    float quotient30 = 0.0;\n    float\
    \ quotient31 = 0.0;\n    float quotient32 = 0.0;\n    float quotient33 = 0.0;\n\
    \    float quotient34 = 0.0;\n    float quotient35 = 0.0;\n    float quotient36\
    \ = 0.0;\n    float quotient37 = 0.0;\n    float quotient38 = 0.0;\n    float\
    \ quotient39 = 0.0;\n    float quotient40 = 0.0;\n    float quotient41 = 0.0;\n\
    \    float quotient42 = 0.0;\n    float quotient43 = 0.0;\n    float quotient44\
    \ = 0.0;\n    float quotient45 = 0.0;\n    float quotient46 = 0.0;\n    float\
    \ quotient47 = 0.0;\n    float quotient48 = 0.0;\n    float quotient49 = 0.0;\n\
    \    float quotient50 = 0.0;\n    float quotient51 = 0.0;\n    float quotient52\
    \ = 0.0;\n    float quotient53 = 0.0;\n    float quotient54 = 0.0;\n    float\
    \ quotient55 = 0.0;\n    float quotient56 = 0.0;\n    float quotient57 = 0.0;\n\
    \    float quotient58 = 0.0;\n    float quotient59 = 0.0;\n    float quotient60\
    \ = 0.0;\n    float quotient61 = 0.\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpalgmk8e7.d(76): Error: semicolon expected, not \''unittest\''\n/tmp/tmpalgmk8e7.d(76):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpalgmk8e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    float decimals;\n\
    \    float integer_part;\n    \n    integer_part = floor(result);\n    remainder\
    \ = result - integer_part;\n    decimals = remainder * pow(10, floor(log10(remainder)));\n\
    \    \n    return integer_part + decimals;\n}\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0oto6s36.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0oto6s36.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0) {\n        remainder = number\
    \ % 10.0;\n        int_part = int_part + remainder;\n        decimals = decimals\
    \ + 1.0;\n        number = number / 10.0;\n    }\n    \n    return int_part +\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi4svrxpi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    \n    integer_part\
    \ = int(number);\n    remainder = number - integer_part;\n    \n    return remainder;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsd37y10.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpbsd37y10.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsd37y10.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - trunc(number);\n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1e69t2er.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = number;\n    \n    while(int_part > 1.0)\n\
    \    {\n        int_part -= 1.0;\n        decimals += 1.0;\n    }\n    \n    remainder\
    \ = int_part - decimals;\n    \n    return remainder;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49bcjzj1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float fraction = number - trunc(number);\n    return trunc(number)\
    \ + fraction;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpffvej_x_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimals;\n    float intPart;\n\
    \    \n    intPart = number;\n    \n    decimals = number - intPart;\n    \n \
    \   if (decimals < 0.0) \n    {\n        intPart += 1;\n        decimals = 0.0;\n\
    \    }\n    \n    remainder = number - intPart;\n    \n    return remainder +\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4k71d_y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 1;\n    float\
    \ remainder = 0;\n    \n    while(number > 0)\n    {\n        remainder = number\
    \ % 10;\n        number = number / 10;\n        decimals = decimals * 10 + remainder;\n\
    \    }\n    \n    return result + decimals;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5l14j6py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimalPart;\n    float integerPart;\n    float decimals;\n\
    \    \n    integerPart = number;\n    decimalPart = (float)integerPart - (float)integerPart\
    \ % 1;\n    decimals = decimalPart % 1;\n    \n    return decimals;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw0_clbu3.d(18): Error: C style cast illegal, use cast(float)integerPart\n/tmp/tmpw0_clbu3.d(18):
    Error: C style cast illegal, use cast(float)integerPart\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpw0_clbu3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int integer_part;\n    float decimal_part;\n    \n    integer_part\
    \ = int(number);\n    \n    decimal_part = number - integer_part;\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7egpt3b3.d(16): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp7egpt3b3.d(16): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7egpt3b3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ remainder;\n    \n    while(number > 0.0) {\n        remainder = number % 1;\n\
    \        number = number / 1;\n        decimals = decimals + remainder;\n    }\n\
    \    \n    result = result + decimals;\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp98d7puvc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result /= 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpde7_3z08.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int decimal_part = int(number);\n    float trunc_number = number\
    \ - decimal_part;\n    return trunc_number;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qao0nxi.d(13): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp5qao0nxi.d(13): Error: semicolon expected, not \'')\''\n/tmp/tmp5qao0nxi.d(13):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5qao0nxi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder = 0;\n  \
    \  \n    while(trunc_number >= 1)\n    {\n        remainder = trunc_number % 10;\n\
    \        trunc_number = trunc_number / 10;\n        \n        if(remainder > 0)\n\
    \        {\n            break;\n        }\n    }\n    \n    return trunc_number;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70ee2aed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number;\n    float integerPart = 0;\n    float\
    \ fractionalPart = 0;\n    \n    while(number > 0)\n    {\n        fractionalPart\
    \ = number % 1;\n        integerPart = integerPart + fractionalPart;\n       \
    \ number = number / 1;\n    }\n    \n    return decimals;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `truncate_number(-10.5)`.\n\
    <|/ c |>\n<| c |>\nI fixed the negative number issue. Thanks for pointing it out.\n\
    <|/ c |>\n<| a tags=c++,math,floating-point |>\nThe best way is to use std::modf()\
    \ from <cmath>:\n<code>\n#include <cmath>\nunittest\n{\n    alias candidate =\
    \ truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvrmvtaht.d(26): Error: Declaration expected, not \''<\''\n/tmp/tmpvrmvtaht.d(29):
    Error: unterminated character constant\n/tmp/tmpvrmvtaht.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpvrmvtaht.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpvrmvtaht.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpvrmvtaht.d(45):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvrmvtaht.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = number;\n    \n    while(int_part > 0)\n\
    \    {\n        remainder = int_part % 10.0;\n        int_part = int_part / 10.0;\n\
    \        decimals = decimals + remainder;\n    }\n    \n    return decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fel6j83.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = number;\n    float\
    \ remainder = 0;\n    \n    while(decimals > 0)\n    {\n        remainder = number\
    \ % 10;\n        number = number / 10;\n        decimals--;\n    }\n    \n   \
    \ while(number > 0)\n    {\n        remainder = remainder * 10 + number % 10;\n\
    \        number = number / 10;\n    }\n    \n    result = remainder;\n    \n \
    \   return result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnwe6riz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    float decimal_part;\n\
    \    \n    integer_part = trunc(number);\n    \n    remainder = number - integer_part;\n\
    \    \n    decimal_part = remainder / pow(10.0, floor(log10(remainder)));\n  \
    \  \n    return decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_6k6fvn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ intPart;\n    \n    intPart = floor(result);\n    \n    if (intPart > 0.0) {\n\
    \        decimals = result - intPart;\n    }\n    \n    return intPart + decimals;\n\
    }\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpareikcf4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimals;\n    \n    decimals =\
    \ number % 1;\n    number = number / 1;\n    remainder = number;\n    \n    return\
    \ remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf0l8dcxe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float decimal;\n    int integer;\n  \
    \  \n    integer = int(number);\n    remainder = number - integer;\n    \n   \
    \ decimal = remainder * pow(10.0, floor(log10(remainder)));\n    \n    return\
    \ decimal;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5y362o3z.d(17): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp5y362o3z.d(17): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5y362o3z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder;\n    int\
    \ decimal_point;\n    \n    decimal_point = trunc_number - trunc_number;\n   \
    \ \n    if (decimal_point > 0)\n    {\n        remainder = trunc_number - trunc_number\
    \ % 1;\n        trunc_number = trunc_number % 1;\n    }\n    else\n    {\n   \
    \     remainder = 0;\n    }\n    \n    return trunc_number;\n}\nunittest\n{\n\
    \    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp61pz21_m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int decimal_part = int(number);\n    float trunc_number = number\
    \ - decimal_part;\n    return trunc_number;\n}\n</code>\n<|/ a tags=floating-point,c++,truncate\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. `truncate_number(-10.0)`\
    \ returns `-10.0` instead of `-10`.\n<|/ c |>\n<| c |>\nIt doesn't work for negative\
    \ numbers, because `int` doesn't have enough bits to represent negative numbers.\
    \ `int` has 32 bits. `float` has 24 bits. `int` can't represent negative numbers.\
    \ `float` can.\n<|/ c |>\n<| c |>\n`int` has 32 bits. `float` has 24 bits. `int`\
    \ can't represent negative numbers. `float` can.\n<|/ c |>\n<| c |>\n`int` has\
    \ 32 bits. `float` has 24 bits. `int` can't represent negative numbers. `float`\
    \ can.\n<|/ c |>\n<| c |>\n`int` has 32 bits. `float` has 24 bits. `int` can't\
    \ represent negative numbers. `float` can.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    unittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdzap29hs.d(13): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpdzap29hs.d(13): Error: semicolon expected, not \'')\''\n/tmp/tmpdzap29hs.d(13):
    Error: found \'')\'' instead of statement\n/tmp/tmpdzap29hs.d(17): Error: Declaration
    expected, not \''<\''\n/tmp/tmpdzap29hs.d(20): Error: unterminated character constant\n/tmp/tmpdzap29hs.d(23):
    Error: unterminated character constant\n/tmp/tmpdzap29hs.d(23): Error: unterminated
    character constant\n/tmp/tmpdzap29hs.d(23): Error: unterminated character constant\n/tmp/tmpdzap29hs.d(26):
    Error: unterminated character constant\n/tmp/tmpdzap29hs.d(29): Error: unterminated
    character constant\n/tmp/tmpdzap29hs.d(32): Error: unterminated character constant\n/tmp/tmpdzap29hs.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdzap29hs.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdzap29hs.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdzap29hs.d(43): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdzap29hs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integerPart;\n    float decimalPart;\n\
    \    \n    integerPart = trunc(number);\n    \n    decimalPart = number - integerPart;\n\
    \    \n    remainder = number-integerPart;\n    \n    return remainder;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5spj593a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder = 0;\n    float\
    \ decimal = 0;\n    float tmp = 0;\n    float tmp2 = 0;\n    float tmp3 = 0;\n\
    \    float tmp4 = 0;\n    float tmp5 = 0;\n    float tmp6 = 0;\n    float tmp7\
    \ = 0;\n    float tmp8 = 0;\n    float tmp9 = 0;\n    float tmp10 = 0;\n    float\
    \ tmp11 = 0;\n    float tmp12 = 0;\n    float tmp13 = 0;\n    float tmp14 = 0;\n\
    \    float tmp15 = 0;\n    float tmp16 = 0;\n    float tmp17 = 0;\n    float tmp18\
    \ = 0;\n    float tmp19 = 0;\n    float tmp20 = 0;\n    float tmp21 = 0;\n   \
    \ float tmp22 = 0;\n    float tmp23 = 0;\n    float tmp24 = 0;\n    float tmp25\
    \ = 0;\n    float tmp26 = 0;\n    float tmp27 = 0;\n    float tmp28 = 0;\n   \
    \ float tmp29 = 0;\n    float tmp30 = 0;\n    float tmp31 = 0;\n    float tmp32\
    \ = 0;\n    float tmp33 = 0;\n    float tmp34 = 0;\n    float tmp35 = 0;\n   \
    \ float tmp36 = 0;\n    float tmp37 = 0;\n    float tmp38 = 0;\n    float tmp39\
    \ = 0;\n    float tmp40 = 0;\n    float tmp41 = 0;\n    float tmp42 = 0;\n   \
    \ float tmp43 = 0;\n    float tmp44 = 0;\n    float tmp45 = 0;\n    float tmp46\
    \ = 0;\n    float tmp47 = 0;\n    float tmp48 = 0;\n    float tmp49 = 0;\n   \
    \ float tmp50 = 0;\n    float tmp51 = 0;\n    float tmp52 = 0;\n    float tmp53\
    \ = 0;\n    float tmp54 = 0;\n    float tmp55 = 0;\n    float tmp56 = 0;\n   \
    \ float tmp57 = 0;\n    float tmp58 = 0;\n    float tmp59 = 0;\n    float tmp60\
    \ = 0;\n    float tmp61 = 0;\n    float tmp62 = 0;\n    float tmp63 = 0;\n   \
    \ float tmp64 = 0;\n    float tmp65 = 0;\n    float tmp66 = 0;\n    float tmp67\
    \ = 0;\n    float tmp68 = 0;\n    float tmp69 = 0;\n    float tmp70 = 0;\n   \
    \ float tmp71 = 0;\n    float tmp72 = 0;\n    float tmp73 = 0;\n    float tmp74\
    \ = 0;\n    float tmp75 = 0;\n    float tmp76 = 0;\n    float tmp77 = 0;\n   \
    \ float tmp78 = 0;\n    float tmp79 = 0;\n    float tmp80 = 0;\n    float tmp81\
    \ = 0;\n    float tmp82 = 0;\n    float tmp83 = 0;\n    \nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsjxo3kvx.d(100): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjxo3kvx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder;\n    \n\
    \    trunc_number = trunc_number - trunc_number % 1;\n    \n    remainder = trunc_number\
    \ % 1;\n    \n    return remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xybgkn0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float integerPart = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    integerPart = number;\n    \n    while(integerPart\
    \ > 0.0)\n    {\n        remainder = integerPart % 10.0;\n        integerPart\
    \ = integerPart / 10.0;\n        decimals = decimals + remainder;\n    }\n   \
    \ \n    return decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7rz2y6o9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1) {\n   \
    \     result = result / 10;\n    }\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpez99l9iu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    float\
    \ quotient = 0.0;\n    \n    quotient = number;\n    \n    while(quotient > 0.0)\n\
    \    {\n        remainder = quotient % 1.0;\n        quotient = quotient / 1.0;\n\
    \        decimals = remainder;\n    }\n    \n    return decimals;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjdb6y_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    float integer_part;\n    float decimal_part;\n\
    \    \n    integer_part = floor(number);\n    decimal_part = number - integer_part;\n\
    \    \n    remainder = number - integer_part;\n    \n    return remainder;\n}\n\
    /*\n Given a positive floating point number, it can be decomposed into\n    and\
    \ integer part (largest integer smaller than given number) and decimals\n    (leftover\
    \ part always smaller than 1).\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu9rm_jdm.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpu9rm_jdm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    int exponent;\n\
    \    int decimal_point;\n    \n    exponent = std.math.frexp(number, &remainder);\n\
    \    \n    decimal_point = exponent - 1;\n    \n    result = remainder * std.math.pow(10.0,\
    \ decimal_point);\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8df0x31f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float trunc_number = number;\n    float remainder = 0;\n  \
    \  float decimal_part = 0;\n    int decimal_part_count = 0;\n    \n    while(trunc_number\
    \ > 0)\n    {\n        remainder = trunc_number % 10;\n        trunc_number =\
    \ trunc_number / 10;\n        decimal_part_count++;\n    }\n    \n    decimal_part\
    \ = trunc_number;\n    \n    while(decimal_part_count > 0)\n    {\n        trunc_number\
    \ = trunc_number * 10;\n        decimal_part_count--;\n    }\n    \n    return\
    \ decimal_part;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n  \
    \  assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1w8480_v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    int int_part;\n    float frac_part;\n    \n    int_part = trunc(number);\n\
    \    frac_part = number - int_part;\n    \n    return frac_part;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79mskl90.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = number - truncate_number(number);\n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv7ty66py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float remainder;\n    \n    while(result\
    \ > 1)\n    {\n        remainder = result % 10;\n        result = result / 10;\n\
    \        \n        if(remainder > 0)\n        {\n            result += 1;\n  \
    \      }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpenp1asio.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float remainder = 0.0;\n    \n \
    \   float remainder_float = remainder(number, 1.0);\n    float integer_part =\
    \ floor(number);\n    float decimal_part = number - integer_part;\n    \n    decimals\
    \ = decimal_part;\n    \n    return remainder_float;\n}\nunittest\n{\n    alias\
    \ candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zvozoox.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float remainder;\n    int integer_part;\n    float decimal_part;\n\
    \    \n    integer_part = trunc(number);\n    \n    decimal_part = number - integer_part;\n\
    \    \n    remainder = number - integer_part - decimal_part;\n    \n    return\
    \ remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpehzjsg6b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimal = number % 1;\n    float integer = number / 1;\n\
    \    return decimal;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec6gi2nc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    while(result > 1)\n    {\n\
    \        result = result / 10;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cc9j68s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    int_part = floor(number);\n    \n    while(number\
    \ > int_part)\n    {\n        number = number - int_part;\n        decimals =\
    \ decimals + 1.0;\n    }\n    \n    remainder = number - int_part;\n    \n   \
    \ return remainder;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n\
    \    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n  \
    \  assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5db3trvt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float decimals = 0.0;\n    float int_part = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder =\
    \ number % 10.0;\n        number = number / 10.0;\n        decimals = decimals\
    \ + remainder;\n        int_part = int_part + remainder;\n    }\n    \n    return\
    \ decimals;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5)\
    \ == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0)\
    \ == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfysij5jk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = 0.0;\n    float\
    \ remainder = 0.0;\n    \n    while(number > 0.0)\n    {\n        remainder =\
    \ number % 10.0;\n        decimals += remainder;\n        number = number / 10.0;\n\
    \    }\n    \n    result = result + decimals;\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n\
    \    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95foadsa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    float decimals = number - int(number);\n\
    \    \n    while(decimals > 0.0f)\n    {\n        decimals -= 1.0f;\n        result\
    \ -= 1.0f;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25)\
    \ == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqpmc52uo.d(14): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpqpmc52uo.d(14): Error: semicolon expected, not \'')\''\n/tmp/tmpqpmc52uo.d(14):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqpmc52uo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Given a positive floating\
    \ point number, it can be decomposed into\n    and integer part (largest integer\
    \ smaller than given number) and decimals\n    (leftover part always smaller than\
    \ 1).\n\n    Return the decimal part of the number.\n        \n*/\nfloat truncate_number(float\
    \ number) \n{\n    float result = number;\n    \n    float decimals = number -\
    \ int(number);\n    \n    if(decimals > 0)\n    {\n        result -= decimals;\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = truncate_number;\n\
    \n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n \
    \   assert(candidate(123.0) == 0.0);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsk1niocu.d(15): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpsk1niocu.d(15): Error: semicolon expected, not \'')\''\n/tmp/tmpsk1niocu.d(15):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsk1niocu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015612

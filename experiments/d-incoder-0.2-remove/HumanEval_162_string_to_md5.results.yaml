language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc3sjf0v1.d(12): Error: basic type expected, not `;`

    /tmp/tmpc3sjf0v1.d(14): Error: found `md5` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3sjf0v1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z1c278y.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z1c278y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jkwkcj0.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jkwkcj0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg07r9nh.d(16): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpsg07r9nh.d(19): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg07r9nh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes,\
    \ md5);\n    return Nullable!(string)std.typecons.hashToString(md5);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3wp1925o.d(15): Error: found `std` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wp1925o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzm1u7ohd.d(12): Error: undefined identifier `MD5`

    /tmp/tmpzm1u7ohd.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzm1u7ohd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl4pb6ju_.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl4pb6ju_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\") {\n        result =\
    \ md5(text);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8zz0rn1y.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8zz0rn1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy12xsl0x.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpy12xsl0x.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy12xsl0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\") {\n        hash\
    \ = md5(text);\n    }\n    \n    return hash;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfy4hsh6u.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfy4hsh6u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    return hash\
    \ != null ? new string(hash) : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpui4tlxul.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpui4tlxul.d(13): Error: undefined identifier `md5`

    /tmp/tmpui4tlxul.d(14): Error: cannot implicitly convert expression `hash` of
    type `byte[]` to `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpui4tlxul.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = std.md5.hash(text);\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb9co02b.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb9co02b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toHex(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpafbl44_6.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpafbl44_6.d(14): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpafbl44_6.d(15): Error: undefined identifier `string` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafbl44_6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg07r9nh.d(16): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpsg07r9nh.d(19): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg07r9nh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\") {\n        md5 =\
    \ md5(text);\n    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmped410tqu.d(15): Error: function expected before `()`, not `md5.get()`
    of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmped410tqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    if (text.length == 0) {\n        hash = null;\n\
    \    } else {\n        hash = md5(text);\n    }\n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqp2u3nuh.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqp2u3nuh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuh4waxu.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuh4waxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\")\n        result\
    \ = md5(text);\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpln_p2ikd.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpln_p2ikd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplfnxg_tk.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfnxg_tk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n    {\n        MD5\
    \ md5 = MD5.create();\n        md5.update(text.asBytes());\n        result = md5.digest().asHex();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2u7m5bee.d(15): Error: undefined identifier `MD5`

    /tmp/tmp2u7m5bee.d(15): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2u7m5bee.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0s6l802v.d(12): Error: undefined identifier `MD5`

    /tmp/tmp0s6l802v.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0s6l802v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5bytes = md5(bytes);\n    return\
    \ md5bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ixjq0o3.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp5ixjq0o3.d(13): Error: undefined identifier `md5`

    /tmp/tmp5ixjq0o3.d(14): Error: no property `as_bytes` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ixjq0o3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_string();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1p49h_qs.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp1p49h_qs.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp1p49h_qs.d(14): Error: no property `to_string` for type `byte[]`

    /tmp/tmp1p49h_qs.d(15): Error: cannot implicitly convert expression `md5_string`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1p49h_qs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.string::md5(text, result);\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpesug74m4.d(13): Error: found `:` when expecting `;` following statement

    /tmp/tmpesug74m4.d(13): Error: found `:` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpesug74m4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5, 0);\n    return std.string.format(\n        \"%032x\",\n        std.array.to!string(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3r2ayo4p.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmp3r2ayo4p.d(14): Error: undefined identifier `crypto` in package `std`

    /tmp/tmp3r2ayo4p.d(15): Error: undefined identifier `string` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3r2ayo4p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n   \
    \ }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37m1plb4.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmp37m1plb4.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37m1plb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = \"\";\n    foreach(char c in text) {\n        hash\
    \ += std.hashing.md5(c.to!string);\n    }\n    return hash;\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaqduhuq8.d(14): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaqduhuq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text == \"\") {\n        result = null;\n\
    \    } else {\n        MD5 md5 = MD5Engine.MD5Engine();\n        md5.update(text.as_bytes());\n\
    \        result = md5.digest();\n    }\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc0ahtoik.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0ahtoik.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash != null ? new string(hash) : null;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeyde1s2i.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpeyde1s2i.d(13): Error: undefined identifier `MD5`

    /tmp/tmpeyde1s2i.d(14): Error: cannot implicitly convert expression `hash` of
    type `byte[]` to `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeyde1s2i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return Nullable!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpob7nauy_.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpob7nauy_.d(14): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpob7nauy_.d(15): Error: `inout` method `std.typecons.Nullable!string.Nullable.this`
    is not callable using a mutable object

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpob7nauy_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_string();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1p49h_qs.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp1p49h_qs.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp1p49h_qs.d(14): Error: no property `to_string` for type `byte[]`

    /tmp/tmp1p49h_qs.d(15): Error: cannot implicitly convert expression `md5_string`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1p49h_qs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.length == 0)\n    {\n       \
    \ result = null;\n    }\n    else\n    {\n        byte[] bytes = text.toBytes();\n\
    \        byte[] hash = MD5.hash(bytes);\n        result = std.string.format(\n\
    \            \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvsmavwaf.d(29): Error: found `Hello` when expecting `,`

    /tmp/tmpvsmavwaf.d(30): Error: number `3e25960` is not representable

    /tmp/tmpvsmavwaf.d(29): Error: found `");\x0a        assert(!result.isNull &&
    result.get == "` when expecting `,`

    /tmp/tmpvsmavwaf.d(30): Error: found `a79dbc69b674cd4ec67a72c62` when expecting
    `,`

    /tmp/tmpvsmavwaf.d(34): Error: Implicit string concatenation is deprecated, use
    ");\x0a}\x0a\x0a{\x0a        auto result = candidate(" ~ ");\x0a        assert(result.isNull);\x0a}\x0a\x0a{\x0a        auto
    result = candidate(" instead

    /tmp/tmpvsmavwaf.d(39): Error: found `A` when expecting `,`

    /tmp/tmpvsmavwaf.d(39): Error: found `C` when expecting `,`

    /tmp/tmpvsmavwaf.d(40): Error: missing exponent

    /tmp/tmpvsmavwaf.d(40): Error: found `0.00000f` when expecting `,`

    /tmp/tmpvsmavwaf.d(40): Error: radix 10 digit expected, not `b`

    /tmp/tmpvsmavwaf.d(40): Error: found `b0cb8cef12743f5aeb35f888` when expecting
    `,`

    /tmp/tmpvsmavwaf.d(44): Error: found `password` when expecting `,`

    /tmp/tmpvs'
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fjiuxxe.d(22): Error: found `Hello` when expecting `,`

    /tmp/tmp1fjiuxxe.d(23): Error: number `3e25960` is not representable

    /tmp/tmp1fjiuxxe.d(22): Error: found `");\x0a        assert(!result.isNull &&
    result.get == "` when expecting `,`

    /tmp/tmp1fjiuxxe.d(23): Error: found `a79dbc69b674cd4ec67a72c62` when expecting
    `,`

    /tmp/tmp1fjiuxxe.d(27): Error: Implicit string concatenation is deprecated, use
    ");\x0a}\x0a\x0a{\x0a        auto result = candidate(" ~ ");\x0a        assert(result.isNull);\x0a}\x0a\x0a{\x0a        auto
    result = candidate(" instead

    /tmp/tmp1fjiuxxe.d(32): Error: found `A` when expecting `,`

    /tmp/tmp1fjiuxxe.d(32): Error: found `C` when expecting `,`

    /tmp/tmp1fjiuxxe.d(33): Error: missing exponent

    /tmp/tmp1fjiuxxe.d(33): Error: found `0.00000f` when expecting `,`

    /tmp/tmp1fjiuxxe.d(33): Error: radix 10 digit expected, not `b`

    /tmp/tmp1fjiuxxe.d(33): Error: found `b0cb8cef12743f5aeb35f888` when expecting
    `,`

    /tmp/tmp1fjiuxxe.d(37): Error: found `password` when expecting `,`

    /tmp/tmp1f'
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = md5.hash(bytes);\n\
    \    string md5_string = md5_bytes.as_dec().as_string();\n    return md5_string;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7367z16.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpq7367z16.d(13): Error: undefined identifier `md5`

    /tmp/tmpq7367z16.d(14): Error: no property `as_dec` for type `byte[]`

    /tmp/tmpq7367z16.d(15): Error: cannot implicitly convert expression `md5_string`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7367z16.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmd_g31nb.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpmd_g31nb.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmd_g31nb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_u6ojyg7.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u6ojyg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = md5(text);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo09hv1_b.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo09hv1_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy12xsl0x.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpy12xsl0x.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy12xsl0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    md5 = _md5.md5(text);\n    return md5;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppdj4mm_u.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppdj4mm_u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_rdenk0d.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_rdenk0d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n\
    \    }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjk3fmya_.d(14): Error: function expected before `()`, not `md5.get()`
    of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjk3fmya_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text != \"\") {\n        MD5 md5 = MD5Engine.Create();\n\
    \        md5.Update(text.as_bytes());\n        result = md5.digest().as_bytes();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiwynd4kb.d(14): Error: undefined identifier `MD5`

    /tmp/tmpiwynd4kb.d(14): Error: undefined identifier `MD5Engine`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwynd4kb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    string result\
    \ = \"\";\n    for(int i = 0; i < hash.length; i++)\n    {\n        result +=\
    \ hash[i].toHexString();\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7676sfac.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmp7676sfac.d(13): Error: undefined identifier `md5`

    /tmp/tmp7676sfac.d(17): Error: no property `toHexString` for type `byte`

    /tmp/tmp7676sfac.d(19): Error: cannot implicitly convert expression `result` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7676sfac.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_str = std.string.escape_xml(std.bytes.to_string(md5_bytes));\n\
    \    return md5_str;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp__iv50qi.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp__iv50qi.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp__iv50qi.d(14): Error: undefined identifier `string` in package `std`

    /tmp/tmp__iv50qi.d(15): Error: cannot implicitly convert expression `md5_str`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__iv50qi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4__zjbl8.d(15): Error: function expected before `()`, not `md5.get()`
    of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4__zjbl8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result = \"\";\n    foreach (char c in text) {\n        result += (char)std.hashlib.md5(c.codePointAt(0)).codePointAt(0);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb10nlc5w.d(13): Error: found `in` when expecting `;`

    /tmp/tmpb10nlc5w.d(14): Error: C style cast illegal, use `cast(char)std.hashlib.md5(c.codePointAt(0)).codePointAt(0)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb10nlc5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg07r9nh.d(16): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpsg07r9nh.d(19): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg07r9nh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.as_deref().as_string();\n    return md5_string;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr6iw6zst.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpr6iw6zst.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpr6iw6zst.d(14): Error: no property `as_deref` for type `byte[]`

    /tmp/tmpr6iw6zst.d(15): Error: cannot implicitly convert expression `md5_string`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr6iw6zst.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash == null ? null : string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppeddnxlk.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmppeddnxlk.d(13): Error: undefined identifier `MD5`

    /tmp/tmppeddnxlk.d(14): Error: function expected before `()`, not `string` of
    type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppeddnxlk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toHexString(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp55jlv4sh.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmp55jlv4sh.d(14): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp55jlv4sh.d(15): Error: undefined identifier `string` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp55jlv4sh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\") {\n        hash = std.hashlib.md5(text);\n\
    \    }\n    return hash;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2o4xnay.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2o4xnay.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuamjm5wu.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuamjm5wu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0) {\n        result = md5(text);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9n1pmxny.d(13): Error: no property `Length` for type `string`

    /tmp/tmp9n1pmxny.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9n1pmxny.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\") {\n        MD5\
    \ md5 = MD5();\n        md5.update(text.as_bytes());\n        result = md5.digest().as_bytes();\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmq8u7dzz.d(15): Error: undefined identifier `MD5`

    /tmp/tmpmq8u7dzz.d(15): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmq8u7dzz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n  \
    \  result = md5.digest();\n    if (result.length != 32) {\n        return null;\n\
    \    }\n    return result.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnrcm492p.d(13): Error: undefined identifier `MD5`

    /tmp/tmpnrcm492p.d(13): Error: undefined identifier `MD5`

    /tmp/tmpnrcm492p.d(19): Error: no property `as_bytes` for type `string`

    /tmp/tmpnrcm492p.d(17): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrcm492p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    return hash\
    \ != null ? hash.hex() : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv4uvoyhz.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpv4uvoyhz.d(13): Error: undefined identifier `md5`

    /tmp/tmpv4uvoyhz.d(14): Error: no property `hex` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4uvoyhz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash == null ? null : string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppeddnxlk.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmppeddnxlk.d(13): Error: undefined identifier `MD5`

    /tmp/tmppeddnxlk.d(14): Error: function expected before `()`, not `string` of
    type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppeddnxlk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprkyxzra_.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmprkyxzra_.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprkyxzra_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5_bytes.as!string;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpefgqasu2.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpefgqasu2.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpefgqasu2.d(14): Error: no property `as` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpefgqasu2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrqn2x89.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrqn2x89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    /tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q8m_3mf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    /tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q8m_3mf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%032x\",\n        std.array.arrayize(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpymxqnmwk.d(12): Error: no property `toBytes` for type `string`

    /tmp/tmpymxqnmwk.d(14): Error: undefined identifier `crypto` in package `std`

    /tmp/tmpymxqnmwk.d(15): Error: undefined identifier `string` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpymxqnmwk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%032x\",\n        std.bitmanip.bitxor(md5,\
    \ std.bitmanip.bitreverse(md5)));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6yp0jind.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp6yp0jind.d(14): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp6yp0jind.d(15): Error: undefined identifier `string` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6yp0jind.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z1c278y.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z1c278y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text.length == 0)\n        return Nullable!(string)\
    \ md5;\n    md5 = md5(text);\n    return Nullable!(string) md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7p5p9zlf.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    /tmp/tmp7p5p9zlf.d(14): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp7p5p9zlf.d(16): Error: found `md5` when expecting `;` following `return`
    statement

    /tmp/tmp7p5p9zlf.d(16): Deprecation: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7p5p9zlf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc3sjf0v1.d(12): Error: basic type expected, not `;`

    /tmp/tmpc3sjf0v1.d(14): Error: found `md5` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3sjf0v1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_rdenk0d.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_rdenk0d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.Length > 0)\n        result =\
    \ md5(text);\n    else\n        result = None;\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxbludsy.d(14): Error: no property `Length` for type `string`

    /tmp/tmpjxbludsy.d(15): Error: undefined identifier `md5`

    /tmp/tmpjxbludsy.d(17): Error: undefined identifier `None`, did you mean struct
    `No`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxbludsy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy12xsl0x.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpy12xsl0x.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy12xsl0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrqn2x89.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrqn2x89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_u6ojyg7.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u6ojyg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuh4waxu.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuh4waxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0wyp51en.d(22): Error: found `Hello` when expecting `,`

    /tmp/tmp0wyp51en.d(23): Error: number `3e25960` is not representable

    /tmp/tmp0wyp51en.d(22): Error: found `");\x0a        assert(!result.isNull &&
    result.get == "` when expecting `,`

    /tmp/tmp0wyp51en.d(23): Error: found `a79dbc69b674cd4ec67a72c62` when expecting
    `,`

    /tmp/tmp0wyp51en.d(27): Error: Implicit string concatenation is deprecated, use
    ");\x0a}\x0a\x0a{\x0a        auto result = candidate(" ~ ");\x0a        assert(result.isNull);\x0a}\x0a\x0a{\x0a        auto
    result = candidate(" instead

    /tmp/tmp0wyp51en.d(32): Error: found `A` when expecting `,`

    /tmp/tmp0wyp51en.d(32): Error: found `C` when expecting `,`

    /tmp/tmp0wyp51en.d(33): Error: missing exponent

    /tmp/tmp0wyp51en.d(33): Error: found `0.00000f` when expecting `,`

    /tmp/tmp0wyp51en.d(33): Error: radix 10 digit expected, not `b`

    /tmp/tmp0wyp51en.d(33): Error: found `b0cb8cef12743f5aeb35f888` when expecting
    `,`

    /tmp/tmp0wyp51en.d(37): Error: found `password` when expecting `,`

    /tmp/tmp0w'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0) {\n        MD5 md5 = MD5.Create();\n\
    \        byte[] bytes = md5.ComputeHash(Encoding.UTF8.GetBytes(text));\n     \
    \   result = Encoding.UTF8.GetString(bytes);\n    }\n    return result;\n}\n/*\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppkk0vnuu.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppkk0vnuu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplfnxg_tk.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfnxg_tk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmd_g31nb.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpmd_g31nb.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmd_g31nb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5_bytes.as!string;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpefgqasu2.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpefgqasu2.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpefgqasu2.d(14): Error: no property `as` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpefgqasu2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0)\n        result = std.hashlib.md5(text).hexdigest();\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_0yf43ft.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0yf43ft.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.string::md5(text, result);\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpesug74m4.d(13): Error: found `:` when expecting `;` following statement

    /tmp/tmpesug74m4.d(13): Error: found `:` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpesug74m4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3z1c278y.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3z1c278y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrqn2x89.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrqn2x89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.algorithm.md5(bytes);\n\
    \    return md5_bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpargrbmaa.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpargrbmaa.d(13): Error: undefined identifier `algorithm` in package `std`

    /tmp/tmpargrbmaa.d(14): Error: no property `as_bytes` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpargrbmaa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n   \
    \ }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37m1plb4.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmp37m1plb4.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37m1plb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.length == 0) {\n        result\
    \ = null;\n    }\n    else {\n        result = md5(text);\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpry6340_p.d(18): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpry6340_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu8az7gv_.d(12): Error: undefined identifier `MD5`

    /tmp/tmpu8az7gv_.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu8az7gv_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n    {\n       \
    \ md5 = md5(text);\n    }\n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6isk0flo.d(16): Error: function expected before `()`, not `md5.get()`
    of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6isk0flo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\") {\n        byte[] bytes\
    \ = text.as_bytes();\n        MD5 md5 = MD5();\n        md5.update(bytes);\n \
    \       result = md5.digest();\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqqudv7rv.d(14): Error: no property `as_bytes` for type `string`

    /tmp/tmpqqudv7rv.d(15): Error: undefined identifier `MD5`

    /tmp/tmpqqudv7rv.d(15): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqudv7rv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        result = None;\n\
    \    } else {\n        MD5 md5 = MD5();\n        md5.update(text.getBytes());\n\
    \        result = md5.digest().toHexString();\n    }\n    return result;\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm4l0p_qx.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm4l0p_qx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash != null ? hash : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphu0tsvzd.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmphu0tsvzd.d(13): Error: undefined identifier `md5`

    /tmp/tmphu0tsvzd.d(14): Error: cannot implicitly convert expression `hash != null
    ? hash : null` of type `byte[]` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphu0tsvzd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = std.md5.hash(text);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2kew1klq.d(14): Error: undefined identifier `md5` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2kew1klq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text != \"\") {\n        std.md5(text, result);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl10a54tg.d(14): Error: undefined identifier `md5` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl10a54tg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\")\n        hash = md5(text);\n\
    \    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvtbe2uhx.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvtbe2uhx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppnr_2x_o.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmppnr_2x_o.d(13): Error: undefined identifier `md5`

    /tmp/tmppnr_2x_o.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnr_2x_o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fjiuxxe.d(22): Error: found `Hello` when expecting `,`

    /tmp/tmp1fjiuxxe.d(23): Error: number `3e25960` is not representable

    /tmp/tmp1fjiuxxe.d(22): Error: found `");\x0a        assert(!result.isNull &&
    result.get == "` when expecting `,`

    /tmp/tmp1fjiuxxe.d(23): Error: found `a79dbc69b674cd4ec67a72c62` when expecting
    `,`

    /tmp/tmp1fjiuxxe.d(27): Error: Implicit string concatenation is deprecated, use
    ");\x0a}\x0a\x0a{\x0a        auto result = candidate(" ~ ");\x0a        assert(result.isNull);\x0a}\x0a\x0a{\x0a        auto
    result = candidate(" instead

    /tmp/tmp1fjiuxxe.d(32): Error: found `A` when expecting `,`

    /tmp/tmp1fjiuxxe.d(32): Error: found `C` when expecting `,`

    /tmp/tmp1fjiuxxe.d(33): Error: missing exponent

    /tmp/tmp1fjiuxxe.d(33): Error: found `0.00000f` when expecting `,`

    /tmp/tmp1fjiuxxe.d(33): Error: radix 10 digit expected, not `b`

    /tmp/tmp1fjiuxxe.d(33): Error: found `b0cb8cef12743f5aeb35f888` when expecting
    `,`

    /tmp/tmp1fjiuxxe.d(37): Error: found `password` when expecting `,`

    /tmp/tmp1f'
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = d2i_md5(text.as_bytes(), text.len());\n    return\
    \ hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp5rg_uam.d(13): Error: undefined identifier `d2i_md5`

    /tmp/tmpp5rg_uam.d(14): Error: cannot implicitly convert expression `hash` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp5rg_uam.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    md5 = new MD5Engine().hash(text);\n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbecj8_g.d(13): Error: undefined identifier `MD5Engine`

    /tmp/tmpqbecj8_g.d(14): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbecj8_g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpckkkhlah.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckkkhlah.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmd_g31nb.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpmd_g31nb.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmd_g31nb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = \"\";\n    \n    foreach(char c in text) {\n\
    \        hash += std.hashing.md5(to!char(c));\n    }\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2puhic2u.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2puhic2u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpckkkhlah.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckkkhlah.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        result = None;\n\
    \    } else {\n        MD5 md5 = MD5.new();\n        md5.update(text.as_bytes());\n\
    \        result = md5.digest();\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6sqzksvx.d(16): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6sqzksvx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text == \"\") {\n        result =\
    \ None;\n    } else {\n        result = md5(text);\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcvgyv2pm.d(15): Error: undefined identifier `None`, did you mean
    struct `No`?

    /tmp/tmpcvgyv2pm.d(17): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcvgyv2pm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg07r9nh.d(16): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpsg07r9nh.d(19): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg07r9nh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgjcu07u0.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgjcu07u0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuamjm5wu.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuamjm5wu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toBitArray(md5)\n\
    \    );\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n     \
    \   auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjbbp1r8g.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbbp1r8g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu8az7gv_.d(12): Error: undefined identifier `MD5`

    /tmp/tmpu8az7gv_.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu8az7gv_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = dto.md5(text);\n    \n    return hash;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuz6q52t6.d(14): Error: undefined identifier `dto`

    /tmp/tmpuz6q52t6.d(16): Error: cannot implicitly convert expression `hash` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuz6q52t6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzm1u7ohd.d(12): Error: undefined identifier `MD5`

    /tmp/tmpzm1u7ohd.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzm1u7ohd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5bytes == null ? null : string(md5bytes);\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_lvirzxu.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp_lvirzxu.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmp_lvirzxu.d(14): Error: function expected before `()`, not `string` of
    type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lvirzxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprkyxzra_.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmprkyxzra_.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprkyxzra_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    /tmp/tmp_q8m_3mf.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_q8m_3mf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgu_4s4je.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgu_4s4je.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.md5(text, result);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp53rubs8a.d(13): Error: undefined identifier `md5` in package `std`

    /tmp/tmp53rubs8a.d(14): Error: cannot implicitly convert expression `result` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53rubs8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgu_4s4je.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgu_4s4je.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuh4waxu.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuh4waxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprkyxzra_.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmprkyxzra_.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprkyxzra_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return std.string.format(\n        \"%032x\",\n        std.int.to!int(md5bytes));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8t2xv3k.d(16): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8t2xv3k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuamjm5wu.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuamjm5wu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\")\n    {\n    \
    \    result = md5(text);\n    }\n    \n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbq5v_bpc.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbq5v_bpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text == \"\") {\n        result = None;\n\
    \    } else {\n        result = md5(text);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppcm0lv4m.d(14): Error: undefined identifier `None`, did you mean
    struct `No`?

    /tmp/tmppcm0lv4m.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcm0lv4m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ string_to_string(hash);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8cifm09f.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cifm09f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ hash != null ? string_from_bytes(hash) : null;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2rwmt9p1.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmp2rwmt9p1.d(13): Error: undefined identifier `md5`

    /tmp/tmp2rwmt9p1.d(14): Error: undefined identifier `string_from_bytes`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2rwmt9p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result = \"\";\n    foreach(char c in text) {\n        result += char_to_md5(c);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpepi8h0wr.d(13): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpepi8h0wr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\") {\n        hash = md5(text);\n\
    \    }\n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyftrgo7r.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyftrgo7r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.md5(text, result);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp53rubs8a.d(13): Error: undefined identifier `md5` in package `std`

    /tmp/tmp53rubs8a.d(14): Error: cannot implicitly convert expression `result` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53rubs8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg07r9nh.d(16): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpsg07r9nh.d(19): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg07r9nh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuh4waxu.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuh4waxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = md5(text);\n    \n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyxhm310f.d(14): Error: undefined identifier `md5`

    /tmp/tmpyxhm310f.d(16): Error: cannot implicitly convert expression `hash` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyxhm310f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_rdenk0d.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_rdenk0d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3rjto8y1.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3rjto8y1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpju53ovvn.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpju53ovvn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text != \"\") {\n        result =\
    \ md5(text);\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf5f6ec8j.d(15): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5f6ec8j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5, 0);\n    return Nullable!(string)md5ToString(md5);\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8oiqh1fz.d(15): Error: found `md5ToString` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8oiqh1fz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpckkkhlah.d(12): Error: basic type expected, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckkkhlah.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1s2_mk7o.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s2_mk7o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_hex();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwkhlbcrw.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpwkhlbcrw.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpwkhlbcrw.d(14): Error: no property `to_hex` for type `byte[]`

    /tmp/tmpwkhlbcrw.d(15): Error: cannot implicitly convert expression `md5_string`
    of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwkhlbcrw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).as_bytes();\n\
    \    return md5_bytes.as_string();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn1q3zut2.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpn1q3zut2.d(13): Error: undefined identifier `hashlib` in package `std`

    /tmp/tmpn1q3zut2.d(14): Error: no property `as_string` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1q3zut2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoivl0njy.d(268): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoivl0njy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = \"\";\n    foreach(char c in text) {\n        hash\
    \ += char_to_md5(c);\n    }\n    return hash;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5l28indd.d(14): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5l28indd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnyy8tryi.d(12): Error: basic type expected, not `;`

    /tmp/tmpnyy8tryi.d(14): Error: found `md5` when expecting `;` following `return`
    statement

    /tmp/tmpnyy8tryi.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnyy8tryi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuh4waxu.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuh4waxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl4pb6ju_.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl4pb6ju_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164302
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    /tmp/tmpk4o3s1p1.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4o3s1p1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_rdenk0d.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_rdenk0d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy12xsl0x.d(14): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpy12xsl0x.d(16): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy12xsl0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        throw e;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn8zmb2mt.d(15): Error: function expected before `()`, not `md5`
    of type `string`

    /tmp/tmpn8zmb2mt.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn8zmb2mt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl9cqwq8.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxl9cqwq8.d(13): Error: undefined identifier `md5`

    /tmp/tmpxl9cqwq8.d(14): Error: undefined identifier `hash_to_string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl9cqwq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\")\n    {\n        hash\
    \ = md5(text);\n    }\n    return hash;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfciy4dcv.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfciy4dcv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrqn2x89.d(14): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrqn2x89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    /tmp/tmpc7z_t4de.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7z_t4de.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n    {\n       \
    \ md5 = md5(text);\n    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy977tccm.d(16): Error: function expected before `()`, not `md5.get()`
    of type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy977tccm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcm7luwup.d(12): Error: undefined identifier `MD5`

    /tmp/tmpcm7luwup.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcm7luwup.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164307
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = md5.hash(bytes);\n\
    \    return md5_bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxo8jdog4.d(12): Error: no property `as_bytes` for type `string`

    /tmp/tmpxo8jdog4.d(13): Error: undefined identifier `md5`

    /tmp/tmpxo8jdog4.d(14): Error: no property `as_bytes` for type `byte[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxo8jdog4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164307
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    /tmp/tmp229_10a5.d(12): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp229_10a5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303

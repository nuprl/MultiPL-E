language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb8rqu4wt.d(12): Error: basic type expected, not ;\n/tmp/tmpb8rqu4wt.d(14):
    Error: found \''md5\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb8rqu4wt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyne_mcmg.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyne_mcmg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmputwqykp3.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmputwqykp3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqbnxqa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes,\
    \ md5);\n    return Nullable!(string)std.typecons.hashToString(md5);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9isosuwc.d(15): Error: found \''std\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9isosuwc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014778
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi31zj4gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpno_nj5ok.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpno_nj5ok.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\") {\n        result =\
    \ md5(text);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuojjfaas.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k7vbcd2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\") {\n        hash\
    \ = md5(text);\n    }\n    \n    return hash;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfnjffxa9.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpfnjffxa9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    return hash\
    \ != null ? new string(hash) : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45xk8hyo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = std.md5.hash(text);\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpifk0hy1a.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpifk0hy1a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toHex(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0iph0myn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqbnxqa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\") {\n        md5 =\
    \ md5(text);\n    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ncyp3ee.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    if (text.length == 0) {\n        hash = null;\n\
    \    } else {\n        hash = md5(text);\n    }\n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7dj148n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ly0n3i2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\")\n        result\
    \ = md5(text);\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpebtef0n6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp06f7t9nm.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp06f7t9nm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n    {\n        MD5\
    \ md5 = MD5.create();\n        md5.update(text.asBytes());\n        result = md5.digest().asHex();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcvxm9hue.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09789ipu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5bytes = md5(bytes);\n    return\
    \ md5bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_s58zczg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_string();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkpijkti.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.string::md5(text, result);\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnprpbxdv.d(13): Error: found \'':\'' when expecting \'';\''
    following statement\n/tmp/tmpnprpbxdv.d(13): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnprpbxdv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5, 0);\n    return std.string.format(\n        \"%032x\",\n        std.array.to!string(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpite6riuv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n   \
    \ }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkrnetk1d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = \"\";\n    foreach(char c in text) {\n        hash\
    \ += std.hashing.md5(c.to!string);\n    }\n    return hash;\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3424nmv.d(14): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3424nmv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text == \"\") {\n        result = null;\n\
    \    } else {\n        MD5 md5 = MD5Engine.MD5Engine();\n        md5.update(text.as_bytes());\n\
    \        result = md5.digest();\n    }\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuzm6wwen.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuzm6wwen.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash != null ? new string(hash) : null;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6vthya1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return Nullable!string(md5);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmktjs6tf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_string();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkpijkti.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.length == 0)\n    {\n       \
    \ result = null;\n    }\n    else\n    {\n        byte[] bytes = text.toBytes();\n\
    \        byte[] hash = MD5.hash(bytes);\n        result = std.string.format(\n\
    \            \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgiwtfit0.d(29): Error: found \''Hello\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(29):
    Error: found \''");\\x0a        assert(!result.isNull && result.get == "\'' when
    expecting \'',\''\n/tmp/tmpgiwtfit0.d(30): Error: number is not representable\n/tmp/tmpgiwtfit0.d(30):
    Error: found \''a79dbc69b674cd4ec67a72c62\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(39):
    Error: found \''A\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(39): Error: found
    \''C\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(40): Error: missing exponent\n/tmp/tmpgiwtfit0.d(40):
    Error: found \''0.00000f\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(40): Error:
    radix 10 digit expected\n/tmp/tmpgiwtfit0.d(40): Error: found \''b0cb8cef12743f5aeb35f888\''
    when expecting \'',\''\n/tmp/tmpgiwtfit0.d(44): Error: found \''password\'' when
    expecting \'',\''\n/tmp/tmpgiwtfit0.d(45): Error: found \''5.00000f\'' when expecting
    \'',\''\n/tmp/tmpgiwtfit0.d(45): Error: radix 10 digit expected\n/tmp/tmpgiwtfit0.d(45):
    Error: found \''dcc3b5aa765d61d8327deb882cf99\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(45):
    Error: unterminated string constant starting at /tmp/tmpgiwtfit0.d(45)\n/tmp/tmpgiwtfit0.d(49):
    Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmpgiwtfit0.d(49): Error:
    found \''EOF\'' when expecting \'')\''\n/tmp/tmpgiwtfit0.d(49): Error: found \''EOF\''
    when expecting \'';\'' following statement\n/tmp/tmpgiwtfit0.d(49): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpgiwtfit0.d(49):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgiwtfit0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplxjfjbrb.d(22): Error: found \''Hello\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(22):
    Error: found \''");\\x0a        assert(!result.isNull && result.get == "\'' when
    expecting \'',\''\n/tmp/tmplxjfjbrb.d(23): Error: number is not representable\n/tmp/tmplxjfjbrb.d(23):
    Error: found \''a79dbc69b674cd4ec67a72c62\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(32):
    Error: found \''A\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(32): Error: found
    \''C\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(33): Error: missing exponent\n/tmp/tmplxjfjbrb.d(33):
    Error: found \''0.00000f\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(33): Error:
    radix 10 digit expected\n/tmp/tmplxjfjbrb.d(33): Error: found \''b0cb8cef12743f5aeb35f888\''
    when expecting \'',\''\n/tmp/tmplxjfjbrb.d(37): Error: found \''password\'' when
    expecting \'',\''\n/tmp/tmplxjfjbrb.d(38): Error: found \''5.00000f\'' when expecting
    \'',\''\n/tmp/tmplxjfjbrb.d(38): Error: radix 10 digit expected\n/tmp/tmplxjfjbrb.d(38):
    Error: found \''dcc3b5aa765d61d8327deb882cf99\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(38):
    Error: unterminated string constant starting at /tmp/tmplxjfjbrb.d(38)\n/tmp/tmplxjfjbrb.d(42):
    Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(42): Error:
    found \''EOF\'' when expecting \'')\''\n/tmp/tmplxjfjbrb.d(42): Error: found \''EOF\''
    when expecting \'';\'' following return statement\n/tmp/tmplxjfjbrb.d(42): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplxjfjbrb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = md5.hash(bytes);\n\
    \    string md5_string = md5_bytes.as_dec().as_string();\n    return md5_string;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc265rpo7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkiejcvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7v68loh6.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7v68loh6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = md5(text);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpygjml8c4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k7vbcd2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    md5 = _md5.md5(text);\n    return md5;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4nc6_0f6.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp4nc6_0f6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdab17_ch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n\
    \    }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo1k9vewr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text != \"\") {\n        MD5 md5 = MD5Engine.Create();\n\
    \        md5.Update(text.as_bytes());\n        result = md5.digest().as_bytes();\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjoqhnk06.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    string result\
    \ = \"\";\n    for(int i = 0; i < hash.length; i++)\n    {\n        result +=\
    \ hash[i].toHexString();\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptxv89ue0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_str = std.string.escape_xml(std.bytes.to_string(md5_bytes));\n\
    \    return md5_str;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1gk6ow7y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_tzor1kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result = \"\";\n    foreach (char c in text) {\n        result += (char)std.hashlib.md5(c.codePointAt(0)).codePointAt(0);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykgiy958.d(13): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpykgiy958.d(14):
    Error: C style cast illegal, use cast(char)std.hashlib.md5(c.codePointAt(0)).codePointAt(0)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykgiy958.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqbnxqa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.as_deref().as_string();\n    return md5_string;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37n7d6lx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash == null ? null : string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuro1youh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toHexString(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxp9rmlh5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\") {\n        hash = std.hashlib.md5(text);\n\
    \    }\n    return hash;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhdzggq3.d(18): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphhdzggq3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3alr4zx.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3alr4zx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0) {\n        result = md5(text);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0r1wu5h6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\") {\n        MD5\
    \ md5 = MD5();\n        md5.update(text.as_bytes());\n        result = md5.digest().as_bytes();\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpicwrahdz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n  \
    \  result = md5.digest();\n    if (result.length != 32) {\n        return null;\n\
    \    }\n    return result.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8epb7b9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = md5(bytes);\n    return hash\
    \ != null ? hash.hex() : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp11ei4add.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] hash = MD5.hash(bytes);\n    return\
    \ hash == null ? null : string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuro1youh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd4rzuqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5_bytes.as!string;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcp26ji1x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqxelxn72.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxelxn72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckm714wa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckm714wa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%032x\",\n        std.array.arrayize(md5)\n\
    \    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3_bbwuo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%032x\",\n        std.bitmanip.bitxor(md5,\
    \ std.bitmanip.bitreverse(md5)));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwk0x5wjo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyne_mcmg.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyne_mcmg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text.length == 0)\n        return Nullable!(string)\
    \ md5;\n    md5 = md5(text);\n    return Nullable!(string) md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpazbo43zp.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\n/tmp/tmpazbo43zp.d(16): Error: found \''md5\'' when
    expecting \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpazbo43zp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb8rqu4wt.d(12): Error: basic type expected, not ;\n/tmp/tmpb8rqu4wt.d(14):
    Error: found \''md5\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb8rqu4wt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdab17_ch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.Length > 0)\n        result =\
    \ md5(text);\n    else\n        result = None;\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpan6fv2fr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k7vbcd2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqxelxn72.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxelxn72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7v68loh6.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7v68loh6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ly0n3i2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6n9p5ugw.d(22): Error: found \''Hello\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(22):
    Error: found \''");\\x0a        assert(!result.isNull && result.get == "\'' when
    expecting \'',\''\n/tmp/tmp6n9p5ugw.d(23): Error: number is not representable\n/tmp/tmp6n9p5ugw.d(23):
    Error: found \''a79dbc69b674cd4ec67a72c62\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(32):
    Error: found \''A\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(32): Error: found
    \''C\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(33): Error: missing exponent\n/tmp/tmp6n9p5ugw.d(33):
    Error: found \''0.00000f\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(33): Error:
    radix 10 digit expected\n/tmp/tmp6n9p5ugw.d(33): Error: found \''b0cb8cef12743f5aeb35f888\''
    when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(37): Error: found \''password\'' when
    expecting \'',\''\n/tmp/tmp6n9p5ugw.d(38): Error: found \''5.00000f\'' when expecting
    \'',\''\n/tmp/tmp6n9p5ugw.d(38): Error: radix 10 digit expected\n/tmp/tmp6n9p5ugw.d(38):
    Error: found \''dcc3b5aa765d61d8327deb882cf99\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(38):
    Error: unterminated string constant starting at /tmp/tmp6n9p5ugw.d(38)\n/tmp/tmp6n9p5ugw.d(42):
    Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmp6n9p5ugw.d(42): Error:
    found \''EOF\'' when expecting \'')\''\n/tmp/tmp6n9p5ugw.d(42): Error: found \''EOF\''
    when expecting \'';\'' following return statement\n/tmp/tmp6n9p5ugw.d(42): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6n9p5ugw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0) {\n        MD5 md5 = MD5.Create();\n\
    \        byte[] bytes = md5.ComputeHash(Encoding.UTF8.GetBytes(text));\n     \
    \   result = Encoding.UTF8.GetString(bytes);\n    }\n    return result;\n}\n/*\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe1zihpu5.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpe1zihpu5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp06f7t9nm.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp06f7t9nm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkiejcvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5_bytes.as!string;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcp26ji1x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.Length > 0)\n        result = std.hashlib.md5(text).hexdigest();\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm__g0x81.d(17): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpm__g0x81.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.string::md5(text, result);\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnprpbxdv.d(13): Error: found \'':\'' when expecting \'';\''
    following statement\n/tmp/tmpnprpbxdv.d(13): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnprpbxdv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyne_mcmg.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyne_mcmg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqxelxn72.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxelxn72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.algorithm.md5(bytes);\n\
    \    return md5_bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0200xf1v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n   \
    \ }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkrnetk1d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text.length == 0) {\n        result\
    \ = null;\n    }\n    else {\n        result = md5(text);\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo1_gv3_x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ms_va98.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n    {\n       \
    \ md5 = md5(text);\n    }\n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprpipz_pc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\") {\n        byte[] bytes\
    \ = text.as_bytes();\n        MD5 md5 = MD5();\n        md5.update(bytes);\n \
    \       result = md5.digest();\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqt4p3w2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        result = None;\n\
    \    } else {\n        MD5 md5 = MD5();\n        md5.update(text.getBytes());\n\
    \        result = md5.digest().toHexString();\n    }\n    return result;\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm_bxhh8g.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpm_bxhh8g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash != null ? hash : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeht0grjp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    if (text != \"\")\n        result = std.md5.hash(text);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09pnzaln.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text != \"\") {\n        std.md5(text, result);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvp428m1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\")\n        hash = md5(text);\n\
    \    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9o8ojug.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ohri4ql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[16];\n    std.crypto.md5(bytes,\
    \ md5);\n    return std.string.format(\n        \"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplxjfjbrb.d(22): Error: found \''Hello\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(22):
    Error: found \''");\\x0a        assert(!result.isNull && result.get == "\'' when
    expecting \'',\''\n/tmp/tmplxjfjbrb.d(23): Error: number is not representable\n/tmp/tmplxjfjbrb.d(23):
    Error: found \''a79dbc69b674cd4ec67a72c62\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(32):
    Error: found \''A\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(32): Error: found
    \''C\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(33): Error: missing exponent\n/tmp/tmplxjfjbrb.d(33):
    Error: found \''0.00000f\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(33): Error:
    radix 10 digit expected\n/tmp/tmplxjfjbrb.d(33): Error: found \''b0cb8cef12743f5aeb35f888\''
    when expecting \'',\''\n/tmp/tmplxjfjbrb.d(37): Error: found \''password\'' when
    expecting \'',\''\n/tmp/tmplxjfjbrb.d(38): Error: found \''5.00000f\'' when expecting
    \'',\''\n/tmp/tmplxjfjbrb.d(38): Error: radix 10 digit expected\n/tmp/tmplxjfjbrb.d(38):
    Error: found \''dcc3b5aa765d61d8327deb882cf99\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(38):
    Error: unterminated string constant starting at /tmp/tmplxjfjbrb.d(38)\n/tmp/tmplxjfjbrb.d(42):
    Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmplxjfjbrb.d(42): Error:
    found \''EOF\'' when expecting \'')\''\n/tmp/tmplxjfjbrb.d(42): Error: found \''EOF\''
    when expecting \'';\'' following return statement\n/tmp/tmplxjfjbrb.d(42): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplxjfjbrb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = d2i_md5(text.as_bytes(), text.len());\n    return\
    \ hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi54pclj6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    md5 = new MD5Engine().hash(text);\n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbcbaso4e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsx1yqus.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpbsx1yqus.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptkiejcvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = \"\";\n    \n    foreach(char c in text) {\n\
    \        hash += std.hashing.md5(to!char(c));\n    }\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr6hd09cw.d(16): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr6hd09cw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsx1yqus.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpbsx1yqus.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text.length == 0) {\n        result = None;\n\
    \    } else {\n        MD5 md5 = MD5.new();\n        md5.update(text.as_bytes());\n\
    \        result = md5.digest();\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb2ahnn9t.d(16): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpb2ahnn9t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text == \"\") {\n        result =\
    \ None;\n    } else {\n        result = md5(text);\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqhlxkp4h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqbnxqa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc1lv9c8b.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpc1lv9c8b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3alr4zx.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3alr4zx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.hashlib.md5(bytes).copyTo(md5);\n\
    \    return std.string.format(\n        \"%032x\",\n        std.bitArray.toBitArray(md5)\n\
    \    );\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n     \
    \   auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk23zahwa.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk23zahwa.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ms_va98.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = dto.md5(text);\n    \n    return hash;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps5d1ppco.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi31zj4gr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return md5bytes == null ? null : string(md5bytes);\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5j6u804.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd4rzuqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckm714wa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo_vxw68e.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpo_vxw68e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.md5(text, result);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteyh50oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo_vxw68e.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpo_vxw68e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ly0n3i2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd4rzuqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5bytes = std.hashlib.md5(bytes).bytes;\n\
    \    return std.string.format(\n        \"%032x\",\n        std.int.to!int(md5bytes));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp13pcgkpo.d(16): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13pcgkpo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3alr4zx.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3alr4zx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result = null;\n    \n    if (text != \"\")\n    {\n    \
    \    result = md5(text);\n    }\n    \n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8fgk8f_9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    if (text == \"\") {\n        result = None;\n\
    \    } else {\n        result = md5(text);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfu96bqe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ string_to_string(hash);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu_3s99rv.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpu_3s99rv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5.hash(bytes);\n    return\
    \ hash != null ? string_from_bytes(hash) : null;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zexxgbw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result = \"\";\n    foreach(char c in text) {\n        result += char_to_md5(c);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfpqxdt_c.d(13): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfpqxdt_c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\") {\n        hash = md5(text);\n\
    \    }\n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbh5q9bc_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string result;\n    std.md5(text, result);\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteyh50oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n\
    \    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuqbnxqa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ly0n3i2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    \n    hash = md5(text);\n    \n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp823o2xjp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdab17_ch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp29yaatpn.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp29yaatpn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkxejv9_4.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpkxejv9_4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) result;\n    \n    if (text != \"\") {\n        result =\
    \ md5(text);\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe5t2knkg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.toBytes();\n    byte[] md5 = new byte[32];\n    std.crypto.md5(bytes,\
    \ md5, 0);\n    return Nullable!(string)md5ToString(md5);\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7jgpd0_9.d(15): Error: found \''md5ToString\'' when expecting
    \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp7jgpd0_9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbsx1yqus.d(12): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpbsx1yqus.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuggwtfee.d(16): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuggwtfee.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).bytes;\n\
    \    string md5_string = md5_bytes.to_hex();\n    return md5_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppr_jaifg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = std.hashlib.md5(bytes).as_bytes();\n\
    \    return md5_bytes.as_string();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2mlvyb6c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekw9il4q.d(268): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekw9il4q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string hash;\n    hash = \"\";\n    foreach(char c in text) {\n        hash\
    \ += char_to_md5(c);\n    }\n    return hash;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe0q8mz1g.d(14): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0q8mz1g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf_1xocg1.d(12): Error: basic type expected, not ;\n/tmp/tmpf_1xocg1.d(14):
    Error: found \''md5\'' when expecting \'';\'' following return statement\n/tmp/tmpf_1xocg1.d(16):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_1xocg1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash;\n    \n    hash = md5(text);\n    \n    return hash;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ly0n3i2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return Nullable!(string)\
    \ md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpno_nj5ok.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpno_nj5ok.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_l_qevp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    \n    if (text != \"\")\n    {\n      \
    \  hash = md5(text);\n    }\n    \n    return hash;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdab17_ch.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k7vbcd2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  string md5 = null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch\
    \ (Exception e)\n    {\n        throw e;\n    }\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0r4jjb5l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] hash = md5(bytes);\n    return\
    \ hash_to_string(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponrz82gw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) hash = null;\n    if (text != \"\")\n    {\n        hash\
    \ = md5(text);\n    }\n    return hash;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8vu7r4nx.d(19): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8vu7r4nx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(string)md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqxelxn72.d(14): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxelxn72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return Nullable!(md5.digest());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_5b6ftx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  Nullable!(string) md5 = null;\n    \n    if (text != \"\")\n    {\n       \
    \ md5 = md5(text);\n    }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr40avt4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawe4xf2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  byte[] bytes = text.as_bytes();\n    byte[] md5_bytes = md5.hash(bytes);\n\
    \    return md5_bytes.as_bytes();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jhg0q7q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n        \n*/\nNullable!(string) string_to_md5(string text) \n{\n  \
    \  MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    return md5.digest();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaa7iszh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014779

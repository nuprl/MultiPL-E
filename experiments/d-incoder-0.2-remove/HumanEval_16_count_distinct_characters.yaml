name: HumanEval_16_count_distinct_characters
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n Given a string, find out how\
  \ many distinct characters (regardless of case) does it consist of\n           \
  \ \n*/\nlong count_distinct_characters(string string) \n"
tests: "unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
  \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
  ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
  Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    \n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        \n        for(int j = 0; j\
    \ < string.length(); j++)\n        {\n            char d = string[j];\n      \
    \      \n            if(c != d)\n            {\n                break;\n     \
    \       }\n        }\n        \n        count++;\n    }\n    \n    return count;\n\
    }", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\
    \tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\
    \t\tif (i != j)\n\t\t\t{\n\t\t\t\tif (string[i] == string[j])\n\t\t\t\t{\n\t\t\
    \t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n  \
    \  {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c == d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c == d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   ", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t\
    {\n\t\tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t\
    {\n\t\t\tchar d = string[j];\n\t\t\tif (c == d)\n\t\t\t{\n\t\t\t\tcount++;\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor (int j = 0; j < string.length();\
    \ j++)\n\t\t{\n\t\t\tif (i != j && string[i] == string[j])\n\t\t\t{\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t\tcount += 1;\n\t}\n\treturn count;\n}", "{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isLower(c))\n            count++;\n    }\n \
    \   return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n  \
    \          char d = string[j];\n            if(c != d)\n            {\n      \
    \          break;\n            }\n        }\n        count++;\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length(); i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUppercase(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        if(!std.typecons.isUpper(c))\n           \
    \ count++;\n    }\n    return count;\n}", "{\n\tlong count = 0;\n\tfor(int i =\
    \ 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor(int j =\
    \ 0; j < string.length(); j++)\n\t\t{\n\t\t\tchar d = string[j];\n\t\t\tif(c !=\
    \ d)\n\t\t\t{\n\t\t\t\tif(c >= 'a' && c <= 'z')\n\t\t\t\t{\n\t\t\t\t\tif(d >=\
    \ 'a' && d <= 'z')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(c != d)\n\t\t\t\t\t\t{\n\t\t\t\
    \t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\
    {\n\t\t\t\t\tif(d >= 'A' && d <= 'Z')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(c != d)\n\t\
    \t\t\t\t\t{\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ for(int j = i; j < string.length(); j++)\n        {\n            if(string[i]\
    \ == string[j])\n            {\n                count++;\n                break;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n\tlong count = 0;\n\
    \t\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\
    \t\t\n\t\tif (c >= 'A' && c <= 'Z')\n\t\t\tcount++;\n\t\telse if (c >= 'a' &&\
    \ c <= 'z')\n\t\t\tcount++;\n\t\telse if (c >= '0' && c <= '9')\n\t\t\tcount++;\n\
    \t}\n\t\n\treturn count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length; i++)\n    {\n        for(int j = 0; j < string.length; j++)\n\
    \        {\n            if(string[i] == string[j])\n            {\n          \
    \      count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n\
    \        for(int j = 0; j < string.length; j++)\n        {\n            if(string[i]\
    \ == string[j])\n            {\n                count++;\n            }\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        for(int j = 0; j < string.length; j++)\n        {\n          \
    \  if(string[i] == string[j])\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        for(int j =\
    \ 0; j < string.length; j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        for(int j = 0; j < string.length; j++)\n        {\n          \
    \  if(string[i] == string[j])\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        for(int j =\
    \ 0; j < string.length; j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int ", "{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            else\n            {\n                count++;\n  \
    \          }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length()", "{\n\
    \    long count = 0;\n    \n    for(int i = 0; i < string.length; i++)\n    {\n\
    \        char c = string[i];\n        \n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    \n    return count;\n}", "{\n\tlong\
    \ count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tfor (int j\
    \ = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i] == string[j])\n\t\
    \t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            break;\n            }\n            else\n            {\n        \
    \        count++;\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length; j++)\n        {\n            char d\
    \ = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length; i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length; j++)\n        {\n            char d\
    \ = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length; i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length; j++)\n        {\n            char d\
    \ = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        ", "{\n\tlong count = 0;\n\tfor (int\
    \ i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tif (std.ctype.isUpper(c))\n\
    \t\t\tcount++;\n\t\telse if (std.ctype.isLower(c))\n\t\t\tcount++;\n\t\telse\n\
    \t\t\tcount++;\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n  \
    \      if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length()", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n        }\n        count++;\n \
    \   }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor (int j = 0; j < string.length();\
    \ j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\
    \t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\
    \t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif\
    \ (c != d)\n\t\t\t\tbreak;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\
    \tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\
    \t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif (c !=\
    \ d)\n\t\t\t\tbreak;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\
    \tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\
    \t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif (c !=\
    \ d)\n\t\t\t\tbreak;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\
    \tchar c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\
    \t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif (c !=\
    \ d)\n\t\t\t\tbreak;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(i == j)\n            {\n                continue;\n\
    \            }\n            char c = string.charAt(i);\n            char d = string.charAt(j);\n\
    \            if(c != d)\n            {\n                continue;\n          \
    \  }\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        for(int j = 0; j < string.length(); j++)\n        {\n           \
    \ if(i == j)\n            {\n                continue;\n            }\n      \
    \      char c = string.charAt(i);\n            char d = string.charAt(j);\n  \
    \          if(c != d)\n            {\n                continue;\n            }\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(i == j)\n      \
    \      {\n                continue;\n            }\n            char c = string.charAt(i);\n\
    \            char d = string.charAt(j);\n            if(c != d)\n            {\n\
    \                continue;\n            }\n            count++;\n        }\n \
    \   }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(i == j)\n            {\n                continue;\n            }\n   \
    \         char c = string.charAt(i);\n            char d = string.charAt(j);\n\
    \            if(c != d)\n            {\n                continue;\n          \
    \  }\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        for(int j = 0; j < string.length(); j++)\n        {\n           \
    \ if(i == j)\n            {\n                continue;\n            }\n      \
    \      char c = string.charAt(i);\n            ", "{\n    long count = 0;\n  \
    \  for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string.at(j);\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                count++;\n                break;\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i =\
    \ 0; i < string.length(); i++)\n    {\n        char c = string[i];\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            char d = string[j];\n\
    \            if(c != d)\n            {\n                if(c >= 'A' && c <= 'Z')\n\
    \                {\n                    if(d >= 'A' && d <= 'Z')\n           \
    \         {\n                        if(c != d)\n                        {\n \
    \                           count++;\n                        }\n            \
    \        }\n                    else\n                    {\n                \
    \        count++;\n                    }\n                }\n                else\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n  \
    \          char d = string[j];\n            if(c != d)\n            {\n      \
    \          if(c >= 'A' && c <= 'Z')\n                {\n                    if(d\
    \ >= 'A' && d <= 'Z')\n                    {\n                        if(c !=\
    \ d)\n                        {\n                            count++;\n      \
    \                  }\n                    }\n                    else\n      \
    \              {\n                        count++;\n                    }\n  \
    \              }\n                else\n                {\n                  \
    \  count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'A' && c <= 'Z')\n                {\n \
    \                   if(d >= 'A' && d <= 'Z')\n                    {\n        \
    \                if(c != d)\n                        {\n                     \
    \       count++;\n                        }\n                    }\n         \
    \           else\n                    {\n                        count++;\n  \
    \                  }\n                }\n                else\n              \
    \  {\n                    count++;\n                }\n            }\n       \
    \ }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        char c = string[i];\n        for(int\
    \ j = i; j < string.length(); j++)\n        {\n            char d = string[j];\n\
    \            if(c != d)\n            {\n                break;\n            }\n\
    \            else\n            {\n                count++;\n            }\n  \
    \      }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            else\n            {\n                count++;\n  \
    \          }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = i; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            break;\n            }\n            else\n            {\n        \
    \        count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n", "{\n    long count = 0;\n    \n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        \n        for(int j = 0; j\
    \ < string.length(); j++)\n        {\n            char d = string[j];\n      \
    \      \n            if(c != d)\n            {\n                break;\n     \
    \       }\n            \n            count++;\n        }\n    }\n    \n    return\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n", "{\n \
    \   long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n   \
    \     char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            if(c == string[j])\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(char c in string)\n    {\n        count +=\
    \ 1;\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isLower(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(!std.isAlpha(d))\n                continue;\n\
    \            if(c == d)\n                continue;\n            count += 1;\n\
    \            break;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n \
    \       }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = i+1; j < string.length(); j++)\n        {\n            char d\
    \ = string[j];\n            if(c == d)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            if(string[i]\
    \ == string[j])\n            {\n                count++;\n            }\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return ", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        if(!std.isLower(c))\n            count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isLower(c))\n           \
    \ count++;\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c))\n            count++;\n    }\n", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string.at(i);\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n", "{\n    long count\
    \ = 0;\n    \n    foreach(char c in string)\n    {\n        if(!std.isAlpha(c))\n\
    \        {\n            count++;\n        }\n    }\n    \n    return count;\n}",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(std.isAlpha(d))\n            {\n            \
    \    count += 1;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(std.isAlpha(d))\n            {\n            \
    \    count += 1;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(std.isAlpha(d))\n            {\n            \
    \    count += 1;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(std.isAlpha(d))\n            {\n            \
    \    count += 1;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n            continue;\n\
    \        for(int j = i+1; j < string.length(); j", "{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.typecons.isUpper(c))\n        {\n            count++;\n     \
    \   }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string.at(i);\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n  \
    \          char d = string[j];\n            if(c != d)\n            {\n      \
    \          count++;\n                break;\n            }\n        }\n    }\n\
    \    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length()", "{\n\
    \    long count = 0;\n    \n    foreach(char c in string)\n    {\n        count\
    \ += 1;\n    }\n    \n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = 0; j < string.length(); j++)\n        {\n            char d =\
    \ string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            else\n            {\n                count++;\n  \
    \          }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length()", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n        }\n        count++;\n \
    \   }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string",
  "{\n    long count = 0;\n    foreach(char c in string)\n    {\n        if(!std.isLower(c))\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    \n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        \n        if(!std.typecons.isUpper(c))\n        {\n            count++;\n\
    \        }\n    }\n    \n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = 0; j < string.length(); j++)\n        {\n            char d =\
    \ string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = i; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n            else\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n  \
    \  {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length(); i++)\n    {\n        char c = string.at(i);\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            char d = string.at(j);\n\
    \            if(c != d)\n            {\n                break;\n            }\n\
    \        }\n        count++;\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n  \
    \          char d = string[j];\n            if(c != d)\n            {\n      \
    \          break;\n            }\n        }\n        count++;\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'a' && c <= 'z')\n                {\n \
    \                   if(d >= 'a' && d <= 'z')\n                    {\n        \
    \                count++;\n                    }\n                    else\n \
    \                   {\n                        count++;\n                    }\n\
    \                }\n                else\n                {\n                \
    \    if(d >= 'a' && d <= 'z')\n                    {\n                       \
    \ count++;\n                    }\n                    else\n                \
    \    {\n                        count++;\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            if(c >= 'a' && c <= 'z')\n                {\n                   \
    \ if(d >= 'a' && d <= 'z')\n                    {\n                        count++;\n\
    \                    }\n                    else\n                    {\n    \
    \                    count++;\n                    }\n                }\n    \
    \            else\n                {\n                    if(d >= 'a' && d <=\
    \ 'z')\n                    {\n                        count++;\n            \
    \        }\n                    else\n                    {\n                \
    \        count++;\n                    }\n                }\n            }\n \
    \       }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                if(c\
    \ >= 'a' && c <= 'z')\n                {\n                    if(d >= 'a' && d\
    \ <= 'z')\n                    {\n                        count++;\n         \
    \           }\n                    else\n                    {\n             \
    \           count++;\n                    }\n                }\n             \
    \   else\n                {\n                    if(d >= 'a' && d <= 'z')\n  \
    \                  {\n                        count++;\n                    }\n\
    \                    else\n                    {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\n/*\n Given a ", "{\n\tlong count = 0;\n\t\n\tfor(int i =\
    \ 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\t\n\t\tfor(int\
    \ j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tchar d = string[j];\n\t\t\t\n\
    \t\t\tif(c != d)\n\t\t\t{\n\t\t\t\tif(c >= 'a' && c <= 'z')\n\t\t\t\t{\n\t\t\t\
    \t\tif(d >= 'a' && d <= 'z')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\
    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(c >= 'A' && c <= 'Z')\n\t\t\t\t{\n\t\t\t\t\t\
    if(d >= 'A' && d <= 'Z')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t}\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length()", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            if(string[i] == string[j])\n            {\n          \
    \      count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return ", "{\n  \
    \  long count = 0;\n    \n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        char c = string[i];\n        \n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    \n    return count;\n\
    }", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n  \
    \  {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length()", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = i+1; j < string.length(); j++)\n        {\n            char d\
    \ = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string ",
  "{\n    long count = 0;\n    \n    foreach(char c in string)\n    {\n        count\
    \ += 1;\n    }\n    \n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length; i++)\n    {\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        for(int j = 0; j < string.length; j++)\n        {\n          \
    \  if(string[i] == string[j])\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        for(int j =\
    \ 0; j < string.length; j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        for(int j = 0; j < string.length; j++)\n        {\n          \
    \  if(string[i] == string[j])\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        for(int j =\
    \ 0; j < string.length; j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        for(int j = 0; j < string.length; j++)\n        {\n          \
    \  if(string[i] == string[j])\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n                break;\n            }\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n                break;\n            }\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n                break;\n            }\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n                break;\n            }\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n                break;\n            }\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; ", "{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            break;\n            }\n        }\n        count++;\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string.at(i);\n        if(!std.isLower(c))\n \
    \       {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.isLower(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.isLower(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.isLower(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.isLower(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.isLower(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int ", "{\n    long count = 0;\n    foreach(char c in string)\n    {\n\
    \        count += 1;\n    }\n    return count;\n}", "{\n\tlong count = 0;\n\t\
    for (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\t\
    for (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\t\
    continue;\n\t\t\tif (c != string[j])\n\t\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\t\
    }\n\treturn count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string.at(i);\n        \n        if(!std.isAlpha(c))\n\
    \        {\n            count += 1;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            if(c == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \         }", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }", "{\n    long count = 0;\n    for(int i = 0; i\
    \ < string.length(); i++)\n    {\n        char c = string[i];\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(c == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n            }", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length;\
    \ i++) \n\t{\n\t\tfor (int j = i; j < string.length; j++) \n\t\t{\n\t\t\tif (string[i]\
    \ == string[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string.at(i);\n        \n        for(int j = i+1;\
    \ j < string.length(); j++)\n        {\n            if(string.at(j) == c)\n  \
    \          {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length()", "{\n\tlong count = 0;\n\t\n\tfor (int\
    \ i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\t\n\t\tfor\
    \ (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\
    \t\t\t\n\t\t\tchar d = string[j];\n\t\t\t\n\t\t\tif (c != d)\n\t\t\t\tbreak;\n\
    \t\t\t\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        if(!std.algorithm.contains(string.chars,\
    \ c)) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length;\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isLower(c))\n    \
    \        count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n   \
    \ for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            else\n            {\n                count++;\n  \
    \          }\n        }\n    }\n    return count;\n}", "{\n\tlong count = 0;\n\
    \tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\t\
    for (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i != j)\n\t\t\t{\n\
    \t\t\t\tif (string[i] == string[j])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\t\
    break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string.at(i);\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string.at(j);\n            if(c != d)\n            {\n \
    \               break;\n            }\n        }\n        count++;\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length;\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i + 1; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'a' && c <= 'z')\n                {\n \
    \                   if(d >= 'a' && d <= 'z')\n                    {\n        \
    \                if(c != d)\n                        {\n                     \
    \       count++;\n                        }\n                    }\n         \
    \       }\n            }\n        }\n    }\n    return count;\n}\n/*\n Given a\
    \ string, find out how many distinct characters (regardless of case) does it consist\
    \ of\n            \n*/\nlong count_distinct_characters(string string) \n{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n \
    \       {\n            char d = string[j];\n            if(c != d)\n         \
    \   {\n                if(c >= 'a' && c <= 'z')\n                {\n         \
    \           if(d >= 'a' && d <= 'z')\n                    {\n                \
    \        if(c != d)\n                        {\n                            count++;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n  \
    \          char d = string[j];\n            if(c != d)\n            {\n      \
    \          if(c >= 'a' && c <= 'z')\n                {\n                    if(d\
    \ >= 'a' && d <= 'z')\n                    {\n                        if(c !=\
    \ d)\n                        {\n                            count++;\n      \
    \                  }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                if(c\
    \ >= 'a' && c <= 'z')\n                {\n                    if(d >= 'a' && d\
    \ <= 'z')\n                    {\n                        if(c != d)\n       \
    \                 {\n                            ", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n \
    \       {\n            char d = string[j];\n            if(c != d)\n         \
    \   {\n                break;\n            }\n        }\n        count++;\n  \
    \  }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    foreach(char c in string)\n  \
    \  {\n        count += 1;\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n\
    \        if(!std.ctype.isLower(c))\n            count += 1;\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.ctype.isLower(c))\n  \
    \          count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.ctype.isLower(c))\n            count += 1;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.ctype.isLower(c))\n  \
    \          count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.at(i);\n        if(!std.ctype.isLower(c))\n            count += 1;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        if(!std.ctype.isLower(c))\n  \
    \          count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string.", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n        }\n        count++;\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length(); i++)\n    {\n        char c = string[i];\n        for(int j\
    \ = i+1; j < string.length(); j++)\n        {\n            if(string[j] == c)\n\
    \            {\n                count++;\n                break;\n           \
    \ }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.typecons.isUpper(c))\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c in string) \n    {\n\
    \        count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length()", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n \
    \       {\n            char d = string[j];\n            if(c != d)\n         \
    \   {\n                break;\n            }\n            else\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardles",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = i+1; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c == d)\n        \
    \    {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c == d)\n \
    \           {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string[i];\n\t\tif (isupper(c))\n\t\t\tcount++;\n\t\t\
    else if (islower(c))\n\t\t\tcount++;\n\t\telse\n\t\t\tcount++;\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length()", "{\n\tlong count = 0;\n\tfor (int i =\
    \ 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tif (std.ctype.isUpper(c))\n\
    \t\t\tcount++;\n\t\telse\n\t\t\tcount += 2;\n\t}\n\treturn count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    for(int j = i+1; j < string.length(); j++)\n        {\n            if(string[i]\
    \ == string[j])\n            {\n                count++;\n            }\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = i+1; j < string.length(); j++)\n        {\n      \
    \      if(string[i] == string[j])\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = i+1; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = i+1; j < string.length(); j++)\n        {\n      \
    \      if(string[i] == string[j])\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = i+1; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = i+1; j < string.length(); j++)\n        {\n      \
    \      if(string[i] == string[j])\n            {\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of ", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isLower(c) && !std.isUpper(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c in string)\n    {\n        if(!std.isAlpha(c))\n        {\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        if(!std.isAlpha(c))\n  \
    \      {\n            count += 1;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n        if(!std.isAlpha(c))\n\
    \        {\n            count += 1;\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isAlpha(c))\n        {\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isAlpha(c))\n        {\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isAlpha(c))\n        {\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isAlpha(c))\n        {\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n \
    \       {\n            if(string[i] == string[j])\n            {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return ", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    char c = string[i];\n        if(!std.typecons.isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \          count++;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        if(!std.typecons.isUpper(c))\n            count++;\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \          count++;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        if(!std.typecons.isUpper(c))\n            count++;\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n  \
    \          count++;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        if(!std.", "{\n    long count = 0;\n    for(int i = 0; i\
    \ < string.length(); i++)\n    {\n        char c = string[i];\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            char d = string[j];\n\
    \            if(c != d)\n            {\n                break;\n            }\n\
    \            else\n            {\n                count++;\n            }\n  \
    \      }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n    \
    \    if(!std.algorithm.contains(string.begin(), string.end(), c))\n          \
    \  count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = i+1; j < string.length(); j++)\n        {\n            if(string[j]\
    \ == c)\n            {\n                count++;\n                break;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = i+1; j < string.length(); j++)\n       \
    \ {\n            if(string[j] == c)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[j] == c)\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[j] == c)\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            if(string[j] == c)\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; ", "{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return ", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        if(!std.isAlpha(c))\n        {\n        \
    \    count += 1;\n        }\n    }\n    return count;\n}", "{\n\tlong count =\
    \ 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\
    \t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\
    \tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t\
    }\n\t\tcount++;\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string.at(i);\n  \
    \      if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n\tlong count = 0;\n\tfor(int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor(int j = 0; j < string.length();\
    \ j++)\n\t\t{\n\t\t\tif(string[i] == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            count++;\n \
    \       }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            count++;\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            count++;\n \
    \       }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            count++;\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            count++;\n \
    \       }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string ", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length; i++)\n    {\n        char c = string[i];\n       \
    \ for(int j = 0; j < string.length; j++)\n        {\n            if(c == string[j])\n\
    \            {\n                count++;\n                break;\n           \
    \ }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out how\
    \ many distinct characters (regardless of case) does it consist of\n         \
    \   \n*/\nlong count_distinct_characters(string string) \n{\n    long count =\
    \ 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length; j++)\n        {\n            if(c ==\
    \ string[j])\n            {\n                count++;\n                break;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length; j++)\n        {\n\
    \            if(c == string[j])\n            {\n                count++;\n   \
    \             break;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        if(!std.isLower(c) && !std.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n        }\n        count++;\n \
    \   }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    \n    foreach(char c in string)\n    {\n\
    \        count += 1;\n    }\n    \n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    \n    foreach(char c in string)\n    {\n        count += 1;\n\
    \    }\n    \n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    \n    foreach(char c in string)\n    {\n\
    \        count += 1;\n    }\n    \n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    \n    foreach(char c in string)\n    {\n        count += 1;\n\
    \    }\n    \n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    \n    foreach(char c in string)\n    {\n\
    \        count += 1;\n    }\n    \n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    \n    foreach(char c in string)\n    {\n        count += 1;\n\
    \    }\n    \n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    \n    foreach(char c in string)\n    {\n\
    \        count += 1;\n    }\n    \n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    \n    foreach(char c in string)\n    {\n        count += 1;\n\
    \    }\n    \n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (", "{\n    long count = 0;\n    for(int i = 0; i < string.length;\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n\
    \        char c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length; i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n ", "{\n    long count = 0;\n    foreach(char c in string) \n\
    \    {\n        count += 1;\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string) \n    {\n        count += 1;\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n", "{\n\tlong count = 0;\n\t\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string.at(i);\n\t\t\n\t\tif (islower(c))\n\t\t\tcount++;\n\
    \t\telse if (isupper(c))\n\t\t\tcount++;\n\t\telse if (isdigit(c))\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '-' || c == '_')\n\t\
    \t\tcount++;\n\t\telse if (c == '.')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\
    \t\t\tcount++;\n\t\telse if (c == '/')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\
    \t\t\tcount++;\n\t\telse if (c == '(')\n\t\t\tcount++;\n\t\telse if (c == ')')\n\
    \t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '+'\
    \ || c == '_')\n\t\t\tcount++;\n\t\telse if (c == '=')\n\t\t\tcount++;\n\t\telse\
    \ if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '<')\n\t\t\tcount++;\n\t\t\
    else if (c == '>')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\t\
    \telse if (c == '&')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '|')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '\"')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '%')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;\n\
    \t\telse if (c == '_')\n\t\t\tcount++;\n\t\telse if (c == '_')\n\t\t\tcount++;",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                count++;\n                break;\n            }\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i =\
    \ 0; i < string.length(); i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar\
    \ c = string[i];\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\t\
    if (string[i] == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        char c = string.at(i);\n        if(!std.ctype.isLower(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                count++;\n                break;\n            }\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length()", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n            else\n            {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardles",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                if(c > d)\n                {\n                    count++;\n\
    \                    break;\n                }\n                else\n       \
    \         {\n                    count++;\n                    break;\n      \
    \          }\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c > d)\n                {\n                \
    \    count++;\n                    break;\n                }\n               \
    \ else\n                {\n                    count++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c > d)\n                {\n                \
    \    count++;\n                    break;\n                }\n               \
    \ else\n                {\n                    count++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c > d)\n                {\n                \
    \    count++;\n                    break;\n                }\n               \
    \ else\n                {\n                    count++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int ", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length;\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'a' && c <= 'z')\n                {\n \
    \                   if(d >= 'a' && d <= 'z')\n                    {\n        \
    \                if(c != d)\n                        {\n                     \
    \       if(c >= 'A' && c <= 'Z')\n                            {\n            \
    \                    if(d >= 'A' && d <= 'Z')\n                              \
    \  {\n                                    count++;\n                         \
    \       }\n                            }\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'a' && c <= 'z')\n                {\n \
    \                   if(d >= 'a' && d <= 'z')\n                    {\n        \
    \                if(c != d)\n                        {\n                     \
    \       if(c >= 'A' && c <= 'Z')\n                            {\n            \
    \                    if(d >= 'A' && d <= 'Z')\n                              \
    \  {\n                                    count++;\n                         \
    \       }\n                            }\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length; i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length;\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                if(c >= 'a' && c <= 'z')\n                {\n \
    \                   if(d >= 'a' && d <= 'z')\n                    {\n        \
    \                if(c != d)\n                        {\n                     \
    \       if(c >= 'A' && c <= 'Z')\n                            {\n            \
    \                    if(d >= 'A' && d <= 'Z')\n                              \
    \  {\n                                    count++;\n                         \
    \       }\n                            }\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does ", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\
    \t{\n\t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string[i]\
    \ == string[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                if(c >= 'A' && c <= 'Z')\n                {\n        \
    \            if(d >= 'A' && d <= 'Z')\n                    {\n               \
    \         if(c != d)\n                        {\n                            count++;\n\
    \                        }\n                    }\n                    else\n\
    \                    {\n                        if(d >= 'a' && d <= 'z')\n   \
    \                     {\n                            if(c != d)\n            \
    \                {\n                                count++;\n               \
    \             }\n                        }\n                        else\n   \
    \                     {\n                            if(c >= '0' && c <= '9')\n\
    \                            {\n                                if(d >= '0' &&\
    \ d <= '9')\n                                {\n                             \
    \       if(c != d)\n                                    {\n                  \
    \                      count++;\n                                    }\n     \
    \                           }\n                                else\n        \
    \                        {\n                                    if(d >= 'a' &&\
    \ d <= 'z')\n                                    {\n                         \
    \               if(c != d)\n                                        {\n      \
    \                                      count++;\n                            \
    \            }\n                                    }\n                      \
    \              else\n                                    {\n                 \
    \                       if(c >= 'A' && c <= 'Z')\n                           \
    \             {\n                                            if(d >= 'A' && d\
    \ <= 'Z')\n                                            {\n                   \
    \                             if(c != d)\n                                   \
    \             {\n                                                    count++;\n\
    \                                                }\n                         \
    \                   }\n                                        }\n           \
    \                         }\n                                }\n             \
    \               }\n                        }\n                    }\n        \
    \        }\n                else\n                {\n                    if(d\
    \ >= 'a' && d <= 'z')\n                    {\n                        if(c !=\
    \ d)\n                        {\n                            count++;\n      \
    \                  }\n                    }\n                    else\n      \
    \              {\n                        if(c >= '0' && c <= '9')\n         \
    \               {\n                            if(d >= '0' && d <= '9')\n    \
    \                        {\n                                if(c != d)\n     \
    \                           {\n                                    count++;\n\
    \                                }\n                            }\n          \
    \                  else\n                            {\n                     \
    \           if(d >= 'a' && d <= 'z')\n                                {\n    \
    \                                if(c != d)\n                                \
    \    {\n                                        count++;\n                   \
    \                 }\n                                }\n                     \
    \           else\n                                {\n                        \
    \            if(c >= 'A' && c <= 'Z')\n                                    {\n\
    \                                        if(d >= 'A' && d <= 'Z')\n          \
    \                              {\n                                           \
    \ if(c != d)\n                                            {\n                \
    \                                count++;\n                                  \
    \          }\n                                        }\n                    \
    \                }\n                                }\n                      \
    \      }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "{\n    long count = 0;\n    foreach(char c\
    \ in string) \n    {\n        if(!std.algorithm.contains(string.chars, c)) \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n        if(!std.algorithm.contains(string.chars,\
    \ c)) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      if(!std.algorithm.contains(string.chars, c)) \n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   foreach(char c in string) \n    {\n        if(!std.algorithm.contains(string.chars,\
    \ c)) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      if(!std.algorithm.contains(string.chars, c)) \n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   foreach(char c in string) \n    {\n        if(!std.algorithm.contains(string.chars,\
    \ c)) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string) \n    {\n  \
    \      if(!std.algorithm.contains(string.chars, c)) \n        {\n            count++;\n\
    \        }\n    }\n", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string.at(i);\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string.at(j);\n            if(c != d)\n     \
    \       {\n                break;\n            }\n            else\n         \
    \   {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string.at(i);\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string.at(j);\n            if(c != d)\n\
    \            {\n                break;\n            }\n            else\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n ", "{\n    long count = 0;\n    foreach(char c in string)\n\
    \    {\n        count += 1;\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n\
    \    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach", "{\n\tlong count = 0;\n\tfor(int\
    \ i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor(int\
    \ j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tchar d = string[j];\n\t\t\tif(c\
    \ != d)\n\t\t\t{\n\t\t\t\tif(c >= 'a' && c <= 'z')\n\t\t\t\t{\n\t\t\t\t\tif(d\
    \ >= 'a' && d <= 'z')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d >= 'A' && d <= 'Z')\n\t\t\
    \t\t\t\t{\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\
    \t\telse if(c >= 'A' && c <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tif(d >= 'a' && d <= 'z')\n\
    \t\t\t\t\t{\n\t\t\t\t\t\tif(d >= 'A' && d <= 'Z')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\
    \tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string ", "{\n\tlong count = 0;\n\tfor (int\
    \ i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor (int\
    \ j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\
    \t\t\tchar d = string[j];\n\t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\
    \t}\n\treturn count;\n}", "{\n\tlong count = 0;\n\tfor (int i = 0; i < string.length();\
    \ i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor (int j = 0; j < string.length();\
    \ j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\t\t\tchar d = string[j];\n\
    \t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t}\n\t\tcount++;\n\t}\n\treturn count;\n\
    }", "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n  \
    \  {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}", "{\n\tlong count\
    \ = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\
    \t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\
    \tcontinue;\n\t\t\tchar d = string[j];\n\t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(string[i] == string[j])\n            {\n   \
    \             count++;\n            }\n        }\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = 0; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n        }\n        count++;\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == string[j])\n            {\n           \
    \     count++;\n                break;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            if(c == ", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   for(int j = 0; j < string.length(); j++)\n        {\n            char d =\
    \ string[j];\n            if(c != d)\n            {\n                break;\n\
    \            }\n            else\n            {\n                count++;\n  \
    \          }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            break;\n            }\n            else\n            {\n        \
    \        count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n            else\n     \
    \       {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardles",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string.at(i);\n        if(!std.typecons.isLower(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.typecons.isLower(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.typecons.isLower(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.typecons.isLower(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.typecons.isLower(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string.at(i);\n        if(!std.typecons.isLower(c))\n  \
    \      {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\n", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n  \
    \      char c = string[i];\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                break;\n            }\n        }\n        count++;\n \
    \   }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i+1; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i+1; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string ", "{\n\tlong count = 0;\n\tfor (int\
    \ i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tfor (int\
    \ j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (i == j)\n\t\t\t\tcontinue;\n\
    \t\t\tchar d = string[j];\n\t\t\tif (c != d)\n\t\t\t\tbreak;\n\t\t\telse\n\t\t\
    \t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "{\n    long count = 0;\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(!std.isAlpha(c))\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = i; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            if(c != d)\n        \
    \    {\n                count++;\n                break;\n            }\n    \
    \    }\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = i; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                count++;\n                break;\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        for(int j = i; j < string.length(); j++)\n        {\n            char\
    \ d = string[j];\n            if(c != d)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string ",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        if(!std.isAlpha(c))\n        {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        if(!std.isAlpha(c))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n            \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string", "{\n    long count = 0;\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        char c = string[i];\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            char d = string[j];\n\
    \            if(c != d)\n            {\n                break;\n            }\n\
    \        }\n        count++;\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \            \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        for(int j = 0; j < string.length(); j++)\n        {\n\
    \            char d = string[j];\n            if(c != d)\n            {\n    \
    \            break;\n            }\n        }\n        count++;\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(!std.isAlpha(c))\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}", "{\n  \
    \  long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n    \
    \    for(int j = 0; j < string.length(); j++)\n        {\n            if(i !=\
    \ j)\n            {\n                if(string[i] == string[j])\n            \
    \    {\n                    count++;\n                }\n            }\n     \
    \   }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i =\
    \ 0; i < string.length(); i++)\n    {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        char c = string[i];\n        if(!std.typecons.isUpper(c))\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n", "{\n    long count = 0;\n    foreach(char c in string)\n    {\n    \
    \    if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     if(!std.isLower(c))\n            count++;\n    }\n    return count;\n}\n\
    /*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach", "{\n    long count = 0;\n  \
    \  foreach(char c in string)\n    {\n        if(!std.isAlpha(c))\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    \n    for(int i = 0; i < string.length(); i++)\n    {\n        char\
    \ c = string[i];\n        \n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            char d = string[j];\n            \n            if(c !=\
    \ d)\n            {\n                break;\n            }\n            \n   \
    \         count++;\n        }\n    }\n    \n    return count;\n}", "{\n\tlong\
    \ count = 0;\n\tfor (int i = 0; i < string.length(); i++)\n\t{\n\t\tchar c = string.at(i);\n\
    \t\tfor (int j = 0; j < string.length(); j++)\n\t\t{\n\t\t\tif (string.at(j) ==\
    \ c)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;\n}", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        ", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        for(int j = 0; j < string.length(); j++)\n        {\n \
    \           if(string[i] == string[j])\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(",
  "{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n \
    \       char c = string[i];\n        for(int j = i+1; j < string.length(); j++)\n\
    \        {\n            if(string[j] == c)\n            {\n                count++;\n\
    \                break;\n            }\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(char c in string)\n    {\n        count +=\
    \ 1;\n    }\n    return count;\n}\n/*\n Given a string, find out how many distinct\
    \ characters (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach(char c in string)\n    {\n        count += 1;\n    }\n   \
    \ return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c in string)\n    {\n   \
    \     count += 1;\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    foreach", "{\n    long count = 0;\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        for(int j = 0; j < string.length();\
    \ j++)\n        {\n            char d = string[j];\n            if(c != d)\n \
    \           {\n                break;\n            }\n        }\n        count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length(); i++)\n    {\n        for(int j = 0; j < string.length(); j++)\n\
    \        {\n            if(string[i] == string[j])\n            {\n          \
    \      count++;\n            }\n        }\n    }\n    return count;\n}\n/*\n Given\
    \ a string, find out how many distinct characters (regardless of case) does it\
    \ consist of\n            \n*/\nlong count_distinct_characters(string string)\
    \ \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        for(int j = 0; j < string.length(); j++)\n        {\n           \
    \ if(string[i] == string[j])\n            {\n                count++;\n      \
    \      }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n     \
    \       \n*/\nlong count_distinct_characters(string string) \n{\n    long count\
    \ = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int j\
    \ = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(string string) \n{\n    long\
    \ count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n        for(int\
    \ j = 0; j < string.length(); j++)\n        {\n            if(string[i] == string[j])\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n            \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        for(int j = 0; j < string.length(); j++)\n        {\n        \
    \    if(string[i] == string[j])\n            {\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \           \n*/\nlong count_distinct_characters(", "{\n    long count = 0;\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(!std.isAlpha(c))\n        {\n            count += 1;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    for(int i = 0; i <\
    \ string.length(); i++)\n    {\n        char c = string[i];\n        for(int j\
    \ = 0; j < string.length(); j++)\n        {\n            char d = string[j];\n\
    \            if(c != d)\n            {\n                count++;\n           \
    \     break;\n            }\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    for(int i = 0; i < string.length(); i++)\n    {\n     \
    \   char c = string[i];\n        if(!std.typecons.isUpper(c))\n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

language: d
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\tif(l[i] > max)\n\t\t\t\
    max = l[i];\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgo5jzca8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = 0;\n\tlong min = 0;\n\tbool isMonotonic = true;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax =\
    \ l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ != max && l[i] != min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn\
    \ isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphy1vjv_6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool increasing = true;\n\t\
    bool decreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i]\
    \ < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if (l[i] > max)\n\t\t{\n\t\
    \t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tincreasing = false;\n\t\t\tdecreasing\
    \ = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}\nunittest\n{\n \
    \   alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzerdffef.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong minv = l[0];\n\tlong maxv = l[0];\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] < minv)\n\t\t{\n\t\t\tminv = l[i];\n\t\t}\n\t\telse if(l[i]\
    \ > maxv)\n\t\t{\n\t\t\tmaxv = l[i];\n\t\t}\n\t}\n\treturn minv < maxv;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcvfs6700.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tlong\
    \ x = l[i];\n\t\tif(x == r)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse\
    \ if(x == l)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\
    \tisIncreasing = isDecreasing = true;\n\t\t}\n\t\tr = x;\n\t}\n\treturn isIncreasing\
    \ || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ey57uid.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpihtiaj5f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isMonotonic = true;\n\tfor\
    \ (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > r)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37fdcx5t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool result = false;\n\tfor\
    \ (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < curr)\n\t\t{\n\t\t\tresult\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > prev)\n\t\t{\n\t\t\tresult\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\tprev = curr;\n\t\tcurr = l[i];\n\t}\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzibkoxt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < r)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i] > r)\n\t\t\
    {\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisDecreasing = true;\n\
    \t\t\tisIncreasing = true;\n\t\t}\n\t\tr = l[i];\n\t}\n\treturn isIncreasing ||\
    \ isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbw708h1b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool increasing = true;\n\t\
    bool decreasing = true;\n\tfor(int i=1; i<l.length; ++i)\n\t{\n\t\tif(l[i] > max)\n\
    \t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse if(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tincreasing = false;\n\t\t\tdecreasing = false;\n\
    \t\t}\n\t}\n\treturn increasing || decreasing;\n}\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps7_i5oty.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv6xx15on.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\n/*\n\
    Return True is list elements are monotonically increasing or decreasing.\n   \
    \             \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqcv7gtij.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long min = l[0];\n    long max = l[0];\n    for(int i = 1; i < l.length;\
    \ ++i)\n    {\n        if(l[i] < min)\n            min = l[i];\n        if(l[i]\
    \ > max)\n            max = l[i];\n    }\n    return min < max;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2i8d_qs5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tbool l3 = false;\n\tbool l4\
    \ = false;\n\tbool l5 = false;\n\tbool l6 = false;\n\tbool l7 = false;\n\tbool\
    \ l8 = false;\n\tbool l9 = false;\n\tbool l10 = false;\n\tbool l11 = false;\n\t\
    bool l12 = false;\n\tbool l13 = false;\n\tbool l14 = false;\n\tbool l15 = false;\n\
    \tbool l16 = false;\n\tbool l17 = false;\n\tbool l18 = false;\n\tbool l19 = false;\n\
    \tbool l20 = false;\n\tbool l21 = false;\n\tbool l22 = false;\n\tbool l23 = false;\n\
    \tbool l24 = false;\n\tbool l25 = false;\n\tbool l26 = false;\n\tbool l27 = false;\n\
    \tbool l28 = false;\n\tbool l29 = false;\n\tbool l30 = false;\n\tbool l31 = false;\n\
    \tbool l32 = false;\n\tbool l33 = false;\n\tbool l34 = false;\n\tbool l35 = false;\n\
    \tbool l36 = false;\n\tbool l37 = false;\n\tbool l38 = false;\n\tbool l39 = false;\n\
    \tbool l40 = false;\n\tbool l41 = false;\n\tbool l42 = false;\n\tbool l43 = false;\n\
    \tbool l44 = false;\n\tbool l45 = false;\n\tbool l46 = false;\n\tbool l47 = false;\n\
    \tbool l48 = false;\n\tbool l49 = false;\n\tbool l50 = false;\n\tbool l51 = false;\n\
    \tbool l52 = false;\n\tbool l53 = false;\n\tbool l54 = false;\n\tbool l55 = false;\n\
    \tbool l56 = false;\n\tbool l57 = false;\n\tbool l58 = false;\n\tbool l59 = false;\n\
    \tbool l60 = false;\n\tbool l61 = false;\n\tbool l62 = false;\n\tbool l63 = false;\n\
    \tbool l64 = false;\n\tbool l65 = false;\n\tbool l66 = false;\n\tbool l67 = false;\n\
    \tbool l68 = false;\n\tbool l69 = false;\n\tbool l70 = false;\n\tbool l71 = false;\n\
    \tbool l72 = false;\n\tbool l73 = false;\n\tbool l74 = false;\n\tbool l75 = false;\n\
    \tbool l76 = false;\n\tbool l77 = false;\n\tbool l78 = false;\n\tbool l79 = false;\n\
    \tbool l80 = false;\n\tbool l81 = false;\n\tbool l82 = \nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ftoygi9.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmp6ftoygi9.d(92):
    Error: semicolon expected, not \''{\''\n/tmp/tmp6ftoygi9.d(104): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6ftoygi9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif (l[i]\
    \ < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn (max < min);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xhkrxsp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif\
    \ (l[i] > max)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\telse if (l[i] < min)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\tmin = l[i];\n\
    \t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97yyea73.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong l = l[0];\n\twhile\
    \ (i < l.length && j < l.length) {\n\t\tif (l[i] < l[j]) {\n\t\t\tk = i;\n\t\t\
    \ti = j;\n\t\t\tj = k;\n\t\t}\n\t\telse {\n\t\t\tk = i;\n\t\t\ti = j;\n\t\t\t\
    j = k;\n\t\t}\n\t}\n\tif (i < l.length) {\n\t\treturn false;\n\t}\n\telse {\n\t\
    \treturn true;\n\t}\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4i3ovrg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool isMonotonic = true;\n\twhile (i\
    \ < l.length && j < l.length) \n\t{\n\t\tif (l[i] < l[j]) \n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > l[j]) \n\t\t{\n\t\t\tj++;\n\
    \t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgc7crj2u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong minVal = l[0];\n\tlong maxVal = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < minVal)\n\t\t{\n\t\t\
    \tminVal = l[i];\n\t\t}\n\t\tif (l[i] > maxVal)\n\t\t{\n\t\t\tmaxVal = l[i];\n\
    \t\t}\n\t}\n\tif (minVal < maxVal)\n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn\
    \ isMonotonic;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpav8w1ffw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if\
    \ (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn min <= max;\n}\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouoi6bgw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool result = false;\n\twhile (i < l.length\
    \ && j < l.length) \n\t{\n\t\tif (l[i] < l[j]) {\n\t\t\tresult = true;\n\t\t\t\
    break;\n\t\t}\n\t\telse if (l[i] > l[j]) {\n\t\t\tresult = false;\n\t\t\tbreak;\n\
    \t\t}\n\t\ti++;\n\t\tj++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0eh5imqq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] > max)\n\t\t\treturn false;\n\t\tif(l[i] < min)\n\t\t\
    \treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6916qz5f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i = 1; i < l.length;\
    \ i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif(l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgnt3m7z2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \tif (min > max)\n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphoifle_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tlong next = 1;\n\tbool result\
    \ = false;\n\t\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tcurr = next;\n\t\
    \tnext = l[i];\n\t\tif (curr < prev)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\
    \t\t}\n\t\tprev = curr;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6awoaed4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min=0;\n\tlong max=l[0];\n\tfor(int i=1;i<l.length;i++)\n\t{\n\
    \t\tif(l[i]<min)\n\t\t\tmin=l[i];\n\t\tif(l[i]>max)\n\t\t\tmax=l[i];\n\t}\n\t\
    return (min>max);\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqf_ttx1i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor(int i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i]\
    \ < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\
    \tmax = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(l[i] < min)\n\t\t\t{\n\t\t\t\t\
    isDecreasing = false;\n\t\t\t}\n\t\t\telse if(l[i] > max)\n\t\t\t{\n\t\t\t\tisIncreasing\
    \ = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpidzc_4y1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long i = 0;\n    long j = 1;\n    bool result = false;\n    while(i\
    \ < l.length && j < l.length) \n    {\n        if(l[i] < l[j]) {\n           \
    \ result = true;\n            break;\n        }\n        else if(l[i] > l[j])\
    \ {\n            result = false;\n            break;\n        }\n        i++;\n\
    \        j++;\n    }\n    return result;\n}\n/*\nReturn True if list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9w0h3ck.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\tif(l[i] > max)\n\t\t\t\
    max = l[i];\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgo5jzca8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long x0 = l[0];\n    long x1 = l[1];\n    long x2 = l[2];\n    long\
    \ x3 = l[3];\n    long x4 = l[4];\n    long x5 = l[5];\n    long x6 = l[6];\n\
    \    long x7 = l[7];\n    long x8 = l[8];\n    long x9 = l[9];\n    long x10 =\
    \ l[10];\n    long x11 = x[11];\n    long x12 = x[12];\n    long x13 = x[13];\n\
    \    long x14 = x[14];\n    long x15 = x[15];\n    long x16 = x[16];\n    long\
    \ x17 = x[17];\n    long x18 = x[18];\n    long x19 = x[19];\n    long x20 = x[20];\n\
    \    long x21 = x[21];\n    long x22 = x[22];\n    long x23 = x[23];\n    long\
    \ x24 = x[24];\n    long x25 = x[25];\n    long x26 = x[26];\n    long x27 = x[27];\n\
    \    long x28 = x[28];\n    long x29 = x[29];\n    long x30 = x[28];\n    long\
    \ x31 = x[29];\n    long x32 = x[28];\n    long x33 = x[29];\n    long x34 = x[28];\n\
    \    long x35 = x[29];\n    long x36 = x[28];\n    long x37 = x[29];\n    long\
    \ x38 = x[28];\n    long x39 = x[29];\n    long x40 = x[28];\n    long x41 = x[29];\n\
    \    long x42 = x[28];\n    long x43 = x[29];\n    long x44 = x[28];\n    long\
    \ x45 = x[29];\n    long x46 = x[28];\n    long x47 = x[29];\n    long x48 = x[28];\n\
    \    long x49 = x[29];\n    long x50 = x[28];\n    long x51 = x[29];\n    long\
    \ x52 = x[28];\n    long x53 = x[29];\n    long x54 = x[28];\n    long x55 = x[29];\n\
    \    long x56 = x[28];\n    long x57 = x[29];\n    long x58 = x[28];\n    long\
    \ x59\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8486v4o3.d(69): Error: semicolon expected, not \''unittest\''\n/tmp/tmp8486v4o3.d(69):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp8486v4o3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong l = l[0];\n\tlong\
    \ m = l[1];\n\twhile (i < l.length) \n\t{\n\t\tk = l;\n\t\tl = m;\n\t\tm = k;\n\
    \t\ti++;\n\t}\n\tif (l < m) return true;\n\telse return false;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1qt43vu0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long a = l[0];\n    long b = l[1];\n    long c = l[2];\n    long\
    \ d = l[3];\n    long e = l[4];\n    long f = l[5];\n    long g = l[6];\n    long\
    \ h = l[7];\n    long i = l[8];\n    long j = l[9];\n    long k = l[10];\n   \
    \ long l = l[11];\n    long m = l[12];\n    long n = l[13];\n    long o = l[14];\n\
    \    long p = l[15];\n    long q = l[16];\n    long r = l[17];\n    long s = l[18];\n\
    \    long t = l[19];\n    long u = l[20];\n    long v = l[21];\n    long w = l[22];\n\
    \    long x = l[23];\n    long y = l[24];\n    long z = l[25];\n    long a = l[26];\n\
    \    long b = l[27];\n    long c = l[28];\n    long d = l[29];\n    long e = l[30];\n\
    \    long f = l[31];\n    long g = l[32];\n    long h = l[33];\n    long i = l[34];\n\
    \    long j = l[35];\n    long k = l[36];\n    long l = l[37];\n    long m = l[38];\n\
    \    long n = l[39];\n    long o = l[40];\n    long p = l[41];\n    long q = l[42];\n\
    \    long r = l[43];\n    long s = l[44];\n    long t = l[45];\n    long u = l[46];\n\
    \    long v = l[47];\n    long w = l[48];\n    long x = l[49];\n    long y = l[50];\n\
    \    long z = l[51];\n    long a = l[52];\n    long b = l[53];\n    long c = l[54];\n\
    \    long d = l[55];\n    long e = l[56];\n    long f = l[57];\n    long g = l[58];\n\
    \    long h = l[59];\n    long i = l[60];\n    long j = l[61];\n    long k = l[62];\n\
    \    long l = l[63];\n    long m = l[64];\n    long n = l[65];\n    long o = \n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo7z00dj_.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmpo7z00dj_.d(77):
    Error: semicolon expected, not \''{\''\n/tmp/tmpo7z00dj_.d(89): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpo7z00dj_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool isIncreasing = true;\n\tbool isDecreasing\
    \ = true;\n\twhile (i < l.length && j < l.length) {\n\t\tif (l[i] < l[j]) {\n\t\
    \t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] > l[j]) {\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn isIncreasing\
    \ || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxvamszj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\twhile(i < l.length && j < l.length) \n\t{\n\t\t\
    if(l[i] < l[j]) \n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\tbreak;\n\t\t}\n\t\t\
    else if(l[i] > l[j]) \n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\tbreak;\n\t\t\
    }\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\tif(isIncreasing &&\
    \ isDecreasing) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\
    \t}\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93ywwtbr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isMonotonic = true;\n\tfor\
    \ (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > r)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t{\n\t\t\tisMonotonic = false;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\treturn isMonotonic;\n}\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_5ddjw8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tlong next = 1;\n\tbool result\
    \ = false;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tcurr = next;\n\t\t\
    next = l[i];\n\t\tif (curr < prev)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\
    \t\t}\n\t\telse if (curr > prev)\n\t\t{\n\t\t\tresult = false;\n\t\t\tbreak;\n\
    \t\t}\n\t\tprev = curr;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lc78l9r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong mid = 0;\n\tbool isIncreasing\
    \ = true;\n\tbool isDecreasing = true;\n\tfor(int i = 1; i < l.length; ++i)\n\t\
    {\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\
    \t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = false;\n\
    \t\t\tisDecreasing = false;\n\t\t}\n\t\tmid = l[i];\n\t}\n\tif(isIncreasing &&\
    \ isDecreasing)\n\t{\n\t\treturn true;\n\t}\n\telse if(isIncreasing && !isDecreasing)\n\
    \t{\n\t\treturn false;\n\t}\n\telse if(!isIncreasing && isDecreasing)\n\t{\n\t\
    \treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n/*\nReturn True if\
    \ list elements are monotonically increasing or decreasing.\n                \n\
    */\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvgyf131.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool result = true;\n\tfor\
    \ (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < curr)\n\t\t{\n\t\t\tresult\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > prev)\n\t\t{\n\t\t\tresult\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\tprev = curr;\n\t\tcurr = l[i];\n\t}\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2y3kin2s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv6xx15on.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = std.array.length(l);\n\tlong l2 = l / 2;\n\tlong l3 = l -\
    \ l2;\n\tlong l4 = l3 - l2;\n\tlong l5 = l4 - l2;\n\tlong l6 = l5 - l2;\n\tlong\
    \ l7 = l6 - l2;\n\tlong l8 = l7 - l2;\n\tlong l9 = l8 - l2;\n\tlong l10 = l9 -\
    \ l2;\n\tlong l11 = l10 - l2;\n\tlong l12 = l11 - l2;\n\tlong l13 = l12 - l2;\n\
    \tlong l14 = l13 - l2;\n\tlong l15 = l14 - l2;\n\tlong l16 = l15 - l2;\n\tlong\
    \ l17 = l16 - l2;\n\tlong l18 = l17 - l2;\n\tlong l19 = l18 - l2;\n\tlong l20\
    \ = l19 - l2;\n\tlong l21 = l20 - l2;\n\tlong l22 = l21 - l2;\n\tlong l23 = l22\
    \ - l2;\n\tlong l24 = l23 - l2;\n\tlong l25 = l24 - l2;\n\tlong l26 = l25 - l2;\n\
    \tlong l27 = l26 - l2;\n\tlong l28 = l27 - l2;\n\tlong l29 = l28 - l2;\n\tlong\
    \ l30 = l29 - l2;\n\tlong l31 = l30 - l2;\n\tlong l32 = l31 - l2;\n\tlong l33\
    \ = l32 - l2;\n\tlong l34 = l33 - l2;\n\tlong l35 = l34 - l2;\n\tlong l36 = l35\
    \ - l2;\n\tlong l37 = l36 - l2;\n\tlong l38 = l37 - l2;\n\tlong l39 = l38 - l2;\n\
    \tlong l40 = l39 - l2;\n\tlong l41 = l40 - l2;\n\tlong l42 = l41 - l2;\n\tlong\
    \ l43 = l42 - l2;\n\tlong l44 = l43 - l2;\n\tlong l45 = l44 - l2;\n\tlong l46\
    \ = l45 - l2;\n\tlong l47 = l46 - l2;\n\tlong l48 = l47 - l2;\n\t\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpylgspfzr.d(58): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpylgspfzr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool result = true;\n\tfor(int\
    \ i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2i1rseoy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool isMonotonic = true;\n\twhile (i\
    \ < l.length && j > 0) {\n\t\tif (l[i] < l[j]) {\n\t\t\tisMonotonic = false;\n\
    \t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn isMonotonic;\n}\n/*\nReturn True is list\
    \ elements are monotonically increasing or decreasing.\n                \n*/\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyji3q2z9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tlong i = 0;\n\tbool isIncreasing\
    \ = true;\n\tbool isDecreasing = true;\n\tbool isMonotonic = true;\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > r)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\tr = l[i];\n\t}\n\
    \treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgpytzkc5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i=1; i<l.length; i++)\n\
    \t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\
    \t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmspia5f4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long min = l[0];\n    long max = l[0];\n    for(int i=1; i<l.length;\
    \ ++i)\n    {\n        if(l[i] < min)\n            min = l[i];\n        if(l[i]\
    \ > max)\n            max = l[i];\n    }\n    return min <= max;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1z39fe7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long prev=l[0];\n    bool isMonotonic=true;\n    for(int i=1;i<l.length;i++)\n\
    \    {\n        if(l[i]<prev)\n        {\n            isMonotonic=false;\n   \
    \         break;\n        }\n        prev=l[i];\n    }\n    return isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshjfox4h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong l = l[0];\n\tbool\
    \ isIncreasing = true;\n\tbool isDecreasing = true;\n\twhile (i < l.length &&\
    \ j < l.length) \n\t{\n\t\tif (l[i] < l[j]) \n\t\t{\n\t\t\tisIncreasing = false;\n\
    \t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > l[j]) \n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t\tbreak;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\t\
    return isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpogs__bpi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long m = l[0];\n    long n = l[1];\n    long k = l[2];\n    long\
    \ l = l[3];\n    long m = std.math.rem(m, k);\n    long n = std.math.rem(n, k);\n\
    \    long k = std.math.rem(k, l);\n    long l = std.math.rem(l, l);\n    long\
    \ m = std.math.rem(m, l);\n    long n = std.math.rem(n, l);\n    long k = std.math.rem(k,\
    \ l);\n    long l = std.math.rem(l, l);\n    long m = std.math.rem(m, l);\n  \
    \  long n = std.math.rem(n, l);\n    long k = std.math.rem(k, l);\n    long l\
    \ = std.math.rem(l, l);\n    long m = std.math.rem(m, l);\n    long n = std.math.rem(n,\
    \ l);\n    long k = std.math.rem(k, l);\n    long l = std.math.rem(l, l);\n  \
    \  long m = std.math.rem(m, l);\n    long n = std.math.rem(n, l);\n    long k\
    \ = std.math.rem(k, l);\n    long l = std.math.rem(l, l);\n    long m = std.math.rem(m,\
    \ l);\n    long n = std.math.rem(n, l);\n    long k = std.math.rem(k, l);\n  \
    \  long l = std.math.rem(l, l);\n    long m = std.math.rem(m, l);\n    long n\
    \ = std.math.rem(n, l);\n    long k = std.math.rem(k, l);\n    long l = std.math.rem(l,\
    \ l);\n    long m = std.math.rem(m, l);\n    long n = std.math.rem(n, l);\n  \
    \  long k = std.math.rem(k, l);\n    long l = std.math.rem(l, l);\n    long m\
    \ = std.math.rem(m, l);\n    long n = std.math.rem(n, l);\n    long k = std.math.rem(k,\
    \ l);\n    long l = std.math.rem(l, l);\n    long m = std.math.rem(m, l);\n  \
    \  long n = std.math.rem(n, l);\n    long k = std.math.rem(k, l);\n    long l\
    \ = std.math.rem(l, l);\n    long m = std.math.rem(m, l);\n    long n = std.math.rem(n,\
    \ l);\n    long k = std.math.rem(k, l);\n    long l = std.math.rem(l, l);\n\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7_eidb6.d(58): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7_eidb6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool result = false;\n\twhile (i < l.length\
    \ && j < l.length) \n\t{\n\t\tif (l[i] < l[j]) {\n\t\t\tresult = true;\n\t\t\t\
    break;\n\t\t}\n\t\telse if (l[i] > l[j]) {\n\t\t\tresult = false;\n\t\t\tbreak;\n\
    \t\t}\n\t\ti++;\n\t\tj++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0eh5imqq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min < max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ni0i08c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqb4c79c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l1 = l[0];\n    long l2 = l[1];\n    long l3 = l[2];\n    long\
    \ l4 = l[3];\n    long l5 = l[4];\n    long l6 = l[5];\n    long l7 = l[6];\n\
    \    long l8 = l[7];\n    long l9 = l[8];\n    long l10 = l[9];\n    long l11\
    \ = l[10];\n    long l12 = l[11];\n    long l13 = l[12];\n    long l14 = l[13];\n\
    \    long l15 = l[14];\n    long l16 = l[15];\n    long l17 = l[16];\n    long\
    \ l18 = l[17];\n    long l19 = l[18];\n    long l20 = l[19];\n    long l21 = l[20];\n\
    \    long l22 = l[21];\n    long l23 = l[22];\n    long l24 = l[23];\n    long\
    \ l25 = l[24];\n    long l26 = l[25];\n    long l27 = l[26];\n    long l28 = l[27];\n\
    \    long l29 = l[28];\n    long l30 = l[29];\n    long l31 = l[30];\n    long\
    \ l32 = l[31];\n    long l33 = l[32];\n    long l34 = l[33];\n    long l35 = l[34];\n\
    \    long l36 = l[35];\n    long l37 = l[36];\n    long l38 = l[37];\n    long\
    \ l39 = l[38];\n    long l40 = l[39];\n    long l41 = l[40];\n    long l42 = l[41];\n\
    \    long l43 = l[42];\n    long l44 = l[43];\n    long l45 = l[44];\n    long\
    \ l46 = l[45];\n    long l47 = l[46];\n    long l48 = l[47];\n    long l49 = l[48];\n\
    \    long l50 = l[49];\n    long l51 = l[50];\n    long l52 = l[51];\n    long\
    \ l53 = l[52];\n    long l54 = l[53];\n    long l\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp4nuiolm.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmpp4nuiolm.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpp4nuiolm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l = l[0];\n    for(int i=1; i<l.length; i++)\n    {\n     \
    \   if(l[i] > l)\n        {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzisutz02.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\t\
    max = l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\t\
    if (max < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3qbr9_y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i = 1; i < l.length; i++)\n\
    \t{\n\t\tlong x = l[i];\n\t\tif((r - x) > 0) return false;\n\t\tr = x;\n\t}\n\t\
    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp92y59c3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i\
    \ = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n =\
    \ 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\
    \tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\t\
    long y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong\
    \ z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w\
    \ = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x =\
    \ 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\
    \tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\t\
    long w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong\
    \ x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y\
    \ = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z =\
    \ 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\
    \tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\t\
    long y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong\
    \ z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w\
    \ = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x =\
    \ 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\
    \tlong z = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\t\
    long w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpndmdql3p.d(112): Error: semicolon expected, not \''unittest\''\n/tmp/tmpndmdql3p.d(112):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpndmdql3p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tbool result = true;\n\tfor (int i = 1; i < l.length;\
    \ i++)\n\t{\n\t\tif (l[i] < l)\n\t\t{\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0d0t7a34.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (min > max)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmt9y8jfb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t}\n\treturn isIncreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppporfdma.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tbool isIncreasing = true;\n\tbool isDecreasing =\
    \ true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < l)\n\t\t{\n\
    \t\t\tisIncreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\n/*\nReturn True if all\
    \ elements are equal.\n*/\nunittest\n{\n    alias candidate = monotonic;\n\n \
    \   assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1sieoc6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tlong\
    \ next = l[i];\n\t\tif (curr < next)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\
    }\n\t\telse if (curr > next)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\t\
    else if (curr == next)\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing\
    \ = true;\n\t\t}\n\t\telse if (curr < prev)\n\t\t{\n\t\t\tisIncreasing = false;\n\
    \t\t}\n\t\telse if (curr > prev)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\
    \tprev = curr;\n\t\tcurr = next;\n\t}\n\treturn isIncreasing || isDecreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpydn9otle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong mid = 0;\n\tfor (int\
    \ i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tmid = (min +\
    \ max) / 2;\n\t\tif (mid > l[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n/*\nReturn True is list elements are monotonically increasing or decreasing.\n\
    \                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfngq367.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i = 1; i < l.length; i++)\n\
    \t{\n\t\tlong c = l[i];\n\t\tif(c < r)\n\t\t\treturn false;\n\t\tr = c;\n\t}\n\
    \treturn true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_7eofnn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev=l[0];\n\tbool isMonotonic=true;\n\tfor(int i=1;i<l.length;++i)\n\
    \t{\n\t\tlong cur=l[i];\n\t\tif(cur<prev)\n\t\t{\n\t\t\tisMonotonic=false;\n\t\
    \t\tbreak;\n\t\t}\n\t\tprev=cur;\n\t}\n\treturn isMonotonic;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf731jf02.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool increasing = true;\n\t\
    bool decreasing = true;\n\tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\tif(l[i] < max)\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\
    \t\tif(l[i] > min)\n\t\t{\n\t\t\tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing\
    \ || decreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxij6gmmi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = 0;\n\tlong min = l[0];\n\tbool flag = false;\n\tfor (int\
    \ i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\
    \t\t\tflag = true;\n\t\t}\n\t\telse if (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t\tflag = false;\n\t\t}\n\t}\n\treturn flag;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgdu4dcf7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4po2f7n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\
    }\n\tif (min > max) \n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn isMonotonic;\n\
    }\n/*\nReturn True is list elements are monotonically increasing or decreasing.\n\
    \                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoiw4cy7b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 0;\n\tbool isIncreasing = true;\n\tbool isDecreasing\
    \ = true;\n\twhile (i < l.length && j < l.length) \n\t{\n\t\tif (l[i] < l[j])\
    \ {\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] > l[j]) {\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn isIncreasing\
    \ || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp48ifyy9q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l = l[0];\n    long r = l[0];\n    for(int i = 1; i < l.length;\
    \ i++)\n    {\n        if(l[i] < r)\n        {\n            return false;\n  \
    \      }\n        if(l[i] > r)\n        {\n            r = l[i];\n        }\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cxkolsw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong a = l[0];\n\tlong b = l[1];\n\tlong c = l[2];\n\tlong d = l[3];\n\
    \tlong e = l[4];\n\tlong f = l[5];\n\tlong g = l[6];\n\tlong h = l[7];\n\tlong\
    \ i = l[8];\n\tlong j = l[9];\n\tlong k = l[10];\n\tlong l = l[11];\n\tlong m\
    \ = l[12];\n\tlong n = l[13];\n\tlong o = l[14];\n\tlong p = l[15];\n\tlong q\
    \ = l[16];\n\tlong r = l[17];\n\tlong s = l[18];\n\tlong t = l[19];\n\tlong u\
    \ = l[20];\n\tlong v = l[21];\n\tlong w = l[22];\n\tlong x = l[23];\n\tlong y\
    \ = l[24];\n\tlong z = l[25];\n\tlong a = l[26];\n\tlong b = l[27];\n\tlong c\
    \ = l[28];\n\tlong d = l[29];\n\tlong e = l[30];\n\tlong f = l[31];\n\tlong g\
    \ = l[32];\n\tlong h = l[33];\n\tlong i = l[34];\n\tlong j = l[35];\n\tlong k\
    \ = l[36];\n\tlong l = l[37];\n\tlong m = l[38];\n\tlong n = l[39];\n\tlong o\
    \ = l[40];\n\tlong p = l[41];\n\tlong q = l[42];\n\tlong r = l[43];\n\tlong s\
    \ = l[44];\n\tlong t = l[45];\n\tlong u = l[46];\n\tlong v = l[47];\n\tlong w\
    \ = l[48];\n\tlong x = l[49];\n\tlong y = l[50];\n\tlong z = l[51];\n\tlong a\
    \ = l[52];\n\tlong b = l[53];\n\tlong c = l[54];\n\tlong d = l[55];\n\tlong e\
    \ = l[56];\n\tlong f = l[57];\n\tlong g = l[58];\n\tlong h = l[59];\n\tlong i\
    \ = l[60];\n\tlong j = l[61];\n\tlong k = l[62];\n\tlong l = l[63];\n\tlong m\
    \ = l[64];\n\tlong n = l[65];\n\tlong o = \nunittest\n{\n    alias candidate =\
    \ monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptxabolqs.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmptxabolqs.d(77):
    Error: semicolon expected, not \''{\''\n/tmp/tmptxabolqs.d(89): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptxabolqs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong cur = l[0];\n\tbool isIncreasing\
    \ = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t\
    {\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\
    \t}\n\t\tif (l[i] < cur)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\tcur =\
    \ l[i];\n\t}\n\treturn isIncreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd_wlbk0m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max=0;\n\tlong min=l[0];\n\tbool isMonotonic=true;\n\tfor(int\
    \ i=1;i<l.length;i++)\n\t{\n\t\tif(l[i]<min)\n\t\t{\n\t\t\tmin=l[i];\n\t\t}\n\t\
    \telse if(l[i]>max)\n\t\t{\n\t\t\tmax=l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisMonotonic=false;\n\
    \t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnallb39.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min || l[i] > max)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhbsamng.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isMonotonic = true;\n\tfor(int\
    \ i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] < r)\n\t\t{\n\t\t\tisMonotonic =\
    \ false;\n\t\t}\n\t\telse if(l[i] > r)\n\t\t{\n\t\t\tisMonotonic = true;\n\t\t\
    }\n\t\tr = l[i];\n\t}\n\treturn isMonotonic;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo2688akg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong cur = l[0];\n\tfor(int\
    \ i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\
    \t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tif(cur < min)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(cur\
    \ > max)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcur = l[i];\n\t\
    }\n\treturn true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbt3h4kgm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37q0ppad.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l1 = l[0];\n    long l2 = l[1];\n    long l3 = l[2];\n    long\
    \ l4 = l[3];\n    long l5 = l[4];\n    long l6 = l[5];\n    long l7 = l[6];\n\
    \    long l8 = l[7];\n    long l9 = l[8];\n    long l10 = l[9];\n    long l11\
    \ = l[10];\n    long l12 = l[11];\n    long l13 = l[12];\n    long l14 = l[13];\n\
    \    long l15 = l[14];\n    long l16 = l[15];\n    long l17 = l[16];\n    long\
    \ l18 = l[17];\n    long l19 = l[18];\n    long l20 = l[19];\n    long l21 = l[20];\n\
    \    long l22 = l[21];\n    long l23 = l[22];\n    long l24 = l[23];\n    long\
    \ l25 = l[24];\n    long l26 = l[25];\n    long l27 = l[26];\n    long l28 = l[27];\n\
    \    long l29 = l[28];\n    long l30 = l[29];\n    long l31 = l[30];\n    long\
    \ l32 = l[31];\n    long l33 = l[32];\n    long l34 = l[33];\n    long l35 = l[34];\n\
    \    long l36 = l[35];\n    long l37 = l[36];\n    long l38 = l[37];\n    long\
    \ l39 = l[38];\n    long l40 = l[39];\n    long l41 = l[40];\n    long l42 = l[41];\n\
    \    long l43 = l[42];\n    long l44 = l[43];\n    long l45 = l[44];\n    long\
    \ l46 = l[45];\n    long l47 = l[46];\n    long l48 = l[47];\n    long l49 = l[48];\n\
    \    long l50 = l[49];\n    long l51 = l[50];\n    long l52 = l[51];\n    long\
    \ l53 = l[52];\n    long l54 = l[53];\n    long l\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp4nuiolm.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmpp4nuiolm.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpp4nuiolm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tbool result = true;\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tbool isIncreasing = l[i] > l;\n\t\tbool isDecreasing = l[i] <\
    \ l;\n\t\tbool isMonotonic = isIncreasing || isDecreasing;\n\t\tresult = result\
    \ && isMonotonic;\n\t\tl = l[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphaynytr7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = std.length(l);\n\tlong i;\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\t\n\tfor(i = 1; i < l; ++i)\n\t{\n\t\tif(l[i-1] >\
    \ l[i])\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if(l[i-1] < l[i])\n\
    \t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t}\n\t\n\treturn isIncreasing || isDecreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0xpstok5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t\tmin = l[i];\n\t\tif (l[i] > max)\n\t\t\
    \tmax = l[i];\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd06a1sma.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzvkmeonn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    for (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > r)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t{\n\t\t\tisIncreasing = true;\n\
    \t\t}\n\t\tr = l[i];\n\t}\n\treturn isIncreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwpy6ab94.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqb4c79c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min || l[i] > max)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7p5a4rd_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong a = l[0];\n\tlong b = l[1];\n\tlong c = l[2];\n\tlong d = l[3];\n\
    \tlong e = l[4];\n\tlong f = l[5];\n\tlong g = l[6];\n\tlong h = l[7];\n\tlong\
    \ i = l[8];\n\tlong j = l[9];\n\tlong k = l[10];\n\tlong l = l[11];\n\tlong m\
    \ = l[12];\n\tlong n = l[13];\n\tlong o = l[14];\n\tlong p = l[15];\n\tlong q\
    \ = l[16];\n\tlong r = l[17];\n\tlong s = l[18];\n\tlong t = l[19];\n\tlong u\
    \ = l[20];\n\tlong v = l[21];\n\tlong w = l[22];\n\tlong x = l[23];\n\tlong y\
    \ = l[24];\n\tlong z = l[25];\n\tlong a = l[26];\n\tlong b = l[27];\n\tlong c\
    \ = l[28];\n\tlong d = l[29];\n\tlong e = l[30];\n\tlong f = l[31];\n\tlong g\
    \ = l[32];\n\tlong h = l[33];\n\tlong i = l[34];\n\tlong j = l[35];\n\tlong k\
    \ = l[36];\n\tlong l = l[37];\n\tlong m = l[38];\n\tlong n = l[39];\n\tlong o\
    \ = l[40];\n\tlong p = l[41];\n\tlong q = l[42];\n\tlong r = l[43];\n\tlong s\
    \ = l[44];\n\tlong t = l[45];\n\tlong u = l[46];\n\tlong v = l[47];\n\tlong w\
    \ = l[48];\n\tlong x = l[49];\n\tlong y = l[50];\n\tlong z = l[51];\n\tlong a\
    \ = l[52];\n\tlong b = l[53];\n\tlong c = l[54];\n\tlong d = l[55];\n\tlong e\
    \ = l[56];\n\tlong f = l[57];\n\tlong g = l[58];\n\tlong h = l[59];\n\tlong i\
    \ = l[60];\n\tlong j = l[61];\n\tlong k = l[62];\n\tlong l = l[63];\n\tlong m\
    \ = l[64];\n\tlong n = l[65];\n\tlong o = \nunittest\n{\n    alias candidate =\
    \ monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptxabolqs.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmptxabolqs.d(77):
    Error: semicolon expected, not \''{\''\n/tmp/tmptxabolqs.d(89): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptxabolqs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x = 0;\n\tlong y = 0;\n\tbool increasing = true;\n\tbool decreasing\
    \ = true;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tx = l[i];\n\t\ty = l[i+1];\n\
    \t\tif (x < y)\n\t\t{\n\t\t\tincreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\
    \tdecreasing = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}\n/*\n\
    Return True is list elements are monotonically increasing or decreasing.\n   \
    \             \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpab9b5kfx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpihtiaj5f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isMonotonic = true;\n\t\
    for (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < curr)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (l[i] > prev)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\tprev = curr;\n\t\tcurr = l[i];\n\t}\n\treturn\
    \ isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi7v4do4r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long x0 = l[0];\n    long x1 = l[1];\n    long x2 = l[2];\n    long\
    \ x3 = l[3];\n    long x4 = l[4];\n    long x5 = l[5];\n    long x6 = l[6];\n\
    \    long x7 = l[7];\n    long x8 = l[8];\n    long x9 = l[9];\n    long x10 =\
    \ l[10];\n    long x11 = x[11];\n    long x12 = x[12];\n    long x13 = x[13];\n\
    \    long x14 = x[14];\n    long x15 = x[15];\n    long x16 = x[16];\n    long\
    \ x17 = x[17];\n    long x18 = x[18];\n    long x19 = x[19];\n    long x20 = x[20];\n\
    \    long x21 = x[21];\n    long x22 = x[22];\n    long x23 = x[23];\n    long\
    \ x24 = x[24];\n    long x25 = x[25];\n    long x26 = x[26];\n    long x27 = x[27];\n\
    \    long x28 = x[28];\n    long x29 = x[29];\n    long x30 = l[30];\n    long\
    \ x31 = l[31];\n    long x32 = l[32];\n    long x33 = l[33];\n    long x34 = l[34];\n\
    \    long x35 = l[35];\n    long x36 = l[36];\n    long x37 = l[37];\n    long\
    \ x38 = l[38];\n    long x39 = l[39];\n    long x40 = l[40];\n    long x41 = l[41];\n\
    \    long x42 = l[42];\n    long x43 = l[43];\n    long x44 = l[44];\n    long\
    \ x45 = l[45];\n    long x46 = l[46];\n    long x47 = l[47];\n    long x48 = l[48];\n\
    \    long x49 = l[49];\n    long x50 = l[50];\n    long x51 = l[51];\n    long\
    \ x52 = l[52];\n    long x53 = l[53];\n    long x54 = l[54];\n    long x55 = l[55];\n\
    \    long x56 = l[56\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy6rnr8ox.d(66): Error: found \''unittest\'' when expecting \'']\''\n/tmp/tmpy6rnr8ox.d(67):
    Error: semicolon expected, not \''{\''\n/tmp/tmpy6rnr8ox.d(79): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpy6rnr8ox.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i\
    \ = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n =\
    \ 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\
    \tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\t\
    long y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong\
    \ k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p\
    \ = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u =\
    \ 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\
    \tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\
    long m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong\
    \ r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w\
    \ = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i =\
    \ 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\
    \tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\t\
    long t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong\
    \ y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k\
    \ = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p =\
    \ 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\
    \tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\t\
    long w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong\
    \ m = 0;\n\tlong n = 0;\n\t\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdnp927rz.d(115): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnp927rz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i]\
    \ > r)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t\
    {\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] == r)\n\t\t{\n\t\t\t\
    isIncreasing = true;\n\t\t\tisDecreasing = true;\n\t\t}\n\t\telse if (l[i] < r)\n\
    \t\t{\n\t\t\tisIncreasing = true;\n\t\t}\n\t\telse if (l[i] > r)\n\t\t{\n\t\t\t\
    isDecreasing = true;\n\t\t}\n\t\tr = l[i];\n\t}\n\treturn isIncreasing || isDecreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp99b58l06.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif\
    \ (l[i] < curr)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i]\
    \ > curr)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    isIncreasing = isDecreasing = true;\n\t\t}\n\t\tif (isIncreasing && isDecreasing)\n\
    \t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (isIncreasing)\n\t\t{\n\t\t\tprev\
    \ = curr;\n\t\t\tcurr = l[i];\n\t\t}\n\t\telse if (isDecreasing)\n\t\t{\n\t\t\t\
    prev = curr;\n\t\t\tcurr = l[i];\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipm03vzs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x0 = l[0];\n\tlong x1 = l[1];\n\tlong x2 = l[2];\n\tlong x3 =\
    \ l[3];\n\tlong x4 = l[4];\n\tlong x5 = l[5];\n\tlong x6 = l[6];\n\tlong x7 =\
    \ l[7];\n\tlong x8 = l[8];\n\tlong x9 = l[9];\n\tlong x10 = l[10];\n\tlong x11\
    \ = l[11];\n\tlong x12 = l[12];\n\tlong x13 = l[13];\n\tlong x14 = l[14];\n\t\
    long x15 = l[15];\n\tlong x16 = l[16];\n\tlong x17 = l[17];\n\tlong x18 = l[18];\n\
    \tlong x19 = l[19];\n\tlong x20 = l[20];\n\tlong x21 = l[21];\n\tlong x22 = l[22];\n\
    \tlong x23 = l[23];\n\tlong x24 = l[24];\n\tlong x25 = l[25];\n\tlong x26 = l[26];\n\
    \tlong x27 = l[27];\n\tlong x28 = l[28];\n\tlong x29 = l[29];\n\tlong x30 = l[30];\n\
    \tlong x31 = l[31];\n\tlong x32 = l[32];\n\tlong x33 = l[33];\n\tlong x34 = l[34];\n\
    \tlong x35 = l[35];\n\tlong x36 = l[36];\n\tlong x37 = l[37];\n\tlong x38 = l[38];\n\
    \tlong x39 = l[39];\n\tlong x40 = l[40];\n\tlong x41 = l[41];\n\tlong x42 = l[42];\n\
    \tlong x43 = l[43];\n\tlong x44 = l[44];\n\tlong x45 = l[45];\n\tlong x46 = l[46];\n\
    \tlong x47 = l[47];\n\tlong x48 = l[48];\n\tlong x49 = l[49];\n\tlong x50 = l[50];\n\
    \tlong x51 = l[51];\n\tlong x52 = l[52];\n\tlong x53 = l[53];\n\tlong x54 = l[54];\n\
    \t\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe_fpda7o.d(65): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_fpda7o.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool result = true;\n\tfor(int\
    \ i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\
    \t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmparmsb__i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool result = true;\n\tfor(int\
    \ i = 1; i < l.length; i++) \n\t{\n\t\tif(l[i] < l[i-1]) \n\t\t{\n\t\t\tresult\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if(l[i] > r) \n\t\t{\n\t\t\tresult =\
    \ false;\n\t\t\tbreak;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0lj0do6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i]\
    \ < l)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if(l[i] > r)\n\t\t\
    {\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if(l[i] < r)\n\t\t{\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t\telse if(l[i] > l)\n\t\t{\n\t\t\tisIncreasing = false;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t}\n\t\tr = l[i];\n\t}\n\
    \treturn isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate =\
    \ monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1jp11ud.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong minVal = l[0];\n\tlong maxVal = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < minVal)\n\t\t{\n\t\t\
    \tminVal = l[i];\n\t\t}\n\t\tif (l[i] > maxVal)\n\t\t{\n\t\t\tmaxVal = l[i];\n\
    \t\t}\n\t}\n\tif (minVal < maxVal)\n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn\
    \ isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplra8eb5a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tbool l3 = false;\n\tbool l4\
    \ = false;\n\tbool l5 = false;\n\tbool l6 = false;\n\tbool l7 = false;\n\tbool\
    \ l8 = false;\n\tbool l9 = false;\n\tbool l10 = false;\n\tbool l11 = false;\n\t\
    bool l12 = false;\n\tbool l13 = false;\n\tbool l14 = false;\n\tbool l15 = false;\n\
    \tbool l16 = false;\n\tbool l17 = false;\n\tbool l18 = false;\n\tbool l19 = false;\n\
    \tbool l20 = false;\n\tbool l21 = false;\n\tbool l22 = false;\n\tbool l23 = false;\n\
    \tbool l24 = false;\n\tbool l25 = false;\n\tbool l26 = false;\n\tbool l27 = false;\n\
    \tbool l28 = false;\n\tbool l29 = false;\n\tbool l30 = false;\n\tbool l31 = false;\n\
    \tbool l32 = false;\n\tbool l33 = false;\n\tbool l34 = false;\n\tbool l35 = false;\n\
    \tbool l36 = false;\n\tbool l37 = false;\n\tbool l38 = false;\n\tbool l39 = false;\n\
    \tbool l40 = false;\n\tbool l41 = false;\n\tbool l42 = false;\n\tbool l43 = false;\n\
    \tbool l44 = false;\n\tbool l45 = false;\n\tbool l46 = false;\n\tbool l47 = false;\n\
    \tbool l48 = false;\n\tbool l49 = false;\n\tbool l50 = false;\n\tbool l51 = false;\n\
    \tbool l52 = false;\n\tbool l53 = false;\n\tbool l54 = false;\n\tbool l55 = false;\n\
    \tbool l56 = false;\n\tbool l57 = false;\n\tbool l58 = false;\n\tbool l59 = false;\n\
    \tbool l60 = false;\n\tbool l61 = false;\n\tbool l62 = false;\n\tbool l63 = false;\n\
    \tbool l64 = false;\n\tbool l65 = false;\n\tbool l66 = false;\n\tbool l67 = false;\n\
    \tbool l68 = false;\n\tbool l69 = false;\n\tbool l70 = false;\n\tbool l71 = false;\n\
    \tbool l72 = false;\n\tbool l73 = false;\n\tbool l74 = false;\n\tbool l75 = false;\n\
    \tbool l76 = false;\n\tbool l77 = false;\n\tbool l78 = false;\n\tbool l79 = false;\n\
    \tbool l80 = false;\n\tbool l81 = false;\n\tbool l82 = \nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ftoygi9.d(91): Error: expression expected, not \''unittest\''\n/tmp/tmp6ftoygi9.d(92):
    Error: semicolon expected, not \''{\''\n/tmp/tmp6ftoygi9.d(104): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6ftoygi9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif\
    \ (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if (l[i] > max)\n\t\t\
    {\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\
    \tisDecreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprsjq_u8w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong minVal = l[0];\n\tlong maxVal = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < minVal)\n\t\t{\n\t\t\
    \tminVal = l[i];\n\t\t}\n\t\tif (l[i] > maxVal)\n\t\t{\n\t\t\tmaxVal = l[i];\n\
    \t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsixurl3i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i=1; i<l.length; i++)\
    \ \n\t{\n\t\tif(l[i] > r) \n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t\telse if(l[i] <\
    \ r) \n\t\t{\n\t\t\tl = l[i];\n\t\t}\n\t}\n\treturn (r-l) < 0;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiyl1x884.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n  \
    \  assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L,\
    \ 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n \
    \   assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcqxqqxhd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong l = l[0];\n\twhile\
    \ (i < l.length) \n\t{\n\t\tif (l[i] < l[j]) {\n\t\t\tk = i;\n\t\t}\n\t\telse\
    \ {\n\t\t\tk = j;\n\t\t}\n\t\tif (l[k] < l[i]) {\n\t\t\tj = k;\n\t\t}\n\t\telse\
    \ {\n\t\t\ti = k;\n\t\t}\n\t}\n\treturn (i == l.length);\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbxirvihj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long prev = 0;\n    long curr = l[0];\n    bool isIncreasing = true;\n\
    \    bool isDecreasing = true;\n    for(int i = 1; i < l.length; i++)\n    {\n\
    \        if(l[i] < curr)\n        {\n            isDecreasing = false;\n     \
    \   }\n        else if(l[i] > curr)\n        {\n            isIncreasing = false;\n\
    \        }\n        else if(l[i] == prev)\n        {\n            isDecreasing\
    \ = false;\n        }\n        else if(l[i] == prev)\n        {\n            isIncreasing\
    \ = false;\n        }\n        else\n        {\n            isDecreasing = true;\n\
    \        }\n        prev = l[i];\n        curr = l[i];\n    }\n    return isIncreasing\
    \ || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwqxjbx1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    for (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] < r)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\treturn isIncreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprc9qnmzd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long prev = 0;\n    long curr = l[0];\n    long next = l[0];\n \
    \   for(int i = 1; i < l.length; ++i)\n    {\n        prev = curr;\n        curr\
    \ = next;\n        next = l[i];\n        if(curr < prev)\n        {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lv0eie_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i]\
    \ < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\
    \tmax = l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4d_fucsp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tbool monotonic = false;\n\
    \twhile (i < l.length && j < l.length) \n\t{\n\t\tif (l[i] < l[j]) \n\t\t{\n\t\
    \t\tk = j;\n\t\t\tj = i;\n\t\t\ti = k;\n\t\t}\n\t\telse if (l[i] > l[j]) \n\t\t\
    {\n\t\t\tk = j;\n\t\t\tj = i;\n\t\t\ti = k;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmonotonic\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22y0_uxb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool result = true;\n\tfor\
    \ (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin =\
    \ l[i];\n\t\t}\n\t\telse if (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    else\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfrvx4xad.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\telse if (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplvhjewab.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l = l[0];\n    long r = l[0];\n    for(int i = 1; i < l.length;\
    \ i++) \n    {\n        if(l[i] < r) \n        {\n            return false;\n\
    \        }\n        r = l[i];\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpst29ed9_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool result = true;\n\tfor\
    \ (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < curr)\n\t\t{\n\t\t\tresult\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > curr)\n\t\t{\n\t\t\tresult\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurr = l[i];\n\t\t}\n\t\
    }\n\treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvhbuapx2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif\
    \ (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\
    \t\tmax = l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t}\n\t\
    return isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1qa385k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = 0;\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\t\
    for (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tisMonotonic\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvez7rg4z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool isIncreasing = true;\n\tbool isDecreasing\
    \ = true;\n\twhile (i < l.length && j < l.length) \n\t{\n\t\tif (l[i] < l[j])\
    \ \n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] > l[j]) \n\t\t\
    {\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\
    \t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvb50pao.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong i;\n\tfor(i=1; i<l.length;\
    \ i++){\n\t\tif(l[i] < min){\n\t\t\tmin = l[i];\n\t\t}\n\t\tif(l[i] > max){\n\t\
    \t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86nqzpff.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv_gngfs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \tif (min < max)\n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw18c581r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l = l[0];\n    long r = l[0];\n    for(int i = 1; i < l.length;\
    \ i++) \n    {\n        if(l[i] < r) \n        {\n            r = l[i];\n    \
    \    }\n        else \n        {\n            if(l[i] > r) \n            {\n \
    \               return false;\n            }\n        }\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lylzqhi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\t\
    max = l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\t\
    if (max < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\n/*\nReturn True is list elements are monotonically increasing or decreasing.\n\
    \                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7mcp9z1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long max = l[0];\n    long min = l[0];\n    for(int i = 1; i < l.length;\
    \ ++i)\n    {\n        if(l[i] > max)\n            max = l[i];\n        if(l[i]\
    \ < min)\n            min = l[i];\n    }\n    return max >= min;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6i9xp54.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn min <= max;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjvyu2mlp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long prev = 0;\n    long curr = l[0];\n    bool isIncreasing = true;\n\
    \    bool isDecreasing = true;\n    for(int i = 1; i < l.length; ++i)\n    {\n\
    \        if(l[i] < curr)\n        {\n            isDecreasing = false;\n     \
    \   }\n        else if(l[i] > curr)\n        {\n            isIncreasing = false;\n\
    \        }\n        else\n        {\n            isDecreasing = true;\n      \
    \      isIncreasing = true;\n        }\n        prev = curr;\n        curr = l[i];\n\
    \    }\n    return isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjakpuyed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tfor(int i=1; i<l.length; i++)\n\
    \t{\n\t\tif(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif(l[i] < min)\n\
    \t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdosllftw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \tif (min < max)\n\t{\n\t\tisMonotonic = false;\n\t}\n\treturn isMonotonic;\n\
    }\n/*\nReturn True is list elements are monotonically increasing or decreasing.\n\
    \                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp4zexw97.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tfor(int i = 1; i < l.length;\
    \ i++) \n\t{\n\t\tif(l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif(l[i]\
    \ < min) \n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn (max >= min);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptyxwrwj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzvkmeonn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++) \n\t{\n\t\t\
    if (l[i] < curr) \n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i]\
    \ > curr) \n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse \n\t\t{\n\t\t\t\
    if (isIncreasing && isDecreasing) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t\telse if (isIncreasing) \n\t\t\t{\n\t\t\t\tisIncreasing = false;\n\t\t\t}\n\
    \t\t\telse if (isDecreasing) \n\t\t\t{\n\t\t\t\tisDecreasing = false;\n\t\t\t\
    }\n\t\t}\n\t\tcurr = l[i];\n\t}\n\treturn true;\n}\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy1u53wyb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong l = l[0];\n\twhile\
    \ (i < l.length) \n\t{\n\t\twhile (j < l.length && l[j] < l[i]) \n\t\t{\n\t\t\t\
    j++;\n\t\t}\n\t\twhile (k < l.length && l[k] > l[i]) \n\t\t{\n\t\t\tk++;\n\t\t\
    }\n\t\tif (j < k) \n\t\t{\n\t\t\ti = j;\n\t\t\tj = k;\n\t\t}\n\t\telse \n\t\t\
    {\n\t\t\ti = k;\n\t\t\tk = j;\n\t\t}\n\t}\n\treturn (j == l.length);\n}\n/*\n\
    Return True is list elements are monotonically increasing or decreasing.\n   \
    \             \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpenvn4b95.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tfor(int i = 1; i < l.length; i++) \n\t{\n\t\tif(l[i]\
    \ < l[i-1]) return false; \n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oucptiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i\
    \ = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n =\
    \ 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\
    \tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\t\
    long y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong\
    \ k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p\
    \ = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u =\
    \ 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\
    \tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\
    long m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong\
    \ r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w\
    \ = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i =\
    \ 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\
    \tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\t\
    long t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong\
    \ y = 0;\n\tlong z = 0;\n\tlong w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k\
    \ = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p =\
    \ 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\
    \tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\t\
    long w = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong\
    \ m = 0;\n\tlong n = 0;\n\t\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdnp927rz.d(115): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnp927rz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tbool isMonotonic = true;\n\t\
    \n\tfor (int i = 2; i < l.length; i++)\n\t{\n\t\tlong l3 = l[i];\n\t\t\n\t\tif\
    \ (l3 > l2)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t\
    if (l3 < l1)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\
    \tl1 = l2;\n\t\tl2 = l3;\n\t}\n\t\n\treturn isMonotonic;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pf9l5cl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev=l[0];\n\tbool ret=true;\n\tfor(int i=1;i<l.length;i++)\n\
    \t{\n\t\tlong cur=l[i];\n\t\tif(cur<prev)\n\t\t{\n\t\t\tret=false;\n\t\t\tbreak;\n\
    \t\t}\n\t\tprev=cur;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1kmyojr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i = 1; i < l.length; i++)\
    \ \n\t{\n\t\tif(l[i] > l[i-1]) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if(l[i]\
    \ < r) \n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplrfev9he.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool result = true;\n\tfor (int\
    \ i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < r)\n\t\t{\n\t\t\tresult = false;\n\
    \t\t\tbreak;\n\t\t}\n\t\tr = l[i];\n\t}\n\treturn result;\n}\nunittest\n{\n  \
    \  alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ih7nlgc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i] < min) {\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\tif (l[i] > max) {\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\tif (min == max)\
    \ {\n\t\treturn false;\n\t}\n\tfor (int i = 1; i < l.length; ++i) {\n\t\tif (l[i]\
    \ < min || l[i] > max) {\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\n/*\nReturn True is list elements are monotonically increasing or decreasing.\n\
    \                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1t13a98k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long i = 0;\n    long j = 0;\n    bool isIncreasing = true;\n  \
    \  bool isDecreasing = true;\n    bool isMonotonic = true;\n    \n    while(i\
    \ < l.length && j < l.length)\n    {\n        if(l[i] < l[j])\n        {\n   \
    \         isIncreasing = false;\n        }\n        else if(l[i] > l[j])\n   \
    \     {\n            isDecreasing = false;\n        }\n        else if(l[i] ==\
    \ l[j])\n        {\n            isMonotonic = false;\n        }\n        i++;\n\
    \        j++;\n    }\n    return isMonotonic;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/19148062)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked if there\
    \ is a way to check if a list is monotonic and I provided a solution. He also\
    \ asked if there is a way to check if a list is monotonic and I provided a solution.\
    \ He also asked if there is a way to check if a list is monotonic and I provided\
    \ a solution. He also asked if there is a way to check if a list is monotonic\
    \ and I provided a solution. He also asked if there is a way to check if a list\
    \ is monotonic and I provided a solution. He also asked if there is a way to check\
    \ if a list is monotonic and I provided a solution. He also asked if there is\
    \ a way to check if a list is monotonic and I provided a solution. He also asked\
    \ if there is a way to check if a list is monotonic and I provided a solution.\
    \ He also asked if there is a way to check if a list is monotonic and I provided\
    \ a solution. He also asked if there is a way to check if a list is monotonic\
    \ and I provided a solution. He also asked if there is a way to check if a list\
    \ is monotonic and I provided a solution. He also asked if there is a way to check\
    \ if a list is monotonic and I provided a solution. He also asked if there is\
    \ a way to check if a list is monotonic and I provided a solution. He also asked\
    \ if there is a way to check if a list is monotonic and I provided a solution.\
    \ He also asked if there is a way to check if a list is monotonic and I provided\
    \ a solution. He also asked if there is a way to check if a list is monotonic\
    \ and I provided a solution. He also asked \nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp72ollq6z.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp72ollq6z.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp72ollq6z.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp72ollq6z.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp72ollq6z.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp72ollq6z.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmp72ollq6z.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp72ollq6z.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp72ollq6z.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp72ollq6z.d(53): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp72ollq6z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\
    \tif(l[i] > max)\n\t\t\tmax = l[i];\n\t\tif(min > max)\n\t\t\tisMonotonic = false;\n\
    \t}\n\treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5s__p2g4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t{\n\t\t\tmax\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxz36cae.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\twhile (i < l.length && j < l.length) \n\t{\n\t\t\
    if (l[i] < l[j]) \n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\tbreak;\n\t\t}\n\t\
    \telse if (l[i] > l[j]) \n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\tbreak;\n\t\
    \t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn isIncreasing\
    \ || isDecreasing;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprniqmxxe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin\
    \ = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\
    \telse\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfxp21llq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i = 1; i < l.length; i++)\n\
    \t{\n\t\tif(l[i] > r)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if(l[i] < l)\n\
    \t\t{\n\t\t\treturn true;\n\t\t}\n\t\tr = l[i];\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimhk3a0a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long max = 0;\n    long min = 0;\n    for(int i = 0; i < l.length;\
    \ i++){\n        if(l[i] > max){\n            max = l[i];\n        }\n       \
    \ if(l[i] < min){\n            min = l[i];\n        }\n    }\n    bool isMonotonic\
    \ = true;\n    if(max < min){\n        for(int i = 0; i < l.length; i++){\n  \
    \          if(l[i] > max){\n                isMonotonic = false;\n           \
    \ }\n            if(l[i] < min){\n                isMonotonic = false;\n     \
    \       }\n        }\n    }\n    return isMonotonic;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\nI wrote a function that checks if a list is monotonically\
    \ increasing or decreasing. It also checks if it is strictly increasing or strictly\
    \ decreasing.\n<code>\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptce6tr_p.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmptce6tr_p.d(41):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptce6tr_p.d(42): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptce6tr_p.d(43): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptce6tr_p.d(44): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptce6tr_p.d(45): Error: Declaration expected, not \''assert\''\n/tmp/tmptce6tr_p.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptce6tr_p.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptce6tr_p.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptce6tr_p.d(49): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptce6tr_p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev=l[0];\n\tbool isIncreasing=true;\n\tfor(int i=1;i<l.length;i++)\n\
    \t{\n\t\tlong cur=l[i];\n\t\tif(cur<prev)\n\t\t{\n\t\t\tisIncreasing=false;\n\t\
    \t}\n\t\telse if(cur>prev)\n\t\t{\n\t\t\tisIncreasing=true;\n\t\t}\n\t\tprev=cur;\n\
    \t}\n\treturn isIncreasing;\n}\n/*\nReturn True is list elements are monotonically\
    \ increasing or decreasing.\n                \n*/\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshzu0vnv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\t\
    max = l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\t\
    if (l[i] != max && l[i] != min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\
    }\n\treturn isMonotonic;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe54b0b8y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long l = l[0];\n    for(int i = 1; i < l.length; i++)\n    {\n \
    \       if(l[i] > l)\n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnk7fh5p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < l)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] > r)\n\t\t\
    {\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = true;\n\
    \t\t\tisDecreasing = true;\n\t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq1ecq2f_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tbool result = true;\n\tfor(int i = 1; i < l.length;\
    \ i++)\n\t{\n\t\tif(l[i-1] > l[i])\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ld0ur78.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = 0;\n\tlong min = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse\
    \ if (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t\tisIncreasing = false;\n\t\t\
    }\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hbk8qih.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong x = 0;\n\tbool isIncreasing = true;\n\tbool isDecreasing = true;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] < x)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse if (l[i] > x)\n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t}\n\t\tx = l[i];\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpki7sx51b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i=1; i<l.length; i++)\n\
    \t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\
    \t}\n\treturn (min <= max);\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmspia5f4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tbool result = false;\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] < l)\n\t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn56do1cp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong i = 0;\n\tlong j = 1;\n\tbool result = true;\n\twhile (i < l.length\
    \ && j < l.length) \n\t{\n\t\tif (l[i] < l[j]) \n\t\t{\n\t\t\tresult = false;\n\
    \t\t\tbreak;\n\t\t}\n\t\telse if (l[i] > l[j]) \n\t\t{\n\t\t\tresult = true;\n\
    \t\t\tbreak;\n\t\t}\n\t\ti++;\n\t\tj++;\n\t}\n\treturn result;\n}\n/*\nReturn\
    \ True is list elements are monotonically increasing or decreasing.\n        \
    \        \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplw3u_4fo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n    long min = l[0];\n    long max = l[0];\n    for(int i = 1; i < l.length;\
    \ ++i)\n    {\n        if(l[i] < min)\n            min = l[i];\n        if(l[i]\
    \ > max)\n            max = l[i];\n    }\n    return min <= max;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work for me. `monotonic([1,2,3])` returns `true`\
    \ while `monotonic([3,2,1])` returns `false`.\n<|/ c |>\n<| c |>\nThe code works\
    \ fine for me. Try it here: https://ideone.com/uK4YGQ\n<|/ c |>\n<| c |>\nYes,\
    \ it does. I tested it on ideone.com. Maybe you forgot to copy the code from my\
    \ answer? The code I posted is exactly the same as yours.\n<|/ c |>\n<| c |>\n\
    I did copy the code from your answer. Maybe I forgot to copy the code from your\
    \ answer? The code I posted is exactly the same as yours.\n<|/ c |>\n<| c |>\n\
    I tested it on ideone.com. Maybe you forgot to copy the code from my answer? The\
    \ code I posted is exactly the same as yours.\n<|/ c |>\n<| a tags=c++,arrays,algorithm\
    \ |>\nI believe that your algorithm is correct. \nThe only thing that could be\
    \ improved is to use std::min and std::max instead of min and max to save some\
    \ time.\n<|/ a dscore=2 |>\n<| c |>\n`std::min` and `std::max` don't exist in\
    \ C++.\n<|/ c |>\n<| c |>\n: They do in C++11 and later.\n<|/ c |>\n<| c |>\n\
    : Yes, they do in C++11 and later. C++03 doesn't have them.\n<|/ c |>\n<| c |>\n\
    : Yes, they do in C++11 and later. C++03 doesn't have them.\n<|/ c |>\n<| c |>\n\
    : Yes, they do in C++11 and later. C++03 doesn't have them.\n<|/ c |>\n<| a tags=c++,arrays,algorithm\
    \ |>\nI believe that your algorithm is correct. \nThe only thing that could be\
    \ improved is to use std::min and std::max instead of min and max to save some\
    \ time.\n<|/ a dscore=2 |>\n<| c |>\n`std::min` and `std::max` don't exist in\
    \ C++.\n<|/ c \nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgemdzbrk.d(20): Error: Declaration expected, not \''<\''\n/tmp/tmpgemdzbrk.d(23):
    Error: unterminated character constant\n/tmp/tmpgemdzbrk.d(42): Error: unterminated
    character constant\n/tmp/tmpgemdzbrk.d(48): Error: unterminated character constant\n/tmp/tmpgemdzbrk.d(51):
    Error: unterminated character constant\n/tmp/tmpgemdzbrk.d(54): Error: unterminated
    character constant\n/tmp/tmpgemdzbrk.d(61): Error: unterminated character constant\n/tmp/tmpgemdzbrk.d(67):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(68): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(69): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(70): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpgemdzbrk.d(71): Error: Declaration expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(72):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(73): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(74): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpgemdzbrk.d(75): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgemdzbrk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tlong mid = 0;\n\tbool isIncreasing\
    \ = true;\n\tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\
    \t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif (l[i] < mid)\n\t\t{\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t\tif (l[i] > mid)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\
    \t}\n\t\tmid = l[i];\n\t}\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkvttiktn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l1 = l[0];\n\tlong l2 = l[1];\n\tlong l3 = l[2];\n\tlong l4 =\
    \ l[3];\n\tlong l5 = l[4];\n\tlong l6 = l[5];\n\tlong l7 = l[6];\n\tlong l8 =\
    \ l[7];\n\tlong l9 = l[8];\n\tlong l10 = l[9];\n\tlong l11 = l[10];\n\tlong l12\
    \ = l[11];\n\tlong l13 = l[12];\n\tlong l14 = l[13];\n\tlong l15 = l[14];\n\t\
    long l16 = l[15];\n\tlong l17 = l[16];\n\tlong l18 = l[17];\n\tlong l19 = l[18];\n\
    \tlong l20 = l[19];\n\tlong l21 = l[20];\n\tlong l22 = l[21];\n\tlong l23 = l[22];\n\
    \tlong l24 = l[23];\n\tlong l25 = l[24];\n\tlong l26 = l[25];\n\tlong l27 = l[26];\n\
    \tlong l28 = l[27];\n\tlong l29 = l[28];\n\tlong l30 = l[29];\n\tlong l31 = l[30];\n\
    \tlong l32 = l[31];\n\tlong l33 = l[32];\n\tlong l34 = l[33];\n\tlong l35 = l[34];\n\
    \tlong l36 = l[35];\n\tlong l37 = l[36];\n\tlong l38 = l[37];\n\tlong l39 = l[38];\n\
    \tlong l40 = l[39];\n\tlong l41 = l[40];\n\tlong l42 = l[41];\n\tlong l43 = l[42];\n\
    \tlong l44 = l[43];\n\tlong l45 = l[44];\n\tlong l46 = l[45];\n\tlong l47 = l[46];\n\
    \tlong l48 = l[47];\n\tlong l49 = l[48];\n\tlong l50 = l[49];\n\tlong l51 = l[50];\n\
    \tlong l52 = l[51];\n\tlong l53 = l[52];\n\tlong l54 = l[53];\n\tlong l\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4ty6ef5g.d(64): Error: semicolon expected, not \''unittest\''\n/tmp/tmp4ty6ef5g.d(64):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4ty6ef5g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong minv = l[0];\n\tlong maxv = l[0];\n\tfor(int i = 1; i < l.length;\
    \ i++)\n\t{\n\t\tif(l[i] < minv)\n\t\t{\n\t\t\tminv = l[i];\n\t\t}\n\t\telse if(l[i]\
    \ > maxv)\n\t\t{\n\t\t\tmaxv = l[i];\n\t\t}\n\t}\n\treturn (minv < maxv);\n}\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmwjoalxp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool result = true;\n\tfor(int\
    \ i=1; i<l.length; i++)\n\t{\n\t\tif(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\
    \t}\n\t\telse if(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvencgk27.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool result = true;\n\tfor\
    \ (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax =\
    \ l[i];\n\t\t}\n\t\telse if (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\t\
    else\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprz2hg3zs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ i++)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\n/*\n\
    Return True is list elements are monotonically increasing or decreasing.\n   \
    \             \n*/\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxwvl60z4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = 0;\n\tlong min = 1;\n\tbool increasing = true;\n\tbool\
    \ decreasing = true;\n\tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max && l[i] < min)\n\t\t{\n\t\t\tincreasing\
    \ = false;\n\t\t}\n\t\tif (l[i] < max && l[i] > min)\n\t\t{\n\t\t\tdecreasing\
    \ = false;\n\t\t}\n\t}\n\treturn increasing || decreasing;\n}\nunittest\n{\n \
    \   alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgmg1u35x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool result = true;\n\tfor\
    \ (int i = 1; i < l.length; ++i)\n\t{\n\t\tlong next = l[i];\n\t\tif (curr < next)\n\
    \t\t{\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\t}\n\t\telse if (curr > next)\n\
    \t\t{\n\t\t\tresult = true;\n\t\t\tbreak;\n\t\t}\n\t\tprev = curr;\n\t\tcurr =\
    \ next;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9dv3dr17.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor(int i = 1; i < l.length; i++)\n\t{\n\t\tlong\
    \ next = l[i];\n\t\tif(curr > next)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\
    }\n\t\telse if(curr < next)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse\
    \ if(curr == next)\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing = true;\n\
    \t\t}\n\t\telse if(curr > prev)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\
    \telse if(curr < prev)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if(curr\
    \ == prev)\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing = true;\n\t\t\
    }\n\t\telse if(curr < prev && curr > next)\n\t\t{\n\t\t\tisIncreasing = false;\n\
    \t\t}\n\t\telse if(curr > prev && curr < next)\n\t\t{\n\t\t\tisDecreasing = false;\n\
    \t\t}\n\t\telse if(curr == prev && curr == next)\n\t\t{\n\t\t\tisIncreasing =\
    \ true;\n\t\t\tisDecreasing = true;\n\t\t}\n\t\telse if(curr < prev && curr >\
    \ next)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if(curr > prev &&\
    \ curr < next)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if(curr ==\
    \ prev && curr == next)\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing\
    \ = true;\n\t\t}\n\t\telse if(curr < prev && curr > next)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse if(curr > prev && curr < next)\n\t\t{\n\t\t\tisDecreasing\
    \ = false;\n\t\t}\n\t\telse if(curr == prev && curr == next)\n\t\t{\n\t\t\tisIncreasing\
    \ = true;\n\t\t\tisDecreasing = true;\n\t\t}\n\t\telse if(curr < prev && curr\
    \ > next)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if(curr > prev\
    \ && curr < next)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if(curr\
    \ == prev && curr == next)\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing\
    \ = true;\n\t\t}\n\t\telse if(curr < prev && curr > next)\n\t\t{\n\t\t\tisIncreasing\
    \ = false;\n\t\t}\n\t\telse if(curr > prev && curr < next)\n\t\t{\n\t\t\tisDecre\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmposhauofl.d(101): Error: found \''unittest\'' when expecting
    \'';\'' following statement\n/tmp/tmposhauofl.d(114): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\n/tmp/tmposhauofl.d(114): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmposhauofl.d(114):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmposhauofl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev = 0;\n\tlong curr = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif\
    \ (l[i] < curr)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i]\
    \ > curr)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    break;\n\t\t}\n\t\tprev = curr;\n\t\tcurr = l[i];\n\t}\n\treturn isIncreasing\
    \ || isDecreasing;\n}\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplmvmvc1g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    isMonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\t\
    isMonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvaou62_a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcr8giqwq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\t\
    if (l[i] < min)\n\t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t\tif (l[i] > max)\n\
    \t\t{\n\t\t\tisMonotonic = false;\n\t\t}\n\t}\n\treturn isMonotonic;\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcr8giqwq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if\
    \ (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3dud757.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isMonotonic = true;\n\tfor(int\
    \ i = 1; i < l.length; i++)\n\t{\n\t\tif(l[i] < r)\n\t\t{\n\t\t\tisMonotonic =\
    \ false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr = l[i];\n\t\t}\n\t}\n\treturn isMonotonic;\n\
    }\nunittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L,\
    \ 1L, 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n\
    \    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3cepisom.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong prev=l[0];\n\tlong cur=l[0];\n\tfor(int i=1;i<l.length;i++)\n\
    \t{\n\t\tif(l[i]<cur)\n\t\t\treturn false;\n\t\telse if(l[i]>cur)\n\t\t{\n\t\t\
    \tprev=cur;\n\t\t\tcur=l[i];\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n   \
    \ alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp120kouk2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tbool isIncreasing = true;\n\t\
    bool isDecreasing = true;\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ > r)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t}\n\t\telse if (l[i] < r)\n\t\t\
    {\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse if (l[i] == r)\n\t\t{\n\t\t\t\
    isIncreasing = false;\n\t\t\tisDecreasing = false;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\tisIncreasing = true;\n\t\t\tisDecreasing = true;\n\t\t}\n\t\tr = l[i];\n\t\
    }\n\treturn isIncreasing || isDecreasing;\n}\nunittest\n{\n    alias candidate\
    \ = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnov0havg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isMonotonic = true;\n\
    \tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\t\
    min = l[i];\n\t\t}\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\
    \treturn isMonotonic;\n}\n/*\nReturn True is list elements are monotonically increasing\
    \ or decreasing.\n                \n*/\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv_gngfs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tbool result = true;\n\tfor(int\
    \ i = 1; i < l.length; ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\
    \t\t}\n\t\telse if(l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tresult = false;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n\
    \    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppin4ixdu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong l = l[0];\n\tlong r = l[0];\n\tfor(int i = 1; i < l.length; i++)\n\
    \t{\n\t\tlong x = l[i];\n\t\tif((r - x) > 0)\n\t\t{\n\t\t\treturn false;\n\t\t\
    }\n\t\tr = x;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = monotonic;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdg0yhsg3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tbool isIncreasing = true;\n\
    \tbool isDecreasing = true;\n\tfor (int i = 1; i < l.length; ++i)\n\t{\n\t\tif\
    \ (l[i] < min)\n\t\t{\n\t\t\tisDecreasing = false;\n\t\t\tmin = l[i];\n\t\t}\n\
    \t\telse if (l[i] > max)\n\t\t{\n\t\t\tisIncreasing = false;\n\t\t\tmax = l[i];\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tisIncreasing = true;\n\t\t\tisDecreasing = true;\n\
    \t\t}\n\t}\n\treturn isIncreasing || isDecreasing;\n}\n/*\nReturn True if list\
    \ elements are monotonically increasing or decreasing.\n                \n*/\n\
    unittest\n{\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L,\
    \ 4L, 10L]) == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n   \
    \ assert(candidate([1L, 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L,\
    \ 0L, -10L]) == true);\n    assert(candidate([4L, 1L, 1L, 0L]) == true);\n   \
    \ assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L,\
    \ 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxxp8cw2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor (int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\tif (l[i]\
    \ > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n\
    {\n    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L])\
    \ == true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3v3ip7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong max = l[0];\n\tfor(int i=1; i<l.length; i++)\n\
    \t{\n\t\tif(l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t\telse if(l[i] > max)\n\
    \t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn (min <= max);\n}\nunittest\n{\n\
    \    alias candidate = monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) ==\
    \ true);\n    assert(candidate([1L, 2L, 4L, 20L]) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L]) == false);\n    assert(candidate([4L, 1L, 0L, -10L]) == true);\n\
    \    assert(candidate([4L, 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L,\
    \ 3L, 2L, 5L, 60L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L])\
    \ == true);\n    assert(candidate([9L, 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk05qp1bb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn True is list elements\
    \ are monotonically increasing or decreasing.\n                \n*/\nbool monotonic(long[]\
    \ l) \n{\n\tlong max = l[0];\n\tlong min = l[0];\n\tfor(int i = 1; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t\tif(l[i] > max)\n\t\t\t\
    max = l[i];\n\t}\n\treturn (max < min);\n}\nunittest\n{\n    alias candidate =\
    \ monotonic;\n\n    assert(candidate([1L, 2L, 4L, 10L]) == true);\n    assert(candidate([1L,\
    \ 2L, 4L, 20L]) == true);\n    assert(candidate([1L, 20L, 4L, 10L]) == false);\n\
    \    assert(candidate([4L, 1L, 0L, -10L]) == true);\n    assert(candidate([4L,\
    \ 1L, 1L, 0L]) == true);\n    assert(candidate([1L, 2L, 3L, 2L, 5L, 60L]) == false);\n\
    \    assert(candidate([1L, 2L, 3L, 4L, 5L, 60L]) == true);\n    assert(candidate([9L,\
    \ 9L, 9L, 9L]) == true);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpturmj7q8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660015208

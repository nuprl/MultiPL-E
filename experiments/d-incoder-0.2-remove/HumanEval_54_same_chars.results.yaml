language: d
name: HumanEval_54_same_chars
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = min(s0.length, s1.length);\n    \n   \
    \ for(i = 0; i < len; i++)\n    {\n        if(s0[i] != s1[j])\n        {\n   \
    \         same = false;\n            break;\n        }\n        \n        j++;\n\
    \    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\
    \n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4osoqux1.d(15): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4osoqux1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c in s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d4tj9or.d(10): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d4tj9or.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    bool same = true;\n\
    \    \n    while (i<s0.length() && j<s1.length()) {\n        if (s0[i]!=s1[j])\
    \ {\n            same = false;\n            break;\n        }\n        i++;\n\
    \        j++;\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps4pcop_e.d(14): Error: no property `length` for type `string`

    /tmp/tmps4pcop_e.d(14): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4pcop_e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t _ = 0;\n    size_t _1 = 0;\n    size_t _2 = 0;\n\
    \    size_t _3 = 0;\n    size_t _4 = 0;\n    size_t _5 = 0;\n    size_t _6 = 0;\n\
    \    size_t _7 = 0;\n    size_t _8 = 0;\n    size_t _9 = 0;\n    size_t _10 =\
    \ 0;\n    size_t _11 = 0;\n    size_t _12 = 0;\n    size_t _13 = 0;\n    size_t\
    \ _14 = 0;\n    size_t _15 = 0;\n    size_t _16 = 0;\n    size_t _17 = 0;\n  \
    \  size_t _18 = 0;\n    size_t _19 = 0;\n    size_t _20 = 0;\n    size_t _21 =\
    \ 0;\n    size_t _22 = 0;\n    size_t _23 = 0;\n    size_t _24 = 0;\n    size_t\
    \ _25 = 0;\n    size_t _26 = 0;\n    size_t _27 = 0;\n    size_t _28 = 0;\n  \
    \  size_t _29 = 0;\n    size_t _30 = 0;\n    size_t _31 = 0;\n    size_t _32 =\
    \ 0;\n    size_t _33 = 0;\n    size_t _34 = 0;\n    size_t _35 = 0;\n    size_t\
    \ _36 = 0;\n    size_t _37 = 0;\n    size_t _38 = 0;\n    size_t _39 = 0;\n  \
    \  size_t _40 = 0;\n    size_t _41 = 0;\n    size_t _42 = 0;\n    size_t _43 =\
    \ 0;\n    size_t _44 = 0;\n    size_t _45 = 0;\n    size_t _46 = 0;\n    size_t\
    \ _47 = 0;\n    size_t _48 = 0;\n    size_t _49 = 0;\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtwowkf2.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtwowkf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf04qqx9x.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf04qqx9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c in s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d4tj9or.d(10): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d4tj9or.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length(), s1.length()); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyi3envsg.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi3envsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf04qqx9x.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf04qqx9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t s0_len = s0.length();\n    size_t s1_len = s1.length();\n\
    \    size_t i = 0;\n    size_t j = 0;\n    bool same = true;\n    while ((i <\
    \ s0_len) && (j < s1_len)) {\n        if (s0[i] == s1[j]) {\n            i +=\
    \ 1;\n            j += 1;\n        } else {\n            same = false;\n     \
    \       break;\n        }\n    }\n    return same;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpac269r9_.d(10): Error: no property `length` for type `string`

    /tmp/tmpac269r9_.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpac269r9_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c in s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\n</code>\n<|/ a tags=c++,string,algorithm\
    \ |>\n<| c |>\nThis is not correct. `same_chars(\"ab\", \"ab\")` returns `true`,\
    \ but `same_chars(\"ab\", \"ba\")` returns `false`.\n<|/ c |>\n<| c |>\n: Yes,\
    \ I realized that after I posted it.  I fixed it now.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any STL containers.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any STL containers.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any STL containers.\n<|/ c |>\n<| a |>\n<code>\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp85ouo22.d(10): Error: found `in` when expecting `;`

    /tmp/tmpp85ouo22.d(17): Error: declaration expected, not `<`

    /tmp/tmpp85ouo22.d(26): Error: unterminated character constant

    /tmp/tmpp85ouo22.d(29): Error: unterminated character constant

    /tmp/tmpp85ouo22.d(32): Error: unterminated character constant

    /tmp/tmpp85ouo22.d(40): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(41): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(42): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(43): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(44): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(45): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(46): Error: declaration expected, not `assert`

    /tmp/tmpp85ouo22.d(47): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp85ouo22.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf04qqx9x.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf04qqx9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    /tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko0geaha.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    \n    while (i<s0.length() && j<s1.length()) {\n        if (s0[i] == s1[j])\
    \ {\n            i++;\n            j++;\n            k++;\n        }\n       \
    \ else if (s0[i] < s1[j]) {\n            k++;\n        }\n        else {\n   \
    \         i++;\n            k++;\n        }\n    }\n    \n    return k==s0.length()\
    \ && i==s1.length();\n}\nunittest\n{\n    alias candidate = same_chars;\n\n  \
    \  assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xalg786.d(14): Error: no property `length` for type `string`

    /tmp/tmp9xalg786.d(14): Error: no property `length` for type `string`

    /tmp/tmp9xalg786.d(29): Error: no property `length` for type `string`

    /tmp/tmp9xalg786.d(29): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xalg786.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; i++) \n    {\n        if(s0[i] != s1[i])\
    \ \n        {\n            return false;\n        }\n    }\n    \n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxofzi71g.d(10): Error: no property `length` for type `string`

    /tmp/tmpxofzi71g.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxofzi71g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnxqgf9g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnxqgf9g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    bool same = true;\n\
    \    \n    while (i < s0.length() && j < s1.length() && same) {\n        if (s0[i]\
    \ == s1[j]) {\n            same = true;\n            i++;\n            j++;\n\
    \        }\n        else if (s0[i] < s1[j]) {\n            same = false;\n   \
    \         i++;\n        }\n        else {\n            same = false;\n       \
    \     j++;\n        }\n    }\n    \n    return same;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6srw47ni.d(14): Error: no property `length` for type `string`

    /tmp/tmp6srw47ni.d(14): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6srw47ni.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = s0.length();\n    if (len != s1.length())\
    \ \n    {\n        same = false;\n    }\n    \n    while (i < len && j < len)\
    \ \n    {\n        if (s0[i] != s1[j]) \n        {\n            same = false;\n\
    \            break;\n        }\n        i++;\n        j++;\n    }\n    \n    return\
    \ same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpieooum7b.d(15): Error: no property `length` for type `string`

    /tmp/tmpieooum7b.d(16): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpieooum7b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; i++)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp76kwqkbo.d(10): Error: no property `length` for type `string`

    /tmp/tmp76kwqkbo.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76kwqkbo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx66o008h.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx66o008h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvix2adt6.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvix2adt6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int len = min(s0.length, s1.length);\n    for (int i\
    \ = 0; i < len; ++i)\n        if (s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\n/*\nunittest\n{\n    alias candidate = same_chars;\n\n \
    \   assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprcv1b0ly.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprcv1b0ly.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length(), s1.length()); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyi3envsg.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi3envsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int len0 = s0.length();\n    int len1 = s1.length();\n\
    \    \n    for(int i = 0; i < len0; i++)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7cdvbi33.d(10): Error: no property `length` for type `string`

    /tmp/tmp7cdvbi33.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cdvbi33.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i;\n    for(i = 0; i < s0.length() && i < s1.length();\
    \ i++)\n        if(s0[i] != s1[i])\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8a1_mdtb.d(11): Error: no property `length` for type `string`

    /tmp/tmp8a1_mdtb.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8a1_mdtb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length(), s1.length()); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpywi03kj_.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpywi03kj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length(), s1.length()); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpywi03kj_.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpywi03kj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnxqgf9g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnxqgf9g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnxqgf9g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnxqgf9g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    bool same = true;\n\
    \    while(i < s0.length() && j < s1.length() && same)\n    {\n        if(s0[i]\
    \ != s1[j])\n        {\n            same = false;\n        }\n        i++;\n \
    \       j++;\n    }\n    return same;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1t4h3ufb.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1t4h3ufb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7i7_a2e5.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7i7_a2e5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \    {\n        if(s0[i] != s1[i])\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    /tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1iia8u4e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = min(s0.length, s1.length);\n    for(int\
    \ i = 0; i < len; ++i)\n        if(s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgrtzb0h.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgrtzb0h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int len = min(s0.length, s1.length);\n    for(int i\
    \ = 0; i < len; ++i)\n        if(s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83mgaqtp.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83mgaqtp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length(), s1.length()); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyi3envsg.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi3envsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) \n            return false;\n    }\n    return true;\n\
    }\n/*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzzog0z5r.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzzog0z5r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    bool same = true;\n\
    \    \n    while (i<s0.length() && j<s1.length())\n    {\n        if (s0[i] ==\
    \ s1[j])\n        {\n            i++;\n            j++;\n        }\n        else\n\
    \        {\n            same = false;\n            break;\n        }\n    }\n\
    \    \n    return same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n\
    \    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp93z7ad3.d(14): Error: no property `length` for type `string`

    /tmp/tmpp93z7ad3.d(14): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp93z7ad3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t _ = 0;\n    size_t _1 = 0;\n    size_t _2 = 0;\n\
    \    size_t _3 = 0;\n    size_t _4 = 0;\n    size_t _5 = 0;\n    size_t _6 = 0;\n\
    \    size_t _7 = 0;\n    size_t _8 = 0;\n    size_t _9 = 0;\n    size_t _10 =\
    \ 0;\n    size_t _11 = 0;\n    size_t _12 = 0;\n    size_t _13 = 0;\n    size_t\
    \ _14 = 0;\n    size_t _15 = 0;\n    size_t _16 = 0;\n    size_t _17 = 0;\n  \
    \  size_t _18 = 0;\n    size_t _19 = 0;\n    size_t _20 = 0;\n    size_t _21 =\
    \ 0;\n    size_t _22 = 0;\n    size_t _23 = 0;\n    size_t _24 = 0;\n    size_t\
    \ _25 = 0;\n    size_t _26 = 0;\n    size_t _27 = 0;\n    size_t _28 = 0;\n  \
    \  size_t _29 = 0;\n    size_t _30 = 0;\n    size_t _31 = 0;\n    size_t _32 =\
    \ 0;\n    size_t _33 = 0;\n    size_t _34 = 0;\n    size_t _35 = 0;\n    size_t\
    \ _36 = 0;\n    size_t _37 = 0;\n    size_t _38 = 0;\n    size_t _39 = 0;\n  \
    \  size_t _40 = 0;\n    size_t _41 = 0;\n    size_t _42 = 0;\n    size_t _43 =\
    \ 0;\n    size_t _44 = 0;\n    size_t _45 = 0;\n    size_t _46 = 0;\n    size_t\
    \ _47 = 0;\n    size_t _48 = 0;\n    size_t _49 = 0;\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtwowkf2.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtwowkf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    \n    while (i<s0.length() && j<s1.length()) {\n        if (s0[i]==s1[j])\
    \ {\n            i++;\n            j++;\n            k++;\n        }\n       \
    \ else if (s0[i]>s1[j]) {\n            return false;\n        }\n        else\
    \ {\n            return true;\n        }\n    }\n    \n    return k==s0.length()\
    \ && j==s1.length();\n}\nunittest\n{\n    alias candidate = same_chars;\n\n  \
    \  assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8u3yt4r1.d(14): Error: no property `length` for type `string`

    /tmp/tmp8u3yt4r1.d(14): Error: no property `length` for type `string`

    /tmp/tmp8u3yt4r1.d(28): Error: no property `length` for type `string`

    /tmp/tmp8u3yt4r1.d(28): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8u3yt4r1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \    {\n        if(s0[i] != s1[i])\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    /tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1iia8u4e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t _ = 0;\n    size_t _1 = 0;\n    size_t _2 = 0;\n\
    \    size_t _3 = 0;\n    size_t _4 = 0;\n    size_t _5 = 0;\n    size_t _6 = 0;\n\
    \    size_t _7 = 0;\n    size_t _8 = 0;\n    size_t _9 = 0;\n    size_t _10 =\
    \ 0;\n    size_t _11 = 0;\n    size_t _12 = 0;\n    size_t _13 = 0;\n    size_t\
    \ _14 = 0;\n    size_t _15 = 0;\n    size_t _16 = 0;\n    size_t _17 = 0;\n  \
    \  size_t _18 = 0;\n    size_t _19 = 0;\n    size_t _20 = 0;\n    size_t _21 =\
    \ 0;\n    size_t _22 = 0;\n    size_t _23 = 0;\n    size_t _24 = 0;\n    size_t\
    \ _25 = 0;\n    size_t _26 = 0;\n    size_t _27 = 0;\n    size_t _28 = 0;\n  \
    \  size_t _29 = 0;\n    size_t _30 = 0;\n    size_t _31 = 0;\n    size_t _32 =\
    \ 0;\n    size_t _33 = 0;\n    size_t _34 = 0;\n    size_t _35 = 0;\n    size_t\
    \ _36 = 0;\n    size_t _37 = 0;\n    size_t _38 = 0;\n    size_t _39 = 0;\n  \
    \  size_t _40 = 0;\n    size_t _41 = 0;\n    size_t _42 = 0;\n    size_t _43 =\
    \ 0;\n    size_t _44 = 0;\n    size_t _45 = 0;\n    size_t _46 = 0;\n    size_t\
    \ _47 = 0;\n    size_t _48 = 0;\n    size_t _49 = 0;\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtwowkf2.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtwowkf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    bool same = true;\n    for(int i = 0; i < s0.length()\
    \ && same && i < s1.length(); i++)\n    {\n        if(s0[i] != s1[i])\n      \
    \  {\n            same = false;\n            break;\n        }\n    }\n    return\
    \ same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk6fagc8u.d(11): Error: no property `length` for type `string`

    /tmp/tmpk6fagc8u.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6fagc8u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t _ = 0;\n    size_t _1 = 0;\n    size_t _2 = 0;\n\
    \    size_t _3 = 0;\n    size_t _4 = 0;\n    size_t _5 = 0;\n    size_t _6 = 0;\n\
    \    size_t _7 = 0;\n    size_t _8 = 0;\n    size_t _9 = 0;\n    size_t _10 =\
    \ 0;\n    size_t _11 = 0;\n    size_t _12 = 0;\n    size_t _13 = 0;\n    size_t\
    \ _14 = 0;\n    size_t _15 = 0;\n    size_t _16 = 0;\n    size_t _17 = 0;\n  \
    \  size_t _18 = 0;\n    size_t _19 = 0;\n    size_t _20 = 0;\n    size_t _21 =\
    \ 0;\n    size_t _22 = 0;\n    size_t _23 = 0;\n    size_t _24 = 0;\n    size_t\
    \ _25 = 0;\n    size_t _26 = 0;\n    size_t _27 = 0;\n    size_t _28 = 0;\n  \
    \  size_t _29 = 0;\n    size_t _30 = 0;\n    size_t _31 = 0;\n    size_t _32 =\
    \ 0;\n    size_t _33 = 0;\n    size_t _34 = 0;\n    size_t _35 = 0;\n    size_t\
    \ _36 = 0;\n    size_t _37 = 0;\n    size_t _38 = 0;\n    size_t _39 = 0;\n  \
    \  size_t _40 = 0;\n    size_t _41 = 0;\n    size_t _42 = 0;\n    size_t _43 =\
    \ 0;\n    size_t _44 = 0;\n    size_t _45 = 0;\n    size_t _46 = 0;\n    size_t\
    \ _47 = 0;\n    size_t _48 = 0;\n    size_t _49 = 0;\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtwowkf2.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtwowkf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = s0.length();\n    size_t len2 = s1.length();\n\
    \    \n    if (len != len2) return false;\n    \n    for (size_t i = 0; i < len;\
    \ ++i)\n    {\n        if (s0[i] != s1[i]) return false;\n    }\n    \n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0imreeqt.d(10): Error: no property `length` for type `string`

    /tmp/tmp0imreeqt.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0imreeqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) \n        {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n \
    \   assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxsyztwke.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsyztwke.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnxqgf9g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnxqgf9g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; ++i)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwcbeezo9.d(10): Error: no property `length` for type `string`

    /tmp/tmpwcbeezo9.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwcbeezo9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    bool same = true;\n\
    \    while(i < s0.length() && j < s1.length() && same) {\n        if(s0[i] ==\
    \ s1[j]) {\n            i++;\n            j++;\n        } else {\n           \
    \ same = false;\n        }\n    }\n    return same;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp10ipstxu.d(13): Error: no property `length` for type `string`

    /tmp/tmp10ipstxu.d(13): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10ipstxu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int len0 = s0.length();\n    int len1 = s1.length();\n\
    \    for(int i = 0; i < len0; i++)\n    {\n        if(s0[i] != s1[i])\n      \
    \      return false;\n    }\n    return true;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5uofiayx.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5uofiayx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf04qqx9x.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf04qqx9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    while (i<s0.length()\
    \ && j<s1.length()) {\n        if (s0[i]!=s1[j]) {\n            return false;\n\
    \        }\n        i++;\n        j++;\n    }\n    return i==s0.length() && j==s1.length();\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplnipecj5.d(12): Error: no property `length` for type `string`

    /tmp/tmplnipecj5.d(12): Error: no property `length` for type `string`

    /tmp/tmplnipecj5.d(19): Error: no property `length` for type `string`

    /tmp/tmplnipecj5.d(19): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnipecj5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \    {\n        if(s0[i] != s1[i])\n            return false;\n    }\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    /tmp/tmp1iia8u4e.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1iia8u4e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); ++i)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv630t7ce.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv630t7ce.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(int i = 0; i < len0; i++)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppthz9d6b.d(10): Error: no property `length` for type `string`

    /tmp/tmppthz9d6b.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppthz9d6b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    \n    len = min(s0.length, s1.length);\n    \n    for(i = 0; i < len; ++i)\n\
    \    {\n        if(s0[i] != s1[j])\n            return false;\n        ++j;\n\
    \    }\n    \n    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\
    \n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2slhm_b.d(14): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2slhm_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvix2adt6.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvix2adt6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len0 =\
    \ s0.length();\n    size_t len1 = s1.length();\n    \n    while (i < len0 && j\
    \ < len1) {\n        if (s0[i] == s1[j]) {\n            i += 1;\n            j\
    \ += 1;\n        }\n        else if (s0[i] < s1[j]) {\n            return false;\n\
    \        }\n        else {\n            return true;\n        }\n    }\n    \n\
    \    if (i < len0) {\n        return false;\n    }\n    \n    if (j < len1) {\n\
    \        return true;\n    }\n    \n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1_uvj8z_.d(12): Error: no property `length` for type `string`

    /tmp/tmp1_uvj8z_.d(13): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_uvj8z_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    /tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwocvnsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    size_t len1 = 0;\n    bool same = true;\n    \n    len = s0.size();\n   \
    \ len1 = s1.size();\n    \n    for(i = 0; i < len; i++)\n    {\n        if(s0[i]\
    \ != s1[j])\n        {\n            same = false;\n            break;\n      \
    \  }\n        j++;\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4uqou7ss.d(16): Error: no property `size` for type `string`

    /tmp/tmp4uqou7ss.d(17): Error: no property `size` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4uqou7ss.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(c != s1[0])\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxejvto03.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpxejvto03.d(10): Error: found `)` when expecting `;`

    /tmp/tmpxejvto03.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxejvto03.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = min(s0.length, s1.length);\n    \n   \
    \ for(i = 0; i < len; i++)\n    {\n        if(s0[i] != s1[j])\n        {\n   \
    \         same = false;\n            break;\n        }\n        j++;\n    }\n\
    \    \n    return same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n\
    \    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyiaazadz.d(15): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyiaazadz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); ++i)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv630t7ce.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv630t7ce.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx66o008h.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx66o008h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    \n    len = s0.size();\n    \n    while(i < len && j < len) \n    {\n   \
    \     if(s0[i] != s1[j])\n            return false;\n        \n        i++;\n\
    \        j++;\n    }\n    \n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6mcdpoac.d(14): Error: no property `size` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mcdpoac.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int len0 = s0.length();\n    int len1 = s1.length();\n\
    \    for(int i = 0; i < len0; i++)\n    {\n        if(s0[i] != s1[i])\n      \
    \      return false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpccc1u7jk.d(10): Error: no property `length` for type `string`

    /tmp/tmpccc1u7jk.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpccc1u7jk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    bool same = true;\n    \n    for (size_t i = 0; i < len0; i++)\n  \
    \  {\n        if (s0[i] != s1[i])\n        {\n            same = false;\n    \
    \        break;\n        }\n    }\n    \n    return same;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpejeey2ft.d(10): Error: no property `length` for type `string`

    /tmp/tmpejeey2ft.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpejeey2ft.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len0 =\
    \ s0.length();\n    size_t len1 = s1.length();\n    \n    while (i < len0 && j\
    \ < len1)\n    {\n        if (s0[i] != s1[j])\n            return false;\n   \
    \     i++;\n        j++;\n    }\n    \n    return i == len0 && j == len1;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpge45vli0.d(12): Error: no property `length` for type `string`

    /tmp/tmpge45vli0.d(13): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpge45vli0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    if (len0 != len1)\n        return false;\n    \n    for (size_t i =\
    \ 0; i < len0; ++i)\n        if (s0[i] != s1[i])\n            return false;\n\
    \    \n    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n\
    \    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1e4_eu99.d(10): Error: no property `length` for type `string`

    /tmp/tmp1e4_eu99.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1e4_eu99.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t n0 = s0.length();\n    size_t n1 = s1.length();\n\
    \    \n    for(int i = 0; i < n0; i++) \n    {\n        if(s0[i] != s1[i]) \n\
    \        {\n            return false;\n        }\n    }\n    \n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3eck92_2.d(10): Error: no property `length` for type `string`

    /tmp/tmp3eck92_2.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3eck92_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; i++) \n    {\n        if(s0[i] != s1[i])\
    \ \n        {\n            return false;\n        }\n    }\n    \n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxofzi71g.d(10): Error: no property `length` for type `string`

    /tmp/tmpxofzi71g.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxofzi71g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i;\n    size_t j;\n    bool same = true;\n  \
    \  for(i = 0; i < s0.length() && same; i++) {\n        same = same && (s0[i] ==\
    \ s1[i]);\n    }\n    for(j = i; j < s1.length() && same; j++) {\n        same\
    \ = same && (s0[j] == s1[j]);\n    }\n    return same;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr3g8m17v.d(13): Error: no property `length` for type `string`

    /tmp/tmpr3g8m17v.d(16): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr3g8m17v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int n0 = s0.length();\n    int n1 = s1.length();\n \
    \   \n    if (n0 != n1)\n        return false;\n    \n    for (int i = 0; i <\
    \ n0; i++)\n        if (s0[i] != s1[i])\n            return false;\n    \n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2icitgkw.d(10): Error: no property `length` for type `string`

    /tmp/tmp2icitgkw.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2icitgkw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) \n        {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n \
    \   assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxsyztwke.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsyztwke.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = min(s0.length(), s1.length());\n    \n\
    \    while(i < len && j < len) \n    {\n        if(s0[i] != s1[j])\n        {\n\
    \            same = false;\n            break;\n        }\n        \n        i++;\n\
    \        j++;\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn1p12vej.d(15): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1p12vej.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    bool same = true;\n    int len = min(s0.length, s1.length);\n\
    \    for (int i = 0; i < len; ++i)\n    {\n        if (s0[i] != s1[i])\n     \
    \   {\n            same = false;\n            break;\n        }\n    }\n    return\
    \ same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6wq3o89q.d(11): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6wq3o89q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = min(s0.length, s1.length);\n    for(int\
    \ i = 0; i < len; ++i)\n        if(s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgrtzb0h.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgrtzb0h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    while(i < s0.length()\
    \ && j < s1.length())\n    {\n        if(s0[i] == s1[j])\n        {\n        \
    \    i++;\n            j++;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    return i == s0.length() && j == s1.length();\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpepr1ie0j.d(12): Error: no property `length` for type `string`

    /tmp/tmpepr1ie0j.d(12): Error: no property `length` for type `string`

    /tmp/tmpepr1ie0j.d(24): Error: no property `length` for type `string`

    /tmp/tmpepr1ie0j.d(24): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpepr1ie0j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; ++i)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwcbeezo9.d(10): Error: no property `length` for type `string`

    /tmp/tmpwcbeezo9.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwcbeezo9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) \n        {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n \
    \   assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxsyztwke.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsyztwke.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    while(i < s0.length() && i < s1.length()\
    \ && s0[i] == s1[i])\n    {\n        i++;\n    }\n    return i == s0.length()\
    \ && i == s1.length();\n}\nunittest\n{\n    alias candidate = same_chars;\n\n\
    \    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"\
    abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\"\
    ) == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyexx1oan.d(11): Error: no property `length` for type `string`

    /tmp/tmpyexx1oan.d(11): Error: no property `length` for type `string`

    /tmp/tmpyexx1oan.d(15): Error: no property `length` for type `string`

    /tmp/tmpyexx1oan.d(15): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyexx1oan.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    while (i<s0.length()\
    \ && j<s1.length()) {\n        if (s0[i]==s1[j]) {\n            i++;\n       \
    \     j++;\n        }\n        else if (s0[i]>s1[j]) {\n            return false;\n\
    \        }\n        else {\n            return true;\n        }\n    }\n    if\
    \ (i==s0.length() && j==s1.length()) {\n        return true;\n    }\n    return\
    \ false;\n}\n/*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg4u7qi3g.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4u7qi3g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    /tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwocvnsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    bool same = true;\n    int i = 0;\n    \n    while (i\
    \ < s0.length() && i < s1.length() && same)\n    {\n        if (s0[i] != s1[i])\n\
    \        {\n            same = false;\n        }\n        i++;\n    }\n    \n\
    \    return same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps4mry8ve.d(13): Error: no property `length` for type `string`

    /tmp/tmps4mry8ve.d(13): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4mry8ve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    size_t len1 = 0;\n    \n    len = s0.length();\n    len1 = s1.length();\n\
    \    \n    for(i = 0; i < len; i++)\n    {\n        if(s0[i] != s1[j])\n     \
    \       return false;\n        j++;\n        if(j == len1)\n            return\
    \ true;\n    }\n    \n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ==\
    \ true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_3cu672.d(15): Error: no property `length` for type `string`

    /tmp/tmpe_3cu672.d(16): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_3cu672.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    /tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko0geaha.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = s0.length();\n    \n    while (i < len\
    \ && j < len) \n    {\n        if (s0[i] != s1[j])\n        {\n            same\
    \ = false;\n            break;\n        }\n        \n        i += 1;\n       \
    \ j += 1;\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6rrsfnpp.d(15): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6rrsfnpp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = min(s0.length, s1.length);\n    for(size_t\
    \ i = 0; i < len; ++i)\n        if(s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51b7ywdq.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51b7ywdq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = s0.length();\n    size_t len2 = s1.length();\n\
    \    \n    for(int i = 0; i < len; ++i)\n    {\n        if(s0[i] != s1[i])\n \
    \           return false;\n    }\n    \n    return true;\n}\nunittest\n{\n   \
    \ alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7mb86pmh.d(10): Error: no property `length` for type `string`

    /tmp/tmp7mb86pmh.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7mb86pmh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t len = 0;\n    bool same = true;\n    \n    len\
    \ = min(s0.length, s1.length);\n    \n    for(i = 0; i < len; ++i)\n    {\n  \
    \      if(s0[i] != s1[i])\n        {\n            same = false;\n            break;\n\
    \        }\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7kiovxe6.d(17): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7kiovxe6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    bool same = true;\n    \n    len = min(s0.length, s1.length);\n    \n   \
    \ for(i = 0; i < len; ++i)\n    {\n        if(s0[i] != s1[i])\n        {\n   \
    \         same = false;\n            break;\n        }\n    }\n    \n    return\
    \ same;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr7ax38tq.d(15): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr7ax38tq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); i++) {\n\
    \        if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnxqgf9g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnxqgf9g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t _ = 0;\n    size_t _1 = 0;\n    size_t _2 = 0;\n\
    \    size_t _3 = 0;\n    size_t _4 = 0;\n    size_t _5 = 0;\n    size_t _6 = 0;\n\
    \    size_t _7 = 0;\n    size_t _8 = 0;\n    size_t _9 = 0;\n    size_t _10 =\
    \ 0;\n    size_t _11 = 0;\n    size_t _12 = 0;\n    size_t _13 = 0;\n    size_t\
    \ _14 = 0;\n    size_t _15 = 0;\n    size_t _16 = 0;\n    size_t _17 = 0;\n  \
    \  size_t _18 = 0;\n    size_t _19 = 0;\n    size_t _20 = 0;\n    size_t _21 =\
    \ 0;\n    size_t _22 = 0;\n    size_t _23 = 0;\n    size_t _24 = 0;\n    size_t\
    \ _25 = 0;\n    size_t _26 = 0;\n    size_t _27 = 0;\n    size_t _28 = 0;\n  \
    \  size_t _29 = 0;\n    size_t _30 = 0;\n    size_t _31 = 0;\n    size_t _32 =\
    \ 0;\n    size_t _33 = 0;\n    size_t _34 = 0;\n    size_t _35 = 0;\n    size_t\
    \ _36 = 0;\n    size_t _37 = 0;\n    size_t _38 = 0;\n    size_t _39 = 0;\n  \
    \  size_t _40 = 0;\n    size_t _41 = 0;\n    size_t _42 = 0;\n    size_t _43 =\
    \ 0;\n    size_t _44 = 0;\n    size_t _45 = 0;\n    size_t _46 = 0;\n    size_t\
    \ _47 = 0;\n    size_t _48 = 0;\n    size_t _49 = 0;\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtwowkf2.d(104): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtwowkf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c in s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d4tj9or.d(10): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d4tj9or.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    /tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwocvnsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i]) return false;\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6567tb9a.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6567tb9a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    size_t i = 0;\n    size_t j = 0;\n    \n    while (i < len0 && j < len1)\
    \ \n    {\n        if (s0[i] != s1[j]) \n        {\n            return false;\n\
    \        }\n        i++;\n        j++;\n    }\n    \n    return i == len0 && j\
    \ == len1;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5gfdypsi.d(10): Error: no property `length` for type `string`

    /tmp/tmp5gfdypsi.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gfdypsi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < len0; ++i)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwcbeezo9.d(10): Error: no property `length` for type `string`

    /tmp/tmpwcbeezo9.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwcbeezo9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n\
    \    size_t d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n\
    \    size_t h = 0;\n    size_t i = 0;\n    size_t j = 0;\n    size_t k = 0;\n\
    \    size_t l = 0;\n    size_t m = 0;\n    size_t n = 0;\n    size_t o = 0;\n\
    \    size_t p = 0;\n    size_t q = 0;\n    size_t r = 0;\n    size_t s = 0;\n\
    \    size_t t = 0;\n    size_t u = 0;\n    size_t v = 0;\n    size_t w = 0;\n\
    \    size_t x = 0;\n    size_t y = 0;\n    size_t z = 0;\n    size_t A = 0;\n\
    \    size_t B = 0;\n    size_t C = 0;\n    size_t D = 0;\n    size_t E = 0;\n\
    \    size_t F = 0;\n    size_t G = 0;\n    size_t H = 0;\n    size_t I = 0;\n\
    \    size_t J = 0;\n    size_t K = 0;\n    size_t L = 0;\n    size_t M = 0;\n\
    \    size_t N = 0;\n    size_t O = 0;\n    size_t P = 0;\n    size_t Q = 0;\n\
    \    size_t R = 0;\n    size_t S = 0;\n    size_t T = 0;\n    size_t U = 0;\n\
    \    size_t V = 0;\n    size_t W = 0;\n    size_t X = 0;\n    size_t Y = 0;\n\
    \    size_t Z = 0;\n    size_t a = 0;\n    size_t b = 0;\n    size_t c = 0;\n\
    \    size_t d = 0;\n    size_t e = 0;\n    size_t f = 0;\n    size_t g = 0;\n\
    \    \nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdvcnge4q.d(114): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdvcnge4q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    /tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwocvnsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    bool same = true;\n    int i = 0;\n    while(i<s0.length()\
    \ && i<s1.length() && same)\n    {\n        if(s0[i]!=s1[i])\n        {\n    \
    \        same = false;\n        }\n        i++;\n    }\n    return same;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo4aodzrx.d(12): Error: no property `length` for type `string`

    /tmp/tmpo4aodzrx.d(12): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo4aodzrx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t n0 = s0.length();\n    size_t n1 = s1.length();\n\
    \    \n    for(int i = 0; i < n0; i++) \n    {\n        if(s0[i] != s1[i]) \n\
    \        {\n            return false;\n        }\n    }\n    \n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3eck92_2.d(10): Error: no property `length` for type `string`

    /tmp/tmp3eck92_2.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3eck92_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t n0 = s0.length();\n    size_t n1 = s1.length();\n\
    \    \n    for(int i = 0; i < n0; i++)\n    {\n        if(s0[i] != s1[i])\n  \
    \          return false;\n    }\n    \n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpte829ocl.d(10): Error: no property `length` for type `string`

    /tmp/tmpte829ocl.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpte829ocl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len = min(s0.length, s1.length);\n    for(size_t\
    \ i = 0; i < len; ++i)\n        if(s0[i] != s1[i])\n            return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51b7ywdq.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51b7ywdq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++) \n    {\n     \
    \   if(s0[i] != s1[i]) return false;\n    }\n    return true;\n}\nunittest\n{\n\
    \    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf04qqx9x.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf04qqx9x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx66o008h.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx66o008h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvix2adt6.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvix2adt6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t n0 = s0.length();\n    size_t n1 = s1.length();\n\
    \    \n    for(size_t i = 0; i < n0; ++i)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa337f9wi.d(10): Error: no property `length` for type `string`

    /tmp/tmpa337f9wi.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa337f9wi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx66o008h.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx66o008h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    bool same = true;\n    \n    for (size_t i = 0; i < len0; i++) {\n\
    \        if (s0[i] != s1[i]) {\n            same = false;\n            break;\n\
    \        }\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpapahmypc.d(10): Error: no property `length` for type `string`

    /tmp/tmpapahmypc.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpapahmypc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i;\n    size_t j;\n    size_t k;\n    size_t\
    \ n;\n    size_t m;\n    size_t l;\n    size_t p;\n    size_t q;\n    size_t r;\n\
    \    size_t s;\n    size_t t;\n    size_t u;\n    size_t v;\n    size_t w;\n \
    \   size_t x;\n    size_t y;\n    size_t z;\n    size_t A;\n    size_t B;\n  \
    \  size_t C;\n    size_t D;\n    size_t E;\n    size_t F;\n    size_t G;\n   \
    \ size_t H;\n    size_t I;\n    size_t J;\n    size_t K;\n    size_t L;\n    size_t\
    \ M;\n    size_t N;\n    size_t O;\n    size_t P;\n    size_t Q;\n    size_t R;\n\
    \    size_t S;\n    size_t T;\n    size_t U;\n    size_t V;\n    size_t W;\n \
    \   size_t X;\n    size_t Y;\n    size_t Z;\n    size_t _;\n    size_t _1;\n \
    \   size_t _2;\n    size_t _3;\n    size_t _4;\n    size_t _5;\n    size_t _6;\n\
    \    size_t _7;\n    size_t _8;\n    size_t _9;\n    size_t _10;\n    size_t _11;\n\
    \    size_t _12;\n    size_t _13;\n    size_t _14;\n    size_t _15;\n    size_t\
    \ _16;\n    size_t _17;\n    size_t _18;\n    size_t _19;\n    size_t _20;\n \
    \   size_t _21;\n    size_t _22;\n    size_t _23;\n    size_t _24;\n    size_t\
    \ _25;\n    size_t _26;\n    size_t _27;\n    size_t _28;\n    size_t _29;\n \
    \   size_t _30;\n    size_t _31;\n    size_t _32;\n    size_t _33;\n    size_t\
    \ _34;\n    size_t _35;\n    size_t _36;\n    size_t _37;\n    size_t _38;\n \
    \   size_t _39;\n    size_t _40;\n    size_t _41;\n    size_t _42;\n    size_t\
    \ _43;\n    size_t _44;\n    size_t _45;\n    size_t _46;\n    size_t _47;\n \
    \   size_t _48;\n    size_t _49;\n    size_t _50;\n    size_t _51;\n    size_t\
    \ _52;\n    size_t _53;\n    size_t _54;\n    size_t _55;\n    size_t _5\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfzo925_w.d(109): Error: found `_5` when expecting `;` following
    statement

    /tmp/tmpfzo925_w.d(110): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfzo925_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i;\n    for(i = 0; i < s0.length() && i < s1.length();\
    \ i++)\n        if(s0[i] != s1[i])\n            return false;\n    return true;\n\
    }\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdpobxum9.d(11): Error: no property `length` for type `string`

    /tmp/tmpdpobxum9.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpobxum9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); i++)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    /tmp/tmpuwocvnsp.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuwocvnsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    /*\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\"\
    , \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") ==\
    \ true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"\
    abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75nrjdnm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75nrjdnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    size_t len1 = 0;\n    bool same = true;\n    \n    len = s0.length();\n \
    \   len1 = s1.length();\n    \n    for(i = 0; i < len; i++)\n    {\n        if(s0[i]\
    \ != s1[j])\n        {\n            same = false;\n            break;\n      \
    \  }\n        j++;\n    }\n    \n    return same;\n}\nunittest\n{\n    alias candidate\
    \ = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzs8262e4.d(16): Error: no property `length` for type `string`

    /tmp/tmpzs8262e4.d(17): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzs8262e4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(c != s1[0])\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxejvto03.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpxejvto03.d(10): Error: found `)` when expecting `;`

    /tmp/tmpxejvto03.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxejvto03.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t i = 0;\n    size_t j = 0;\n    size_t len = 0;\n\
    \    size_t len1 = 0;\n    bool same = true;\n    \n    len = s0.size();\n   \
    \ len1 = s1.size();\n    \n    while(i < len && j < len1)\n    {\n        if(s0[i]\
    \ != s1[j])\n        {\n            same = false;\n            break;\n      \
    \  }\n        i++;\n        j++;\n    }\n    \n    return same;\n}\nunittest\n\
    {\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp98vznqvk.d(16): Error: no property `size` for type `string`

    /tmp/tmp98vznqvk.d(17): Error: no property `size` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp98vznqvk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length() && i < s1.length(); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    /tmp/tmpko0geaha.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko0geaha.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    foreach(char c, s0)\n    {\n        if(!s1.contains(c))\n\
    \            return false;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllsktn34.d(10): Error: no identifier for declarator `s0`

    /tmp/tmpllsktn34.d(10): Error: found `)` when expecting `;`

    /tmp/tmpllsktn34.d(15): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllsktn34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < min(s0.length, s1.length); ++i)\n\
    \        if(s0[i] != s1[i])\n            return false;\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg03n975g.d(10): Error: undefined identifier `min`, did you mean
    function `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg03n975g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    int i = 0;\n    int j = 0;\n    while (s0[i] != s1[j])\
    \ {\n        if (s0[i] != s1[j]) {\n            return false;\n        }\n   \
    \     i += 1;\n        j += 1;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660164622
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t len0 = s0.length();\n    size_t len1 = s1.length();\n\
    \    \n    bool same = true;\n    \n    for (size_t i = 0; i < len0; ++i)\n  \
    \  {\n        if (s0[i] != s1[i])\n        {\n            same = false;\n    \
    \        break;\n        }\n    }\n    \n    return same;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjtyen73w.d(10): Error: no property `length` for type `string`

    /tmp/tmpjtyen73w.d(11): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjtyen73w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t s0_len = s0.size();\n    size_t s1_len = s1.size();\n\
    \    \n    if(s0_len != s1_len)\n        return false;\n    \n    for(size_t i\
    \ = 0; i < s0_len; ++i)\n    {\n        if(s0[i] != s1[i])\n            return\
    \ false;\n    }\n    \n    return true;\n}\nunittest\n{\n    alias candidate =\
    \ same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ==\
    \ true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp99ilogmt.d(10): Error: no property `size` for type `string`

    /tmp/tmp99ilogmt.d(11): Error: no property `size` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp99ilogmt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    size_t n0 = s0.size();\n    size_t n1 = s1.size();\n\
    \    \n    for(size_t i = 0; i < n0; ++i)\n    {\n        if(s0[i] != s1[i])\n\
    \            return false;\n    }\n    \n    return true;\n}\nunittest\n{\n  \
    \  alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"\
    dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\"\
    ) == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n   \
    \ assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"\
    aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzr6j4fj1.d(10): Error: no property `size` for type `string`

    /tmp/tmpzr6j4fj1.d(11): Error: no property `size` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzr6j4fj1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Check if two words have\
    \ the same characters.\n                            \n*/\nbool same_chars(string\
    \ s0, string s1) \n{\n    for(int i = 0; i < s0.length(); i++)\n    {\n      \
    \  if(s0[i] != s1[i])\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\"\
    ) == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"\
    eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\"\
    ) == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\
    \    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqd3n86yx.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqd3n86yx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164621

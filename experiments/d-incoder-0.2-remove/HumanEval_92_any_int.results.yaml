language: d
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isclose(x,\
    \ y, z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6fgvr2f9.d(20): Error: undefined identifier `isclose` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6fgvr2f9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplqwqd5ov.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpixnombzu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)) && \n            (std.int(z) ==\
    \ std.int(x + y)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0czr3yd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpixnombzu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((x == y) && (x ==\
    \ z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7ruiim0q.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ead]

    ??:? void tmp7ruiim0q.__unittest_L22_C1() [0x427a50]

    ??:? void tmp7ruiim0q.__modtest() [0x427c2c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbd3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa66]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300a8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]

    ??:? runModuleUnitTests [0x42b9a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164049
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isIntegral(x)\
    \ && std.math.isIntegral(y) && std.math.isIntegral(z)) || (std.math.isIntegral(x)\
    \ && std.math.isIntegral(y) && std.math.isIntegral(z) && std.math.isIntegral(x+y)\
    \ && std.math.isIntegral(x+z) && std.math.isIntegral(y+z)));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module
    `std.math`, did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u'
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpixnombzu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt.any(x,\
    \ y, z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77tkboc8.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77tkboc8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbxz1owse.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpbxz1owse.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpbxz1owse.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpbxz1owse.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpbxz1owse.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbxz1owse.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)) && \n            (std.int(z) ==\
    \ std.int(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsq8meydp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(22): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(22): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq8meydp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)) && \n            (std.int(z) ==\
    \ std.int(x + y)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0czr3yd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmplqwqd5ov.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplqwqd5ov.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isclose(x,\
    \ y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x,\
    \ y, rel_tol=1e-9);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe0yvnvk3.d(20): Error: undefined identifier `isclose` in module
    `std.math`

    /tmp/tmpe0yvnvk3.d(20): Error: undefined identifier `isclose` in module `std.math`

    /tmp/tmpe0yvnvk3.d(20): Error: undefined identifier `isclose` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0yvnvk3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95ii6h12.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)) && \n            (std.int(z) ==\
    \ std.int(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsq8meydp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(22): Error: identifier expected following `.`, not `int`

    /tmp/tmpsq8meydp.d(22): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq8meydp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmp95ii6h12.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95ii6h12.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3lx27g_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj4i0c1ta.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4i0c1ta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpiik79x4a.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiik79x4a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)) && \n            (std.int(z) ==\
    \ std.int(x + y)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    /tmp/tmpj0czr3yd.d(22): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0czr3yd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(z)\
    \ && std.math.isInt(y)) || (std.math.isInt(y) && std.math.isInt(x) && std.math.isInt(z))\
    \ || (std.math.isInt(y) && std.math.isInt(z) && std.math.isInt(x)));\n}\n/*\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ggzyhyk.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ggzyhyk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && std.int(z) == std.int(x + y + z));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpe_i6c3yq.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_i6c3yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpd70xtblp.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd70xtblp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(z)\
    \ && std.math.isInt(y)) || (std.math.isInt(y) && std.math.isInt(x) && std.math.isInt(z))\
    \ || (std.math.isInt(y) && std.math.isInt(z) && std.math.isInt(x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpd24z6ubk.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd24z6ubk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)) || (std.int(z) == std.int(x)));\n}\n/*\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpobmnk1qm.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpobmnk1qm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(z)\
    \ && std.math.isInt(y)) || (std.math.isInt(y) && std.math.isInt(x) && std.math.isInt(z))\
    \ || (std.math.isInt(y) && std.math.isInt(z) && std.math.isInt(x)) || (std.math.isInt(z)\
    \ && std.math.isInt(x) && std.math.isInt(y)) || (std.math.isInt(z) && std.math.isInt(y)\
    \ && std.math.isInt(x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpky2iwjtn.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpky2iwjtn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ && \n            (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    /tmp/tmpixnombzu.d(21): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpixnombzu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((x == std.math.add(x,\
    \ y)) && (y == std.math.add(y, z)) && (z == std.math.add(z, x)));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5572ty6_.d(20): Error: undefined identifier `add` in module `std.math`

    /tmp/tmp5572ty6_.d(20): Error: undefined identifier `add` in module `std.math`

    /tmp/tmp5572ty6_.d(20): Error: undefined identifier `add` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5572ty6_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.int(x) == std.int(y))\
    \ || (std.int(y) == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg8v869ib.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8v869ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(z) == std.int(x + y + z);\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpf3lx27g_.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3lx27g_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    /tmp/tmpq7byghrr.d(20): Error: undefined identifier `isInt` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7byghrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return ((std.math.isIntegral(x)\
    \ && std.math.isIntegral(y) && std.math.isIntegral(z)) || (std.math.isIntegral(x)\
    \ && std.math.isIntegral(y) && std.math.isIntegral(z) && std.math.isIntegral(x+y)\
    \ && std.math.isIntegral(x+z) && std.math.isIntegral(y+z)));\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module
    `std.math`, did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u.d(20): Error: undefined identifier `isIntegral` in module `std.math`,
    did you mean template `isIntegral(T)`?

    /tmp/tmptdotxc6u'
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmprdi7ammc.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprdi7ammc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ + std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmpg84hvp_7.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg84hvp_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n        \n    \n        \n      \n\n    \n    \n\
    */\nbool any_int(float x, float y, float z) \n{\n    return std.int(x) == std.int(y)\
    \ && std.int(y) == std.int(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    /tmp/tmp4cijfotm.d(20): Error: identifier expected following `.`, not `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cijfotm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164048

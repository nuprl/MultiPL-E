name: HumanEval_95_check_dict_case
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Given a dictionary, return\
  \ True if all keys are strings in lower \n    case or all keys are strings in upper\
  \ case, else return False.\n    The function should return False is the given dictionary\
  \ is empty.\n    Examples:\n                        \n*/\nbool check_dict_case(Nullable!(string[string])\
  \ dict) \n"
tests: "unittest\n{\n    alias candidate = check_dict_case;\n\n    assert(candidate([\"\
  p\": \"pineapple\", \"b\": \"banana\"].nullable) == true);\n    assert(candidate([\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"].nullable) == false);\n\
  \    assert(candidate([\"p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"\
  ].nullable) == false);\n    assert(candidate([\"Name\": \"John\", \"Age\": \"36\"\
  , \"City\": \"Houston\"].nullable) == false);\n    assert(candidate([\"STATE\":\
  \ \"NC\", \"ZIP\": \"12345\"].nullable) == true);\n    assert(candidate([\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"].nullable) == true);\n    assert(candidate(Nullable!(string[string]).init)\
  \ == false);\n}\nvoid main(){}"
completions: ["{\n    foreach(string key, dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n\
    \        if(!std.string.isLower(key) || !std.string.isUpper(key))\n        {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n     \
    \       return false;\n    }\n    return true;\n}", "{\n    foreach(string key\
    \ in dict) {\n        if(!is_string(key)) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) \n   \
    \ {\n        if(!isLower(key) || !isUpper(key)) return false;\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a tags=d,string,case-sensitive,dictionary |>\n<| a dscore=2\
    \ |>\nI like using std.algorithm.toLower or std.algorithm.toUpper\n<code>\nimport\
    \ std.algorithm;", "{\n    foreach(string key in dict) {\n        if (!(isLower(key)\
    \ || isUpper(key))) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key in dict)\n    {\n        if(!is_string(key)\
    \ || !is_string(dict[key]))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key, dict) {\n        if\
    \ (!(key.to_lowercase() == key)) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}", "{\n    foreach(string key, dict) {\n        if (!is_string(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if (!(is_string(key) && is_string(dict[key])))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        bool isLower = key.isLower();\n   \
    \     bool isUpper = key.isUpper();\n        if(!isLower && !isUpper) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ k in dict)\n    {\n        if(!is_string(k))\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string key in\
    \ dict) {\n        string value = dict[key];\n        if (value.length() == 0)\
    \ {\n            return false;\n        }\n        if (value.length() == 1) {\n\
    \            if (value[0] < 'a' || value[0] > 'z') {\n                return false;\n\
    \            }\n        }\n        if (value.length() == 2) {\n            if\
    \ (value[0] < 'A' || value[0] > 'Z') {\n                return false;\n      \
    \      }\n            if (value[1] < 'a' || value[1] > 'z') {\n              \
    \  return false;\n            }\n        }\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict)\n    {\n        if(!std.string.isLower(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        string lowerKey = key.to_lower();\n\
    \        string upperKey = key.to_upper();\n        if(!dict.contains(lowerKey)\
    \ || !dict.contains(upperKey)) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key)\
    \ || !is_string(dict[key])) {\n            return false;\n        }\n    }\n \
    \   return true;\n}", "{\n    foreach(string k in dict)\n    {\n        if(!is_string(k)\
    \ || !is_string(dict[k]))\n            return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n    \
    \    if (!(key is string)) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!is_string(key)) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}", "{\n    if (dict.isNull)\
    \ return true;\n    \n    foreach (string key in dict) {\n        if (!(key is\
    \ string) || !(key is string)) return false;\n        if (key.caseInsensitiveCompare(key.lowercase())\
    \ != 0) return false;\n        if (key.caseInsensitiveCompare(key.uppercase())\
    \ != 0) return false;\n    }\n    return true;\n}", "{\n    foreach(string key\
    \ in dict) {\n        if (!is_string(key)) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n \
    \       if (!(dict[key] is string)) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if\
    \ (dict[key] == null) {\n            return false;\n        }\n        if (dict[key].length\
    \ != 0) {\n            if (dict[key].length != dict[key].toLower()) {\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!std.string.isLower(key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!isLower(key) || !isUpper(key))\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ {\n        if(!std.string.isLower(key) || !std.string.isUpper(key)) {\n    \
    \        return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (!(dict[key] is string)) {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!is_string(key)) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!isLower(key))\
    \ {\n            return false;\n        }\n        if(!isUpper(key)) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ k in dict) {\n        if (!k.isLower()) return false;\n        if (!k.isUpper())\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if (key.isLower) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    I like your solution, but I wonder if there is a way to do it without using any\
    \ external libraries. I mean the solution should be in pure C/C++.\n<|/ c |>\n\
    <| c |>\nI added a solution that uses only standard libraries.\n<|/ c |>\n<| c\
    \ |>\nI added a solution that uses only standard libraries.\n<|/ c |>\n<| c |>\n\
    I added a solution that uses only standard libraries.\n<|/ c |>\n<| a |>\nHere's\
    \ a solution using only standard libraries:\n<code>\n#include <algorithm>\n#include\
    \ <cctype>\n#include <cstdint>\n#include <cstring>\n#include <iostream>\n#include\
    \ <string>", "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key)\
    \ || !is_string(dict[key])) return false;\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if (!(isLower(key) || isUpper(key)))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict)\n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    if (dict.isNull) return true;\n    foreach (string key in dict) {\n    \
    \    if (!(key.size() == 1 && key[0] == 'a')) {\n            return false;\n \
    \       }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if (!(dict[key] is string)) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n  \
    \      if(!isLower(key) || !isUpper(key)) return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) \n    {\n        if(!std.is_string(key)\
    \ || !std.is_string(dict[key]))\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key, dict) {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n            return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) \n    {\n        if(!isLower(key) || !isUpper(key))\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ {\n        if (!(is_string(key) || is_string(key.to_lower()))) return false;\n\
    \    }\n    return true;\n}", "{\n    foreach(string key, dict) {\n        if\
    \ (!is_string(key)) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key in dict) {\n        if (!(dict[key] is\
    \ string)) {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if (!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (dict[key] == null) {\n            return false;\n\
    \        }\n        if (dict[key].length != 0) {\n            foreach(char c in\
    \ dict[key]) {\n                if (c >= 'A' && c <= 'Z') {\n                \
    \    return false;\n                }\n                if (c >= 'a' && c <= 'z')\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!std.isLowercase(key) || !std.isUppercase(key))\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    foreach(string key, dict) \n  \
    \  {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n     \
    \   {\n            return false;\n        }\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict) {\n        if(!is_string(key)) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}", "{\n    if (dict.isNull)\
    \ return true;\n    \n    foreach(string key in dict.keys) {\n        if (!(isLower(key)\
    \ || isUpper(key))) return false;\n    }\n    \n    return true;\n}", "{\n   \
    \ foreach(string key in dict) {\n        if (!(dict[key] is string)) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (dict[key] is string) {\n            if (dict[key].length\
    \ != 0) {\n                if (dict[key].isLower) {\n                    return\
    \ true;\n                }\n                else {\n                    return\
    \ false;\n                }\n            }\n            else {\n             \
    \   return false;\n            }\n        }\n        else {\n            return\
    \ false;\n        }\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\nimport std.algorithm;\nimport std.conv;\nimport std.string;\n\
    import std.stdio;\nimport std.conv;\nimport std.array;\nimport std.array;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\n\
    import std.conv;\nimport std.conv;\nimport std.conv;\nimport std.conv;\nimport\
    \ std.conv;\nimport st", "{\n    if (dict.isNull) return true;\n    \n    foreach\
    \ (string key in dict) {\n        if (!std.string.isLowercase(key) || !std.string.isUppercase(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!key.IsLower()) {\n            return\
    \ false;\n        }\n    }\n    foreach(string key in dict) {\n        if(!key.IsUpper())\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key)) return false;\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict)\n    {\n        if(!std.string.isLower(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!key.IsLower()) return false;\n\
    \        if(!key.IsUpper()) return false;\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        string lowerKey = key.to_lower();\n\
    \        string upperKey = key.to_upper();\n        if(!dict.contains(lowerKey)\
    \ || !dict.contains(upperKey)) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    if (dict.isNull) return true;\n    \n    foreach\
    \ (string key in dict.keys) {\n        string lowerKey = key.to_lowercase();\n\
    \        string upperKey = key.to_uppercase();\n        if (lowerKey != upperKey)\
    \ return false;\n    }\n    \n    return true;\n}", "{\n    foreach(string k in\
    \ dict) {\n        if(!is_string(k)) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n  \
    \      if(!std.isLowercase(key) || !std.isUppercase(key))\n        {\n       \
    \     return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        string lowerCaseKey = key.to_lowercase();\n  \
    \      string upperCaseKey = key.to_uppercase();\n        if(lowerCaseKey == key\
    \ || upperCaseKey == key)\n        {\n            return false;\n        }\n \
    \   }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key)\
    \ || !is_string(dict[key])) {\n            return false;\n        }\n    }\n \
    \   return true;\n}", "{\n    foreach(string key in dict) {\n        if (dict[key]\
    \ == null) {\n            return false;\n        }\n        bool isUpper = isUpper(key);\n\
    \        bool isLower = isLower(key);\n        if (isUpper != isLower) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n/*", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!key.IsLower()) return false;\n\
    \        if(!key.IsUpper()) return false;\n    }\n    return true;\n}", "{\n \
    \   if (dict.isNull) return true;\n    \n    foreach (string key in dict.keys)\
    \ \n    {\n        if (!(key == key.ToLower())) return false;\n        if (!(key\
    \ == key.ToUpper())) return false;\n    }\n    \n    return true;\n}", "{\n  \
    \  foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if\
    \ (!(is_string(key) || is_string(key.upcase()))) return false;\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n    \
    \    if(!std.string.isLower(key)) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key)\
    \ || !is_string(dict[key])) {\n            return false;\n        }\n    }\n \
    \   return true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key)\
    \ || !is_string(dict[key]))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string k in dict)\n    {\n     \
    \   if(!std.string.isLower(k))\n        {\n            return false;\n       \
    \ }\n    }\n    foreach(string k in dict)\n    {\n        if(!std.string.isUpper(k))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ {\n        if(!is_string(key) || !is_string(dict[key]))\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    foreach(string k in dict) \n  \
    \  {\n        if(!std.string.isLower(k)) \n        {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!std.string.isLowercase(key) || !std.string.isUppercase(key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!isLower(key) || !isUpper(key)) return false;\n\
    \    }\n    return true;\n}\n/*", "{\n    foreach(string k in dict)\n    {\n \
    \       if(!is_string(k) || !is_string(dict[k]))\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string key in\
    \ dict) \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key, dict) {\n        if (key == null || key.empty()) {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if(!is_string(key)) {\n            return false;\n \
    \       }\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\n\
    \    {\n        if(!std.string.isLower(key))\n        {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!is_string(key)) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string k in dict) \n    {\n        if(!std.string.isLower(k))\
    \ \n        {\n            return false;\n        }\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) {\n        if(!is_string(key)) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ k in dict) {\n        if (k == k.to_lowercase()) {\n            return true;\n\
    \        }\n        if (k == k.to_uppercase()) {\n            return true;\n \
    \       }\n    }\n    return false;\n}", "{\n    foreach(string key in dict)\n\
    \    {\n        if(!is_string(key) || !is_string(dict[key]))\n        {\n    \
    \        return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (dict[key] == null) {\n            return false;\n\
    \        }\n        char c = tolower(dict[key]);\n        if (c == toupper(c))\
    \ {\n            continue;\n        }\n        return false;\n    }\n    return\
    \ true;\n}", "{\n    foreach(string k in dict)\n    {\n        if(!k.isLower())\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if (!(dict[key] is string)) {\n \
    \           return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict)\n    {\n        if(!std.string.isLower(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!std.string.isLower(key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (!(is_string(key) && is_string(dict[key]))) {\n \
    \           return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key, dict) \n    {\n        if(!std.isLower(key) || !std.isUpper(key))\n   \
    \         return false;\n    }\n    return true;\n}", "{\n    foreach(string key\
    \ in dict) {\n        if (!(key.to_lowercase() == key)) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string key in\
    \ dict) {\n        if(!is_string(key)) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!std.string.isLower(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    if (dict.isNull)\
    \ return true;\n    \n    foreach (string key in dict) {\n        if (!std.string.isLowercase(key)\
    \ || !std.string.isUppercase(key)) return false;\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ return false;\n    }\n    return true;\n}", "{\n    if (dict.isNull) return\
    \ true;\n    \n    foreach (string key in dict) {\n        if (!(key.caseInsensitiveCompare(key.lowercase())\
    \ == 0)) {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) {\n        if(!is_string(key)) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if (!(isLowercase(key) || isUppercase(key)))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string k in dict) \n    {\n    \
    \    if(!k.isLower()) return false;\n    }\n    foreach(string k in dict) \n \
    \   {\n        if(!k.isUpper()) return false;\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict) {\n        if (dict[key] == null) {\n       \
    \     return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict)\n    {\n        if(!isLower(key))\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string key in\
    \ dict) \n    {\n        if(!std.is_string(key) || !std.is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n    \
    \    if(!key.IsLower()) return false;\n        if(!key.IsUpper()) return false;\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n  \
    \      if(!std.string.isLower(key) || !std.string.isUpper(key))\n        {\n \
    \           return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict)\n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key, dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict)\n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict)\n    {\n        if(!std.string.isLower(key))\n        {\n     \
    \       return false;\n        }\n    }\n    foreach(string key in dict)\n   \
    \ {\n        if(!std.string.isUpper(key))\n        {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n</code>\n<|/ a tags=d,string,case-sensitive\
    \ |>\n<| c |>\nThis doesn't work if you have a dictionary that has keys that are\
    \ both upper and lower case. For example, `{\"a\":\"A\",\"b\":\"B\"}` will return\
    \ `True` when it should return `False`.\n<|/ c |>\n<| c |>\n: Yes, you are right.\
    \ I've updated the answer to reflect that.\n<|/ c |>\n<| a dscore=2 |>\nI wrote\
    \ a library for this: https://github.com/dlang-libc/libc\n<code>\nimport std.stdio;\n\
    import std.string;\nimport std.algorithm;", "{\n    foreach(string k in dict)\n\
    \    {\n        if(!is_string(k) || !is_string(dict[k]))\n        {\n        \
    \    return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (dict[key] == null) {\n            return false;\n\
    \        }\n        if (dict[key].length() != 0) {\n            foreach(char c\
    \ in dict[key]) {\n                if (c >= 'A' && c <= 'Z') {\n             \
    \       return false;\n                }\n                if (c >= 'a' && c <=\
    \ 'z') {\n                    return false;\n                }\n            }\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!is_string(key)) {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string k in dict)\n    {\n        if(!k.isLower())\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    if (dict.isNull)\
    \ return true;\n    foreach (string key in dict.keys) \n    {\n        if (!(key.size()\
    \ == 1 && key[0] >= 'A' && key[0] <= 'Z')) return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key) ||\
    \ !is_string(dict[key])) return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (!(isLower(key) || isUpper(key))) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}", "{\n    if (dict == null)\n\
    \        return false;\n    foreach (string key in dict)\n    {\n        if (!(key\
    \ is string))\n            return false;\n    }\n    return true;\n}", "{\n  \
    \  foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if\
    \ (!(isLowercase(key) || isUppercase(key))) return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict)\n    {\n        if(!is_string(key) ||\
    \ !is_string(dict[key]))\n        {\n            return false;\n        }\n  \
    \  }\n    return true;\n}", "{\n    foreach(string key in dict)\n    {\n     \
    \   if(!is_string(key))\n        {\n            return false;\n        }\n   \
    \ }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if (!(key\
    \ is string)) {\n            return false;\n        }\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) {\n        string lowerCase = key.to_lowercase();\n\
    \        string upperCase = key.to_uppercase();\n        if (lowerCase == upperCase)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key]))\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string k in dict)\n\
    \    {\n        if(!k.isLower())\n        {\n            return false;\n     \
    \   }\n    }\n    return true;\n}", "{\n    if (dict.isNull) return true;\n  \
    \  \n    foreach (string key in dict) {\n        if (!(key == key.ToLower()))\
    \ return false;\n        if (!(key == key.ToUpper())) return false;\n    }\n \
    \   \n    return true;\n}", "{\n    if (dict.isNull) return true;\n    foreach\
    \ (string key in dict.keys) \n    {\n        if (key.isLower()) return true;\n\
    \        if (key.isUpper()) return true;\n    }\n    return false;\n}\n</code>\n\
    <|/ a tags=dictionary,c#,.net |>\n<| a tags=dictionary,c#,.net |>\n<code>\npublic\
    \ static bool IsCaseInsensitiveDictionary(this IDictionary<string, object> dictionary)\n\
    {\n    if (dictionary == null)\n    {\n        throw new ArgumentNullException(nameof(dictionary));\n\
    \    }", "{\n    foreach(string key, dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n    \
    \    if (!(key.to_lowercase() == key)) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n  \
    \      if(!is_string(key) || !is_string(dict[key]))\n            return false;\n\
    \    }\n    return true;\n}", "{\n    foreach(string key, dict) {\n        if\
    \ (!(key.to_lowercase() == key)) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}", "{\n    foreach(string k in dict)\n    {\n        if(!is_string(k))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    if (dict.isNull)\n        return false;\n    \n    foreach(string key in\
    \ dict.keys) {\n        if (key.isLower)\n            return false;\n        if\
    \ (key.isUpper)\n            return false;\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key)) return false;\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict) {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string k in dict)\n    {\n     \
    \   if(!is_string(k))\n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key)\
    \ || !is_string(dict[key])) return false;\n    }\n    return true;\n}", "{\n \
    \   foreach(string key in dict) \n    {\n        if(!std.string.isLower(key) ||\
    \ !std.string.isUpper(key))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string key in dict) \n    {\n  \
    \      if(!is_string(key) || !is_string(dict[key])) return false;\n    }\n   \
    \ return true;\n}", "{\n    foreach(string key in dict) {\n        bool isUpper\
    \ = isupper(key);\n        bool isLower = islower(key);\n        if(isUpper !=\
    \ isLower) {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    if (dict.isNull) return true;\n    foreach\
    \ (string key in dict) {\n        if (!(key.size() == 1 && key[0] == 'a')) {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict)\n    {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string key in dict) {\n        if(!std.string.isLower(key) || !std.string.isUpper(key))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if(!is_string(key)) {\n            return false;\n \
    \       }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        if(!key.IsLower())\n            return false;\n    }\n    return true;\n\
    }", "{\n    foreach(string key in dict) {\n        if(!is_string(key)) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if(!key.IsLower()) return false;\n        if(!key.IsUpper())\
    \ return false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\
    \ {\n        if (!(key is string))\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key))\n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n    \
    \    if(!is_string(key)) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!is_string(key)\
    \ || !is_string(dict[key]))\n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "{\n    foreach(string k in dict)\n    {\n     \
    \   if(!k.isLower())\n        {\n            return false;\n        }\n    }\n\
    \    return true;\n}", "{\n    foreach(string key in dict) \n    {\n        if(!std.string.isLower(key)\
    \ || !std.string.isUpper(key)) return false;\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict)\n    {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \        {\n            return false;\n        }\n    }\n    return true;\n}",
  "{\n    foreach(string k in dict)\n    {\n        if(!k.isLower())\n        {\n\
    \            return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key])) return\
    \ false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict) {\n\
    \        string lowerCase = key.to_lowercase();\n        string upperCase = key.to_uppercase();\n\
    \        if(lowerCase == upperCase) {\n            return true;\n        }\n \
    \   }\n    return false;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   if (dict.is_null) {\n        return false;\n    }\n    \n    foreach(string\
    \ key in dict) {\n        if (!(key.to_lowercase() == key)) {\n            return\
    \ false;\n        }\n    }\n    \n    return true;\n}", "{\n    foreach(string\
    \ key in dict) \n    {\n        if(!is_string(key) || !is_string(dict[key])) return\
    \ false;\n    }\n    return true;\n}", "{\n    foreach(string key in dict) \n\
    \    {\n        if(!is_string(key) || !is_string(dict[key]))\n        {\n    \
    \        return false;\n        }\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if (!is_string(key)) {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string k in dict)\n \
    \   {\n        if(!std.isLower(k))\n        {\n            return false;\n   \
    \     }\n    }\n    return true;\n}", "{\n    foreach(string key, dict) \n   \
    \ {\n        if(!isLower(key) || !isUpper(key))\n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a tags=d,string,case-sensitive,dictionary\
    \ |>\n<| a tags=d,string,case-sensitive,dictionary |>\nI came up with this solution:\n\
    <code>\nimport std.stdio;\nimport std.string;\nimport std.algorithm;\nimport std.array;",
  "{\n    foreach(string key in dict)\n    {\n        if(!is_string(key))\n      \
    \  {\n            return false;\n        }\n    }\n    return true;\n}", "{\n\
    \    foreach(string key in dict) {\n        if(!key.to_lowercase().equals(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string k in dict) {\n        if (!k.isLower()) return false;\n   \
    \ }\n    foreach(string k in dict) {\n        if (!k.isUpper()) return false;\n\
    \    }\n    return true;\n}", "{\n    if (dict == null)\n        return false;\n\
    \    foreach (string key in dict) {\n        if (!(key is string))\n         \
    \   return false;\n        string s = key;\n        if (s.isLower())\n       \
    \     return true;\n        if (s.isUpper())\n            return true;\n    }\n\
    \    return false;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=dictionary,c#,.net\
    \ |>\n<code>\npublic static bool IsStringInUpperOrLower(this Dictionary<string,\
    \ string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key) &&\
    \ dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a |>\n<code>\npublic static bool IsStringInUpperOrLower(this Dictionary<string,\
    \ string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key) &&\
    \ dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a tags=dictionary,c#,.net\
    \ dscore=1 |>\n<| a |>\n<code>\npublic static bool IsStringInUpperOrLower(this\
    \ Dictionary<string, string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key)\
    \ && dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a tags=dictionary,c#,.net\
    \ dscore=1 |>\n<| a tags=dictionary,c#,.net |>\n<code>\npublic static bool IsStringInUpperOrLower(this\
    \ Dictionary<string, string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key)\
    \ && dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=dictionary,c#,.net |>\n<code>\npublic static bool IsStringInUpperOrLower(this\
    \ Dictionary<string, string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key)\
    \ && dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>\npublic static bool IsStringInUpperOrLower(this Dictionary<string,\
    \ string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key) &&\
    \ dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a tags=dictionary,c#,.net\
    \ dscore=1 |>\n<| a tags=dictionary,c#,.net |>\n<code>\npublic static bool IsStringInUpperOrLower(this\
    \ Dictionary<string, string> dictionary, string key)\n{\n    return dictionary.ContainsKey(key)\
    \ && dictionary[key].ToUpper() == dictionary[key];\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=dictionary,c", "{\n    foreach(string key in dict) {\n       \
    \ if(!is_string(key) || !is_string(dict[key]))\n            return false;\n  \
    \  }\n    return true;\n}", "{\n    foreach(string key in dict) {\n        if(!is_string(key))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}", "{\n \
    \   foreach(string key, dict) {\n        if(!is_string(key) || !is_string(dict[key]))\n\
    \            return false;\n    }\n    return true;\n}", "{\n    foreach(string\
    \ key in dict) {\n        if(!std.string.isLower(key)) {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "{\n    foreach(string key in dict)\n\
    \    {\n        if(!std.string.isLower(key))\n        {\n            return false;\n\
    \        }\n    }\n    return true;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

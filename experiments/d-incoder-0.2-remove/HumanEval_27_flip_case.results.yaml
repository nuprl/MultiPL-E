language: d
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (auto c :\
    \ string)\n\t{\n\t\tif (islower(c))\n\t\t\tresult += toupper(c);\n\t\telse\n\t\
    \t\tresult += tolower(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6pz4ymil.d(10): Error: no identifier for declarator `c`

    /tmp/tmp6pz4ymil.d(10): Error: expression expected, not `:`

    /tmp/tmp6pz4ymil.d(10): Error: found `string` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pz4ymil.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_2(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(c == 'A')\n            c = 'a';\n        else if(c == 'B')\n          \
    \  c = 'b';\n        else if(c == 'C')\n            c = 'c';\n        else if(c\
    \ == 'D')\n            c = 'd';\n        else if(c == 'E')\n            c = 'e';\n\
    \        else if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n\
    \            c = 'g';\n        else if(c == 'H')\n            c = 'h';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'J')\n     \
    \       c\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps1b3q7jt.d(101): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmps1b3q7jt.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmps1b3q7jt.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps1b3q7jt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'A')\n        {\n            c = 'A';\n        }\n        else\
    \ if(c == 'b' || c == 'B')\n        {\n            c = 'B';\n        }\n     \
    \   else if(c == 'c' || c == 'C')\n        {\n            c = 'C';\n        }\n\
    \        else if(c == 'd' || c == 'D')\n        {\n            c = 'D';\n    \
    \    }\n        else if(c == 'e' || c == 'E')\n        {\n            c = 'E';\n\
    \        }\n        else if(c == 'f' || c == 'F')\n        {\n            c =\
    \ 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n        \
    \    c = 'G';\n        }\n        else if(c == 'h' || c == 'H')\n        {\n \
    \           c = 'H';\n        }\n        else if(c == 'i' || c == 'I')\n     \
    \   {\n            c = 'I';\n        }\n        else if(c == 'j' || c == 'J')\n\
    \        {\n            c = 'J';\n        }\n        else if(c == 'k' || c ==\
    \ 'K')\n        {\n            c = 'K';\n        }\n        else if(c == 'l' ||\
    \ c == 'L')\n        {\n            c = 'L';\n        }\n        else if(c ==\
    \ 'm' || c == 'M')\n        {\n            c = 'M';\n        }\n        else if(c\
    \ == 'n' || c == 'N')\n        {\n            c = 'N';\n        }\n        else\
    \ if(c == 'o' || c == 'O')\n        {\n            c = 'O';\n        }\n     \
    \   else if(c == 'p' || c == 'P')\n        {\n            c = 'P';\n        }\n\
    \        else if(c == 'q' || c == 'Q')\n        {\n            c = 'Q';\n    \
    \    }\n        else if(c == 'r' || c == 'R')\n        {\n            c = 'R';\n\
    \        }\n        else if(c == 's' || c == 'S')\n        {\n            c =\
    \ 'S';\n        }\n        else if(c == 't' || c == 'T')\n        {\n        \
    \    c = 'T';\n        }\n        else if(c == 'u' || c == 'U')\n        {\n \
    \           c = 'U';\n        }\n        else if(c == 'v' || c == 'V')\n     \
    \   {\n            c = 'V';\n        }\n        else if(c == 'w' || c == 'W')\n\
    \        {\n            c = 'W';\n        }\n        else if(c == 'x' || c ==\
    \ 'X')\n        {\n            c = 'X';\n        }\n        else if(c == 'y' ||\
    \ c == 'Y')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkuy0tt7r.d(110): Error: found `unittest` instead of statement

    /tmp/tmpkuy0tt7r.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkuy0tt7r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\
    \t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_fdh7jwe.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_fdh7jwe.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_fdh7jwe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto s = string;\n\tfor(auto &c : s)\n\t\
    {\n\t\tif(islower(c))\n\t\t\tc = toupper(c);\n\t\telse if(isupper(c))\n\t\t\t\
    c = tolower(c);\n\t}\n\treturn s;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0zsvqht4.d(10): Error: basic type expected, not `&`

    /tmp/tmp0zsvqht4.d(10): Error: no identifier for declarator `_error_`

    /tmp/tmp0zsvqht4.d(10): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0zsvqht4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\n/*\n For a given string, flip\
    \ uppercase characters to lowercase and lowercase to uppercase.\n        \n*/\n\
    string flip_case_lower(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(c == 'A')\n            c = 'a';\n        else if(c == 'B')\n          \
    \  c = 'b';\n        else if(c == 'C')\n            c = 'c';\n        else if(c\
    \ == 'D')\n            c = 'd';\n        else if(c == 'E')\n            c = 'e';\n\
    \        else if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n\
    \            c = 'g';\n        else if(c == 'H')\n            c = 'h';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'J')\n     \
    \       c\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq3dr2_3_.d(101): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpq3dr2_3_.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpq3dr2_3_.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3dr2_3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all characters to lowercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_all(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase\
    \ and uppercase to uppercase.\n        \n*/\nstring flip_case_all_upper(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase and lowercase to\
    \ uppercase.\n        \n*/\nstring flip_case_all_lower(string string) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n\
    \        if(string[i] >= 'A' && string[i] <= 'Z')\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfgsbvvio.d(114): Error: found `unittest` instead of statement

    /tmp/tmpfgsbvvio.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgsbvvio.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else if(c == 'A')\n            c = 'a';\n     \
    \   else if(c == 'B')\n            c = 'b';\n        else if(c == 'C')\n     \
    \       c = 'c';\n        else if(c == 'D')\n            c = 'd';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'G')\n            c = 'g';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'J')\n            c = 'j';\n        else if(c == 'K')\n\
    \            c = 'k';\n        else if(c == 'L')\n            c = 'l';\n     \
    \   else if(c == 'M')\n            c = 'm';\n        else if(c == 'N')\n     \
    \       c = 'n';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'P')\n            c\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaue9xlfu.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaue9xlfu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(*it<='Z' && *it>='a')\n\t\t\
    {\n\t\t\t*it+=32;\n\t\t}\n\t\telse if(*it>='A' && *it<='Z')\n\t\t{\n\t\t\t*it-=32;\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(*it<='z' && *it>='a')\n\t\t{\n\t\t\t*it+=32;\n\t\t}\n\t\telse if(*it>='a'\
    \ && *it<='z')\n\t\t{\n\t\t\t*it-=32;\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_upper(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(*it<='Z' && *it>='A')\n\
    \t\t{\n\t\t\t*it+=32;\n\t\t}\n\t\telse if(*it>='A' && *it<='Z')\n\t\t{\n\t\t\t\
    *it-=32;\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_title(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(*it<='Z' && *it>='a')\n\t\t{\n\t\t\t*it+=32;\n\t\t}\n\t\telse if(*it>='A'\
    \ && *it<='Z')\n\t\t{\n\t\t\t*it-=32;\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_title_lower(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(*it<='z' && *it>='a')\n\
    \t\t{\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjiveb4ny.d(99): Error: found `unittest` instead of statement

    /tmp/tmpjiveb4ny.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpjiveb4ny.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjiveb4ny.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\
    \t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\t\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l81hdx.d(9): Error: no property `begin` for type `string`

    /tmp/tmpb2l81hdx.d(10): Error: no property `end` for type `string`

    /tmp/tmpb2l81hdx.d(14): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l81hdx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tif(string[i] >= 'a' && string[i] <= 'z')\n\
    \t\t\tresult += string[i] - 'a' + 'A';\n\t\telse if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n\t\t\tresult += string[i] - 'A' + 'a';\n\t\telse\n\t\t\tresult += string[i];\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplgm3z95n.d(9): Error: `string` is used as a type

    /tmp/tmplgm3z95n.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplgm3z95n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else if(c == 'A')\n            c = 'a';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'C')\n\
    \            c = 'c';\n        else if(c == 'D')\n            c = 'd';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n     \
    \       c = 'f';\n        else if(c == 'G')\n            c = 'g';\n        else\
    \ if(c == 'H')\n            c = 'h';\n        else if(c == 'I')\n            c\
    \ = 'i';\n        else if(c == 'J')\n            c = 'j';\n        else if(c ==\
    \ 'K')\n            c = 'k';\n        else if(c == 'L')\n            c = 'l';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'N')\n\
    \            c = 'n';\n        else if(c == 'O')\n            c = 'o';\n     \
    \   else if(c == 'P')\n            c\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjkgszp92.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpjkgszp92.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpjkgszp92.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkgszp92.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'A')\n            c = toupper(c);\n        else if(c == 'b' ||\
    \ c == 'B')\n            c = tolower(c);\n        else if(c == 'c' || c == 'C')\n\
    \            c = toupper(c);\n        else if(c == 'd' || c == 'D')\n        \
    \    c = tolower(c);\n        else if(c == 'e' || c == 'E')\n            c = toupper(c);\n\
    \        else if(c == 'f' || c == 'F')\n            c = tolower(c);\n        else\
    \ if(c == 'g' || c == 'G')\n            c = toupper(c);\n        else if(c ==\
    \ 'h' || c == 'H')\n            c = tolower(c);\n        else if(c == 'i' || c\
    \ == 'I')\n            c = toupper(c);\n        else if(c == 'j' || c == 'J')\n\
    \            c = tolower(c);\n        else if(c == 'k' || c == 'K')\n        \
    \    c = toupper(c);\n        else if(c == 'l' || c == 'L')\n            c = tolower(c);\n\
    \        else if(c == 'm' || c == 'M')\n            c = toupper(c);\n        else\
    \ if(c == 'n' || c == 'N')\n            c = tolower(c);\n        else if(c ==\
    \ 'o' || c == 'O')\n            c = toupper(c);\n        else if(c == 'p' || c\
    \ == 'P')\n            c = tolower(c);\n        else if(c == 'q' || c == 'Q')\n\
    \            c = toupper(c);\n        else if(c == 'r' || c == 'R')\n        \
    \    c = tolower(c);\n        else if(c == 's' || c == 'S')\n            c = toupper(c);\n\
    \        else if(c == 't' || c == 'T')\n            c = tolower(c);\n        else\
    \ if(c == 'u' || c == 'U')\n            c = toupper(c);\n        else if(c ==\
    \ 'v' || c == 'V')\n            c = tolower(c);\n        else if(c == 'w' || c\
    \ == 'W')\n            c = toupper(c);\n        else if(c == 'x' || c == 'X')\n\
    \            c = tolower(c);\n        else if(c == 'y' || c == 'Y')\n        \
    \    c = toupper(c);\n        else if(c == 'z' || c == 'Z')\n            c = tolower(c);\n\
    \        else if(c == 'A' || c == 'a')\n            c = toupper(c);\n        else\
    \ if(c == 'B' || c == 'b')\n            c = tolower(c);\n        else if(c ==\
    \ 'C' || c == 'c')\n            c = toupper(c);\n        else if(c == 'D' || c\
    \ == 'd')\n            c = tolower(c);\n        else if(c == 'E' || c == 'e')\n\
    \            c = toupper\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfpiz7z8y.d(75): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpfpiz7z8y.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpfpiz7z8y.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfpiz7z8y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == ' ')\n        {\n            result += ' ';\n        }\n        else if(c\
    \ == '_')\n        {\n            result += '_';\n        }\n        else if(c\
    \ == '-')\n        {\n            result += '-';\n        }\n        else if(c\
    \ == '.')\n        {\n            result += '-';\n        }\n        else if(c\
    \ == '\\'')\n        {\n            result += '\\'';\n        }\n        else\
    \ if(c == '\"')\n        {\n            result += '\"';\n        }\n        else\
    \ if(c == '&')\n        {\n            result += '&';\n        }\n        else\
    \ if(c == '%')\n        {\n            result += '%';\n        }\n        else\
    \ if(c == '(')\n        {\n            result += '(';\n        }\n        else\
    \ if(c == ')')\n        {\n            result += ')';\n        }\n        else\
    \ if(c == '*')\n        {\n            result += '*';\n        }\n        else\
    \ if(c == '+')\n        {\n            result += '+';\n        }\n        else\
    \ if(c == ',')\n        {\n            result += ',';\n        }\n        else\
    \ if(c == '-')\n        {\n            result += '-';\n        }\n        else\
    \ if(c == '=')\n        {\n            result += '=';\n        }\n        else\
    \ if(c == '<')\n        {\n            result += '<';\n        }\n        else\
    \ if(c == '>')\n        {\n            result += '>';\n        }\n        else\
    \ if(c == '!')\n        {\n            result += '!';\n        }\n        else\
    \ if(c == '?')\n        {\n            result += '?';\n        }\n        else\
    \ if(c == '@')\n        {\n            result += '@';\n        }\n        else\
    \ if(c == '[')\n        {\n            result += '[';\n        }\n        else\
    \ if(c == ']')\n        {\n            result += ']';\n        }\n        else\
    \ if(c == '^')\n        {\n            result += '^';\n        }\n        else\
    \ if(c == '|')\n        {\n            result += '|';\n        }\n        else\
    \ if(c == '~')\n        {\n            result += '~';\n        }\n        else\
    \ if(c == '`')\n        {\n            result += '`';\n        }\n        else\
    \ if(c == '{')\n        {\n            result += '{';\n        }\n        else\
    \ if(c == '}')\n        {\n            result += '}';\n        }\n        else\
    \ if(c == '%')\n        {\n            result += '%';\n        }\n        else\
    \ if(c == '\"')\n        {\n            result += '\"';\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9vxol0aq.d(132): Error: found `unittest` instead of statement

    /tmp/tmp9vxol0aq.d(140): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp9vxol0aq.d(140): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vxol0aq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpih3gbv8a.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpih3gbv8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] + 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpetdu0vo_.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmpetdu0vo_.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpetdu0vo_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\t\t\
    {\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= '0' && *it <= '9')\n\t\t{\n\t\
    \t\t*it ^= 0x20;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8bb60nm_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp8bb60nm_.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8bb60nm_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tif (islower(c))\n\
    \t\t\tresult += toupper(c);\n\t\telse\n\t\t\tresult += tolower(c);\n\t}\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxhodroj4.d(9): Error: `string` is used as a type

    /tmp/tmpxhodroj4.d(10): Error: no property `length` for type `string`

    /tmp/tmpxhodroj4.d(13): Error: undefined identifier `islower`

    /tmp/tmpxhodroj4.d(14): Error: undefined identifier `toupper`

    /tmp/tmpxhodroj4.d(16): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhodroj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_3(string string)\
    \ \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string string)\
    \ \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string string)\
    \ \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpplew8wwc.d(98): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpplew8wwc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto len = string.length();\n\tauto result\
    \ = new char[len];\n\tauto i = 0;\n\tfor(auto &c : string) \n\t{\n\t\tif(c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') \n\t\t{\n\t\t\tc = (c ==\
    \ 'a') ? 'A' : (c == 'e') ? 'E' : (c == 'i') ? 'I' : (c == 'o') ? 'O' : (c ==\
    \ 'u') ? 'U' : c;\n\t\t}\n\t\tresult[i++] = c;\n\t}\n\treturn string(result, 0,\
    \ i);\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77s5om54.d(12): Error: basic type expected, not `&`

    /tmp/tmp77s5om54.d(12): Error: no identifier for declarator `_error_`

    /tmp/tmp77s5om54.d(12): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77s5om54.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'A')\n            c = 'a';\n\
    \        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h_poy6s.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h_poy6s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for (int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n    \
    \        result += toupper(c);\n        }\n        else\n        {\n         \
    \   result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n For a\
    \ given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for (int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n     \
    \   {\n            result += toupper(c);\n        }\n        else\n        {\n\
    \            result += tolower(c);\n        }\n    }\n    return result;\n}\n\
    /*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < string.length; ++i)\n    {\n       \
    \ char c = string[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string string)\
    \ \n{\n    string result = \"\";\n    for (int i = 0; i < string.length; ++i)\n\
    \    {\n        char c = string[i];\n        if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length;\
    \ ++i)\n    {\n        char c = string[i];\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9fe89ceh.d(108): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fe89ceh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_4(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a'\
    \ && string[i] <= 'z')\n        {\n            result += string[i] - 'A' + 'a';\n\
    \        }\n        else\n        {\n            result += string[i];\n      \
    \  }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_6(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9uc_zgk2.d(114): Error: found `unittest` instead of statement

    /tmp/tmp9uc_zgk2.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9uc_zgk2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        if(c == 'A')\n            c = 'a';\n\
    \        result += c;\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n          \
    \  c = 'a';\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_3(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n          \
    \  c = 'a';\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_4(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n          \
    \  c = 'a';\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_5(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n          \
    \  c = 'a';\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_6(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'a')\n            c = 'A';\n        if(c == 'A')\n          \
    \  c = 'a';\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqq3eyrsj.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqq3eyrsj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto result = string;\n\tfor (auto &c :\
    \ string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\t\t\tresult = toupper(c);\n\t\t\
    }\n\t\telse \n\t\t{\n\t\t\tresult = tolower(c);\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6vsbr99m.d(10): Error: basic type expected, not `&`

    /tmp/tmp6vsbr99m.d(10): Error: no identifier for declarator `_error_`

    /tmp/tmp6vsbr99m.d(10): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6vsbr99m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv0s7bx9k.d(9): Error: no property `begin` for type `string`

    /tmp/tmpv0s7bx9k.d(10): Error: no property `end` for type `string`

    /tmp/tmpv0s7bx9k.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0s7bx9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all uppercase characters to lowercase and lowercase to uppercase.\n   \
    \     \n*/\nstring flip_case_all_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all uppercase\
    \ characters to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all_upper(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to lowercase and lowercase to\
    \ uppercase.\n        \n*/\nstring flip_case_all(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= \nunittest\n{\n    alias candidate = flip_case;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptzilymf3.d(113): Error: expression expected, not `unittest`

    /tmp/tmptzilymf3.d(114): Error: found `{` when expecting `)`

    /tmp/tmptzilymf3.d(121): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptzilymf3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase.\n\
    \        \n*/\nstring flip_case_all(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase.\n        \n*/\nstring flip_case_all_upper(string string) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n\
    \        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else\n        {\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpysi0sjoq.d(110): Error: found `unittest` instead of statement

    /tmp/tmpysi0sjoq.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpysi0sjoq.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpysi0sjoq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_utjtah_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_utjtah_.d(10): Error: no property `end` for type `string`

    /tmp/tmp_utjtah_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_utjtah_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase\
    \ and all characters to uppercase.\n        \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and all characters to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptaz2ea01.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptaz2ea01.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it) {\n\t\tif(*it >= 'A' && *it <= 'Z')\
    \ {\n\t\t\t*it -= 'A' - 'a';\n\t\t}\n\t\telse if(*it >= 'a' && *it <= 'z') {\n\
    \t\t\t*it -= 'a' - 'A';\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdpvruxbp.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdpvruxbp.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpvruxbp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] + 32;\n        }\n   \
    \ }\n    return string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_4(string string) \n{\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13upfb87.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(32): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(51): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(55): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(70): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(74): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(89): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(93): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13upfb87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_title(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_title_lower(string\
    \ string) \n{\n    string result = \"\";\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo3myowh6.d(106): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo3myowh6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlmrx9v9.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdlmrx9v9.d(10): Error: no property `end` for type `string`

    /tmp/tmpdlmrx9v9.d(13): Error: undefined identifier `islower`

    /tmp/tmpdlmrx9v9.d(15): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlmrx9v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(*it<='Z' && *it>='a')\n\t\t\
    {\n\t\t\t*it-='a';\n\t\t}\n\t\telse if(*it>='A' && *it<='Z')\n\t\t{\n\t\t\t*it-='A';\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\t*it+=32;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkvqi6olf.d(9): Error: no property `begin` for type `string`

    /tmp/tmpkvqi6olf.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkvqi6olf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (auto c :\
    \ string)\n\t{\n\t\tif (islower(c))\n\t\t\tresult += toupper(c);\n\t\telse\n\t\
    \t\tresult += tolower(c);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6pz4ymil.d(10): Error: no identifier for declarator `c`

    /tmp/tmp6pz4ymil.d(10): Error: expression expected, not `:`

    /tmp/tmp6pz4ymil.d(10): Error: found `string` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pz4ymil.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\
    \t\t{\n\t\t\t*it ^= ('a' ^ 'A');\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it ^= ('A' ^ 'a');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = *it ^ ('A'\
    \ ^ 'a');\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps4_ss18e.d(9): Error: no property `begin` for type `string`

    /tmp/tmps4_ss18e.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4_ss18e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlmrx9v9.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdlmrx9v9.d(10): Error: no property `end` for type `string`

    /tmp/tmpdlmrx9v9.d(13): Error: undefined identifier `islower`

    /tmp/tmpdlmrx9v9.d(15): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlmrx9v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for (int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n    \
    \        result += toupper(c);\n        }\n        else\n        {\n         \
    \   result += tolower(c);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpupoem893.d(9): Error: `string` is used as a type

    /tmp/tmpupoem893.d(15): Error: undefined identifier `toupper`

    /tmp/tmpupoem893.d(19): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupoem893.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            result += string[i] - 'a' + 'A';\n        }\n       \
    \ else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i]\
    \ - 'A' + 'a';\n        }\n        else {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvfmcmfp9.d(9): Error: `string` is used as a type

    /tmp/tmpvfmcmfp9.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvfmcmfp9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); ++i)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5phy68xj.d(9): Error: `string` is used as a type

    /tmp/tmp5phy68xj.d(10): Error: no property `length` for type `string`

    /tmp/tmp5phy68xj.d(66): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5phy68xj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph19v5pqr.d(9): Error: `string` is used as a type

    /tmp/tmph19v5pqr.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph19v5pqr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else if(c == 'A')\n            c = 'a';\n     \
    \   else if(c == 'B')\n            c = 'b';\n        else if(c == 'C')\n     \
    \       c = 'c';\n        else if(c == 'D')\n            c = 'd';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'G')\n            c = 'g';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'J')\n            c = 'j';\n        else if(c == 'K')\n\
    \            c = 'k';\n        else if(c == 'L')\n            c = 'l';\n     \
    \   else if(c == 'M')\n            c = 'm';\n        else if(c == 'N')\n     \
    \       c = 'n';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'P')\n            c\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaue9xlfu.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaue9xlfu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it) {\n\t\tif(islower(*it)) {\n\t\t\t*it = toupper(*it);\n\
    \t\t}\n\t\telse {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpogu05wd3.d(9): Error: no property `begin` for type `string`

    /tmp/tmpogu05wd3.d(10): Error: no property `end` for type `string`

    /tmp/tmpogu05wd3.d(12): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpogu05wd3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor (; it != end; ++it)\n\t{\n\t\tif (*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if (*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it += 32;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi8jm5wsm.d(9): Error: no property `begin` for type `string`

    /tmp/tmpi8jm5wsm.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi8jm5wsm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == ' ')\n        {\n            result += c;\n        }\n        else if(c\
    \ == '_')\n        {\n            result += string[i+1];\n        }\n        else\n\
    \        {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8o78sdxm.d(9): Error: `string` is used as a type

    /tmp/tmp8o78sdxm.d(10): Error: no property `length` for type `string`

    /tmp/tmp8o78sdxm.d(23): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8o78sdxm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t\t*it = *it - 'a' + 'A';\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\t\
    \t\t*it = *it - 'A' + 'a';\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp63v8_d7z.d(9): Error: no property `begin` for type `string`

    /tmp/tmp63v8_d7z.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp63v8_d7z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tif(string[i] >= 'a' && string[i] <= 'z')\n\
    \t\t\tresult += string[i] - 'a' + 'A';\n\t\telse if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n\t\t\tresult += string[i] - 'A' + 'a';\n\t\telse\n\t\t\tresult += string[i];\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplgm3z95n.d(9): Error: `string` is used as a type

    /tmp/tmplgm3z95n.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplgm3z95n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else\n            c = toupper(c);\n        result\
    \ += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo_tqdkjd.d(9): Error: `string` is used as a type

    /tmp/tmpo_tqdkjd.d(66): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_tqdkjd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == ' ')\n        {\n            result += ' ';\n        }\n        else if(c\
    \ == '_')\n        {\n            result += ' ';\n        }\n        else if(c\
    \ == '-' || c == '_' || c == '.' || c == '!' || c == '?')\n        {\n       \
    \     result += c;\n        }\n        else\n        {\n            result +=\
    \ toupper(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe43n_p6r.d(9): Error: `string` is used as a type

    /tmp/tmpe43n_p6r.d(27): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe43n_p6r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == '_')\n        {\n            result += c;\n        }\n        else if(c ==\
    \ 'a')\n        {\n            result += 'A';\n        }\n        else if(c ==\
    \ 'b')\n        {\n            result += 'B';\n        }\n        else if(c ==\
    \ 'c')\n        {\n            result += 'C';\n        }\n        else if(c ==\
    \ 'd')\n        {\n            result += 'D';\n        }\n        else if(c ==\
    \ 'e')\n        {\n            result += 'E';\n        }\n        else if(c ==\
    \ 'f')\n        {\n            result += 'F';\n        }\n        else if(c ==\
    \ 'g')\n        {\n            result += 'G';\n        }\n        else if(c ==\
    \ 'h')\n        {\n            result += 'H';\n        }\n        else if(c ==\
    \ 'i')\n        {\n            result += 'I';\n        }\n        else if(c ==\
    \ 'j')\n        {\n            result += 'J';\n        }\n        else if(c ==\
    \ 'k')\n        {\n            result += 'K';\n        }\n        else if(c ==\
    \ 'l')\n        {\n            result += 'L';\n        }\n        else if(c ==\
    \ 'm')\n        {\n            result += 'M';\n        }\n        else if(c ==\
    \ 'n')\n        {\n            result += 'N';\n        }\n        else if(c ==\
    \ 'o')\n        {\n            result += 'O';\n        }\n        else if(c ==\
    \ 'p')\n        {\n            result += 'P';\n        }\n        else if(c ==\
    \ 'q')\n        {\n            result += 'Q';\n        }\n        else if(c ==\
    \ 'r')\n        {\n            result += 'R';\n        }\n        else if(c ==\
    \ 's')\n        {\n            result += 'S';\n        }\n        else if(c ==\
    \ 't')\n        {\n            result += 'T';\n        }\n        else if(c ==\
    \ 'u')\n        {\n            result += 'U';\n        }\n        else if(c ==\
    \ 'v')\n        {\n            result += 'V';\n        }\n        else if(c ==\
    \ 'w')\n        {\n            result += 'W';\n        }\n        else if(c ==\
    \ 'x')\n        {\n            result += 'X';\n        }\n        else if(c ==\
    \ 'y')\n        {\n            result += 'Y';\n        }\n        else if(c ==\
    \ 'z')\n        {\n            result += 'Z';\n        }\n        else\n     \
    \   {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6pi2qsip.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pi2qsip.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\
    \t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwgmu6e_.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdwgmu6e_.d(10): Error: no property `end` for type `string`

    /tmp/tmpdwgmu6e_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwgmu6e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_upper_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_upper_lower(string\
    \ string) \n{\n    string result = \nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpool6t8w8.d(106): Error: expression expected, not `unittest`

    /tmp/tmpool6t8w8.d(107): Error: semicolon expected, not `{`

    /tmp/tmpool6t8w8.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpool6t8w8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n       \
    \     result += toupper(c);\n        }\n        else\n        {\n            result\
    \ += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n      \
    \  {\n            result += toupper(c);\n        }\n        else\n        {\n\
    \            result += tolower(c);\n        }\n    }\n    return result;\n}\n\
    /*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c\
    \ == 'U')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and \nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfssl9qga.d(108): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfssl9qga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all characters to lowercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_all(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip all characters to lowercase and uppercase to uppercase.\n\
    \        \n*/\nstring flip_case_all_upper(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps4mc9tvx.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4mc9tvx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_with_spaces(string string) \n\
    {\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end;\
    \ ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t\
    *it = tolower(*it);\n\t\t*it = ' ';\n\t}\n\treturn string;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_with_spaces_no_spaces(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_spaces_no_spaces_no_spaces(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;\
    \ it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\t\
    else\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_with_spaces_no_spaces_no_spaces_no_spaces(string string)\
    \ \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(; it !=\
    \ end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\
    \t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_with_spaces_no_spaces_no_spaces_no_spaces_no_spaces(\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96gnpkvw.d(94): Error: basic type expected, not `unittest`

    /tmp/tmp96gnpkvw.d(94): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96gnpkvw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlmrx9v9.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdlmrx9v9.d(10): Error: no property `end` for type `string`

    /tmp/tmpdlmrx9v9.d(13): Error: undefined identifier `islower`

    /tmp/tmpdlmrx9v9.d(15): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlmrx9v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c >= 'a' && c <= 'z')\n        {\n            result += (char)(c - 32);\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl4x_iyi.d(15): Error: C style cast illegal, use `cast(char)(c
    - 32)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl4x_iyi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string where all characters are reversed.\n        \n\
    */\nstring reverse_case(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string where all uppercase characters are replaced with\
    \ lowercase characters.\n        \n*/\nstring upper_case(string string) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n           \
    \ result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n     \
    \       result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string where all lowercase characters are replaced with\
    \ uppercase characters.\n        \n*/\nstring lower_case(string string) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n   \
    \ {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n           \
    \ result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n     \
    \       result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string where all characters are reversed.\n        \n\
    */\nstring reverse_case(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl_qgmws.d(110): Error: found `unittest` instead of statement

    /tmp/tmpxl_qgmws.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpxl_qgmws.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl_qgmws.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_space(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\tif(*it==' ')\n\t\t{\n\t\t\t*it =\
    \ toupper(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_with_space_and_underscore(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\
    \t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t\tif(*it==' ')\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse if(*it=='_')\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_with_space_and_underscore_and_dash(string string)\
    \ \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\tif(*it==' ')\n\t\t{\n\t\t\t*it =\
    \ toupper(*it);\n\t\t}\n\t\telse if(*it=='_')\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t\telse if(*it=='-')\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t}\n\t\
    return string;\n}\n/*\n For a given \nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuws0mqt5.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuws0mqt5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >=\
    \ 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A' +\
    \ 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3eg42_n.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3eg42_n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a new string where all characters are reversed.\n        \n\
    */\nstring reverse_case(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] + string[i] - 'a' + 'A';\n\
    \        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            result += string[i] + string[i] - 'A' + 'a';\n        }\n       \
    \ else\n        {\n            result += string[i];\n        }\n    }\n    return\
    \ result;\n}\n/*\n Given a string, return a new string where all characters are\
    \ reversed.\n        \n*/\nstring reverse_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] + string[i]\
    \ - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n\
    \        {\n            result += string[i] + string[i] - 'A' + 'a';\n       \
    \ }\n        else\n        {\n            result += string[i];\n        }\n  \
    \  }\n    return result;\n}\n/*\n Given a string, return a new string where all\
    \ characters are reversed.\n        \n*/\nstring reverse_case(string string) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n   \
    \ {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n           \
    \ result += string[i] + string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] + string[i]\
    \ - 'A' + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return a new string\
    \ where all characters are reversed.\n        \n*/\nstring reverse_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < \nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3aiwhxon.d(107): Error: expression expected, not `unittest`

    /tmp/tmp3aiwhxon.d(108): Error: found `{` when expecting `;` following `for` condition

    /tmp/tmp3aiwhxon.d(109): Error: expression expected, not `alias`

    /tmp/tmp3aiwhxon.d(109): Error: found `candidate` when expecting `)`

    /tmp/tmp3aiwhxon.d(109): Error: found `=` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3aiwhxon.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n       \
    \     result += toupper(c);\n        }\n        else\n        {\n            result\
    \ += tolower(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxdj297hb.d(9): Error: `string` is used as a type

    /tmp/tmpxdj297hb.d(15): Error: undefined identifier `toupper`

    /tmp/tmpxdj297hb.d(19): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdj297hb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto len = string.length();\n\t\n\tauto\
    \ result = new char[len];\n\t\n\tfor (auto i = 0; i < len; ++i)\n\t{\n\t\tauto\
    \ c = string[i];\n\t\t\n\t\tif (islower(c))\n\t\t\tc = toupper(c);\n\t\telse\n\
    \t\t\tc = tolower(c);\n\t\t\n\t\tresult[i] = c;\n\t}\n\t\n\treturn string(result);\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3agn0330.d(9): Error: no property `length` for type `string`

    /tmp/tmp3agn0330.d(17): Error: undefined identifier `islower`

    /tmp/tmp3agn0330.d(18): Error: undefined identifier `toupper`

    /tmp/tmp3agn0330.d(20): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3agn0330.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it += 32;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc9o4zo0k.d(9): Error: no property `begin` for type `string`

    /tmp/tmpc9o4zo0k.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc9o4zo0k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv0s7bx9k.d(9): Error: no property `begin` for type `string`

    /tmp/tmpv0s7bx9k.d(10): Error: no property `end` for type `string`

    /tmp/tmpv0s7bx9k.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0s7bx9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for (int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n    \
    \        result += toupper(c);\n        }\n        else\n        {\n         \
    \   result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, flip all characters to uppercase and all characters to lowercase.\n\
    \        \n*/\nstring flip_case_all(string string) \n{\n    string result = \"\
    \";\n    for (int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n     \
    \   {\n            result += toupper(c);\n        }\n        else\n        {\n\
    \            result += tolower(c);\n        }\n    }\n    return result;\n}\n\
    /*\n Given a string, flip all characters to uppercase and all characters to lowercase\
    \ except for the first character.\n        \n*/\nstring flip_case_except_first(string\
    \ string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length;\
    \ ++i)\n    {\n        char c = string[i];\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n Given a string, flip all characters\
    \ to uppercase and all characters to lowercase except for the first and last characters.\n\
    \        \n*/\nstring flip_case_except_first_last(string string) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < string.length; ++i)\n    {\n       \
    \ char c = string[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\n/*\n Given a string, flip all characters to uppercase and\
    \ all characters to lowercase except for the first and last characters.\n    \
    \    \n*/\nstring flip_case_except_first_last_and_last(string string) \n{\n  \
    \  string result = \"\";\n    for (int i = 0; i < string.length; ++i)\n    {\n\
    \        char c = string[i];\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u')\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmumn2wuf.d(108): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmumn2wuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all uppercase characters\
    \ to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string \nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzjvyjhnb.d(106): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpzjvyjhnb.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjvyjhnb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); ++i)\n    {\n        char c = string[i];\n       \
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'a')\n            c\
    \ = 'A';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'b')\n            c = 'B';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'd')\n            c = 'D';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'e')\n     \
    \       c = 'E';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'f')\n            c = 'F';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'g')\n            c = 'G';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'h')\n            c = 'H';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'l')\n            c\
    \ = 'L';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'm')\n            c = 'M';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'o')\n            c = 'O';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'p')\n     \
    \       c = 'P';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'q')\n            c = 'Q';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 'r')\n            c = 'R';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 's')\n            c = 'S';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 't')\n\
    \            c = 'T';\n        else if(c == 'U')\n            c = 'u';\n     \
    \   else if(c == 'u\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprfbgr99e.d(95): Error: unterminated character constant

    /tmp/tmprfbgr99e.d(96): Error: found `unittest` when expecting `)`

    /tmp/tmprfbgr99e.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmprfbgr99e.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprfbgr99e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\
    \t\t\t*it = (*it - 'a' + 'A');\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\t\t\t\
    *it = (*it - 'A' + 'a');\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp01y1ggko.d(9): Error: no property `begin` for type `string`

    /tmp/tmp01y1ggko.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp01y1ggko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor (; it != end; ++it)\n\t{\n\t\tif (islower(*it))\n\t\t\t\
    *it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpye965_4c.d(9): Error: no property `begin` for type `string`

    /tmp/tmpye965_4c.d(10): Error: no property `end` for type `string`

    /tmp/tmpye965_4c.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpye965_4c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\
    \t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwgmu6e_.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdwgmu6e_.d(10): Error: no property `end` for type `string`

    /tmp/tmpdwgmu6e_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwgmu6e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_utjtah_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_utjtah_.d(10): Error: no property `end` for type `string`

    /tmp/tmp_utjtah_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_utjtah_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\
    \t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwgmu6e_.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdwgmu6e_.d(10): Error: no property `end` for type `string`

    /tmp/tmpdwgmu6e_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwgmu6e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        if(c == 'b')\n            c = 'B';\n\
    \        if(c == 'c')\n            c = 'C';\n        if(c == 'd')\n          \
    \  c = 'D';\n        if(c == 'e')\n            c = 'E';\n        if(c == 'f')\n\
    \            c = 'F';\n        if(c == 'g')\n            c = 'G';\n        if(c\
    \ == 'h')\n            c = 'H';\n        if(c == 'i')\n            c = 'I';\n\
    \        if(c == 'j')\n            c = 'J';\n        if(c == 'k')\n          \
    \  c = 'K';\n        if(c == 'l')\n            c = 'L';\n        if(c == 'm')\n\
    \            c = 'M';\n        if(c == 'n')\n            c = 'N';\n        if(c\
    \ == 'o')\n            c = 'O';\n        if(c == 'p')\n            c = 'P';\n\
    \        if(c == 'q')\n            c = 'Q';\n        if(c == 'r')\n          \
    \  c = 'R';\n        if(c == 's')\n            c = 'S';\n        if(c == 't')\n\
    \            c = 'T';\n        if(c == 'u')\n            c = 'U';\n        if(c\
    \ == 'v')\n            c = 'V';\n        if(c == 'w')\n            c = 'W';\n\
    \        if(c == 'x')\n            c = 'X';\n        if(c == 'y')\n          \
    \  c = 'Y';\n        if(c == 'z')\n            c = 'Z';\n        if(c == 'A')\n\
    \            c = 'a';\n        if(c == 'B')\n            c = 'b';\n        if(c\
    \ == 'C')\n            c = 'c';\n        if(c == 'D')\n            c = 'd';\n\
    \        if(c == 'E')\n            c = 'e';\n        if(c == 'F')\n          \
    \  c = 'f';\n        if(c == 'G')\n            c = 'g';\n        if(c == 'H')\n\
    \            c = 'h';\n        if(c == 'I')\n            c = 'i';\n        if(c\
    \ == 'J')\n            c = 'j';\n        if(c == 'K')\n            c = 'k';\n\
    \        if(c == 'L')\n            c = 'l';\n        if(c == 'M')\n          \
    \  c = 'm';\n        if(c == 'N')\n            c = 'n';\n        if(c == 'O')\n\
    \            c = 'o';\n        if(c == 'P')\n            c = 'p';\n        if(c\
    \ == 'Q')\n            c = 'q';\n        if(c == 'R')\n            c = 'r';\n\
    \        if(c == 'S')\n            c = 's';\n        if(c == 'T')\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfocn07r2.d(104): Error: found `unittest` instead of statement

    /tmp/tmpfocn07r2.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfocn07r2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto s = string;\n\tfor(auto &c : s)\n\t\
    {\n\t\tif(islower(c))\n\t\t\tc = toupper(c);\n\t\telse if(isupper(c))\n\t\t\t\
    c = tolower(c);\n\t}\n\treturn s;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0zsvqht4.d(10): Error: basic type expected, not `&`

    /tmp/tmp0zsvqht4.d(10): Error: no identifier for declarator `_error_`

    /tmp/tmp0zsvqht4.d(10): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0zsvqht4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (auto c :\
    \ string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\t\t\tresult += toupper(c);\n\t\t\
    }\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfop0jse9.d(10): Error: no identifier for declarator `c`

    /tmp/tmpfop0jse9.d(10): Error: expression expected, not `:`

    /tmp/tmpfop0jse9.d(10): Error: found `string` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfop0jse9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph58dw_4j.d(9): Error: `string` is used as a type

    /tmp/tmph58dw_4j.d(10): Error: no property `length` for type `string`

    /tmp/tmph58dw_4j.d(66): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph58dw_4j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto s = string;\n\tfor (auto &c : s)\n\
    \t{\n\t\tif (islower(c))\n\t\t\tc = toupper(c);\n\t\telse if (isupper(c))\n\t\t\
    \tc = tolower(c);\n\t}\n\treturn s;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5czuxq7r.d(10): Error: basic type expected, not `&`

    /tmp/tmp5czuxq7r.d(10): Error: no identifier for declarator `_error_`

    /tmp/tmp5czuxq7r.d(10): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5czuxq7r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == '_')\n        {\n            result += c;\n        }\n        else\n    \
    \    {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjfjlj3s1.d(9): Error: `string` is used as a type

    /tmp/tmpjfjlj3s1.d(19): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfjlj3s1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'A')\n            c = 'a';\n\
    \        else if(c == 'e')\n            c = 'E';\n        else if(c == 'E')\n\
    \            c = 'e';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'o')\n     \
    \       c = 'O';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'u')\n            c = 'U';\n        else if(c == 'U')\n            c\
    \ = 'u';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'Y')\n            c = 'y';\n        else if(c == 's')\n            c = 'S';\n\
    \        else if(c == 'S')\n            c = 's';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'D')\n            c = 'd';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'F')\n     \
    \       c = 'f';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'H')\n            c = 'h';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'J')\n            c = 'j';\n        else if(c ==\
    \ 'k')\n            c = 'K';\n        else if(c == 'K')\n            c = 'k';\n\
    \        else if(c == 'l')\n            c = 'L';\n        else if(c == 'L')\n\
    \            c = 'l';\n        else if(c == 'n')\n            c = 'N';\n     \
    \   else if(c == 'N')\n            c = 'n';\n        else if(c == 'p')\n     \
    \       c = 'P';\n        else if(c == 'P')\n            c = 'p';\n        else\
    \ if(c == 'r')\n            c = 'R';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 't')\n            c = 'T';\n        else if(c ==\
    \ 'T')\n            c = 't';\n        else if(c == 'w')\n            c = 'W';\n\
    \        else if(c == 'W')\n            c = 'w';\n        else if(c == 'v')\n\
    \            c = 'V';\n        else if(c == 'V')\n            c = 'v';\n     \
    \   else if(c == 'z')\n            c = 'Z';\n        else if(c == 'Z')\n     \
    \       c = 'z';\n        else if(c == 'x')\n            c = 'X';\n        else\
    \ if(c == 'X')\n\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpievu0yt_.d(97): Error: found `unittest` instead of statement

    /tmp/tmpievu0yt_.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpievu0yt_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all uppercase characters\
    \ to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string \nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozvqacqa.d(106): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpozvqacqa.d(114): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozvqacqa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlmrx9v9.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdlmrx9v9.d(10): Error: no property `end` for type `string`

    /tmp/tmpdlmrx9v9.d(13): Error: undefined identifier `islower`

    /tmp/tmpdlmrx9v9.d(15): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlmrx9v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\
    \t*it = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t\
    }\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb5sofwkm.d(9): Error: no property `begin` for type `string`

    /tmp/tmpb5sofwkm.d(10): Error: no property `end` for type `string`

    /tmp/tmpb5sofwkm.d(14): Error: undefined identifier `islower`

    /tmp/tmpb5sofwkm.d(16): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5sofwkm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n        {\n            c = 'A';\n        }\n        else if(c == 'A')\n\
    \        {\n            c = 'a';\n        }\n        else if(c == 'b')\n     \
    \   {\n            c = 'B';\n        }\n        else if(c == 'B')\n        {\n\
    \            c = 'b';\n        }\n        else if(c == 'c')\n        {\n     \
    \       c = 'C';\n        }\n        else if(c == 'C')\n        {\n          \
    \  c = 'c';\n        }\n        else if(c == 'd')\n        {\n            c =\
    \ 'D';\n        }\n        else if(c == 'D')\n        {\n            c = 'd';\n\
    \        }\n        else if(c == 'e')\n        {\n            c = 'E';\n     \
    \   }\n        else if(c == 'E')\n        {\n            c = 'e';\n        }\n\
    \        else if(c == 'f')\n        {\n            c = 'F';\n        }\n     \
    \   else if(c == 'F')\n        {\n            c = 'f';\n        }\n        else\
    \ if(c == 'g')\n        {\n            c = 'G';\n        }\n        else if(c\
    \ == 'G')\n        {\n            c = 'g';\n        }\n        else if(c == 'h')\n\
    \        {\n            c = 'H';\n        }\n        else if(c == 'H')\n     \
    \   {\n            c = 'h';\n        }\n        else if(c == 'i')\n        {\n\
    \            c = 'I';\n        }\n        else if(c == 'I')\n        {\n     \
    \       c = 'i';\n        }\n        else if(c == 'j')\n        {\n          \
    \  c = 'J';\n        }\n        else if(c == 'J')\n        {\n            c =\
    \ 'j';\n        }\n        else if(c == 'k')\n        {\n            c = 'K';\n\
    \        }\n        else if(c == 'K')\n        {\n            c = 'k';\n     \
    \   }\n        else if(c == 'l')\n        {\n            c = 'L';\n        }\n\
    \        else if(c == 'L')\n        {\n            c = 'l';\n        }\n     \
    \   else if(c == 'm')\n        {\n            c = 'M';\n        }\n        else\
    \ if(c == 'M')\n        {\n            c = 'm';\n        }\n        else if(c\
    \ == 'n')\n        {\n            c = 'N';\n        }\n        else if(c == 'N')\n\
    \        {\n            c = 'n';\n        }\n        else if(c == 'o')\n     \
    \   {\n            c = 'O';\n        }\n        else if(c == 'O')\n        {\n\
    \            c = 'o';\n        }\n        else if(c == 'p')\n        {\n     \
    \       c = 'P';\n        }\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1uhgcmn.d(137): Error: found `unittest` instead of statement

    /tmp/tmpw1uhgcmn.d(145): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1uhgcmn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\
    \t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwgmu6e_.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdwgmu6e_.d(10): Error: no property `end` for type `string`

    /tmp/tmpdwgmu6e_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwgmu6e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >=\
    \ 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A' +\
    \ 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase to uppercase.\n        \n*/\nstring flip_case_all_upper(string\
    \ string) \n{\n    string result = \"\";\n\nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4n0ny16r.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4n0ny16r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4pazeez.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmpk4pazeez.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4pazeez.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(islower(c))\n        {\n            result += toupper(c);\n        }\n  \
    \      else\n        {\n            result += tolower(c);\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(islower(c))\n        {\n\
    \            result += toupper(c);\n        }\n        else\n        {\n     \
    \       result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_3(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(islower(c))\n        {\n\
    \            result += toupper(c);\n        }\n        else\n        {\n     \
    \       result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_5(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_6(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(islower(c))\n        {\n\
    \            result += toupper(c);\n        }\n        else\n        {\n     \
    \       result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n For\
    \ \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzonn1c5w.d(129): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzonn1c5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\
    {\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpllr6q3oa.d(9): Error: no property `begin` for type `string`

    /tmp/tmpllr6q3oa.d(10): Error: no property `end` for type `string`

    /tmp/tmpllr6q3oa.d(14): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllr6q3oa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase\
    \ and all characters to uppercase.\n        \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and all characters to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptaz2ea01.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptaz2ea01.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\n/*\n Given a string, remove all\
    \ spaces.\n        \n*/\nstring remove_spaces(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == ' ')\n        {\n            result += c;\n  \
    \      }\n    }\n    return result;\n}\n/*\n Given a string, remove all punctuation.\n\
    \        \n*/\nstring remove_punctuation(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c\
    \ = string[i];\n        if(c == '.' || c == '!' || c == '?' || c == ';' || c ==\
    \ ':' || c == '-' || c == '_' || c == '/' || c == '\\\\' || c == '[' || c == ']'\
    \ || c == '{' || c == '}' || c == '<' || c == '>' || \nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy88dzrnp.d(99): Error: expression expected, not `unittest`

    /tmp/tmpy88dzrnp.d(100): Error: found `{` when expecting `)`

    /tmp/tmpy88dzrnp.d(107): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy88dzrnp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (auto c :\
    \ string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\t\t\tresult += toupper(c);\n\t\t\
    }\n\t\telse \n\t\t{\n\t\t\tresult += tolower(c);\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfop0jse9.d(10): Error: no identifier for declarator `c`

    /tmp/tmpfop0jse9.d(10): Error: expression expected, not `:`

    /tmp/tmpfop0jse9.d(10): Error: found `string` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfop0jse9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it) {\n\t\tif(*it >= 'a' && *it <= 'z')\
    \ {\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z') {\n\t\t\t\
    *it += 32;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_4tf4mla.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_4tf4mla.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_4tf4mla.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to lowercase\
    \ and all characters to uppercase.\n        \n*/\nstring flip_case_all(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and all characters to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptaz2ea01.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptaz2ea01.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] + 32;\n        }\n   \
    \ }\n    return string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_4(string string) \n{\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n\
    \            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\n\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13upfb87.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(32): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(36): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(51): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(55): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(70): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(74): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(89): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp13upfb87.d(93): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13upfb87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_case(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_with_case2(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\
    \t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_case3(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_with_case4(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\
    \t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4r5drp0u.d(113): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4r5drp0u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it += 32;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc9o4zo0k.d(9): Error: no property `begin` for type `string`

    /tmp/tmpc9o4zo0k.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc9o4zo0k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\
    \t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\t\n\treturn\
    \ string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2l81hdx.d(9): Error: no property `begin` for type `string`

    /tmp/tmpb2l81hdx.d(10): Error: no property `end` for type `string`

    /tmp/tmpb2l81hdx.d(14): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2l81hdx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tif(string[i] >= 'a' && string[i] <= 'z')\n\
    \t\t\tresult += string[i] - 'a' + 'A';\n\t\telse if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n\t\t\tresult += string[i] - 'A' + 'a';\n\t\telse\n\t\t\tresult += string[i];\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplgm3z95n.d(9): Error: `string` is used as a type

    /tmp/tmplgm3z95n.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplgm3z95n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor(int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\tif(c == ' ' ||\
    \ c == '\\t' || c == '\\n' || c == '\\r' || c == '\\v' || c == '\\f')\n\t\t\t\
    continue;\n\t\tif(c == 'a')\n\t\t\tc = 'A';\n\t\tif(c == 'b')\n\t\t\tc = 'B';\n\
    \t\tif(c == 'c')\n\t\t\tc = 'C';\n\t\tif(c == 'd')\n\t\t\tc = 'D';\n\t\tif(c ==\
    \ 'e')\n\t\t\tc = 'E';\n\t\tif(c == 'f')\n\t\t\tc = 'F';\n\t\tif(c == 'g')\n\t\
    \t\tc = 'G';\n\t\tif(c == 'h')\n\t\t\tc = 'H';\n\t\tif(c == 'i')\n\t\t\tc = 'I';\n\
    \t\tif(c == 'j')\n\t\t\tc = 'J';\n\t\tif(c == 'k')\n\t\t\tc = 'K';\n\t\tif(c ==\
    \ 'l')\n\t\t\tc = 'L';\n\t\tif(c == 'm')\n\t\t\tc = 'M';\n\t\tif(c == 'n')\n\t\
    \t\tc = 'N';\n\t\tif(c == 'o')\n\t\t\tc = 'O';\n\t\tif(c == 'p')\n\t\t\tc = 'P';\n\
    \t\tif(c == 'q')\n\t\t\tc = 'Q';\n\t\tif(c == 'r')\n\t\t\tc = 'R';\n\t\tif(c ==\
    \ 's')\n\t\t\tc = 'S';\n\t\tif(c == 't')\n\t\t\tc = 'T';\n\t\tif(c == 'u')\n\t\
    \t\tc = 'U';\n\t\tif(c == 'v')\n\t\t\tc = 'V';\n\t\tif(c == 'w')\n\t\t\tc = 'W';\n\
    \t\tif(c == 'x')\n\t\t\tc = 'X';\n\t\tif(c == 'y')\n\t\t\tc = 'Y';\n\t\tif(c ==\
    \ 'z')\n\t\t\tc = 'Z';\n\t\tresult += c;\n\t}\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jo973kl.d(9): Error: `string` is used as a type

    /tmp/tmp8jo973kl.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jo973kl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for (int i\
    \ = 0; i < string.length(); i++) {\n        char c = string[i];\n        if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            result\
    \ += toupper(c);\n        } else {\n            result += tolower(c);\n      \
    \  }\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase characters\
    \ to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_u(string\
    \ string) \n{\n    string result = \"\";\n    for (int i = 0; i < string.length();\
    \ i++) {\n        char c = string[i];\n        if (c == 'A' || c == 'E' || c ==\
    \ 'I' || c == 'O' || c == 'U') {\n            result += tolower(c);\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to lowercase.\n        \n*/\n\
    string flip_case_l(string string) \n{\n    string result = \"\";\n    for (int\
    \ i = 0; i < string.length(); i++) {\n        char c = string[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            result\
    \ += tolower(c);\n        } else {\n            result += c;\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase.\n\
    \        \n*/\nstring flip_case_u(string string) \n{\n    string result = \"\"\
    ;\n    for (int i = 0; i < string.length(); i++) {\n        char c = string[i];\n\
    \        if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n   \
    \         result += toupper(c);\n        } else {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to lowercase and uppercase.\n        \n*/\nstring flip_case_l_u(string string)\
    \ \n{\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++)\
    \ {\n        char c = string[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            result += tolower(c);\n        } else\
    \ {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to lowercase and uppercase and\
    \ uppercase to lowercase.\n        \n*/\nstring flip_case_l_u(string string) \n\
    {\n    string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n\
    \        char c = string[i];\n        if (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\nunittest\n{\n    alias candidate = flip_case;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdezrf96y.d(98): Error: found `unittest` instead of statement

    /tmp/tmpdezrf96y.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpdezrf96y.d(106): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdezrf96y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'A')\n            c = toupper(c);\n        else if(c == 'b' ||\
    \ c == 'B')\n            c = tolower(c);\n        else if(c == 'c' || c == 'C')\n\
    \            c = toupper(c);\n        else if(c == 'd' || c == 'D')\n        \
    \    c = tolower(c);\n        else if(c == 'e' || c == 'E')\n            c = toupper(c);\n\
    \        else if(c == 'f' || c == 'F')\n            c = tolower(c);\n        else\
    \ if(c == 'g' || c == 'G')\n            c = toupper(c);\n        else if(c ==\
    \ 'h' || c == 'H')\n            c = tolower(c);\n        else if(c == 'i' || c\
    \ == 'I')\n            c = toupper(c);\n        else if(c == 'j' || c == 'J')\n\
    \            c = tolower(c);\n        else if(c == 'k' || c == 'K')\n        \
    \    c = toupper(c);\n        else if(c == 'l' || c == 'L')\n            c = tolower(c);\n\
    \        else if(c == 'm' || c == 'M')\n            c = toupper(c);\n        else\
    \ if(c == 'n' || c == 'N')\n            c = tolower(c);\n        else if(c ==\
    \ 'o' || c == 'O')\n            c = toupper(c);\n        else if(c == 'p' || c\
    \ == 'P')\n            c = tolower(c);\n        else if(c == 'q' || c == 'Q')\n\
    \            c = toupper(c);\n        else if(c == 'r' || c == 'R')\n        \
    \    c = tolower(c);\n        else if(c == 's' || c == 'S')\n            c = toupper(c);\n\
    \        else if(c == 't' || c == 'T')\n            c = tolower(c);\n        else\
    \ if(c == 'u' || c == 'U')\n            c = toupper(c);\n        else if(c ==\
    \ 'v' || c == 'V')\n            c = tolower(c);\n        else if(c == 'w' || c\
    \ == 'W')\n            c = toupper(c);\n        else if(c == 'x' || c == 'X')\n\
    \            c = tolower(c);\n        else if(c == 'y' || c == 'Y')\n        \
    \    c = toupper(c);\n        else if(c == 'z' || c == 'Z')\n            c = tolower(c);\n\
    \        else\n            c = string[i];\n        result += c;\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip uppercase characters to lowercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_back(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        char c = string[i];\n        if\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmo7q2twt.d(82): Error: found `unittest` when expecting `(`

    /tmp/tmpmo7q2twt.d(90): Error: found `void` when expecting `)`

    /tmp/tmpmo7q2twt.d(90): Error: found `{` when expecting `;` following statement

    /tmp/tmpmo7q2twt.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmo7q2twt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else if(c == 'A')\n            c = 'a';\n     \
    \   else if(c == 'B')\n            c = 'b';\n        else if(c == 'C')\n     \
    \       c = 'c';\n        else if(c == 'D')\n            c = 'd';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'G')\n            c = 'g';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'J')\n            c = 'j';\n        else if(c == 'K')\n\
    \            c = 'k';\n        else if(c == 'L')\n            c = 'l';\n     \
    \   else if(c == 'M')\n            c = 'm';\n        else if(c == 'N')\n     \
    \       c = 'n';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'P')\n            c\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaue9xlfu.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaue9xlfu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == '_')\n        {\n            result += c;\n        }\n        else\n    \
    \    {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_2(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            result += c;\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_3(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        char c = string[i];\n        if(c == '_')\n        {\n\
    \            result += c;\n        }\n        else\n        {\n            result\
    \ += toupper(c);\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_4(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == '_')\n        {\n            result += c;\n        }\n      \
    \  else\n        {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        char c = string[i];\n        if(c == '_')\n        {\n       \
    \     result += c;\n        }\n        else\n        {\n            result +=\
    \ toupper(c);\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_6(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n\
    \        if(c == '_')\n        {\n            result += c;\n        }\n      \
    \  else\n        {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzmnirjbc.d(129): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzmnirjbc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all characters to lowercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_all(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip all characters to lowercase and uppercase to uppercase.\n\
    \        \n*/\nstring flip_case_all_upper(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_lh9atn1.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lh9atn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor (; it != end; ++it)\n\t{\n\t\tif (*it >= 'A' && *it <=\
    \ 'Z')\n\t\t{\n\t\t\t*it -= 'A' - 'a';\n\t\t}\n\t\telse if (*it >= 'a' && *it\
    \ <= 'z')\n\t\t{\n\t\t\t*it -= 'a' - 'A';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it =\
    \ *it + ('a' - 'A');\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqp_012vt.d(9): Error: no property `begin` for type `string`

    /tmp/tmpqp_012vt.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqp_012vt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9mwz98v1.d(9): Error: no property `length` for type `string`

    /tmp/tmp9mwz98v1.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmp9mwz98v1.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9mwz98v1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n \
    \           result += string[i] - 'A' + 'a';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip all characters to uppercase and lowercase to uppercase.\n        \n*/\n\
    string flip_case_all(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip all characters to uppercase and lowercase to\
    \ uppercase.\n        \n*/\nstring flip_case_all_upper(string string) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        if(string[i] >= 'A' && string[i] <= 'Z')\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdhyuhhoe.d(114): Error: found `unittest` instead of statement

    /tmp/tmpdhyuhhoe.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhyuhhoe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_utjtah_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_utjtah_.d(10): Error: no property `end` for type `string`

    /tmp/tmp_utjtah_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_utjtah_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_2(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_6(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp26mjg_x.d(114): Error: found `unittest` instead of statement

    /tmp/tmpp26mjg_x.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp26mjg_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n        {\n            c = 'A';\n        }\n        else if(c == 'A')\n\
    \        {\n            c = 'a';\n        }\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpduscmssz.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpduscmssz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto s = string;\n\tfor (auto i : s) \n\
    \t{\n\t\tif (islower(i)) \n\t\t{\n\t\t\ts[i] = toupper(i);\n\t\t}\n\t\telse if\
    \ (isupper(i)) \n\t\t{\n\t\t\ts[i] = tolower(i);\n\t\t}\n\t}\n\treturn s;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkhih12ro.d(10): Error: no identifier for declarator `i`

    /tmp/tmpkhih12ro.d(10): Error: expression expected, not `:`

    /tmp/tmpkhih12ro.d(10): Error: found `s` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkhih12ro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpih3gbv8a.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpih3gbv8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tchar c = string[i];\n\t\t\n\t\tif (islower(c))\n\
    \t\t{\n\t\t\tresult += toupper(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyi7bffkj.d(9): Error: `string` is used as a type

    /tmp/tmpyi7bffkj.d(10): Error: no property `length` for type `string`

    /tmp/tmpyi7bffkj.d(14): Error: undefined identifier `islower`

    /tmp/tmpyi7bffkj.d(16): Error: undefined identifier `toupper`

    /tmp/tmpyi7bffkj.d(20): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi7bffkj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] + 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpetdu0vo_.d(13): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    /tmp/tmpetdu0vo_.d(17): Error: cannot modify `immutable` expression `string[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpetdu0vo_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph19v5pqr.d(9): Error: `string` is used as a type

    /tmp/tmph19v5pqr.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph19v5pqr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\
    \t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\
    \t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_spaces(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;\
    \ it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\tif(*it == ' ')\n\
    \t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_with_spaces_and_numbers(string string) \n{\n\t\
    auto it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\tif(*it == ' ')\n\t\t{\n\t\t\t*it\
    \ = toupper(*it);\n\t\t}\n\t\telse if(isdigit(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters\
    \ to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_with_spaces_and_numbers_and_underscores(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;\
    \ it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\tif(*it == ' ')\n\
    \t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse if(isdigit(*it))\n\t\t{\n\t\t\
    \t*it = toupper(*it);\n\t\t}\n\t\telse if(*it == '_')\n\t\t{\n\t\t\t*it = toupper(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For \nunittest\n{\n    alias candidate =\
    \ flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi1pabef3.d(111): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi1pabef3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\t\t\
    {\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa6oyzyhm.d(9): Error: no property `begin` for type `string`

    /tmp/tmpa6oyzyhm.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6oyzyhm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else if(c == 'A')\n            c = 'a';\n     \
    \   else if(c == 'B')\n            c = 'b';\n        else if(c == 'C')\n     \
    \       c = 'c';\n        else if(c == 'D')\n            c = 'd';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n            c\
    \ = 'f';\n        else if(c == 'G')\n            c = 'g';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'J')\n            c = 'j';\n        else if(c == 'K')\n\
    \            c = 'k';\n        else if(c == 'L')\n            c = 'l';\n     \
    \   else if(c == 'M')\n            c = 'm';\n        else if(c == 'N')\n     \
    \       c = 'n';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'P')\n            c\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaue9xlfu.d(97): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpaue9xlfu.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaue9xlfu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'a')\n            c = 'A';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'b')\n\
    \            c = 'B';\n        else if(c == 'C')\n            c = 'c';\n     \
    \   else if(c == 'c')\n            c = 'C';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'd')\n            c = 'D';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'F')\n            c = 'f';\n        else if(c ==\
    \ 'f')\n            c = 'F';\n        else if(c == 'G')\n            c = 'g';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'H')\n\
    \            c = 'h';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'i')\n     \
    \       c = 'I';\n        else if(c == 'J')\n            c = 'j';\n        else\
    \ if(c == 'j')\n            c = 'J';\n        else if(c == 'K')\n            c\
    \ = 'k';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'l')\n            c = 'L';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'm')\n\
    \            c = 'M';\n        else if(c == 'N')\n            c = 'n';\n     \
    \   else if(c == 'n')\n            c = 'N';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'o')\n            c = 'O';\n        else\
    \ if(c == 'P')\n            c = 'p';\n        else if(c == 'p')\n            c\
    \ = 'P';\n        else if(c == 'Q')\n            c = 'q';\n        else if(c ==\
    \ 'q')\n            c = 'Q';\n        else if(c == 'R')\n            c = 'r';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 'S')\n\
    \            c = 's';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 'T')\n            c = 't';\n        else if(c == 't')\n     \
    \       c = 'T';\n        else if(c == 'U')\n            c = 'u';\n        else\
    \ if(c == 'u')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps9kp9k_1.d(96): Error: found `unittest` instead of statement

    /tmp/tmps9kp9k_1.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps9kp9k_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_utjtah_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_utjtah_.d(10): Error: no property `end` for type `string`

    /tmp/tmp_utjtah_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_utjtah_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it -= ('a' - 'A');\n\t\t}\n\t\telse if(*it >= 'A' && *it\
    \ <= 'Z')\n\t\t{\n\t\t\t*it += ('A' - 'a');\n\t\t}\n\t}\n\treturn string;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37st6xdh.d(9): Error: no property `begin` for type `string`

    /tmp/tmp37st6xdh.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37st6xdh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it) {\n\t\tif(islower(*it)) {\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\
    \t\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpte4exab7.d(9): Error: no property `begin` for type `string`

    /tmp/tmpte4exab7.d(10): Error: no property `end` for type `string`

    /tmp/tmpte4exab7.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpte4exab7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else\n            c = toupper(c);\n        result\
    \ += c;\n    }\n    return result;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length;\
    \ ++i)\n    {\n        char c = string[i];\n        if(c == 'A')\n           \
    \ c = 'a';\n        else if(c == 'B')\n            c = 'b';\n        else if(c\
    \ == 'C')\n            c = 'c';\n        else if(c == 'D')\n            c = 'd';\n\
    \        else if(c == 'E')\n            c = 'e';\n        else if(c == 'F')\n\
    \            c = 'f';\n        else if(c == 'G')\n            c = 'g';\n     \
    \   else if(c == 'H')\n            c = 'h';\n        else if(c == 'I')\n     \
    \       c = 'i';\n        else if(c == 'J')\n            c\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4rqegcvp.d(101): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp4rqegcvp.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp4rqegcvp.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rqegcvp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it = (*it) - 'A' + 'a';\n\t\t}\n\t\telse if(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it = (*it) - 'a' + 'A';\n\t\t}\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf4z_ehsb.d(9): Error: no property `begin` for type `string`

    /tmp/tmpf4z_ehsb.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4z_ehsb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'a')\n            c\
    \ = 'A';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'b')\n            c = 'B';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'd')\n            c = 'D';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'e')\n     \
    \       c = 'E';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'f')\n            c = 'F';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'g')\n            c = 'G';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'h')\n            c = 'H';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'i')\n\
    \            c = 'I';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'l')\n            c\
    \ = 'L';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'm')\n            c = 'M';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'o')\n            c = 'O';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'p')\n     \
    \       c = 'P';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'q')\n            c = 'Q';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 'r')\n            c = 'R';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 's')\n            c = 'S';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 't')\n\
    \            c = 'T';\n        else if(c == 'U')\n            c = 'u';\n     \
    \   else if(c == 'u')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg6ia0ojq.d(96): Error: found `unittest` instead of statement

    /tmp/tmpg6ia0ojq.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg6ia0ojq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n        {\n            c = 'A';\n        }\n        else if(c == 'A')\n\
    \        {\n            c = 'a';\n        }\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpduscmssz.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpduscmssz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'A' && *it <= 'Z')\n\
    \t\t\t*it += ('a' - 'A');\n\t\telse if(*it >= 'a' && *it <= 'z')\n\t\t\t*it -=\
    \ ('a' - 'A');\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsgz8nq60.d(9): Error: no property `begin` for type `string`

    /tmp/tmpsgz8nq60.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgz8nq60.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_4(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_5(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpipphlrd0.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipphlrd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv0s7bx9k.d(9): Error: no property `begin` for type `string`

    /tmp/tmpv0s7bx9k.d(10): Error: no property `end` for type `string`

    /tmp/tmpv0s7bx9k.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0s7bx9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'A' || c == 'a') c = 'B';\n        else if(c == 'B' || c == 'b') c = 'A';\n\
    \        else if(c == 'C' || c == 'c') c = 'D';\n        else if(c == 'D' || c\
    \ == 'd') c = 'C';\n        else if(c == 'E' || c == 'e') c = 'F';\n        else\
    \ if(c == 'F' || c == 'f') c = 'E';\n        else if(c == 'G' || c == 'g') c =\
    \ 'H';\n        else if(c == 'H' || c == 'h') c = 'G';\n        else if(c == 'I'\
    \ || c == 'i') c = 'J';\n        else if(c == 'J' || c == 'j') c = 'I';\n    \
    \    else if(c == 'K' || c == 'k') c = 'L';\n        else if(c == 'L' || c ==\
    \ 'l') c = 'K';\n        else if(c == 'M' || c == 'm') c = 'N';\n        else\
    \ if(c == 'N' || c == 'n') c = 'M';\n        else if(c == 'O' || c == 'o') c =\
    \ 'P';\n        else if(c == 'P' || c == 'p') c = 'O';\n        else if(c == 'Q'\
    \ || c == 'q') c = 'R';\n        else if(c == 'R' || c == 'r') c = 'Q';\n    \
    \    else if(c == 'S' || c == 's') c = 'T';\n        else if(c == 'T' || c ==\
    \ 't') c = 'S';\n        else if(c == 'U' || c == 'u') c = 'V';\n        else\
    \ if(c == 'V' || c == 'v') c = 'U';\n        else if(c == 'W' || c == 'w') c =\
    \ 'X';\n        else if(c == 'X' || c == 'x') c = 'W';\n        else if(c == 'Y'\
    \ || c == 'y') c = 'Z';\n        else if(c == 'Z' || c == 'z') c = 'Y';\n    \
    \    else if(c == 'a' || c == 'A') c = 'b';\n        else if(c == 'b' || c ==\
    \ 'B') c = 'a';\n        else if(c == 'c' || c == 'C') c = 'd';\n        else\
    \ if(c == 'd' || c == 'D') c = 'c';\n        else if(c == 'e' || c == 'E') c =\
    \ 'f';\n        else if(c == 'f' || c == 'F') c = 'e';\n        else if(c == 'g'\
    \ || c == 'G') \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp10_0h12z.d(46): Error: found `unittest` instead of statement

    /tmp/tmp10_0h12z.d(54): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10_0h12z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it -= 32;\n\t\t}\n\t\telse if(*it >= 'a' && *it <= 'z')\n\t\t{\n\
    \t\t\t*it += 32;\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqhxa20p.d(9): Error: no property `begin` for type `string`

    /tmp/tmpwqhxa20p.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqhxa20p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\
    \t\t{\n\t\t\t*it -= ('a' - 'A');\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it += ('A' - 'a');\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0dd0ih23.d(9): Error: no property `begin` for type `string`

    /tmp/tmp0dd0ih23.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0dd0ih23.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t\
    *it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\
    \t}\n\treturn string;\n}\n/*\n For a given string, flip uppercase characters to\
    \ lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_u(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(isupper(*it))\n\t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip all characters to lowercase and uppercase to uppercase.\n\
    \        \n*/\nstring flip_case_l(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(isupper(*it))\n\t\
    \t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to lowercase.\n        \n*/\nstring flip_case_u(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a\
    \ given string, flip all characters to lowercase and uppercase to uppercase.\n\
    \        \n*/\nstring flip_case_l(string string) \n{\n\tauto it = string.begin();\n\
    \tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(isupper(*it))\n\t\
    \t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it = tolower(*it);\n\
    \t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to lowercase.\n        \n*/\nstring flip_case_u(string\
    \ string) \n{\n\t\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc9g_q13c.d(115): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc9g_q13c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tstring result = \"\";\n\tfor (int i = 0;\
    \ i < string.length(); i++)\n\t{\n\t\tif (string[i] >= 'a' && string[i] <= 'z')\n\
    \t\t{\n\t\t\tresult += string[i] - 'a' + 'A';\n\t\t}\n\t\telse if (string[i] >=\
    \ 'A' && string[i] <= 'Z')\n\t\t{\n\t\t\tresult += string[i] - 'A' + 'a';\n\t\t\
    }\n\t\telse\n\t\t{\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5x91cef9.d(9): Error: `string` is used as a type

    /tmp/tmp5x91cef9.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5x91cef9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); ++i)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case_2(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        char c = string[i];\n     \
    \   if(c == 'A')\n            c = 'a';\n        else if(c == 'B')\n          \
    \  c = 'b';\n        else if(c == 'C')\n            c = 'c';\n        else if(c\
    \ == 'D')\n            c = 'd';\n        else if(c == 'E')\n            c = 'e';\n\
    \        else if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n\
    \            c = 'g';\n        else if(c == 'H')\n            c = 'h';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'J')\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq3rcfdhe.d(100): Error: found `unittest` instead of statement

    /tmp/tmpq3rcfdhe.d(108): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3rcfdhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_utjtah_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp_utjtah_.d(10): Error: no property `end` for type `string`

    /tmp/tmp_utjtah_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_utjtah_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'A' || c == 'a') c = 'B';\n        else if(c == 'B' || c == 'b') c = 'A';\n\
    \        else if(c == 'C' || c == 'c') c = 'D';\n        else if(c == 'D' || c\
    \ == 'd') c = 'C';\n        else if(c == 'E' || c == 'e') c = 'F';\n        else\
    \ if(c == 'F' || c == 'f') c = 'E';\n        else if(c == 'G' || c == 'g') c =\
    \ 'H';\n        else if(c == 'H' || c == 'h') c = 'G';\n        else if(c == 'I'\
    \ || c == 'i') c = 'J';\n        else if(c == 'J' || c == 'j') c = 'I';\n    \
    \    else if(c == 'K' || c == 'k') c = 'L';\n        else if(c == 'L' || c ==\
    \ 'l') c = 'K';\n        else if(c == 'M' || c == 'm') c = 'N';\n        else\
    \ if(c == 'N' || c == 'n') c = 'M';\n        else if(c == 'O' || c == 'o') c =\
    \ 'P';\n        else if(c == 'P' || c == 'p') c = 'O';\n        else if(c == 'Q'\
    \ || c == 'q') c = 'R';\n        else if(c == 'R' || c == 'r') c = 'Q';\n    \
    \    else if(c == 'S' || c == 's') c = 'T';\n        else if(c == 'T' || c ==\
    \ 't') c = 'S';\n        else if(c == 'U' || c == 'u') c = 'V';\n        else\
    \ if(c == 'V' || c == 'v') c = 'U';\n        else if(c == 'W' || c == 'w') c =\
    \ 'X';\n        else if(c == 'X' || c == 'x') c = 'W';\n        else if(c == 'Y'\
    \ || c == 'y') c = 'Z';\n        else if(c == 'Z' || c == 'z') c = 'Y';\n    \
    \    result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvvuja_k7.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvvuja_k7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy68qep15.d(9): Error: `string` is used as a type

    /tmp/tmpy68qep15.d(10): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy68qep15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it) {\n\t\tif(islower(*it)) {\n\t\t\t*it\
    \ = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\t\
    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn9_cmbpv.d(9): Error: no property `begin` for type `string`

    /tmp/tmpn9_cmbpv.d(10): Error: no property `end` for type `string`

    /tmp/tmpn9_cmbpv.d(12): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9_cmbpv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n        {\n       \
    \     result += toupper(c);\n        }\n        else\n        {\n            result\
    \ += tolower(c);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxdj297hb.d(9): Error: `string` is used as a type

    /tmp/tmpxdj297hb.d(15): Error: undefined identifier `toupper`

    /tmp/tmpxdj297hb.d(19): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdj297hb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == ' ')\n            continue;\n        if(c == '_')\n        {\n     \
    \       result += c;\n            continue;\n        }\n        if(c == '-' ||\
    \ c == '_')\n        {\n            result += c;\n            continue;\n    \
    \    }\n        if(c == '.' || c == '_')\n        {\n            result += c;\n\
    \            continue;\n        }\n        if(c == '_')\n        {\n         \
    \   result += c;\n            continue;\n        }\n        if(c == '/')\n   \
    \     {\n            result += c;\n            continue;\n        }\n        if(c\
    \ == '\\\\')\n        {\n            result += c;\n            continue;\n   \
    \     }\n        if(c == '\"')\n        {\n            result += c;\n        \
    \    continue;\n        }\n        if(c == '\\'')\n        {\n            result\
    \ += c;\n            continue;\n        }\n        if(c == '<')\n        {\n \
    \           result += c;\n            continue;\n        }\n        if(c == '>')\n\
    \        {\n            result += c;\n            continue;\n        }\n     \
    \   if(c == '&')\n        {\n            result += c;\n            continue;\n\
    \        }\n        if(c == '%')\n        {\n            result += c;\n      \
    \      continue;\n        }\n        if(c == '^')\n        {\n            result\
    \ += c;\n            continue;\n        }\n        if(c == '~')\n        {\n \
    \           result += c;\n            continue;\n        }\n        if(c == '`')\n\
    \        {\n            result += c;\n            continue;\n        }\n     \
    \   if(c == '=')\n        {\n            result += c;\n            continue;\n\
    \        }\n        if(c == '{')\n        {\n            result += c;\n      \
    \      continue;\n        }\n        if(c == '}')\n        {\n            result\
    \ += c;\n            continue;\n        }\n        if(c == '[')\n        {\n \
    \           result += c;\n            continue;\n        }\n        if(c == ']')\n\
    \        {\n            result += c;\n            continue;\n        }\n     \
    \   if(c == '|')\n        {\n            result += c;\n            continue;\n\
    \        }\n        if(c == '~')\n        {\n            result += c;\n      \
    \      continue;\n        }\n        if(c == '<')\n        {\n            result\
    \ += c;\n            continue;\n        }\n        if(c == '>')\n        {\n \
    \           result += c;\n            continue;\n        }\n        if(c == '\\\
    '')\n        {\n            result += c;\n            continue;\n        }\n \
    \       if(c == '\"')\n        {\n            result += c;\n            continue;\n\
    \        }\n        if(c == '&')\n        {\n            result += c;\n      \
    \      continue;\n        }\n        if(c == '%')\n        {\n            result\
    \ += c;\n            continue;\n        }\n        if(c == '\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0k8owvps.d(155): Error: unterminated character constant

    /tmp/tmp0k8owvps.d(156): Error: found `unittest` when expecting `)`

    /tmp/tmp0k8owvps.d(164): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp0k8owvps.d(164): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0k8owvps.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip uppercase\
    \ characters to lowercase and lowercase to uppercase.\n        \n*/\nstring flip_case_lower(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip uppercase characters to lowercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_upper(string string)\
    \ \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] +\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] - 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to uppercase and all\
    \ characters to lowercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to uppercase and all\
    \ characters to lowercase.\n        \n*/\nstring flip_case_all_lower(string string)\
    \ \n{\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to uppercase and all\
    \ characters to lowercase.\n\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp10sughj_.d(98): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10sughj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result\
    \ += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >=\
    \ 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A' +\
    \ 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ks1zwcn.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ks1zwcn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto result = string;\n\tfor (auto &c :\
    \ string) c = toupper(c);\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoxd51941.d(10): Error: basic type expected, not `&`

    /tmp/tmpoxd51941.d(10): Error: no identifier for declarator `_error_`

    /tmp/tmpoxd51941.d(10): Error: found `:` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxd51941.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \        \n*/\nstring flip_case_2(string string) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i] >=\
    \ 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a' +\
    \ 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \     {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_3(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_4(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_5(string string) \n{\n    string\
    \ result = \"\";\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyg_j3cx4.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyg_j3cx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpih3gbv8a.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpih3gbv8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\t\n\tfor(; it != end; ++it)\n\t{\n\t\tif(*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if(*it >= '0' && *it <= '9')\n\t\t\
    {\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\t\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsqbiphxg.d(9): Error: no property `begin` for type `string`

    /tmp/tmpsqbiphxg.d(10): Error: no property `end` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsqbiphxg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n \
    \       {\n            result += string[i] - 'a' + 'A';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip uppercase characters to lowercase and lowercase\
    \ to uppercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            result\
    \ += string[i] - 'A' + 'a';\n        }\n        else if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to uppercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else if(string[i] >=\
    \ 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A' +\
    \ 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to uppercase.\n        \n*/\nstring flip_case_all_lower(string\
    \ string) \n{\n    string result = \"\";\n    \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdpddz8jn.d(107): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpddz8jn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(;it!=end;++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it =\
    \ toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\t}\n\treturn string;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0uqbxo8_.d(9): Error: no property `begin` for type `string`

    /tmp/tmp0uqbxo8_.d(10): Error: no property `end` for type `string`

    /tmp/tmp0uqbxo8_.d(13): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0uqbxo8_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c >= 'a' && c <= 'z')\n        {\n            result += (char)(c - 'a' +\
    \ 'A');\n        }\n        else if(c >= 'A' && c <= 'Z')\n        {\n       \
    \     result += (char)(c - 'A' + 'a');\n        }\n        else\n        {\n \
    \           result += c;\n        }\n    }\n    return result;\n}\n/*\n For a\
    \ given string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \        \n*/\nstring flip_case_lower(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        char c =\
    \ string[i];\n        if(c >= 'A' && c <= 'Z')\n        {\n            result\
    \ += (char)(c - 'A' + 'a');\n        }\n        else if(c >= 'a' && c <= 'z')\n\
    \        {\n            result += (char)(c - 'a' + 'A');\n        }\n        else\n\
    \        {\n            result += c;\n        }\n    }\n    return result;\n}\n\
    /*\n For a given string, flip uppercase characters to uppercase and lowercase\
    \ to lowercase.\n        \n*/\nstring flip_case_upper(string string) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        char c = string[i];\n        if(c >= 'A' && c <= 'Z')\n        {\n  \
    \          result += (char)(c - 'A' + 'a');\n        }\n        else if(c >= 'a'\
    \ && c <= 'z')\n        {\n            result += (char)(c - 'a' + 'A');\n    \
    \    }\n        else\n        {\n            result += c;\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and lowercase to lowercase.\n        \n*/\nstring flip_case_all(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        char c = string[i];\n        if(c >= 'a' && c <= 'z')\n      \
    \  {\n            result += (char)(c - 'a' + 'A');\n        }\n        else if(c\
    \ >= 'A' && c <= 'Z')\n        {\n            result += (char)(c - 'A' + 'a');\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\n/*\n For a given string, flip all characters to uppercase\
    \ and uppercase to uppercase.\n        \n*/\nstring flip_case_all_upper(string\
    \ string) \n{\n    \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnlgwuh70.d(15): Error: C style cast illegal, use `cast(char)(c
    - ''a'' + ''A'')`

    /tmp/tmpnlgwuh70.d(19): Error: C style cast illegal, use `cast(char)(c - ''A''
    + ''a'')`

    /tmp/tmpnlgwuh70.d(40): Error: C style cast illegal, use `cast(char)(c - ''A''
    + ''a'')`

    /tmp/tmpnlgwuh70.d(44): Error: C style cast illegal, use `cast(char)(c - ''a''
    + ''A'')`

    /tmp/tmpnlgwuh70.d(65): Error: C style cast illegal, use `cast(char)(c - ''A''
    + ''a'')`

    /tmp/tmpnlgwuh70.d(69): Error: C style cast illegal, use `cast(char)(c - ''a''
    + ''A'')`

    /tmp/tmpnlgwuh70.d(90): Error: C style cast illegal, use `cast(char)(c - ''a''
    + ''A'')`

    /tmp/tmpnlgwuh70.d(94): Error: C style cast illegal, use `cast(char)(c - ''A''
    + ''a'')`

    /tmp/tmpnlgwuh70.d(110): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnlgwuh70.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a' || c == 'A')\n            c = toupper(c);\n        else if(c == 'b' ||\
    \ c == 'B')\n            c = tolower(c);\n        else if(c == 'c' || c == 'C')\n\
    \            c = toupper(c);\n        else if(c == 'd' || c == 'D')\n        \
    \    c = tolower(c);\n        else if(c == 'e' || c == 'E')\n            c = toupper(c);\n\
    \        else if(c == 'f' || c == 'F')\n            c = tolower(c);\n        else\
    \ if(c == 'g' || c == 'G')\n            c = toupper(c);\n        else if(c ==\
    \ 'h' || c == 'H')\n            c = tolower(c);\n        else if(c == 'i' || c\
    \ == 'I')\n            c = toupper(c);\n        else if(c == 'j' || c == 'J')\n\
    \            c = tolower(c);\n        else if(c == 'k' || c == 'K')\n        \
    \    c = toupper(c);\n        else if(c == 'l' || c == 'L')\n            c = tolower(c);\n\
    \        else if(c == 'm' || c == 'M')\n            c = toupper(c);\n        else\
    \ if(c == 'n' || c == 'N')\n            c = tolower(c);\n        else if(c ==\
    \ 'o' || c == 'O')\n            c = toupper(c);\n        else if(c == 'p' || c\
    \ == 'P')\n            c = tolower(c);\n        else if(c == 'q' || c == 'Q')\n\
    \            c = toupper(c);\n        else if(c == 'r' || c == 'R')\n        \
    \    c = tolower(c);\n        else if(c == 's' || c == 'S')\n            c = toupper(c);\n\
    \        else if(c == 't' || c == 'T')\n            c = tolower(c);\n        else\
    \ if(c == 'u' || c == 'U')\n            c = toupper(c);\n        else if(c ==\
    \ 'v' || c == 'V')\n            c = tolower(c);\n        else if(c == 'w' || c\
    \ == 'W')\n            c = toupper(c);\n        else if(c == 'x' || c == 'X')\n\
    \            c = tolower(c);\n        else if(c == 'y' || c == 'Y')\n        \
    \    c = toupper(c);\n        else if(c == 'z' || c == 'Z')\n            c = tolower(c);\n\
    \        else if(c == 'A' || c == 'a')\n            c = toupper(c);\n        else\
    \ if(c == 'B' || c == 'b')\n            c = tolower(c);\n        else if(c ==\
    \ 'C' || c == 'c')\n            c = toupper(c);\n        else if(c == 'D' || c\
    \ == 'd')\n            c = tolower(c);\n        else if(c == 'E' || c == 'e')\n\
    \            c = toupper\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfpiz7z8y.d(75): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpfpiz7z8y.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpfpiz7z8y.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfpiz7z8y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n       \
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'c')\n            c = 'C';\n        else if(c ==\
    \ 'd')\n            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n\
    \        else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n\
    \            c = 'G';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n     \
    \       c = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'n')\n            c = 'N';\n        else if(c ==\
    \ 'o')\n            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n\
    \        else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n\
    \            c = 'R';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n     \
    \       c = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'x')\n            c\
    \ = 'X';\n        else if(c == 'y')\n            c = 'Y';\n        else if(c ==\
    \ 'z')\n            c = 'Z';\n        else\n            c = toupper(c);\n    \
    \    result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph58dw_4j.d(9): Error: `string` is used as a type

    /tmp/tmph58dw_4j.d(10): Error: no property `length` for type `string`

    /tmp/tmph58dw_4j.d(66): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph58dw_4j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it) {\n\t\tif(islower(*it)) {\n\t\t\t*it\
    \ = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\t\
    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn9_cmbpv.d(9): Error: no property `begin` for type `string`

    /tmp/tmpn9_cmbpv.d(10): Error: no property `end` for type `string`

    /tmp/tmpn9_cmbpv.d(12): Error: undefined identifier `islower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn9_cmbpv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor (; it != end; ++it)\n\t{\n\t\tif (*it >= 'a' && *it <=\
    \ 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if (*it >= 'A' && *it <= 'Z')\n\
    \t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\
    \t}\n\treturn string;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n        \n*/\nstring flip_case_u(string\
    \ string) \n{\n\tauto it = string.begin();\n\tauto end = string.end();\n\tfor\
    \ (; it != end; ++it)\n\t{\n\t\tif (*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it\
    \ ^= 0x20;\n\t\t}\n\t\telse if (*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it ^=\
    \ 0x20;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\treturn string;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n        \n*/\nstring flip_case_l(string string) \n{\n\tauto it\
    \ = string.begin();\n\tauto end = string.end();\n\tfor (; it != end; ++it)\n\t\
    {\n\t\tif (*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\
    \ if (*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t}\n\treturn string;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n       \
    \ \n*/\nstring flip_case_l(string string) \n{\n\tauto it = string.begin();\n\t\
    auto end = string.end();\n\tfor (; it != end; ++it)\n\t{\n\t\tif (*it >= 'a' &&\
    \ *it <= 'z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse if (*it >= 'A' && *it\
    \ <= 'Z')\n\t\t{\n\t\t\t*it ^= 0x20;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t*it ^= 0x\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'A')\n            c = 'a';\n\
    \        else if(c == 'b')\n            c = 'B';\n        else if(c == 'B')\n\
    \            c = 'b';\n        else if(c == 'c')\n            c = 'C';\n     \
    \   else if(c == 'C')\n            c = 'c';\n        else if(c == 'd')\n     \
    \       c = 'D';\n        else if(c == 'D')\n            c = 'd';\n        else\
    \ if(c == 'e')\n            c = 'E';\n        else if(c == 'E')\n            c\
    \ = 'e';\n        else if(c == 'f')\n            c = 'F';\n        else if(c ==\
    \ 'F')\n            c = 'f';\n        else if(c == 'g')\n            c = 'G';\n\
    \        else if(c == 'G')\n            c = 'g';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'H')\n            c = 'h';\n     \
    \   else if(c == 'i')\n            c = 'I';\n        else if(c == 'I')\n     \
    \       c = 'i';\n        else if(c == 'j')\n            c = 'J';\n        else\
    \ if(c == 'J')\n            c = 'j';\n        else if(c == 'k')\n            c\
    \ = 'K';\n        else if(c == 'K')\n            c = 'k';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'L')\n            c = 'l';\n\
    \        else if(c == 'm')\n            c = 'M';\n        else if(c == 'M')\n\
    \            c = 'm';\n        else if(c == 'n')\n            c = 'N';\n     \
    \   else if(c == 'N')\n            c = 'n';\n        else if(c == 'o')\n     \
    \       c = 'O';\n        else if(c == 'O')\n            c = 'o';\n        else\
    \ if(c == 'p')\n            c = 'P';\n        else if(c == 'P')\n            c\
    \ = 'p';\n        else if(c == 'q')\n            c = 'Q';\n        else if(c ==\
    \ 'Q')\n            c = 'q';\n        else if(c == 'r')\n            c = 'R';\n\
    \        else if(c == 'R')\n            c = 'r';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 'S')\n            c = 's';\n     \
    \   else if(c == 't')\n            c = 'T';\n        else if(c == 'T')\n     \
    \       c = 't';\n        else if(c == 'u')\n            c = 'U';\n        else\
    \ if(c == 'U')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ms9r1p3.d(96): Error: found `unittest` instead of statement

    /tmp/tmp8ms9r1p3.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ms9r1p3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto result = string;\n\tfor (auto c :\
    \ string) \n\t{\n\t\tif (islower(c)) \n\t\t{\n\t\t\tresult = toupper(c);\n\t\t\
    }\n\t\telse \n\t\t{\n\t\t\tresult = tolower(c);\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi6rjdnt1.d(10): Error: no identifier for declarator `c`

    /tmp/tmpi6rjdnt1.d(10): Error: expression expected, not `:`

    /tmp/tmpi6rjdnt1.d(10): Error: found `string` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6rjdnt1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n\tauto it = string.begin();\n\tauto end =\
    \ string.end();\n\tfor(; it != end; ++it)\n\t{\n\t\tif(islower(*it))\n\t\t\t*it\
    \ = toupper(*it);\n\t\telse if(isupper(*it))\n\t\t\t*it = tolower(*it);\n\t}\n\
    \treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlmrx9v9.d(9): Error: no property `begin` for type `string`

    /tmp/tmpdlmrx9v9.d(10): Error: no property `end` for type `string`

    /tmp/tmpdlmrx9v9.d(13): Error: undefined identifier `islower`

    /tmp/tmpdlmrx9v9.d(15): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlmrx9v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'a')\n            c = 'A';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'c')\n            c = 'C';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'f')\n            c = 'F';\n        else if(c == 'g')\n     \
    \       c = 'G';\n        else if(c == 'h')\n            c = 'H';\n        else\
    \ if(c == 'i')\n            c = 'I';\n        else if(c == 'j')\n            c\
    \ = 'J';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'l')\n            c = 'L';\n        else if(c == 'm')\n            c = 'M';\n\
    \        else if(c == 'n')\n            c = 'N';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'q')\n            c = 'Q';\n        else if(c == 'r')\n     \
    \       c = 'R';\n        else if(c == 's')\n            c = 'S';\n        else\
    \ if(c == 't')\n            c = 'T';\n        else if(c == 'u')\n            c\
    \ = 'U';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'w')\n            c = 'W';\n        else if(c == 'x')\n            c = 'X';\n\
    \        else if(c == 'y')\n            c = 'Y';\n        else if(c == 'z')\n\
    \            c = 'Z';\n        else\n            c = toupper(c);\n        result\
    \ += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo_tqdkjd.d(9): Error: `string` is used as a type

    /tmp/tmpo_tqdkjd.d(66): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_tqdkjd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n\
    \        else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n          \
    \  result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n    \
    \        result += string[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxny20efg.d(9): Error: `string` is used as a type

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxny20efg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164006
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \n*/\n\
    string flip_case(string string) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < string.length; ++i)\n    {\n        char c = string[i];\n        if(c\
    \ == 'A')\n            c = 'a';\n        else if(c == 'a')\n            c = 'A';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'b')\n\
    \            c = 'B';\n        else if(c == 'C')\n            c = 'c';\n     \
    \   else if(c == 'c')\n            c = 'C';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'd')\n            c = 'D';\n        else\
    \ if(c == 'E')\n            c = 'e';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'F')\n            c = 'f';\n        else if(c ==\
    \ 'f')\n            c = 'F';\n        else if(c == 'G')\n            c = 'g';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'H')\n\
    \            c = 'h';\n        else if(c == 'h')\n            c = 'H';\n     \
    \   else if(c == 'I')\n            c = 'i';\n        else if(c == 'i')\n     \
    \       c = 'I';\n        else if(c == 'J')\n            c = 'j';\n        else\
    \ if(c == 'j')\n            c = 'J';\n        else if(c == 'K')\n            c\
    \ = 'k';\n        else if(c == 'k')\n            c = 'K';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'l')\n            c = 'L';\n\
    \        else if(c == 'M')\n            c = 'm';\n        else if(c == 'm')\n\
    \            c = 'M';\n        else if(c == 'N')\n            c = 'n';\n     \
    \   else if(c == 'n')\n            c = 'N';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'o')\n            c = 'O';\n        else\
    \ if(c == 'P')\n            c = 'p';\n        else if(c == 'p')\n            c\
    \ = 'P';\n        else if(c == 'Q')\n            c = 'q';\n        else if(c ==\
    \ 'q')\n            c = 'Q';\n        else if(c == 'R')\n            c = 'r';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 'S')\n\
    \            c = 's';\n        else if(c == 's')\n            c = 'S';\n     \
    \   else if(c == 'T')\n            c = 't';\n        else if(c == 't')\n     \
    \       c = 'T';\n        else if(c == 'U')\n            c = 'u';\n        else\
    \ if(c == 'u')\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps9kp9k_1.d(96): Error: found `unittest` instead of statement

    /tmp/tmps9kp9k_1.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps9kp9k_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164007

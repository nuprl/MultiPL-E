language: d
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble m = std.math.median(l);\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat m = std.math.median(l);\n\treturn m;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qasdohp.d(8): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp8qasdohp.d(17): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp8qasdohp.d(26): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qasdohp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3oxt4lcu.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3oxt4lcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong l1\
    \ = l[mid];\n\tlong l2 = l[mid+1];\n\t\n\tif (l1 > l2) return l1;\n\treturn l2;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7i6cncy4.d(19): unittest failure

    ----------------

    ??:? _d_unittestp [0x428225]

    ??:? void tmp7i6cncy4.__unittest_L15_C1() [0x427dff]

    ??:? void tmp7i6cncy4.__modtest() [0x427fa8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c2a7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b13a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302cd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43077c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430259]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]

    ??:? runModuleUnitTests [0x42c07d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tfloat\
    \ median = std.math.median(l);\n\treturn median;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddekmeep.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmpddekmeep.d(8): Error: variable `l` is shadowing variable `tmpddekmeep.median.l`

    /tmp/tmpddekmeep.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddekmeep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length / 2;\n    float\
    \ midVal = l[mid];\n    float leftMedian = median(l.subarray(0, mid));\n    float\
    \ rightMedian = median(l.subarray(mid));\n    return midVal + ((leftMedian + rightMedian)\
    \ / 2);\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.Collections;\nimport java.util.List;\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpviuj9x6k.d(14): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpviuj9x6k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = std.math.median(l);\n\
    \t\n\tif(n%2 == 0)\n\t\treturn m;\n\telse\n\t\treturn m + std.math.median(std.array.get!(l.slice(1,\
    \ n)));\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm6b531qz.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpm6b531qz.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpm6b531qz.d(14): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6b531qz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint len = l.length;\n\tif (len ==\
    \ 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(long l) \n\
    {\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(float l) \n{\n\tint len = l.length;\n\tif (len == 0)\
    \ \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(double l)\
    \ \n{\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(long long l) \n{\n\tint len = l.length;\n\tif (len ==\
    \ 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(ulong l) \n\
    {\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(long double l) \n{\n\tint len = l.length;\n\tif (len\
    \ == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\t\
    for (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nfloat median(char\
    \ l) \n{\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m =\
    \ (\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6z8iqku3.d(11): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(26): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(41): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(56): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(66): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp6z8iqku3.d(71): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(86): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(96): Error: use `real` instead of `long double`

    /tmp/tmp6z8iqku3.d(101): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmp6z8iqku3.d(117): Error: expression expected, not `unittest`

    /tmp/tmp6z8iqku3.d(116): Error: found `{` when expecting `)`

    /tmp/tmp6z8iqku3.d(119): Error: semicolon expected, not `alias`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6z8iqku3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ midVal = std.math.median(l);\n\tfloat leftMedian = median(l, 0, mid);\n\tfloat\
    \ rightMedian = median(l, mid, l.length);\n\treturn (midVal + leftMedian + rightMedian)\
    \ / 3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjkqtj1qp.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpjkqtj1qp.d(10): Error: function `tmpjkqtj1qp.median(long[] l)` is not
    callable using argument types `(long[], int, long)`

    /tmp/tmpjkqtj1qp.d(11): Error: function `tmpjkqtj1qp.median(long[] l)` is not
    callable using argument types `(long[], long, ulong)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkqtj1qp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqqykpp4x.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpqqykpp4x.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqykpp4x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\
    \tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\
    \tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjtt1itto.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjtt1itto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ > mid) \n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg0yfntjz.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg0yfntjz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = std.math.median(l);\n\tfloat m2 = std.math.median(l);\n\tfloat m3 = std.math.median(l);\n\
    \tfloat m4 = std.math.median(l);\n\tfloat m5 = std.math.median(l);\n\tfloat m6\
    \ = std.math.median(l);\n\tfloat m7 = std.math.median(l);\n\tfloat m8 = std.math.median(l);\n\
    \tfloat m9 = std.math.median(l);\n\tfloat m10 = std.math.median(l);\n\tfloat m11\
    \ = std.math.median(l);\n\tfloat m12 = std.math.median(l);\n\tfloat m13 = std.math.median(l);\n\
    \tfloat m14 = std.math.median(l);\n\tfloat m15 = std.math.median(l);\n\tfloat\
    \ m16 = std.math.median(l);\n\tfloat m17 = std.math.median(l);\n\tfloat m18 =\
    \ std.math.median(l);\n\tfloat m19 = std.math.median(l);\n\tfloat m20 = std.math.median(l);\n\
    \tfloat m21 = std.math.median(l);\n\tfloat m22 = std.math.median(l);\n\tfloat\
    \ m23 = std.math.median(l);\n\tfloat m24 = std.math.median(l);\n\tfloat m25 =\
    \ std.math.median(l);\n\tfloat m26 = std.math.median(l);\n\tfloat m27 = std.math.median(l);\n\
    \tfloat m28 = std.math.median(l);\n\tfloat m29 = std.math.median(l);\n\tfloat\
    \ m30 = std.math.median(l);\n\tfloat m31 = std.math.median(l);\n\tfloat m32 =\
    \ std.math.median(l);\n\tfloat m33 = std.math.median(l);\n\tfloat m34 = std.math.median(l);\n\
    \tfloat m35 = std.math.median(l);\n\tfloat m36 = std.math.median(l);\n\tfloat\
    \ m37 = std.math.median(l);\n\tfloat m38 = std.math.median(l);\n\tfloat m39 =\
    \ std.math.median(l);\n\tfloat m40 = std.math.median(l);\n\tfloat m41 = std.math.median(l);\n\
    \tfloat m42 = std.math.median(l);\n\tfloat m43 = std.math.median(l\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1yo2be_k.d(52): Error: found `unittest` when expecting `,`

    /tmp/tmp1yo2be_k.d(62): Error: found `void` when expecting `,`

    /tmp/tmp1yo2be_k.d(62): Error: found `{` when expecting `,`

    /tmp/tmp1yo2be_k.d(62): Error: expression expected, not `}`

    /tmp/tmp1yo2be_k.d(62): Error: found `End of File` when expecting `,`

    /tmp/tmp1yo2be_k.d(62): Error: found `End of File` when expecting `)`

    /tmp/tmp1yo2be_k.d(62): Error: semicolon expected, not `End of File`

    /tmp/tmp1yo2be_k.d(62): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yo2be_k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqqykpp4x.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpqqykpp4x.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqykpp4x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tsort(l);\n\treturn l[n/2];\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpazkarh34.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpazkarh34.d(10): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpazkarh34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong med\
    \ = std.math.median(l);\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif\
    \ (l[i] < med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpglpddxm7.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglpddxm7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqqykpp4x.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpqqykpp4x.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqykpp4x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long med = std.math.median(l);\n\
    \    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvn924t7y.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvn924t7y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tm += l[i];\n\t}\n\tm /= l.length;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9am0q_p2.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x42824d]

    ??:? void tmp9am0q_p2.__unittest_L16_C1() [0x427ea1]

    ??:? void tmp9am0q_p2.__modtest() [0x427fd0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c2cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b162]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430281]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b139]

    ??:? runModuleUnitTests [0x42c0a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428710]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.mid(l);\n\tfloat medianVal = midVal;\n\t\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tif (l[i] < mid)\n\t\t{\n\t\t\tmedianVal = l[i];\n\
    \t\t}\n\t}\n\treturn medianVal;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpctouy6rd.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpctouy6rd.d(9): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctouy6rd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7_rhsk0b.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_rhsk0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\
    \tif (l[i] != m) \n\t\t{\n\t\t\treturn m;\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ckhgk9j.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp1ckhgk9j.d(10): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ckhgk9j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l.length, l.length);\n\
    \tfloat m = 0.0;\n\t\n\tfor (int i = 0; i < l; i++)\n\t{\n\t\tm += l[i];\n\t}\n\
    \t\n\tm /= l;\n\t\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbhgfa4p9.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmpbhgfa4p9.d(8): Error: variable `l` is shadowing variable `tmpbhgfa4p9.median.l`

    /tmp/tmpbhgfa4p9.d(13): Error: only one index allowed to index `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhgfa4p9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long[] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ med = std.math.median(l, start, end);\n    return med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(long [] l) \n{\n\
    \    float med = std.math.median(l);\n    return med;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nfloat median(long [] l, int start,\
    \ int end) \n{\n    float med = std.math.median(l, start, end);\n    return med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ [] l, int start, int end) \n{\n    float med = std.math.median(l, start, end);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long [] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ med = std.math.median(l, start, end);\n    return med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(long [] l, int start,\
    \ int end) \n{\n    float med = std.math.median(l, start, end);\n    return med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ [] l, int start, int end) \n{\n    float med = std.math.median(l, start, end);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long [] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ \nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpch8nm1g2.d(108): Error: no identifier for declarator `float`

    /tmp/tmpch8nm1g2.d(108): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch8nm1g2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.mid(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbfrju6q.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpqbfrju6q.d(9): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbfrju6q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.toInt(l);\n  \
    \  if (l % 2 == 0)\n        return l[l / 2 - 1];\n    else\n        return l[l\
    \ / 2];\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzvpdhqfk.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmpzvpdhqfk.d(8): Error: variable `l` is shadowing variable `tmpzvpdhqfk.median.l`

    /tmp/tmpzvpdhqfk.d(10): Error: only one index allowed to index `long`

    /tmp/tmpzvpdhqfk.d(12): Error: only one index allowed to index `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzvpdhqfk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = 0.0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] < mid) \n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2y6s12y7.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2y6s12y7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0) \n\t{\n\t\tfloat x = (float) std.math.mid(l, 0, mid);\n\t\tfloat y\
    \ = (float) std.math.mid(l, mid, l.length);\n\t\treturn std.math.max(x, y);\n\t\
    }\n\telse \n\t{\n\t\tfloat x = (float) std.math.mid(l, 0, mid);\n\t\tfloat y =\
    \ (float) std.math.mid(l, mid, l.length);\n\t\treturn std.math.min(x, y);\n\t\
    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpve0v5tdo.d(11): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    0, mid)`

    /tmp/tmpve0v5tdo.d(12): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    mid, l.length)`

    /tmp/tmpve0v5tdo.d(17): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    0, mid)`

    /tmp/tmpve0v5tdo.d(18): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    mid, l.length)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpve0v5tdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.median(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpclqocegl.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpclqocegl.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclqocegl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat a\
    \ = l[mid];\n\tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\
    \tfloat e = l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h =\
    \ l[mid-1];\n\tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\
    \tfloat l = l[mid-1];\n\tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o =\
    \ l[mid];\n\tfloat p = l[mid-1];\n\tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\
    \tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\
    \tfloat w = l[mid];\n\tfloat x = l[mid-1];\n\tfloat y = l[mid];\n\tfloat z = l[mid+1];\n\
    \tfloat a = std.math._median([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]);\n\
    \treturn a;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(float [] l) \n{\n\tfloat mid = l.length/2;\n\tfloat a = l[mid];\n\
    \tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\tfloat e =\
    \ l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h = l[mid-1];\n\
    \tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\tfloat l = l[mid-1];\n\
    \tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o = l[mid];\n\tfloat p = l[mid-1];\n\
    \tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\
    \tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\tfloat w = l[mid];\n\tfloat x = l[mid-1]\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg1e71mpz.d(69): Error: semicolon expected, not `unittest`

    /tmp/tmpg1e71mpz.d(69): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg1e71mpz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\t\n\t\
    if (l % 2 == 1) \n\t{\n\t\treturn std.math.toFloat(l[l / 2]);\n\t}\n\telse\n\t\
    {\n\t\treturn std.math.toFloat(l[l / 2 - 1]) + std.math.toFloat(l[l / 2]);\n\t\
    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbm9xb0_.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmphbm9xb0_.d(8): Error: variable `l` is shadowing variable `tmphbm9xb0_.median.l`

    /tmp/tmphbm9xb0_.d(12): Error: undefined identifier `toFloat` in module `std.math`

    /tmp/tmphbm9xb0_.d(16): Error: undefined identifier `toFloat` in module `std.math`

    /tmp/tmphbm9xb0_.d(16): Error: undefined identifier `toFloat` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbm9xb0_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ a = l[mid];\n\tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\
    \tfloat e = l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h =\
    \ l[mid-1];\n\tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\
    \tfloat l = l[mid-1];\n\tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o =\
    \ l[mid];\n\tfloat p = l[mid-1];\n\tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\
    \tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\
    \tfloat w = l[mid];\n\tfloat x = l[mid-1];\n\tfloat y = l[mid];\n\tfloat z = l[mid+1];\n\
    \tfloat a = std.math._median([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]);\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_gake0hq.d(20): Error: variable `l` is shadowing variable `tmp_gake0hq.median.l`

    /tmp/tmp_gake0hq.d(21): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(22): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(23): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(24): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(25): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(26): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(27): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(28): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(29): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(30): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(31): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(32): Error: only one index allowed to index `float`

    /tmp/tmp_gake0hq.d(33): Error: only one index allowed to index `float`

    /tmp/tmp_gak'
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n <= 1) return\
    \ l[0];\n\tfloat m = std.math.median(l);\n\tfor (int i = 1; i < n; ++i) \n\t\t\
    if (l[i] < m) \n\t\t\tm = l[i];\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps1vfyz35.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmps1vfyz35.d(10): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps1vfyz35.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.max(l);\n    long\
    \ r = std.math.min(l);\n    float m = (float)(r + l) / 2;\n    return m;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=c++,median,algorithm,arrays |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n\
    using namespace std;\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ule1owv.d(10): Error: C style cast illegal, use `cast(float)(r
    + l)`

    /tmp/tmp7ule1owv.d(13): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ule1owv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long[] l, int start, int end) \n{\n\tlong mid = l.length / 2;\n\t\
    float median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long[] l, int start, int end, int step) \n{\n\tlong mid = l.length\
    \ / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long [] l, int start, int end, int step) \n{\n\tlong mid = l.length\
    \ / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long [] l, int start, int end, int step, long stepSize) \n{\n\tlong\
    \ mid = l.length / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian\
    \ = std.math.median(l[mid]);\n\t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1],\
    \ l[mid]);\n\t}\n\treturn median;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end, int step,\
    \ long stepSize, long stepSize2) \n{\n\tlong mid = l.length / 2;\n\tfloat median;\n\
    \tif (l.length%2 == 0)\n\t{\n\t\tmedian\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp45v5t3ie.d(103): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmp45v5t3ie.d(113): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp45v5t3ie.d(113): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45v5t3ie.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tlong mid;\n\t\n\tmid\
    \ = std.math.mid(l);\n\tmed = std.math.median(l);\n\t\n\twhile(std.math.abs(l[mid]\
    \ - med) > std.math.abs(l[mid - 1] - med))\n\t{\n\t\tmid--;\n\t}\n\t\n\treturn\
    \ med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcs3nz300.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpcs3nz300.d(12): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcs3nz300.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t\treturn std.math.mid(l, mid);\n\telse \n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu9u1dtak.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpu9u1dtak.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu9u1dtak.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat m2 = (float)std.math.mid(l);\n\tfloat m1 = (float)std.math.mid(l);\n\
    \tfloat m0 = (float)std.math.mid(l);\n\tfloat m3 = std.math.mid(l);\n\tfloat m4\
    \ = std.math.mid(l);\n\tfloat m5 = std.math.mid(l);\n\tfloat m6 = std.math.mid(l);\n\
    \tfloat m7 = std.math.mid(l);\n\tfloat m8 = std.math.mid(l);\n\tfloat m9 = std.math.mid(l);\n\
    \tfloat m10 = std.math.mid(l);\n\tfloat m11 = std.math.mid(l);\n\tfloat m12 =\
    \ std.math.mid(l);\n\tfloat m13 = std.math.mid(l);\n\tfloat m14 = std.math.mid(l);\n\
    \tfloat m15 = std.math.mid(l);\n\tfloat m16 = std.math.mid(l);\n\tfloat m17 =\
    \ std.math.mid(l);\n\tfloat m18 = std.math.mid(l);\n\tfloat m19 = std.math.mid(l);\n\
    \tfloat m20 = std.math.mid(l);\n\tfloat m21 = std.math.mid(l);\n\tfloat m22 =\
    \ std.math.mid(l);\n\tfloat m23 = std.math.mid(l);\n\tfloat m24 = std.math.mid(l);\n\
    \tfloat m25 = std.math.mid(l);\n\tfloat m26 = std.math.mid(l);\n\tfloat m27 =\
    \ std.math.mid(l);\n\tfloat m28 = std.math.mid(l);\n\tfloat m29 = std.math.mid(l);\n\
    \tfloat m30 = std.math.mid(l);\n\tfloat m31 = std.math.mid(l);\n\tfloat m32 =\
    \ std.math.mid(l);\n\tfloat m33 = std.math.mid(l);\n\tfloat m34 = std.math.mid(l);\n\
    \tfloat m35 = std.math.mid(l);\n\tfloat m36 = std.math.mid(l);\n\tfloat m37 =\
    \ std.math.mid(l);\n\tfloat m38 = std.math.mid(l);\n\tfloat m39 = std.math.mid(l);\n\
    \tfloat m40 = std.math.mid(l);\n\tfloat m41 = std.math.\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprpfjbb5g.d(9): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmprpfjbb5g.d(10): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmprpfjbb5g.d(11): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmprpfjbb5g.d(12): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmprpfjbb5g.d(52): Error: identifier expected following `.`, not `unittest`

    /tmp/tmprpfjbb5g.d(53): Error: semicolon expected, not `{`

    /tmp/tmprpfjbb5g.d(62): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprpfjbb5g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tint i;\n\t\n\tmed =\
    \ std.math.median(l);\n\t\n\tfor (i = 0; i < l.length; i++)\n\t\tif (l[i] < med)\n\
    \t\t\tmed = l[i];\n\t\t\n\treturn med;\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdforsf6u.d(11): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdforsf6u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83vtihkp.d(8): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp83vtihkp.d(8): Error: variable `l` is shadowing variable `tmp83vtihkp.median.l`

    /tmp/tmp83vtihkp.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp83vtihkp.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83vtihkp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\t\n\t\
    if (l % 2 == 0) \n\t{\n\t\treturn std.math.mid(l, l / 2);\n\t}\n\telse\n\t{\n\t\
    \treturn std.math.mid(l / 2, l);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2w9cdrf2.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmp2w9cdrf2.d(8): Error: variable `l` is shadowing variable `tmp2w9cdrf2.median.l`

    /tmp/tmp2w9cdrf2.d(12): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp2w9cdrf2.d(16): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2w9cdrf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz5cq38fm.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpz5cq38fm.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz5cq38fm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tlong mid = n / 2;\n\tlong m1 = l[mid];\n\tlong m2 = l[mid-1];\n\treturn\
    \ std.math.max(m1, m2);\n}\nunittest\n{\n    alias candidate = median;\n\n   \
    \ assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppsu2581z.d(13): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppsu2581z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\t\
    m += l[i];\n\tm /= (float)n;\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(short[] l) \n{\n\tint n = l.length;\n\
    \tif (n < 2) return 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\tfor (int i = 0;\
    \ i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\treturn m;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float[] l) \n{\n\t\
    int n = l.length;\n\tif (n < 2) return 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\
    \tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(byte[]\
    \ l) \n{\n\tint n = l.length;\n\tif (n < 2) return 0;\n\tfloat m = (float)n *\
    \ (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(short[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(float[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(byte[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(short[] l, int n, int m) \n{\n\tif (n < 2) return 0;\n\tfloat m =\
    \ (float)n * (n - 1) / 2;\n\tfor (int \nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpizsy55fs.d(10): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(13): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(24): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(27): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(38): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(41): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(52): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(55): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(65): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(68): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(78): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(81): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(91): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs.d(94): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizsy55fs'
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    float m = (float)(r + l) / 2;\n    return m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n    double l = std.math.min(l);\n    double r = std.math.max(l);\n \
    \   double m = (double)(r + l) / 2;\n    return m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(float[] l) \n{\n    float l =\
    \ std.math.min(l);\n    float r = std.math.max(l);\n    float m = (float)(r +\
    \ l) / 2;\n    return m;\n}\n/*\nReturn median of elements in the list l.\n  \
    \          \n*/\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpshqttp_j.d(10): Error: C style cast illegal, use `cast(float)(r
    + l)`

    /tmp/tmpshqttp_j.d(21): Error: C style cast illegal, use `cast(double)(r + l)`

    /tmp/tmpshqttp_j.d(32): Error: C style cast illegal, use `cast(float)(r + l)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshqttp_j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float m = 0;\n    long n = l.length;\n\
    \    long mid = n / 2;\n    long m1 = mid;\n    long m2 = mid + 1;\n    long m3\
    \ = mid + 2;\n    long m4 = mid + 3;\n    long m5 = mid + 4;\n    long m6 = mid\
    \ + 5;\n    long m7 = mid + 6;\n    long m8 = mid + 7;\n    long m9 = mid + 8;\n\
    \    long m10 = mid + 9;\n    long m11 = mid + 10;\n    long m12 = mid + 11;\n\
    \    long m13 = mid + 12;\n    long m14 = mid + 13;\n    long m15 = mid + 14;\n\
    \    long m16 = mid + 15;\n    long m17 = mid + 16;\n    long m18 = mid + 17;\n\
    \    long m19 = mid + 18;\n    long m20 = mid + 19;\n    long m21 = mid + 20;\n\
    \    long m22 = mid + 21;\n    long m23 = mid + 22;\n    long m24 = mid + 23;\n\
    \    long m25 = mid + 24;\n    long m26 = mid + 25;\n    long m27 = mid + 26;\n\
    \    long m28 = mid + 27;\n    long m29 = mid + 28;\n    long m30 = mid + 29;\n\
    \    long m31 = mid + 30;\n    long m32 = mid + 31;\n    long m33 = mid + 32;\n\
    \    long m34 = mid + 33;\n    long m35 = mid + 34;\n    long m36 = mid + 35;\n\
    \    long m37 = mid + 36;\n    long m38 = mid + 37;\n    long m39 = mid + 38;\n\
    \    long m40 = mid + 39;\n    long m41 = mid + 40;\n    long m42 = mid + 41;\n\
    \    long m43 = mid + 42;\n    long m44 = mid + 43;\n    long m45 = mid + 44;\n\
    \    long m46 = mid + 45;\n    long m47 = mid + 46;\n    long m48 = mid + 47;\n\
    \    long m49 = mid + 48;\n    long m50 = mid + 49;\n    long m51 = mid + 50;\n\
    \    long m52 = mid + 51;\n    long m53 = mid + 52;\n    long m54 = mid + 53;\n\
    \    long m55 = mid + 54;\n    long m56 = mid + 55;\n\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyho3ai3q.d(68): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyho3ai3q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\t\n\tlong mid = l + (r - l) / 2;\n\t\n\treturn mid;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps30q_jvo.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmps30q_jvo.d(8): Error: variable `l` is shadowing variable `tmps30q_jvo.median.l`

    /tmp/tmps30q_jvo.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps30q_jvo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong left\
    \ = l[mid];\n\tlong right = l[mid+1];\n\t\n\tif (left > right) \n\t\treturn left;\n\
    \telse\n\t\treturn right;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3e9bx63e.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x428225]

    ??:? void tmp3e9bx63e.__unittest_L17_C1() [0x427dff]

    ??:? void tmp3e9bx63e.__modtest() [0x427fa8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c2a7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b13a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302cd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43077c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430259]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b111]

    ??:? runModuleUnitTests [0x42c07d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble med = std.math.median(l);\n\treturn med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat med = std.math.median(l);\n\treturn med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0fa6bsiy.d(8): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp0fa6bsiy.d(17): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp0fa6bsiy.d(26): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fa6bsiy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tlong\
    \ l = std.math.min(l);\n\tlong r = std.math.max(l);\n\t\n\tif(l == r) return mid;\n\
    \t\n\tif(l > r) return median(std.array.append(l, std.array.range(l, r)));\n\t\
    \n\treturn median(std.array.append(r, std.array.range(l, r)));\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaou5yvh8.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpaou5yvh8.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmpaou5yvh8.d(9): Error: variable `l` is shadowing variable `tmpaou5yvh8.median.l`

    /tmp/tmpaou5yvh8.d(10): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmpaou5yvh8.d(14): Error: undefined identifier `array` in package `std`

    /tmp/tmpaou5yvh8.d(16): Error: undefined identifier `array` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaou5yvh8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong med\
    \ = std.math.min(l[mid], l[mid-1]);\n\t\n\tfor (int i = mid; i < l.length; i++)\
    \ \n\t{\n\t\tmed = std.math.min(med, l[i]);\n\t}\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpysiokjxf.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmpysiokjxf.d(11): Error: cannot implicitly convert expression `mid` of type
    `long` to `int`

    /tmp/tmpysiokjxf.d(13): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpysiokjxf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double[] l) \n{\n    double med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(float[] l) \n{\n    float med = std.math.median(l);\n  \
    \  return med;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ezzy52.d(8): Error: undefined identifier `median` in module `std.math`

    /tmp/tmph9ezzy52.d(17): Error: undefined identifier `median` in module `std.math`

    /tmp/tmph9ezzy52.d(26): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ezzy52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math._median(l);\n\
    \treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1kh3i7z.d(8): Error: undefined identifier `_median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1kh3i7z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] < m) m =\
    \ l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n      \
    \      \n*/\nfloat median(float l[]) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] < m) m =\
    \ l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n      \
    \      \n*/\ndouble median(double[] l) \n{\n\tint n = l.length;\n\tif (n < 2)\
    \ return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] <\
    \ m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(long l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(double l[]) \n{\n\tint n = l.length;\n\tif (n\
    \ < 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(float l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(long l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(double l[]) \n{\n\tint n = l.length;\n\tif (n\
    \ < 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat \nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmjyfdrs.d(19): Deprecation: instead of C-style syntax, use D-style
    syntax `float[] l`

    /tmp/tmpsmjyfdrs.d(45): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmpsmjyfdrs.d(58): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmpsmjyfdrs.d(71): Deprecation: instead of C-style syntax, use D-style syntax
    `float[] l`

    /tmp/tmpsmjyfdrs.d(84): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmpsmjyfdrs.d(97): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmpsmjyfdrs.d(111): Error: no identifier for declarator `float`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmjyfdrs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t\tif\
    \ (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0m7g4q63.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp0m7g4q63.d(10): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m7g4q63.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat med = (float)n;\n\tfor (int i = 0; i < n;\
    \ i++) {\n\t\tint j = i + 1;\n\t\twhile (j < n) {\n\t\t\tif (l[j] < l[i]) {\n\t\
    \t\t\tfloat tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\
    \t\tj++;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i] < med) med\
    \ = l[i];\n\t}\n\treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7byho6t.d(10): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpu7byho6t.d(11): Error: C style cast illegal, use `cast(float)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7byho6t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = std.math.median(l);\n\
    \treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsbkjcx2f.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpsbkjcx2f.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsbkjcx2f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tif (std.math.abs(mid - med) < std.math.abs(mid\
    \ - l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe0lzl_pp.d(12): Error: expression expected, not `unittest`

    /tmp/tmpe0lzl_pp.d(11): Error: found `{` when expecting `)`

    /tmp/tmpe0lzl_pp.d(14): Error: found `alias` when expecting `,`

    /tmp/tmpe0lzl_pp.d(14): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(16): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(17): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(18): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(19): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(20): Error: found `;` when expecting `,`

    /tmp/tmpe0lzl_pp.d(21): Error: expression expected, not `}`

    /tmp/tmpe0lzl_pp.d(22): Error: found `void` when expecting `,`

    /tmp/tmpe0lzl_pp.d(22): Error: found `{` when expecting `,`

    /tmp/tmpe0lzl_pp.d(22): Error: expression expected, not `}`

    /tmp/tmpe0lzl_pp.d(22): Error: found `End of File` when expecting `,`

    /tmp/tmpe0lzl_pp.d(22): Error: found `End of File` when expecting `)`

    /tmp/tmpe0lzl_pp.d(22): Error: found `End of File` when expecting `,`

    /tmp/tmpe0lzl_pp.d(2'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.abs(l[mid]);\n\tfloat leftVal = std.math.abs(l[mid-1]);\n\t\
    float rightVal = std.math.abs(l[mid+1]);\n\tfloat medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l) \n{\n\tdouble mid = std.math.mid(l);\n\t\
    double midVal = std.math.abs(l[mid]);\n\tdouble leftVal = std.math.abs(l[mid-1]);\n\
    \tdouble rightVal = std.math.abs(l[mid+1]);\n\tdouble medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nlong median(long[] l, int len) \n{\n\tlong mid = std.math.mid(l, len);\n\
    \tlong midVal = std.math.abs(l[mid]);\n\tlong leftVal = std.math.abs(l[mid-1]);\n\
    \tlong rightVal = std.math.abs(l[mid+1]);\n\tlong medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l, int len) \n{\n\tdouble mid = std.math.mid(l,\
    \ len);\n\tdouble midVal = std.math.abs(l[mid]);\n\tdouble leftVal = std.math.abs(l[mid-1]);\n\
    \tdouble rightVal = std.math.abs(l[mid+1]);\n\tdouble medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nlong median(long[] l, int len, int stride) \n{\n\tlong mid = std.math.mid(l,\
    \ len, stride);\n\tlong midVal = std.math.abs(l[mid]);\n\tlong leftVal = std.math.abs(l[mid-1]);\n\
    \tlong rightVal = std.math.abs(l[mid+1]);\n\tlong medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l, int len, int stride) \n{\n\tdouble mid\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9tzrv1fm.d(74): Error: semicolon expected, not `unittest`

    /tmp/tmp9tzrv1fm.d(74): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9tzrv1fm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83vtihkp.d(8): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp83vtihkp.d(8): Error: variable `l` is shadowing variable `tmp83vtihkp.median.l`

    /tmp/tmp83vtihkp.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp83vtihkp.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83vtihkp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ low = 0;\n\tint high = l.length - 1;\n\tfloat midVal = std.math.mid(l);\n\t\
    while (low < high) {\n\t\tint midI = std.math.mid(l, low, high);\n\t\tif (midI\
    \ > midVal) {\n\t\t\thigh = midI - 1;\n\t\t} else {\n\t\t\tlow = midI + 1;\n\t\
    \t}\n\t}\n\treturn mid;\n}\nunittest\n{\n    alias candidate = median;\n\n   \
    \ assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcnnabz66.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpcnnabz66.d(10): Error: cannot implicitly convert expression `l.length
    - 1LU` of type `ulong` to `int`

    /tmp/tmpcnnabz66.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpcnnabz66.d(13): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnnabz66.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float l[]) \n{\n\t\
    long mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i = mid; i >\
    \ 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t\
    }\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nfloat median(double l[]) \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\
    \tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\
    \t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long l[]) \n{\n\tlong mid = l.length / 2;\n\
    \tfloat m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(float l[])\
    \ \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i =\
    \ mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm =\
    \ l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(double l[]) \n{\n\tlong mid = l.length / 2;\n\t\
    float m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] <\
    \ m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(long l[])\
    \ \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i =\
    \ mid; i > 0; i--)\n\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpev1d72b5.d(9): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(23): Deprecation: instead of C-style syntax, use D-style syntax
    `float[] l`

    /tmp/tmpev1d72b5.d(26): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(40): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmpev1d72b5.d(43): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(57): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmpev1d72b5.d(60): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(74): Deprecation: instead of C-style syntax, use D-style syntax
    `float[] l`

    /tmp/tmpev1d72b5.d(77): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(91): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmpev1d72b5.d(94): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpev1d72b5.d(108): Deprecation: instead of C-style syntax, use D-style syntax
    `lo'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble m = std.math.median(l);\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat m = std.math.median(l);\n\treturn m;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qasdohp.d(8): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp8qasdohp.d(17): Error: undefined identifier `median` in module `std.math`

    /tmp/tmp8qasdohp.d(26): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qasdohp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid - 1, mid);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnxxtymtd.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpnxxtymtd.d(15): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxxtymtd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n <= 1) return\
    \ l[0];\n\tfloat m = (float) std.math.median(l);\n\tfloat s = 0.0;\n\tfor (int\
    \ i = 0; i < n; i++)\n\t\ts += l[i];\n\ts = s / n;\n\tfor (int i = 0; i < n; i++)\n\
    \t\tl[i] = l[i] - m;\n\tfloat m2 = (float) std.math.median(l);\n\tfor (int i =\
    \ 0; i < n; i++)\n\t\tl[i] = l[i] + m2;\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5lewik3l.d(10): Error: C style cast illegal, use `cast(float)std.math.median(l)`

    /tmp/tmp5lewik3l.d(17): Error: C style cast illegal, use `cast(float)std.math.median(l)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5lewik3l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    long mid = std.math.mid(l,r);\n    return mid;\n}\n\
    </code>\n<|/ a tags=c++,median,algorithm |>\n<| a dscore=1 |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8o9aw60r.d(13): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8o9aw60r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3oxt4lcu.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3oxt4lcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\
    \treturn std.math.mid(l, mid - 1);\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjh7yrq66.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmpjh7yrq66.d(8): Error: variable `l` is shadowing variable `tmpjh7yrq66.median.l`

    /tmp/tmpjh7yrq66.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpjh7yrq66.d(13): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjh7yrq66.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = 0.0;\n\
    \t\n\tfor (int i = 0; i < n; i++) {\n\t\tm += l[i];\n\t}\n\t\n\tm /= n;\n\t\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkd6xtvoa.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkd6xtvoa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] <\
    \ m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpin76105w.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpin76105w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tlong i;\n\t\n\tmed =\
    \ std.math.median(l);\n\t\n\tfor (i = 0; i < l.length; ++i)\n\t\tif (l[i] < med)\n\
    \t\t\tmed = l[i];\n\t\n\treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdjxop7l.d(11): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdjxop7l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double[] l) \n{\n    double med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(float[] l) \n{\n    float med = std.math.median(l);\n  \
    \  return med;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph9ezzy52.d(8): Error: undefined identifier `median` in module `std.math`

    /tmp/tmph9ezzy52.d(17): Error: undefined identifier `median` in module `std.math`

    /tmp/tmph9ezzy52.d(26): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph9ezzy52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-std.math.mid(l)) > std.math.abs(mid-std.math.mid(l-1)))\n\t\
    \treturn std.math.mid(l);\n\telse\n\t\treturn std.math.mid(l-1);\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6xh2onh0.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp6xh2onh0.d(9): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp6xh2onh0.d(9): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp6xh2onh0.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp6xh2onh0.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xh2onh0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tlong\
    \ lower = std.math.min(l);\n\tlong upper = std.math.max(l);\n\t\n\tif (lower ==\
    \ upper) return lower;\n\t\n\tif (lower == mid) return std.math.max(lower, upper);\n\
    \t\n\tif (upper == mid) return std.math.min(lower, upper);\n\t\n\treturn (std.math.max(lower,\
    \ mid) + std.math.min(mid, upper)) / 2;\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp506ouing.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmp506ouing.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp506ouing.d(10): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp506ouing.d(14): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp506ouing.d(16): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp506ouing.d(18): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp506ouing.d(18): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp506ouing.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = 0.0;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] < mid)\n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgkv14sal.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgkv14sal.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length / 2;\n    float\
    \ m = (float)l[mid];\n    for(int i = mid; i < l.length; i++) \n    {\n      \
    \  if(l[i] < m) \n        {\n            m = l[i];\n        }\n    }\n    return\
    \ m;\n}\n</code>\n<|/ a tags=c++,median,arrays |>\n<| c |>\nThis code doesn't\
    \ work if there are two equal numbers in the list. For example, if the list contains\
    \ [1,2,2,3,5,5,5,6,7,8,9], the median is 2.5, but your code returns 3.\n<|/ c\
    \ |>\n<| c |>\nYes, I noticed that and fixed it. I also added a second solution\
    \ that doesn't require a for loop and is probably faster.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include\
    \ <numeric>\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpet9m7ujn.d(9): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpet9m7ujn.d(19): Error: declaration expected, not `<`

    /tmp/tmpet9m7ujn.d(22): Error: unterminated character constant

    /tmp/tmpet9m7ujn.d(25): Error: unterminated character constant

    /tmp/tmpet9m7ujn.d(37): Error: declaration expected, not `assert`

    /tmp/tmpet9m7ujn.d(38): Error: declaration expected, not `assert`

    /tmp/tmpet9m7ujn.d(39): Error: declaration expected, not `assert`

    /tmp/tmpet9m7ujn.d(40): Error: declaration expected, not `assert`

    /tmp/tmpet9m7ujn.d(41): Error: declaration expected, not `assert`

    /tmp/tmpet9m7ujn.d(42): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpet9m7ujn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tm += l[i];\n\t}\n\tm /= l.length;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9am0q_p2.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x42824d]

    ??:? void tmp9am0q_p2.__unittest_L16_C1() [0x427ea1]

    ??:? void tmp9am0q_p2.__modtest() [0x427fd0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c2cf]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b162]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307a4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430281]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b139]

    ??:? runModuleUnitTests [0x42c0a5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428710]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m1\
    \ = l[mid];\n\tfloat m2 = l[mid-1];\n\treturn std.fabs(m1-m2)/2;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4s7wf2j5.d(11): Error: undefined identifier `fabs` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4s7wf2j5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math._median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qicabky.d(10): Error: undefined identifier `_median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qicabky.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid + 1, l.length - mid);\n\t}\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj2vs7kvs.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpj2vs7kvs.d(15): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj2vs7kvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math._median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg5a433v8.d(8): Error: undefined identifier `_median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5a433v8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tlong left = std.math.mid(l, 0, mid);\n\tlong right = std.math.mid(l,\
    \ mid, l - mid);\n\t\n\tif (left == right)\n\t\treturn left;\n\t\n\tif (left <\
    \ right)\n\t\treturn left;\n\telse\n\t\treturn right;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq6qtvws7.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmpq6qtvws7.d(8): Error: variable `l` is shadowing variable `tmpq6qtvws7.median.l`

    /tmp/tmpq6qtvws7.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpq6qtvws7.d(11): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq6qtvws7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat sum = 0;\n\tfor (int i = 0; i < n; ++i)\n\
    \t\tsum += l[i];\n\tfloat x = sum / m;\n\tfloat y = 0;\n\tfor (int i = 0; i <\
    \ n; ++i)\n\t\ty += l[i];\n\ty /= m;\n\treturn x < y ? x : y;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7xf2lj9.d(10): Error: C style cast illegal, use `cast(float)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7xf2lj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83vtihkp.d(8): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp83vtihkp.d(8): Error: variable `l` is shadowing variable `tmp83vtihkp.median.l`

    /tmp/tmp83vtihkp.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp83vtihkp.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83vtihkp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = (float)mid;\n    float n = std.math.size(l);\n    float m = std.math.min(m,\
    \ n);\n    float n = std.math.max(m, n);\n    return m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm9y7n0hm.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9y7n0hm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = l.length;\n\
    \tfor (int i = 0; i < n; i++) {\n\t\tm += l[i];\n\t}\n\tm /= n;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm3s4abci.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x42825d]

    ??:? void tmpm3s4abci.__unittest_L16_C1() [0x427ead]

    ??:? void tmpm3s4abci.__modtest() [0x427fdc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c2df]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b172]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430305]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307b4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430291]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b149]

    ??:? runModuleUnitTests [0x42c0b5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428720]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m\
    \ = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\
    \t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\ndouble median(double[] l) \n{\n\tdouble mid = l.length/2;\n\
    \tdouble m = (double)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(float[] l) \n{\n\tfloat mid = l.length/2;\n\
    \tfloat m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5bj66yyy.d(9): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmp5bj66yyy.d(24): Error: C style cast illegal, use `cast(double)l[mid]`

    /tmp/tmp5bj66yyy.d(39): Error: C style cast illegal, use `cast(float)l[mid]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5bj66yyy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.abs(l[mid]);\n\tfloat leftMedian = median(std.array.tail(l,\
    \ 0, mid));\n\tfloat rightMedian = median(std.array.tail(l, mid+1, l.length-1));\n\
    \treturn (midVal + leftMedian + rightMedian) / 3.0;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpglvudnoh.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpglvudnoh.d(10): Error: undefined identifier `array` in package `std`

    /tmp/tmpglvudnoh.d(11): Error: undefined identifier `array` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglvudnoh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ median = std.math.median(l);\n\t\n\tif (l.length%2 == 1)\n\t\treturn median;\n\
    \t\n\tfloat leftMedian = median(l);\n\tfloat rightMedian = median(std.array.to!long(l).skip(mid));\n\
    \t\n\treturn leftMedian + (rightMedian - leftMedian) / 2;\n}\nunittest\n{\n  \
    \  alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyhx8yvdo.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpyhx8yvdo.d(14): Error: function expected before `()`, not `median` of
    type `float`

    /tmp/tmpyhx8yvdo.d(15): Error: undefined identifier `array` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyhx8yvdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.mid(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbfrju6q.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpqbfrju6q.d(9): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbfrju6q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ leftMedian = std.math.median(l);\n\tfloat rightMedian = std.math.median(l.slice(mid));\n\
    \treturn (leftMedian + rightMedian) / 2;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsnn184cd.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpsnn184cd.d(10): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsnn184cd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = length(l);\n\tif (l % 2 ==\
    \ 0)\n\t\treturn std.math.median(l);\n\telse\n\t\treturn std.math.midpoint(l);\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplinkvnu8.d(8): Error: undefined identifier `length`

    /tmp/tmplinkvnu8.d(8): Error: variable `l` is shadowing variable `tmplinkvnu8.median.l`

    /tmp/tmplinkvnu8.d(10): Error: undefined identifier `median` in module `std.math`

    /tmp/tmplinkvnu8.d(12): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplinkvnu8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\tlong i;\n\t\n\tmedian\
    \ = std.math.median(l);\n\t\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < median) \n\t\t{\n\t\t\tmedian = l[i];\n\t\t}\n\t}\n\t\n\treturn median;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbpu_vqos.d(11): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbpu_vqos.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi6zrn1yl.d(10): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6zrn1yl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math::median(l);\n\
    \treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvpjpgolv.d(8): Error: semicolon expected, not `:`

    /tmp/tmpvpjpgolv.d(8): Error: found `:` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvpjpgolv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = l.length;\n\
    \tfloat sum = 0;\n\tfloat count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tsum\
    \ += l[i];\n\t\tcount++;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i] >\
    \ m) {\n\t\t\tm = l[i];\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i]\
    \ < sum / count) {\n\t\t\treturn l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfnv17bin.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmpfnv17bin.__unittest_L28_C1() [0x427f7f]

    ??:? void tmpfnv17bin.__modtest() [0x428128]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c427]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ba]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43044d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308fc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4303d9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b291]

    ??:? runModuleUnitTests [0x42c1fd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428868]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\t}\n\
    \tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(long l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(float l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(double l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(long long l[]) \n{\n\tfloat m = 0;\n\tfloat n\
    \ = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn =\
    \ n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(ulong l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(short l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(byte l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn \nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi_2zcfn9.d(22): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] l`

    /tmp/tmpi_2zcfn9.d(38): Deprecation: instead of C-style syntax, use D-style syntax
    `float[] l`

    /tmp/tmpi_2zcfn9.d(54): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmpi_2zcfn9.d(70): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpi_2zcfn9.d(70): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmpi_2zcfn9.d(86): Deprecation: instead of C-style syntax, use D-style syntax
    `ulong[] l`

    /tmp/tmpi_2zcfn9.d(102): Deprecation: instead of C-style syntax, use D-style syntax
    `short[] l`

    /tmp/tmpi_2zcfn9.d(118): Deprecation: instead of C-style syntax, use D-style syntax
    `byte[] l`

    /tmp/tmpi_2zcfn9.d(129): Error: expression expected, not `unittest`

    /tmp/tmpi_2zcfn9.d(130): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_2zcfn9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat m2 = (float)std.math.mid(l);\n\tfloat m3 = std.math.mid(l);\n\
    \tfloat m4 = (float)std.math.mid(l);\n\tfloat m5 = (float)std.math.mid(l);\n\t\
    float m6 = (float)std.math.mid(l);\n\tfloat m7 = (float)std.math.mid(l);\n\tfloat\
    \ m8 = (float)std.math.mid(l);\n\tfloat m9 = (float)std.math.mid(l);\n\tfloat\
    \ m10 = (float)std.math.mid(l);\n\tfloat m11 = (float)std.math.mid(l);\n\tfloat\
    \ m12 = (float)std.math.mid(l);\n\tfloat m13 = (float)std.math.mid(l);\n\tfloat\
    \ m14 = (float)std.math.mid(l);\n\tfloat m15 = (float)std.math.mid(l);\n\tfloat\
    \ m16 = (float)std.math.mid(l);\n\tfloat m17 = (float)std.math.mid(l);\n\tfloat\
    \ m18 = (float)std.math.mid(l);\n\tfloat m19 = (float)std.math.mid(l);\n\tfloat\
    \ m20 = (float)std.math.mid(l);\n\tfloat m21 = (float)std.math.mid(l);\n\tfloat\
    \ m22 = (float)std.math.mid(l);\n\tfloat m23 = (float)std.math.mid(l);\n\tfloat\
    \ m24 = (float)std.math.mid(l);\n\tfloat m25 = (float)std.math.mid(l);\n\tfloat\
    \ m26 = (float)std.math.mid(l);\n\tfloat m27 = (float)std.math.mid(l);\n\tfloat\
    \ m28 = (float)std.math.mid(l);\n\tfloat m29 = (float)std.math.mid(l);\n\tfloat\
    \ m30 = (float)std.math.mid(l);\n\tfloat m31 = (float)std.math.mid(l);\n\tfloat\
    \ m32 = (float)std.math.mid(l);\n\tfloat m33 = (float)std.math.mid(l);\n\tfloat\
    \ m34 = (float)std.math.mid(l);\n\tfloat m35 = (float)std.math.mid(l);\n\tfloat\
    \ m36 = (float)std.math.mid(l);\n\tfloat m37 = (float)std.math.mid(l);\n\tfloat\
    \ m38 = (float)std.math.mid(l);\n\tfloat m39 = (float)std.math.mid(l);\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd15yigjr.d(9): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmpd15yigjr.d(10): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(12): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(13): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(14): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(15): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(16): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(17): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(18): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(19): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(20): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpd15yigjr.d(21): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\tmid++;\n\t}\n\treturn std.math.min(l[mid], l[mid-1]);\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtw7b385.d(13): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtw7b385.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tint n = l.length;\n\
    \t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tm = std.math::max(m, l[i]);\n\t}\n\t\
    \n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppdwbjcau.d(13): Error: found `:` when expecting `;` following statement

    /tmp/tmppdwbjcau.d(13): Error: found `:` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppdwbjcau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; ++i)\n\t\tm =\
    \ std.math.max(m, l[i]);\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvh961ctb.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpvh961ctb.d(10): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpvh961ctb.d(12): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvh961ctb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ n = l.length;\n\tif (n < 2) return mid;\n\tfloat m = (float) mid;\n\tfor (int\
    \ i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n\tdouble mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2) return\
    \ mid;\n\tdouble m = (double) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (l[i]\
    \ < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(float l[]) \n{\n\tfloat mid = std.math.mid(l);\n\
    \tint n = l.length;\n\tif (n < 2) return mid;\n\tfloat m = (float) mid;\n\tfor\
    \ (int i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\ndouble median(double\
    \ l[]) \n{\n\tdouble mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2)\
    \ return mid;\n\tdouble m = (double) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\
    \tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(long l[]) \n{\n\tfloat mid =\
    \ std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2) return mid;\n\tfloat m =\
    \ (float) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\
    \t}\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double l[]) \n{\n\tdouble mid = std.math.mid(l);\n\tint\
    \ n = l.length;\n\tif (n < 2) return mid;\n\tdouble m = (double) mid;\n\tfor (int\
    \ i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l[]) \n{\n\tfloat mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2)\
    \ return mid;\n\tfloat m = (float) mid;\n\tfor (int i = 0; i < n; ++i) {\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppuvbs5i3.d(11): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmppuvbs5i3.d(26): Error: C style cast illegal, use `cast(double)mid`

    /tmp/tmppuvbs5i3.d(36): Deprecation: instead of C-style syntax, use D-style syntax
    `float[] l`

    /tmp/tmppuvbs5i3.d(41): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmppuvbs5i3.d(51): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmppuvbs5i3.d(56): Error: C style cast illegal, use `cast(double)mid`

    /tmp/tmppuvbs5i3.d(66): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmppuvbs5i3.d(71): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmppuvbs5i3.d(81): Deprecation: instead of C-style syntax, use D-style syntax
    `double[] l`

    /tmp/tmppuvbs5i3.d(86): Error: C style cast illegal, use `cast(double)mid`

    /tmp/tmppuvbs5i3.d(96): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmppuvbs5i3.d(101): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmppuvbs5i3.d(103): Er'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\
    \tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4wn66ctq.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4wn66ctq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-l[0]) < std.math.abs(mid-l[1])) {\n\t\treturn l[0];\n\t} else\
    \ {\n\t\treturn l[1];\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwtdoivko.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtdoivko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz5cq38fm.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpz5cq38fm.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz5cq38fm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n % 2 ==\
    \ 1) return std.math::median(l);\n\telse return (std.math::median(l) + std.math::median(std.array::skip(l,\
    \ n - 1))) / 2;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc53z25mw.d(9): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmpc53z25mw.d(9): Error: found `:` instead of statement

    /tmp/tmpc53z25mw.d(10): Error: found `else` without a corresponding `if`, `version`
    or `debug` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc53z25mw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 1) \n\t{\n\t\twhile (l > 1) \n\t\t{\n\t\t\tmid\
    \ = l / 2;\n\t\t\tif (std.math.mod(mid, 2) == 0) \n\t\t\t{\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t\tl = mid;\n\t\t}\n\t}\n\treturn (float) mid;\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy8t8qqho.d(22): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy8t8qqho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = std.math.median(l);\n    return std.math.min(m, mid);\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=c++,median,algorithm,sorting |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4g5bcc8c.d(12): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4g5bcc8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-l[0]) < std.math.abs(mid-l[1])) {\n\t\treturn l[0];\n\t} else\
    \ {\n\t\treturn l[1];\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwtdoivko.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtdoivko.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplfenhhxx.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfenhhxx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat w = (float)n;\n\tfor (int i = 0; i < n; i++)\
    \ {\n\t\tint j = i;\n\t\twhile (j > 0 && l[j-1] > l[j]) j--;\n\t\tif (j == 0)\
    \ return 0;\n\t\tfloat x = l[j];\n\t\tfor (int k = j; k < n; k++) {\n\t\t\tif\
    \ (l[k] < x) x = l[k];\n\t\t}\n\t\tw = w / m;\n\t\tm = m;\n\t\tl[j] = x;\n\t}\n\
    \treturn l;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpizvdvvhq.d(10): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpizvdvvhq.d(11): Error: C style cast illegal, use `cast(float)n`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizvdvvhq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83vtihkp.d(8): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp83vtihkp.d(8): Error: variable `l` is shadowing variable `tmp83vtihkp.median.l`

    /tmp/tmp83vtihkp.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp83vtihkp.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83vtihkp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3oxt4lcu.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3oxt4lcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi6zrn1yl.d(10): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6zrn1yl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat med\
    \ = (float)std.math.median(l);\n\tfloat med2 = (float)std.math.median(l.subarray(0,\
    \ mid));\n\tfloat med3 = (float)std.math.median(l.subarray(mid));\n\treturn med\
    \ + med2 + med3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf8ngzbdu.d(9): Error: C style cast illegal, use `cast(float)std.math.median(l)`

    /tmp/tmpf8ngzbdu.d(10): Error: C style cast illegal, use `cast(float)std.math.median(l.subarray(0,
    mid))`

    /tmp/tmpf8ngzbdu.d(11): Error: C style cast illegal, use `cast(float)std.math.median(l.subarray(mid))`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8ngzbdu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = (float)mid;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] >\
    \ mid)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float[] l) \n{\n\t\
    float med = (float)std.math.mid(l);\n\tfor (int i = 0; i < l.length; i++)\n\t\
    {\n\t\tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(double[]\
    \ l) \n{\n\tdouble med = (double)std.math.mid(l);\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn\
    \ med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat\
    \ median(std.random[][] l) \n{\n\tfloat med = (float)std.math.mid(l);\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\tmed = l[i][0];\n\
    \t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(std.random[][] l, int n) \n{\n\tfloat med = (float)std.math.mid(l,\
    \ n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\
    \tmed = l[i][0];\n\t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(std.random[][] l, int n, int\
    \ m) \n{\n\tfloat med = (float)std.math.mid(l, n);\n\tfor (int i = 0; i < n; i++)\n\
    \t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\tmed = l[i][0];\n\t\t}\n\t}\n\treturn\
    \ med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat\
    \ median(std.random[][] l, int n, int m, int k) \n{\n\tfloat med = (float)std.math.mid(l,\
    \ n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\
    \tmed = l[i][0];\n\t\t}\n\t}\n\treturn med;\n}\n\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvazgjif2.d(9): Error: C style cast illegal, use `cast(float)mid`

    /tmp/tmpvazgjif2.d(25): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpvazgjif2.d(41): Error: C style cast illegal, use `cast(double)std.math.mid(l)`

    /tmp/tmpvazgjif2.d(57): Error: C style cast illegal, use `cast(float)std.math.mid(l)`

    /tmp/tmpvazgjif2.d(73): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    n)`

    /tmp/tmpvazgjif2.d(89): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    n)`

    /tmp/tmpvazgjif2.d(105): Error: C style cast illegal, use `cast(float)std.math.mid(l,
    n)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvazgjif2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t\tif\
    \ (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0m7g4q63.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp0m7g4q63.d(10): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m7g4q63.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat n = std.math.size(l);\n\t\n\tfor (int i = 0; i < n;\
    \ i++)\n\t{\n\t\tif (l[i] < m)\n\t\t\tm = l[i];\n\t}\n\t\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7o2a384y.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7o2a384y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tif (l.length%2\
    \ == 1)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid, l.length);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptolpqm4u.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmptolpqm4u.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptolpqm4u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz5cq38fm.d(10): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpz5cq38fm.d(12): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz5cq38fm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++)\n\t\tif (l[i]\
    \ != m) \n\t\t\treturn m;\n\treturn m;\n}\n/*\nReturn median of elements in the\
    \ list l.\n            \n*/\nfloat median(long[] l, int start, int end) \n{\n\t\
    int n = end - start;\n\tif (n < 2) return 0;\n\tfloat m = std.math.median(l);\n\
    \tfor (int i = start; i < end; i++)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l) \n{\n\tif (l < 2) return 0;\n\tfloat m = std.math.median(l);\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l, int start, int end) \n{\n\tif (end - start < 2) return 0;\n\
    \tfloat m = std.math.median(l);\n\tfor (int i = start; i < end; i++)\n\t\tif (l[i]\
    \ != m) \n\t\t\treturn m;\n\treturn m;\n}\n/*\nReturn median of elements in the\
    \ list l.\n            \n*/\nfloat median(long l, int start, int end, int step)\
    \ \n{\n\tif (end - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor\
    \ (int i = start; i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l, int start, int end, int step, float delta) \n{\n\tif (end\
    \ - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = start;\
    \ i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l, int start, int end, int step, float delta, float epsilon) \n{\n\tif (end\
    \ - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = start;\
    \ i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l, int start, int end, int step, float delta, float epsilon, float delta2) \n\
    {\n\tif (end - start < 2) return 0;\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyopliw_p.d(102): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyopliw_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ midIndex = 0;\n\tfloat median = 0;\n\t\n\tfor(int i = 0; i < l.length; i++)\n\
    \t{\n\t\tif(l[i] > mid)\n\t\t{\n\t\t\tmidIndex = i;\n\t\t\tmid = l[i];\n\t\t}\n\
    \t}\n\t\n\tmedian = mid;\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpav9qd_vf.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpav9qd_vf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m1\
    \ = l[mid];\n\tfloat m2 = l[mid-1];\n\treturn std.math._median(m1, m2);\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp17ef02yj.d(11): Error: undefined identifier `_median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17ef02yj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp83vtihkp.d(8): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp83vtihkp.d(8): Error: variable `l` is shadowing variable `tmp83vtihkp.median.l`

    /tmp/tmp83vtihkp.d(9): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp83vtihkp.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83vtihkp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid - 1, mid);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnxxtymtd.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpnxxtymtd.d(15): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxxtymtd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = 0;\n\tfor (int i = 0; i < mid; i++)\n\t\tm += l[i];\n\tfor (int i = mid;\
    \ i < l.length; i++)\n\t\tm += l[i];\n\treturn m / mid;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoo1srl4k.d(12): Error: cannot implicitly convert expression `mid`
    of type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoo1srl4k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat temp;\n\tfor (int i = 0; i < n; i++) {\n\t\
    \tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp =\
    \ l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i]\
    \ > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1;\
    \ j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i]\
    \ = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n;\
    \ i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\
    \t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\
    \t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j]\
    \ = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int\
    \ j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\
    \t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i =\
    \ 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j])\
    \ {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t\
    }\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n;\
    \ j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\
    \tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp =\
    \ l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i]\
    \ > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1;\
    \ j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i]\
    \ = l[j];\n\t\t\t\tl[j] = temp\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsf29hvnr.d(10): Error: C style cast illegal, use `cast(float)n`

    /tmp/tmpsf29hvnr.d(108): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpsf29hvnr.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpsf29hvnr.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpsf29hvnr.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpsf29hvnr.d(118): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsf29hvnr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = (float)l.length/2;\n\tfloat\
    \ sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum/m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8j7qohn3.d(8): Error: C style cast illegal, use `cast(float)l.length`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j7qohn3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf4lowhaa.d(9): Error: C style cast illegal, use `cast(float)l[mid]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4lowhaa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tsort(l);\n\treturn l[n/2];\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphui0gehw.d(8): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmphui0gehw.d(10): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphui0gehw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = std.math.median(l);\n    return std.math.max(m, mid);\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n    double mid = std.math.mid(l);\n    double m = std.math.median(l);\n\
    \    return std.math.max(m, mid);\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(float[] l) \n{\n    float mid = std.math.mid(l);\n\
    \    float m = std.math.median(l);\n    return std.math.max(m, mid);\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplm2vyxcd.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmplm2vyxcd.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmplm2vyxcd.d(10): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmplm2vyxcd.d(18): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmplm2vyxcd.d(19): Error: undefined identifier `median` in module `std.math`

    /tmp/tmplm2vyxcd.d(20): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmplm2vyxcd.d(28): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmplm2vyxcd.d(29): Error: undefined identifier `median` in module `std.math`

    /tmp/tmplm2vyxcd.d(30): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplm2vyxcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math::median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxhhqwv24.d(8): Error: semicolon expected, not `:`

    /tmp/tmpxhhqwv24.d(8): Error: found `:` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhhqwv24.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat midVal\
    \ = std.math.median(l);\n\tfloat leftMedian = median(l.subarray(0, mid));\n\t\
    float rightMedian = median(l.subarray(mid, l.length));\n\treturn (midVal + leftMedian\
    \ + rightMedian)/3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj49cjbtg.d(9): Error: undefined identifier `median` in module `std.math`

    /tmp/tmpj49cjbtg.d(10): Error: no property `subarray` for type `long[]`

    /tmp/tmpj49cjbtg.d(11): Error: no property `subarray` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj49cjbtg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3oxt4lcu.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3oxt4lcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t\tm = l[i];\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn0vbrf95.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn0vbrf95.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89pw1s2x.d(9): Error: C style cast illegal, use `cast(float)med`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89pw1s2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float m = std.math.median(l);\n\
    \    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxi2v521b.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxi2v521b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqeparnd.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqeparnd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i < l.length; i++) \n\t{\n\t\tm = (float)l[i]\
    \ + ((float)m < (float)l[mid]) ? m : (float)l[i];\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufuejkbh.d(9): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpufuejkbh.d(12): Error: C style cast illegal, use `cast(float)l[i]`

    /tmp/tmpufuejkbh.d(12): Error: C style cast illegal, use `cast(float)m`

    /tmp/tmpufuejkbh.d(12): Error: C style cast illegal, use `cast(float)l[mid]`

    /tmp/tmpufuejkbh.d(12): Error: C style cast illegal, use `cast(float)l[i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufuejkbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.median(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpclqocegl.d(8): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpclqocegl.d(9): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclqocegl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\tfloat\
    \ temp;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\ttemp = l[i];\n\t\tm =\
    \ temp < m ? temp : m;\n\t\tn = temp > n ? temp : n;\n\t}\n\treturn (m + (n -\
    \ m) / 2);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcya3b59_.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x428295]

    ??:? void tmpcya3b59_.__unittest_L19_C1() [0x427e6b]

    ??:? void tmpcya3b59_.__modtest() [0x428014]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c317]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b1aa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43033d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307ec]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4302c9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b181]

    ??:? runModuleUnitTests [0x42c0ed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428758]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length/2;\n    float\
    \ median;\n    \n    if (l.length % 2 == 0)\n    {\n        median = std.math.median(l[mid]);\n\
    \    }\n    else\n    {\n        median = std.math.median(l[mid-1], l[mid]);\n\
    \    }\n    \n    return median;\n}\n</code>\n<|/ a tags=c++,median,arrays |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\
    using namespace std;\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx7qvchqj.d(22): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx7qvchqj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi6zrn1yl.d(10): Error: undefined identifier `median` in module
    `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6zrn1yl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\
    \treturn std.math.mid(l, mid - 1);\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjh7yrq66.d(8): Error: undefined identifier `toInt` in module `std.math`

    /tmp/tmpjh7yrq66.d(8): Error: variable `l` is shadowing variable `tmpjh7yrq66.median.l`

    /tmp/tmpjh7yrq66.d(11): Error: undefined identifier `mid` in module `std.math`

    /tmp/tmpjh7yrq66.d(13): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjh7yrq66.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    \n    float mid = (r + l) / 2.0f;\n    \n    float\
    \ median = l;\n    \n    for(int i = 0; i < l.length; i++)\n    {\n        if(l[i]\
    \ < mid)\n        {\n            median = l[i];\n        }\n    }\n    \n    return\
    \ median;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't answer the question. OP\
    \ wants to find the median of a list of floats, not an array.\n<|/ c |>\n<| c\
    \ |>\nThe question was edited after I posted my answer. Now it does answer the\
    \ question. Sorry for the confusion.\n<|/ c |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to find the median of a list of floats, not an array.\n<|/\
    \ c |>\n<| c |>\nI edited my answer to include a median function which does exactly\
    \ what OP wants.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to find the median of a list of floats, not an array.\n<|/ c |>\n<| a tags=c++,median,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>\n#include <iterator>\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_bgo_heu.d(25): Error: declaration expected, not `<`

    /tmp/tmp_bgo_heu.d(28): Error: unterminated character constant

    /tmp/tmp_bgo_heu.d(34): Error: unterminated character constant

    /tmp/tmp_bgo_heu.d(40): Error: unterminated character constant

    /tmp/tmp_bgo_heu.d(53): Error: declaration expected, not `assert`

    /tmp/tmp_bgo_heu.d(54): Error: declaration expected, not `assert`

    /tmp/tmp_bgo_heu.d(55): Error: declaration expected, not `assert`

    /tmp/tmp_bgo_heu.d(56): Error: declaration expected, not `assert`

    /tmp/tmp_bgo_heu.d(57): Error: declaration expected, not `assert`

    /tmp/tmp_bgo_heu.d(58): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_bgo_heu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpct84xz.d(8): Error: undefined identifier `median` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpct84xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp36mkbp7g.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp36mkbp7g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_6ztkoz.d(8): Error: undefined identifier `min` in module `std.math`,
    did you mean function `sin`?

    /tmp/tmp9_6ztkoz.d(8): Error: variable `l` is shadowing variable `tmp9_6ztkoz.median.l`

    /tmp/tmp9_6ztkoz.d(9): Error: undefined identifier `max` in module `std.math`,
    did you mean function `fmax`?

    /tmp/tmp9_6ztkoz.d(10): Error: undefined identifier `midpoint` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_6ztkoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160851
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ count = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] == mid)\n\
    \t\t\tcount++;\n\t}\n\treturn count / l.length;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r_vra86.d(8): Error: undefined identifier `mid` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r_vra86.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0jluyvzz.d(9): Error: C style cast illegal, use `cast(float)mid`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0jluyvzz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160852

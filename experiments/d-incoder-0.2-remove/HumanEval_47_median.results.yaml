language: d
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble m = std.math.median(l);\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat m = std.math.median(l);\n\treturn m;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpebi0of_u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ifgfat0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong l1\
    \ = l[mid];\n\tlong l2 = l[mid+1];\n\t\n\tif (l1 > l2) return l1;\n\treturn l2;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp728y198k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tfloat\
    \ median = std.math.median(l);\n\treturn median;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00k5ngjn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length / 2;\n    float\
    \ midVal = l[mid];\n    float leftMedian = median(l.subarray(0, mid));\n    float\
    \ rightMedian = median(l.subarray(mid));\n    return midVal + ((leftMedian + rightMedian)\
    \ / 2);\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.Collections;\nimport java.util.List;\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkmpwh4vv.d(14): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkmpwh4vv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = std.math.median(l);\n\
    \t\n\tif(n%2 == 0)\n\t\treturn m;\n\telse\n\t\treturn m + std.math.median(std.array.get!(l.slice(1,\
    \ n)));\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsbs49k0v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint len = l.length;\n\tif (len ==\
    \ 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(long l) \n\
    {\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(float l) \n{\n\tint len = l.length;\n\tif (len == 0)\
    \ \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor (int\
    \ i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(double l)\
    \ \n{\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(long long l) \n{\n\tint len = l.length;\n\tif (len ==\
    \ 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\tfor\
    \ (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(ulong l) \n\
    {\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length\
    \ / 2;\n\tfloat sum = 0;\n\tfor (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\
    \treturn sum / len;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nfloat median(long double l) \n{\n\tint len = l.length;\n\tif (len\
    \ == 0) \n\t\treturn 0;\n\tfloat m = (float)l.length / 2;\n\tfloat sum = 0;\n\t\
    for (int i = 0; i < len; i++) \n\t\tsum += l[i];\n\treturn sum / len;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nfloat median(char\
    \ l) \n{\n\tint len = l.length;\n\tif (len == 0) \n\t\treturn 0;\n\tfloat m =\
    \ (\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpas4h2bmj.d(11): Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpas4h2bmj.d(26):
    Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpas4h2bmj.d(41):
    Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpas4h2bmj.d(56):
    Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpas4h2bmj.d(66):
    Error: found \''long\'' when expecting \'')\''\n/tmp/tmpas4h2bmj.d(66): Error:
    semicolon expected following function declaration\n/tmp/tmpas4h2bmj.d(66): Error:
    no identifier for declarator l\n/tmp/tmpas4h2bmj.d(66): Error: Declaration expected,
    not \'')\''\n/tmp/tmpas4h2bmj.d(69): Error: Declaration expected, not \''if\''\n/tmp/tmpas4h2bmj.d(71):
    Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpas4h2bmj.d(73):
    Error: Declaration expected, not \''for\''\n/tmp/tmpas4h2bmj.d(73): Error: no
    identifier for declarator i\n/tmp/tmpas4h2bmj.d(73): Error: Declaration expected,
    not \''<\''\n/tmp/tmpas4h2bmj.d(73): Error: no identifier for declarator i\n/tmp/tmpas4h2bmj.d(73):
    Error: Declaration expected, not \''++\''\n/tmp/tmpas4h2bmj.d(75): Error: Declaration
    expected, not \''return\''\n/tmp/tmpas4h2bmj.d(76): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpas4h2bmj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ midVal = std.math.median(l);\n\tfloat leftMedian = median(l, 0, mid);\n\tfloat\
    \ rightMedian = median(l, mid, l.length);\n\treturn (midVal + leftMedian + rightMedian)\
    \ / 3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9o4u73i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_tt7rin.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\
    \tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\
    \tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\
    \t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\tfloat m2\
    \ = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\
    \tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2) / 2;\n\t\n\tfloat m1\
    \ = std.math.min(l);\n\tfloat m2 = std.math.max(l);\n\t\n\tfloat m = (m1 + m2)\
    \ / 2;\n\t\n\tfloat m1 = std.math.min(l);\n\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3vcjavs1.d(83): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3vcjavs1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ > mid) \n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxiejg41q.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxiejg41q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = std.math.median(l);\n\tfloat m2 = std.math.median(l);\n\tfloat m3 = std.math.median(l);\n\
    \tfloat m4 = std.math.median(l);\n\tfloat m5 = std.math.median(l);\n\tfloat m6\
    \ = std.math.median(l);\n\tfloat m7 = std.math.median(l);\n\tfloat m8 = std.math.median(l);\n\
    \tfloat m9 = std.math.median(l);\n\tfloat m10 = std.math.median(l);\n\tfloat m11\
    \ = std.math.median(l);\n\tfloat m12 = std.math.median(l);\n\tfloat m13 = std.math.median(l);\n\
    \tfloat m14 = std.math.median(l);\n\tfloat m15 = std.math.median(l);\n\tfloat\
    \ m16 = std.math.median(l);\n\tfloat m17 = std.math.median(l);\n\tfloat m18 =\
    \ std.math.median(l);\n\tfloat m19 = std.math.median(l);\n\tfloat m20 = std.math.median(l);\n\
    \tfloat m21 = std.math.median(l);\n\tfloat m22 = std.math.median(l);\n\tfloat\
    \ m23 = std.math.median(l);\n\tfloat m24 = std.math.median(l);\n\tfloat m25 =\
    \ std.math.median(l);\n\tfloat m26 = std.math.median(l);\n\tfloat m27 = std.math.median(l);\n\
    \tfloat m28 = std.math.median(l);\n\tfloat m29 = std.math.median(l);\n\tfloat\
    \ m30 = std.math.median(l);\n\tfloat m31 = std.math.median(l);\n\tfloat m32 =\
    \ std.math.median(l);\n\tfloat m33 = std.math.median(l);\n\tfloat m34 = std.math.median(l);\n\
    \tfloat m35 = std.math.median(l);\n\tfloat m36 = std.math.median(l);\n\tfloat\
    \ m37 = std.math.median(l);\n\tfloat m38 = std.math.median(l);\n\tfloat m39 =\
    \ std.math.median(l);\n\tfloat m40 = std.math.median(l);\n\tfloat m41 = std.math.median(l);\n\
    \tfloat m42 = std.math.median(l);\n\tfloat m43 = std.math.median(l\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmehqk2b9.d(52): Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmpmehqk2b9.d(62):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmpmehqk2b9.d(62): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmpmehqk2b9.d(62): Error: expression
    expected, not \''}\''\n/tmp/tmpmehqk2b9.d(62): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmpmehqk2b9.d(62): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpmehqk2b9.d(62):
    Error: semicolon expected, not \''EOF\''\n/tmp/tmpmehqk2b9.d(62): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmehqk2b9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_tt7rin.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tsort(l);\n\treturn l[n/2];\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg19hr0oi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong med\
    \ = std.math.median(l);\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif\
    \ (l[i] < med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8lskx26r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\treturn med;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_tt7rin.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long med = std.math.median(l);\n\
    \    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8mhr7l9z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tm += l[i];\n\t}\n\tm /= l.length;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppvdhto2s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.mid(l);\n\tfloat medianVal = midVal;\n\t\n\tfor (int i = 0;\
    \ i < l.length; i++)\n\t{\n\t\tif (l[i] < mid)\n\t\t{\n\t\t\tmedianVal = l[i];\n\
    \t\t}\n\t}\n\treturn medianVal;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3pakjkjo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy9i2cjom.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy9i2cjom.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t{\n\t\
    \tif (l[i] != m) \n\t\t{\n\t\t\treturn m;\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdz_m27sq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l.length, l.length);\n\
    \tfloat m = 0.0;\n\t\n\tfor (int i = 0; i < l; i++)\n\t{\n\t\tm += l[i];\n\t}\n\
    \t\n\tm /= l;\n\t\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5t2m74s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long[] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ med = std.math.median(l, start, end);\n    return med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(long [] l) \n{\n\
    \    float med = std.math.median(l);\n    return med;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nfloat median(long [] l, int start,\
    \ int end) \n{\n    float med = std.math.median(l, start, end);\n    return med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ [] l, int start, int end) \n{\n    float med = std.math.median(l, start, end);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long [] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ med = std.math.median(l, start, end);\n    return med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(long [] l, int start,\
    \ int end) \n{\n    float med = std.math.median(l, start, end);\n    return med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ [] l, int start, int end) \n{\n    float med = std.math.median(l, start, end);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(long [] l, int start, int end) \n{\n    float med = std.math.median(l,\
    \ start, end);\n    return med;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end) \n{\n    float\
    \ \nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp62elmz42.d(108): Error: no identifier for declarator float\n/tmp/tmp62elmz42.d(108):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp62elmz42.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.mid(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28rv1q69.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.toInt(l);\n  \
    \  if (l % 2 == 0)\n        return l[l / 2 - 1];\n    else\n        return l[l\
    \ / 2];\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpywybkpsg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = 0.0;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] < mid) \n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx1rl47py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0) \n\t{\n\t\tfloat x = (float) std.math.mid(l, 0, mid);\n\t\tfloat y\
    \ = (float) std.math.mid(l, mid, l.length);\n\t\treturn std.math.max(x, y);\n\t\
    }\n\telse \n\t{\n\t\tfloat x = (float) std.math.mid(l, 0, mid);\n\t\tfloat y =\
    \ (float) std.math.mid(l, mid, l.length);\n\t\treturn std.math.min(x, y);\n\t\
    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr0wc_mit.d(11): Error: C style cast illegal, use cast(float)std.math.mid(l,
    0, mid)\n/tmp/tmpr0wc_mit.d(12): Error: C style cast illegal, use cast(float)std.math.mid(l,
    mid, l.length)\n/tmp/tmpr0wc_mit.d(17): Error: C style cast illegal, use cast(float)std.math.mid(l,
    0, mid)\n/tmp/tmpr0wc_mit.d(18): Error: C style cast illegal, use cast(float)std.math.mid(l,
    mid, l.length)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr0wc_mit.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.median(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz6tsikl5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat a\
    \ = l[mid];\n\tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\
    \tfloat e = l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h =\
    \ l[mid-1];\n\tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\
    \tfloat l = l[mid-1];\n\tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o =\
    \ l[mid];\n\tfloat p = l[mid-1];\n\tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\
    \tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\
    \tfloat w = l[mid];\n\tfloat x = l[mid-1];\n\tfloat y = l[mid];\n\tfloat z = l[mid+1];\n\
    \tfloat a = std.math._median([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]);\n\
    \treturn a;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(float [] l) \n{\n\tfloat mid = l.length/2;\n\tfloat a = l[mid];\n\
    \tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\tfloat e =\
    \ l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h = l[mid-1];\n\
    \tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\tfloat l = l[mid-1];\n\
    \tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o = l[mid];\n\tfloat p = l[mid-1];\n\
    \tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\
    \tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\tfloat w = l[mid];\n\tfloat x = l[mid-1]\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7f75ap6r.d(69): Error: semicolon expected, not \''unittest\''\n/tmp/tmp7f75ap6r.d(69):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp7f75ap6r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\t\n\t\
    if (l % 2 == 1) \n\t{\n\t\treturn std.math.toFloat(l[l / 2]);\n\t}\n\telse\n\t\
    {\n\t\treturn std.math.toFloat(l[l / 2 - 1]) + std.math.toFloat(l[l / 2]);\n\t\
    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmcy4j3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ a = l[mid];\n\tfloat b = l[mid+1];\n\tfloat c = l[mid-1];\n\tfloat d = l[mid];\n\
    \tfloat e = l[mid-1];\n\tfloat f = l[mid+1];\n\tfloat g = l[mid];\n\tfloat h =\
    \ l[mid-1];\n\tfloat i = l[mid];\n\tfloat j = l[mid+1];\n\tfloat k = l[mid];\n\
    \tfloat l = l[mid-1];\n\tfloat m = l[mid];\n\tfloat n = l[mid+1];\n\tfloat o =\
    \ l[mid];\n\tfloat p = l[mid-1];\n\tfloat q = l[mid];\n\tfloat r = l[mid+1];\n\
    \tfloat s = l[mid];\n\tfloat t = l[mid-1];\n\tfloat u = l[mid];\n\tfloat v = l[mid+1];\n\
    \tfloat w = l[mid];\n\tfloat x = l[mid-1];\n\tfloat y = l[mid];\n\tfloat z = l[mid+1];\n\
    \tfloat a = std.math._median([a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z]);\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9h5uoacx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n <= 1) return\
    \ l[0];\n\tfloat m = std.math.median(l);\n\tfor (int i = 1; i < n; ++i) \n\t\t\
    if (l[i] < m) \n\t\t\tm = l[i];\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xznmlxp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.max(l);\n    long\
    \ r = std.math.min(l);\n    float m = (float)(r + l) / 2;\n    return m;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=c++,median,algorithm,arrays |>\n<code>\n\
    #include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n\
    using namespace std;\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9yq1_2xc.d(10): Error: C style cast illegal, use cast(float)(r
    + l)\n/tmp/tmp9yq1_2xc.d(13): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yq1_2xc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long[] l, int start, int end) \n{\n\tlong mid = l.length / 2;\n\t\
    float median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long[] l, int start, int end, int step) \n{\n\tlong mid = l.length\
    \ / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long [] l, int start, int end, int step) \n{\n\tlong mid = l.length\
    \ / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian = std.math.median(l[mid]);\n\
    \t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1], l[mid]);\n\t}\n\treturn\
    \ median;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long [] l, int start, int end, int step, long stepSize) \n{\n\tlong\
    \ mid = l.length / 2;\n\tfloat median;\n\tif (l.length%2 == 0)\n\t{\n\t\tmedian\
    \ = std.math.median(l[mid]);\n\t}\n\telse\n\t{\n\t\tmedian = std.math.median(l[mid-1],\
    \ l[mid]);\n\t}\n\treturn median;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long [] l, int start, int end, int step,\
    \ long stepSize, long stepSize2) \n{\n\tlong mid = l.length / 2;\n\tfloat median;\n\
    \tif (l.length%2 == 0)\n\t{\n\t\tmedian\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1k987gkt.d(103): Error: found \''unittest\'' when expecting
    \'';\'' following statement\n/tmp/tmp1k987gkt.d(113): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\n/tmp/tmp1k987gkt.d(113): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1k987gkt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tlong mid;\n\t\n\tmid\
    \ = std.math.mid(l);\n\tmed = std.math.median(l);\n\t\n\twhile(std.math.abs(l[mid]\
    \ - med) > std.math.abs(l[mid - 1] - med))\n\t{\n\t\tmid--;\n\t}\n\t\n\treturn\
    \ med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvt20dbpq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t\treturn std.math.mid(l, mid);\n\telse \n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28hi73xa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat m2 = (float)std.math.mid(l);\n\tfloat m1 = (float)std.math.mid(l);\n\
    \tfloat m0 = (float)std.math.mid(l);\n\tfloat m3 = std.math.mid(l);\n\tfloat m4\
    \ = std.math.mid(l);\n\tfloat m5 = std.math.mid(l);\n\tfloat m6 = std.math.mid(l);\n\
    \tfloat m7 = std.math.mid(l);\n\tfloat m8 = std.math.mid(l);\n\tfloat m9 = std.math.mid(l);\n\
    \tfloat m10 = std.math.mid(l);\n\tfloat m11 = std.math.mid(l);\n\tfloat m12 =\
    \ std.math.mid(l);\n\tfloat m13 = std.math.mid(l);\n\tfloat m14 = std.math.mid(l);\n\
    \tfloat m15 = std.math.mid(l);\n\tfloat m16 = std.math.mid(l);\n\tfloat m17 =\
    \ std.math.mid(l);\n\tfloat m18 = std.math.mid(l);\n\tfloat m19 = std.math.mid(l);\n\
    \tfloat m20 = std.math.mid(l);\n\tfloat m21 = std.math.mid(l);\n\tfloat m22 =\
    \ std.math.mid(l);\n\tfloat m23 = std.math.mid(l);\n\tfloat m24 = std.math.mid(l);\n\
    \tfloat m25 = std.math.mid(l);\n\tfloat m26 = std.math.mid(l);\n\tfloat m27 =\
    \ std.math.mid(l);\n\tfloat m28 = std.math.mid(l);\n\tfloat m29 = std.math.mid(l);\n\
    \tfloat m30 = std.math.mid(l);\n\tfloat m31 = std.math.mid(l);\n\tfloat m32 =\
    \ std.math.mid(l);\n\tfloat m33 = std.math.mid(l);\n\tfloat m34 = std.math.mid(l);\n\
    \tfloat m35 = std.math.mid(l);\n\tfloat m36 = std.math.mid(l);\n\tfloat m37 =\
    \ std.math.mid(l);\n\tfloat m38 = std.math.mid(l);\n\tfloat m39 = std.math.mid(l);\n\
    \tfloat m40 = std.math.mid(l);\n\tfloat m41 = std.math.\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp46cu0p9k.d(9): Error: C style cast illegal, use cast(float)mid\n/tmp/tmp46cu0p9k.d(10):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp46cu0p9k.d(11):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp46cu0p9k.d(12):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp46cu0p9k.d(52):
    Error: identifier expected following \''.\'', not \''unittest\''\n/tmp/tmp46cu0p9k.d(53):
    Error: semicolon expected, not \''{\''\n/tmp/tmp46cu0p9k.d(62): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp46cu0p9k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tint i;\n\t\n\tmed =\
    \ std.math.median(l);\n\t\n\tfor (i = 0; i < l.length; i++)\n\t\tif (l[i] < med)\n\
    \t\t\tmed = l[i];\n\t\t\n\treturn med;\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzg4f4b3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33j821ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\t\n\t\
    if (l % 2 == 0) \n\t{\n\t\treturn std.math.mid(l, l / 2);\n\t}\n\telse\n\t{\n\t\
    \treturn std.math.mid(l / 2, l);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81gh_owo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o3b2xne.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tlong mid = n / 2;\n\tlong m1 = l[mid];\n\tlong m2 = l[mid-1];\n\treturn\
    \ std.math.max(m1, m2);\n}\nunittest\n{\n    alias candidate = median;\n\n   \
    \ assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2cut1cny.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\t\
    m += l[i];\n\tm /= (float)n;\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(short[] l) \n{\n\tint n = l.length;\n\
    \tif (n < 2) return 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\tfor (int i = 0;\
    \ i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\treturn m;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float[] l) \n{\n\t\
    int n = l.length;\n\tif (n < 2) return 0;\n\tfloat m = (float)n * (n - 1) / 2;\n\
    \tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(byte[]\
    \ l) \n{\n\tint n = l.length;\n\tif (n < 2) return 0;\n\tfloat m = (float)n *\
    \ (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(short[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(float[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(byte[] l, int n) \n{\n\tif (n < 2) return 0;\n\tfloat m = (float)n\
    \ * (n - 1) / 2;\n\tfor (int i = 0; i < n; i++)\n\t\tm += l[i];\n\tm /= (float)n;\n\
    \treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(short[] l, int n, int m) \n{\n\tif (n < 2) return 0;\n\tfloat m =\
    \ (float)n * (n - 1) / 2;\n\tfor (int \nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf3gr96ob.d(10): Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(13):
    Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(24): Error:
    C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(27): Error: C style
    cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(38): Error: C style cast illegal,
    use cast(float)n\n/tmp/tmpf3gr96ob.d(41): Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(52):
    Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(55): Error:
    C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(65): Error: C style
    cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(68): Error: C style cast illegal,
    use cast(float)n\n/tmp/tmpf3gr96ob.d(78): Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(81):
    Error: C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(91): Error:
    C style cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(94): Error: C style
    cast illegal, use cast(float)n\n/tmp/tmpf3gr96ob.d(104): Error: C style cast illegal,
    use cast(float)n\n/tmp/tmpf3gr96ob.d(106): Error: no identifier for declarator
    int\n/tmp/tmpf3gr96ob.d(106): Error: expression expected, not \''unittest\''\n/tmp/tmpf3gr96ob.d(107):
    Error: found \''{\'' when expecting \'';\'' following for condition\n/tmp/tmpf3gr96ob.d(108):
    Error: expression expected, not \''alias\''\n/tmp/tmpf3gr96ob.d(108): Error: found
    \''candidate\'' when expecting \'')\''\n/tmp/tmpf3gr96ob.d(108): Error: found
    \''=\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3gr96ob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    float m = (float)(r + l) / 2;\n    return m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n    double l = std.math.min(l);\n    double r = std.math.max(l);\n \
    \   double m = (double)(r + l) / 2;\n    return m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(float[] l) \n{\n    float l =\
    \ std.math.min(l);\n    float r = std.math.max(l);\n    float m = (float)(r +\
    \ l) / 2;\n    return m;\n}\n/*\nReturn median of elements in the list l.\n  \
    \          \n*/\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk9hp6fi4.d(10): Error: C style cast illegal, use cast(float)(r
    + l)\n/tmp/tmpk9hp6fi4.d(21): Error: C style cast illegal, use cast(double)(r
    + l)\n/tmp/tmpk9hp6fi4.d(32): Error: C style cast illegal, use cast(float)(r +
    l)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9hp6fi4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float m = 0;\n    long n = l.length;\n\
    \    long mid = n / 2;\n    long m1 = mid;\n    long m2 = mid + 1;\n    long m3\
    \ = mid + 2;\n    long m4 = mid + 3;\n    long m5 = mid + 4;\n    long m6 = mid\
    \ + 5;\n    long m7 = mid + 6;\n    long m8 = mid + 7;\n    long m9 = mid + 8;\n\
    \    long m10 = mid + 9;\n    long m11 = mid + 10;\n    long m12 = mid + 11;\n\
    \    long m13 = mid + 12;\n    long m14 = mid + 13;\n    long m15 = mid + 14;\n\
    \    long m16 = mid + 15;\n    long m17 = mid + 16;\n    long m18 = mid + 17;\n\
    \    long m19 = mid + 18;\n    long m20 = mid + 19;\n    long m21 = mid + 20;\n\
    \    long m22 = mid + 21;\n    long m23 = mid + 22;\n    long m24 = mid + 23;\n\
    \    long m25 = mid + 24;\n    long m26 = mid + 25;\n    long m27 = mid + 26;\n\
    \    long m28 = mid + 27;\n    long m29 = mid + 28;\n    long m30 = mid + 29;\n\
    \    long m31 = mid + 30;\n    long m32 = mid + 31;\n    long m33 = mid + 32;\n\
    \    long m34 = mid + 33;\n    long m35 = mid + 34;\n    long m36 = mid + 35;\n\
    \    long m37 = mid + 36;\n    long m38 = mid + 37;\n    long m39 = mid + 38;\n\
    \    long m40 = mid + 39;\n    long m41 = mid + 40;\n    long m42 = mid + 41;\n\
    \    long m43 = mid + 42;\n    long m44 = mid + 43;\n    long m45 = mid + 44;\n\
    \    long m46 = mid + 45;\n    long m47 = mid + 46;\n    long m48 = mid + 47;\n\
    \    long m49 = mid + 48;\n    long m50 = mid + 49;\n    long m51 = mid + 50;\n\
    \    long m52 = mid + 51;\n    long m53 = mid + 52;\n    long m54 = mid + 53;\n\
    \    long m55 = mid + 54;\n    long m56 = mid + 55;\n\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpibw48deq.d(68): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpibw48deq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\t\n\tlong mid = l + (r - l) / 2;\n\t\n\treturn mid;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hhvdso7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong left\
    \ = l[mid];\n\tlong right = l[mid+1];\n\t\n\tif (left > right) \n\t\treturn left;\n\
    \telse\n\t\treturn right;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe64ktqah.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble med = std.math.median(l);\n\treturn med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat med = std.math.median(l);\n\treturn med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph86gg2hc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tlong\
    \ l = std.math.min(l);\n\tlong r = std.math.max(l);\n\t\n\tif(l == r) return mid;\n\
    \t\n\tif(l > r) return median(std.array.append(l, std.array.range(l, r)));\n\t\
    \n\treturn median(std.array.append(r, std.array.range(l, r)));\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpil1jlfnr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tlong med\
    \ = std.math.min(l[mid], l[mid-1]);\n\t\n\tfor (int i = mid; i < l.length; i++)\
    \ \n\t{\n\t\tmed = std.math.min(med, l[i]);\n\t}\n\treturn med;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp2gfrnh_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double[] l) \n{\n    double med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(float[] l) \n{\n    float med = std.math.median(l);\n  \
    \  return med;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o4ydq6f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math._median(l);\n\
    \treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpax287pqo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] < m) m =\
    \ l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n      \
    \      \n*/\nfloat median(float l[]) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] < m) m =\
    \ l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n      \
    \      \n*/\ndouble median(double[] l) \n{\n\tint n = l.length;\n\tif (n < 2)\
    \ return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i] <\
    \ m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(long l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(double l[]) \n{\n\tint n = l.length;\n\tif (n\
    \ < 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(float l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tfloat m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(long l[]) \n{\n\tint n = l.length;\n\tif (n <\
    \ 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\ndouble median(double l[]) \n{\n\tint n = l.length;\n\tif (n\
    \ < 2) return 0;\n\tdouble m = l[0];\n\tfor (int i = 1; i < n; ++i)\n\t\tif (l[i]\
    \ < m) m = l[i];\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat \nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2voas1yc.d(111): Error: no identifier for declarator float\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2voas1yc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t\tif\
    \ (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy03d8w2f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat med = (float)n;\n\tfor (int i = 0; i < n;\
    \ i++) {\n\t\tint j = i + 1;\n\t\twhile (j < n) {\n\t\t\tif (l[j] < l[i]) {\n\t\
    \t\t\tfloat tmp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = tmp;\n\t\t\t}\n\t\
    \t\tj++;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i] < med) med\
    \ = l[i];\n\t}\n\treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmc7ijcxy.d(10): Error: C style cast illegal, use cast(float)n\n/tmp/tmpmc7ijcxy.d(11):
    Error: C style cast illegal, use cast(float)n\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpmc7ijcxy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = std.math.median(l);\n\
    \treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps7j8d5x8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tif (std.math.abs(mid - med) < std.math.abs(mid\
    \ - l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((l[std.math.floor((\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7208qz57.d(12): Error: expression expected, not \''unittest\''\n/tmp/tmp7208qz57.d(11):
    Error: found \''{\'' when expecting \'')\''\n/tmp/tmp7208qz57.d(14): Error: found
    \''alias\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(14): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmp7208qz57.d(16): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmp7208qz57.d(17): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(18):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(19): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(20): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmp7208qz57.d(21): Error: expression expected, not \''}\''\n/tmp/tmp7208qz57.d(22):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(22): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmp7208qz57.d(22): Error: expression
    expected, not \''}\''\n/tmp/tmp7208qz57.d(22): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmp7208qz57.d(22): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp7208qz57.d(22):
    Error: found \''EOF\'' when expecting \'']\''\n/tmp/tmp7208qz57.d(11): Error:
    found \''EOF\'' when expecting \'')\''\n/tmp/tmp7208qz57.d(22): Error: found \''EOF\''
    when expecting \'',\''\n/tmp/tmp7208qz57.d(22): Error: found \''EOF\'' when expecting
    \'')\''\n/tmp/tmp7208qz57.d(22): Error: found \''EOF\'' when expecting \'']\''\n/tmp/tmp7208qz57.d(11):
    Error: found \''EOF\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp7208qz57.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.abs(l[mid]);\n\tfloat leftVal = std.math.abs(l[mid-1]);\n\t\
    float rightVal = std.math.abs(l[mid+1]);\n\tfloat medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l) \n{\n\tdouble mid = std.math.mid(l);\n\t\
    double midVal = std.math.abs(l[mid]);\n\tdouble leftVal = std.math.abs(l[mid-1]);\n\
    \tdouble rightVal = std.math.abs(l[mid+1]);\n\tdouble medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nlong median(long[] l, int len) \n{\n\tlong mid = std.math.mid(l, len);\n\
    \tlong midVal = std.math.abs(l[mid]);\n\tlong leftVal = std.math.abs(l[mid-1]);\n\
    \tlong rightVal = std.math.abs(l[mid+1]);\n\tlong medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l, int len) \n{\n\tdouble mid = std.math.mid(l,\
    \ len);\n\tdouble midVal = std.math.abs(l[mid]);\n\tdouble leftVal = std.math.abs(l[mid-1]);\n\
    \tdouble rightVal = std.math.abs(l[mid+1]);\n\tdouble medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\nlong median(long[] l, int len, int stride) \n{\n\tlong mid = std.math.mid(l,\
    \ len, stride);\n\tlong midVal = std.math.abs(l[mid]);\n\tlong leftVal = std.math.abs(l[mid-1]);\n\
    \tlong rightVal = std.math.abs(l[mid+1]);\n\tlong medianVal = (leftVal + rightVal)/2;\n\
    \treturn medianVal;\n}\n/*\nReturn median of elements in the list l.\n       \
    \     \n*/\ndouble median(double[] l, int len, int stride) \n{\n\tdouble mid\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9fo4vt5z.d(74): Error: semicolon expected, not \''unittest\''\n/tmp/tmp9fo4vt5z.d(74):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp9fo4vt5z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33j821ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ low = 0;\n\tint high = l.length - 1;\n\tfloat midVal = std.math.mid(l);\n\t\
    while (low < high) {\n\t\tint midI = std.math.mid(l, low, high);\n\t\tif (midI\
    \ > midVal) {\n\t\t\thigh = midI - 1;\n\t\t} else {\n\t\t\tlow = midI + 1;\n\t\
    \t}\n\t}\n\treturn mid;\n}\nunittest\n{\n    alias candidate = median;\n\n   \
    \ assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc27b5lku.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float l[]) \n{\n\t\
    long mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i = mid; i >\
    \ 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t\
    }\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nfloat median(double l[]) \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\
    \tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\
    \t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(long l[]) \n{\n\tlong mid = l.length / 2;\n\
    \tfloat m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(float l[])\
    \ \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i =\
    \ mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm =\
    \ l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(double l[]) \n{\n\tlong mid = l.length / 2;\n\t\
    float m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] <\
    \ m)\n\t\t\tbreak;\n\t\telse\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\nfloat median(long l[])\
    \ \n{\n\tlong mid = l.length / 2;\n\tfloat m = (float)l[mid];\n\tfor (int i =\
    \ mid; i > 0; i--)\n\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4l04trd3.d(9): Error: C style cast illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(26):
    Error: C style cast illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(43): Error:
    C style cast illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(60): Error: C
    style cast illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(77): Error: C style
    cast illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(94): Error: C style cast
    illegal, use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(111): Error: C style cast illegal,
    use cast(float)l[mid]\n/tmp/tmp4l04trd3.d(114): Error: found \''unittest\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4l04trd3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    double median(double[] l) \n{\n\tdouble m = std.math.median(l);\n\treturn m;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(float[]\
    \ l) \n{\n\tfloat m = std.math.median(l);\n\treturn m;\n}\n/*\nReturn median of\
    \ elements in the list l.\n            \n*/\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpebi0of_u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid - 1, mid);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcne4ice3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n <= 1) return\
    \ l[0];\n\tfloat m = (float) std.math.median(l);\n\tfloat s = 0.0;\n\tfor (int\
    \ i = 0; i < n; i++)\n\t\ts += l[i];\n\ts = s / n;\n\tfor (int i = 0; i < n; i++)\n\
    \t\tl[i] = l[i] - m;\n\tfloat m2 = (float) std.math.median(l);\n\tfor (int i =\
    \ 0; i < n; i++)\n\t\tl[i] = l[i] + m2;\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6qd2qe4u.d(10): Error: C style cast illegal, use cast(float)std.math.median(l)\n/tmp/tmp6qd2qe4u.d(17):
    Error: C style cast illegal, use cast(float)std.math.median(l)\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6qd2qe4u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    long mid = std.math.mid(l,r);\n    return mid;\n}\n\
    </code>\n<|/ a tags=c++,median,algorithm |>\n<| a dscore=1 |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp7pt3vl5.d(13): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp7pt3vl5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ifgfat0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\
    \treturn std.math.mid(l, mid - 1);\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39w69fjt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tfloat m = 0.0;\n\
    \t\n\tfor (int i = 0; i < n; i++) {\n\t\tm += l[i];\n\t}\n\t\n\tm /= n;\n\t\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk58k_t3v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tif (l[i] <\
    \ m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbhkpaks0.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhkpaks0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med;\n\tlong i;\n\t\n\tmed =\
    \ std.math.median(l);\n\t\n\tfor (i = 0; i < l.length; ++i)\n\t\tif (l[i] < med)\n\
    \t\t\tmed = l[i];\n\t\n\treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rptp05w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double[] l) \n{\n    double med = std.math.median(l);\n\
    \    return med;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\nfloat median(float[] l) \n{\n    float med = std.math.median(l);\n  \
    \  return med;\n}\n/*\nReturn median of elements in the list l.\n            \n\
    */\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o4ydq6f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-std.math.mid(l)) > std.math.abs(mid-std.math.mid(l-1)))\n\t\
    \treturn std.math.mid(l);\n\telse\n\t\treturn std.math.mid(l-1);\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_193sjj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tlong\
    \ lower = std.math.min(l);\n\tlong upper = std.math.max(l);\n\t\n\tif (lower ==\
    \ upper) return lower;\n\t\n\tif (lower == mid) return std.math.max(lower, upper);\n\
    \t\n\tif (upper == mid) return std.math.min(lower, upper);\n\t\n\treturn (std.math.max(lower,\
    \ mid) + std.math.min(mid, upper)) / 2;\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi89fq5j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = 0.0;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] < mid)\n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdomujja.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length / 2;\n    float\
    \ m = (float)l[mid];\n    for(int i = mid; i < l.length; i++) \n    {\n      \
    \  if(l[i] < m) \n        {\n            m = l[i];\n        }\n    }\n    return\
    \ m;\n}\n</code>\n<|/ a tags=c++,median,arrays |>\n<| c |>\nThis code doesn't\
    \ work if there are two equal numbers in the list. For example, if the list contains\
    \ [1,2,2,3,5,5,5,6,7,8,9], the median is 2.5, but your code returns 3.\n<|/ c\
    \ |>\n<| c |>\nYes, I noticed that and fixed it. I also added a second solution\
    \ that doesn't require a for loop and is probably faster.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include\
    \ <numeric>\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz1ruxr2x.d(9): Error: C style cast illegal, use cast(float)l[mid]\n/tmp/tmpz1ruxr2x.d(19):
    Error: Declaration expected, not \''<\''\n/tmp/tmpz1ruxr2x.d(22): Error: unterminated
    character constant\n/tmp/tmpz1ruxr2x.d(25): Error: unterminated character constant\n/tmp/tmpz1ruxr2x.d(37):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpz1ruxr2x.d(38): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpz1ruxr2x.d(39): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpz1ruxr2x.d(40): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpz1ruxr2x.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmpz1ruxr2x.d(42):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1ruxr2x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfor (int i = 0; i\
    \ < l.length; i++) \n\t{\n\t\tm += l[i];\n\t}\n\tm /= l.length;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppvdhto2s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m1\
    \ = l[mid];\n\tfloat m2 = l[mid-1];\n\treturn std.fabs(m1-m2)/2;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_yq8dbo4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math._median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5cliybn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid + 1, l.length - mid);\n\t}\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdqmzmyj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math._median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqwu01de.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tlong left = std.math.mid(l, 0, mid);\n\tlong right = std.math.mid(l,\
    \ mid, l - mid);\n\t\n\tif (left == right)\n\t\treturn left;\n\t\n\tif (left <\
    \ right)\n\t\treturn left;\n\telse\n\t\treturn right;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp967tadg8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat sum = 0;\n\tfor (int i = 0; i < n; ++i)\n\
    \t\tsum += l[i];\n\tfloat x = sum / m;\n\tfloat y = 0;\n\tfor (int i = 0; i <\
    \ n; ++i)\n\t\ty += l[i];\n\ty /= m;\n\treturn x < y ? x : y;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl6zno85s.d(10): Error: C style cast illegal, use cast(float)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl6zno85s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33j821ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = (float)mid;\n    float n = std.math.size(l);\n    float m = std.math.min(m,\
    \ n);\n    float n = std.math.max(m, n);\n    return m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvvn4pl66.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvvn4pl66.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = l.length;\n\
    \tfor (int i = 0; i < n; i++) {\n\t\tm += l[i];\n\t}\n\tm /= n;\n\treturn m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4rllnoqq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m\
    \ = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i] < m)\n\t\
    \t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\ndouble median(double[] l) \n{\n\tdouble mid = l.length/2;\n\
    \tdouble m = (double)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(float[] l) \n{\n\tfloat mid = l.length/2;\n\
    \tfloat m = (float)l[mid];\n\tfor (int i = mid; i > 0; i--)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t\tm = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5mxjx7os.d(9): Error: C style cast illegal, use cast(float)l[mid]\n/tmp/tmp5mxjx7os.d(24):
    Error: C style cast illegal, use cast(double)l[mid]\n/tmp/tmp5mxjx7os.d(39): Error:
    C style cast illegal, use cast(float)l[mid]\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5mxjx7os.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ midVal = std.math.abs(l[mid]);\n\tfloat leftMedian = median(std.array.tail(l,\
    \ 0, mid));\n\tfloat rightMedian = median(std.array.tail(l, mid+1, l.length-1));\n\
    \treturn (midVal + leftMedian + rightMedian) / 3.0;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7iuchnil.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ median = std.math.median(l);\n\t\n\tif (l.length%2 == 1)\n\t\treturn median;\n\
    \t\n\tfloat leftMedian = median(l);\n\tfloat rightMedian = median(std.array.to!long(l).skip(mid));\n\
    \t\n\treturn leftMedian + (rightMedian - leftMedian) / 2;\n}\nunittest\n{\n  \
    \  alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8moox1of.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.mid(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28rv1q69.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ leftMedian = std.math.median(l);\n\tfloat rightMedian = std.math.median(l.slice(mid));\n\
    \treturn (leftMedian + rightMedian) / 2;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp47moolb8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = length(l);\n\tif (l % 2 ==\
    \ 0)\n\t\treturn std.math.median(l);\n\telse\n\t\treturn std.math.midpoint(l);\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lq0bitp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\tlong i;\n\t\n\tmedian\
    \ = std.math.median(l);\n\t\n\tfor (i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < median) \n\t\t{\n\t\t\tmedian = l[i];\n\t\t}\n\t}\n\t\n\treturn median;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3vma5bug.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkoo9gof3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math::median(l);\n\
    \treturn med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbceoy72t.d(8): Error: semicolon expected, not \'':\''\n/tmp/tmpbceoy72t.d(8):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpbceoy72t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = l.length;\n\
    \tfloat sum = 0;\n\tfloat count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tsum\
    \ += l[i];\n\t\tcount++;\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i] >\
    \ m) {\n\t\t\tm = l[i];\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (l[i]\
    \ < sum / count) {\n\t\t\treturn l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmkfx93r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\tfor\
    \ (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\t}\n\
    \tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(long l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(float l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(double l[]) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\
    \tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn = n + 1;\n\
    \t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n\
    \            \n*/\nfloat median(long long l[]) \n{\n\tfloat m = 0;\n\tfloat n\
    \ = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\t\tn =\
    \ n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements in\
    \ the list l.\n            \n*/\nfloat median(ulong l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(short l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(byte l[]) \n{\n\tfloat m = 0;\n\
    \tfloat n = 1;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tm = m + l[i];\n\
    \t\tn = n + 1;\n\t}\n\tm = m / n;\n\treturn \nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqlodk7my.d(70): Error: found \''long\'' when expecting \'')\''\n/tmp/tmpqlodk7my.d(70):
    Error: semicolon expected following function declaration\n/tmp/tmpqlodk7my.d(70):
    Error: no identifier for declarator l[]\n/tmp/tmpqlodk7my.d(70): Error: Declaration
    expected, not \'')\''\n/tmp/tmpqlodk7my.d(74): Error: Declaration expected, not
    \''for\''\n/tmp/tmpqlodk7my.d(74): Error: no identifier for declarator i\n/tmp/tmpqlodk7my.d(74):
    Error: Declaration expected, not \''<\''\n/tmp/tmpqlodk7my.d(74): Error: no identifier
    for declarator i\n/tmp/tmpqlodk7my.d(74): Error: Declaration expected, not \''++\''\n/tmp/tmpqlodk7my.d(77):
    Error: no identifier for declarator n\n/tmp/tmpqlodk7my.d(77): Error: Declaration
    expected, not \''=\''\n/tmp/tmpqlodk7my.d(78): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlodk7my.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat m2 = (float)std.math.mid(l);\n\tfloat m3 = std.math.mid(l);\n\
    \tfloat m4 = (float)std.math.mid(l);\n\tfloat m5 = (float)std.math.mid(l);\n\t\
    float m6 = (float)std.math.mid(l);\n\tfloat m7 = (float)std.math.mid(l);\n\tfloat\
    \ m8 = (float)std.math.mid(l);\n\tfloat m9 = (float)std.math.mid(l);\n\tfloat\
    \ m10 = (float)std.math.mid(l);\n\tfloat m11 = (float)std.math.mid(l);\n\tfloat\
    \ m12 = (float)std.math.mid(l);\n\tfloat m13 = (float)std.math.mid(l);\n\tfloat\
    \ m14 = (float)std.math.mid(l);\n\tfloat m15 = (float)std.math.mid(l);\n\tfloat\
    \ m16 = (float)std.math.mid(l);\n\tfloat m17 = (float)std.math.mid(l);\n\tfloat\
    \ m18 = (float)std.math.mid(l);\n\tfloat m19 = (float)std.math.mid(l);\n\tfloat\
    \ m20 = (float)std.math.mid(l);\n\tfloat m21 = (float)std.math.mid(l);\n\tfloat\
    \ m22 = (float)std.math.mid(l);\n\tfloat m23 = (float)std.math.mid(l);\n\tfloat\
    \ m24 = (float)std.math.mid(l);\n\tfloat m25 = (float)std.math.mid(l);\n\tfloat\
    \ m26 = (float)std.math.mid(l);\n\tfloat m27 = (float)std.math.mid(l);\n\tfloat\
    \ m28 = (float)std.math.mid(l);\n\tfloat m29 = (float)std.math.mid(l);\n\tfloat\
    \ m30 = (float)std.math.mid(l);\n\tfloat m31 = (float)std.math.mid(l);\n\tfloat\
    \ m32 = (float)std.math.mid(l);\n\tfloat m33 = (float)std.math.mid(l);\n\tfloat\
    \ m34 = (float)std.math.mid(l);\n\tfloat m35 = (float)std.math.mid(l);\n\tfloat\
    \ m36 = (float)std.math.mid(l);\n\tfloat m37 = (float)std.math.mid(l);\n\tfloat\
    \ m38 = (float)std.math.mid(l);\n\tfloat m39 = (float)std.math.mid(l);\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp87y6umvj.d(9): Error: C style cast illegal, use cast(float)mid\n/tmp/tmp87y6umvj.d(10):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(12):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(13):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(14):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(15):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(16):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(17):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(18):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(19):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(20):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(21):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(22):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(23):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(24):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(25):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(26):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(27):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(28):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(29):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmp87y6umvj.d(30):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp87y6umvj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\tmid++;\n\t}\n\treturn std.math.min(l[mid], l[mid-1]);\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppevrhtu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tint n = l.length;\n\
    \t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tm = std.math::max(m, l[i]);\n\t}\n\t\
    \n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiv5r9_2k.d(13): Error: found \'':\'' when expecting \'';\''
    following statement\n/tmp/tmpiv5r9_2k.d(13): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiv5r9_2k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; ++i)\n\t\tm =\
    \ std.math.max(m, l[i]);\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxlj7igjk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ n = l.length;\n\tif (n < 2) return mid;\n\tfloat m = (float) mid;\n\tfor (int\
    \ i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n\tdouble mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2) return\
    \ mid;\n\tdouble m = (double) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (l[i]\
    \ < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(float l[]) \n{\n\tfloat mid = std.math.mid(l);\n\
    \tint n = l.length;\n\tif (n < 2) return mid;\n\tfloat m = (float) mid;\n\tfor\
    \ (int i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\ndouble median(double\
    \ l[]) \n{\n\tdouble mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2)\
    \ return mid;\n\tdouble m = (double) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\
    \tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(long l[]) \n{\n\tfloat mid =\
    \ std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2) return mid;\n\tfloat m =\
    \ (float) mid;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\
    \t}\n\treturn m;\n}\n/*\nReturn median of elements in the list l.\n          \
    \  \n*/\ndouble median(double l[]) \n{\n\tdouble mid = std.math.mid(l);\n\tint\
    \ n = l.length;\n\tif (n < 2) return mid;\n\tdouble m = (double) mid;\n\tfor (int\
    \ i = 0; i < n; ++i) {\n\t\tif (l[i] < m) m = l[i];\n\t}\n\treturn m;\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l[]) \n{\n\tfloat mid = std.math.mid(l);\n\tint n = l.length;\n\tif (n < 2)\
    \ return mid;\n\tfloat m = (float) mid;\n\tfor (int i = 0; i < n; ++i) {\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp23nar3es.d(11): Error: C style cast illegal, use cast(float)mid\n/tmp/tmp23nar3es.d(26):
    Error: C style cast illegal, use cast(double)mid\n/tmp/tmp23nar3es.d(41): Error:
    C style cast illegal, use cast(float)mid\n/tmp/tmp23nar3es.d(56): Error: C style
    cast illegal, use cast(double)mid\n/tmp/tmp23nar3es.d(71): Error: C style cast
    illegal, use cast(float)mid\n/tmp/tmp23nar3es.d(86): Error: C style cast illegal,
    use cast(double)mid\n/tmp/tmp23nar3es.d(101): Error: C style cast illegal, use
    cast(float)mid\n/tmp/tmp23nar3es.d(103): Error: found \''unittest\'' instead of
    statement\n/tmp/tmp23nar3es.d(113): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp23nar3es.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ med = std.math.median(l);\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\
    \tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\t\n\treturn med;\n}\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzes9uyxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-l[0]) < std.math.abs(mid-l[1])) {\n\t\treturn l[0];\n\t} else\
    \ {\n\t\treturn l[1];\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu6afa462.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o3b2xne.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n % 2 ==\
    \ 1) return std.math::median(l);\n\telse return (std.math::median(l) + std.math::median(std.array::skip(l,\
    \ n - 1))) / 2;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkovv0y7c.d(9): Error: found \'':\'' when expecting \'';\'' following
    return statement\n/tmp/tmpkovv0y7c.d(9): Error: found \'':\'' instead of statement\n/tmp/tmpkovv0y7c.d(10):
    Error: found \''else\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpkovv0y7c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 1) \n\t{\n\t\twhile (l > 1) \n\t\t{\n\t\t\tmid\
    \ = l / 2;\n\t\t\tif (std.math.mod(mid, 2) == 0) \n\t\t\t{\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t\tl = mid;\n\t\t}\n\t}\n\treturn (float) mid;\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzadz4zlv.d(22): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzadz4zlv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = std.math.median(l);\n    return std.math.min(m, mid);\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=c++,median,algorithm,sorting |>\n<code>\n#include\
    \ <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfmbv1v__.d(12): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfmbv1v__.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tif\
    \ (std.math.abs(mid-l[0]) < std.math.abs(mid-l[1])) {\n\t\treturn l[0];\n\t} else\
    \ {\n\t\treturn l[1];\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu6afa462.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\t\n\treturn m;\n}\nunittest\n{\n\
    \    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) ==\
    \ 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj8lv3oqi.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj8lv3oqi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat w = (float)n;\n\tfor (int i = 0; i < n; i++)\
    \ {\n\t\tint j = i;\n\t\twhile (j > 0 && l[j-1] > l[j]) j--;\n\t\tif (j == 0)\
    \ return 0;\n\t\tfloat x = l[j];\n\t\tfor (int k = j; k < n; k++) {\n\t\t\tif\
    \ (l[k] < x) x = l[k];\n\t\t}\n\t\tw = w / m;\n\t\tm = m;\n\t\tl[j] = x;\n\t}\n\
    \treturn l;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpau2ea9zt.d(10): Error: C style cast illegal, use cast(float)n\n/tmp/tmpau2ea9zt.d(11):
    Error: C style cast illegal, use cast(float)n\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpau2ea9zt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33j821ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ifgfat0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkoo9gof3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat med\
    \ = (float)std.math.median(l);\n\tfloat med2 = (float)std.math.median(l.subarray(0,\
    \ mid));\n\tfloat med3 = (float)std.math.median(l.subarray(mid));\n\treturn med\
    \ + med2 + med3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphxdlzagy.d(9): Error: C style cast illegal, use cast(float)std.math.median(l)\n/tmp/tmphxdlzagy.d(10):
    Error: C style cast illegal, use cast(float)std.math.median(l.subarray(0, mid))\n/tmp/tmphxdlzagy.d(11):
    Error: C style cast illegal, use cast(float)std.math.median(l.subarray(mid))\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphxdlzagy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ med = (float)mid;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] >\
    \ mid)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median\
    \ of elements in the list l.\n            \n*/\nfloat median(float[] l) \n{\n\t\
    float med = (float)std.math.mid(l);\n\tfor (int i = 0; i < l.length; i++)\n\t\
    {\n\t\tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn med;\n\
    }\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat median(double[]\
    \ l) \n{\n\tdouble med = (double)std.math.mid(l);\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tif (l[i] > med)\n\t\t{\n\t\t\tmed = l[i];\n\t\t}\n\t}\n\treturn\
    \ med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat\
    \ median(std.random[][] l) \n{\n\tfloat med = (float)std.math.mid(l);\n\tfor (int\
    \ i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\tmed = l[i][0];\n\
    \t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median of elements in the list l.\n \
    \           \n*/\nfloat median(std.random[][] l, int n) \n{\n\tfloat med = (float)std.math.mid(l,\
    \ n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\
    \tmed = l[i][0];\n\t\t}\n\t}\n\treturn med;\n}\n/*\nReturn median of elements\
    \ in the list l.\n            \n*/\nfloat median(std.random[][] l, int n, int\
    \ m) \n{\n\tfloat med = (float)std.math.mid(l, n);\n\tfor (int i = 0; i < n; i++)\n\
    \t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\tmed = l[i][0];\n\t\t}\n\t}\n\treturn\
    \ med;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\nfloat\
    \ median(std.random[][] l, int n, int m, int k) \n{\n\tfloat med = (float)std.math.mid(l,\
    \ n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (l[i][0] > med)\n\t\t{\n\t\t\
    \tmed = l[i][0];\n\t\t}\n\t}\n\treturn med;\n}\n\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvjy4x0wd.d(9): Error: C style cast illegal, use cast(float)mid\n/tmp/tmpvjy4x0wd.d(25):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmpvjy4x0wd.d(41):
    Error: C style cast illegal, use cast(double)std.math.mid(l)\n/tmp/tmpvjy4x0wd.d(57):
    Error: C style cast illegal, use cast(float)std.math.mid(l)\n/tmp/tmpvjy4x0wd.d(73):
    Error: C style cast illegal, use cast(float)std.math.mid(l, n)\n/tmp/tmpvjy4x0wd.d(89):
    Error: C style cast illegal, use cast(float)std.math.mid(l, n)\n/tmp/tmpvjy4x0wd.d(105):
    Error: C style cast illegal, use cast(float)std.math.mid(l, n)\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvjy4x0wd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++) \n\t\tif\
    \ (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy03d8w2f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfloat n = std.math.size(l);\n\t\n\tfor (int i = 0; i < n;\
    \ i++)\n\t{\n\t\tif (l[i] < m)\n\t\t\tm = l[i];\n\t}\n\t\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0zxj839s.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0zxj839s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tif (l.length%2\
    \ == 1)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid, l.length);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2ie9tny.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\treturn std.math.mid(l,\
    \ mid + 1, l.length - mid);\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o3b2xne.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = 0; i < n; i++)\n\t\tif (l[i]\
    \ != m) \n\t\t\treturn m;\n\treturn m;\n}\n/*\nReturn median of elements in the\
    \ list l.\n            \n*/\nfloat median(long[] l, int start, int end) \n{\n\t\
    int n = end - start;\n\tif (n < 2) return 0;\n\tfloat m = std.math.median(l);\n\
    \tfor (int i = start; i < end; i++)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l) \n{\n\tif (l < 2) return 0;\n\tfloat m = std.math.median(l);\n\
    \tfor (int i = 0; i < l.length; i++)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l, int start, int end) \n{\n\tif (end - start < 2) return 0;\n\
    \tfloat m = std.math.median(l);\n\tfor (int i = start; i < end; i++)\n\t\tif (l[i]\
    \ != m) \n\t\t\treturn m;\n\treturn m;\n}\n/*\nReturn median of elements in the\
    \ list l.\n            \n*/\nfloat median(long l, int start, int end, int step)\
    \ \n{\n\tif (end - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor\
    \ (int i = start; i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\t\
    return m;\n}\n/*\nReturn median of elements in the list l.\n            \n*/\n\
    float median(long l, int start, int end, int step, float delta) \n{\n\tif (end\
    \ - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = start;\
    \ i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l, int start, int end, int step, float delta, float epsilon) \n{\n\tif (end\
    \ - start < 2) return 0;\n\tfloat m = std.math.median(l);\n\tfor (int i = start;\
    \ i < end; i += step)\n\t\tif (l[i] != m) \n\t\t\treturn m;\n\treturn m;\n}\n\
    /*\nReturn median of elements in the list l.\n            \n*/\nfloat median(long\
    \ l, int start, int end, int step, float delta, float epsilon, float delta2) \n\
    {\n\tif (end - start < 2) return 0;\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm1rl56jo.d(102): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1rl56jo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ midIndex = 0;\n\tfloat median = 0;\n\t\n\tfor(int i = 0; i < l.length; i++)\n\
    \t{\n\t\tif(l[i] > mid)\n\t\t{\n\t\t\tmidIndex = i;\n\t\t\tmid = l[i];\n\t\t}\n\
    \t}\n\t\n\tmedian = mid;\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3g6755yt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat m1\
    \ = l[mid];\n\tfloat m2 = l[mid-1];\n\treturn std.math._median(m1, m2);\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmodonaaw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.max(l);\n\tlong\
    \ r = std.math.min(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33j821ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tif (l.length\
    \ % 2 == 1) \n\t{\n\t\treturn std.math.mid(l, mid);\n\t}\n\telse \n\t{\n\t\treturn\
    \ std.math.mid(l, mid - 1, mid);\n\t}\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcne4ice3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = 0;\n\tfor (int i = 0; i < mid; i++)\n\t\tm += l[i];\n\tfor (int i = mid;\
    \ i < l.length; i++)\n\t\tm += l[i];\n\treturn m / mid;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdtyi8tes.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 2) return\
    \ 0;\n\tfloat m = (float)n;\n\tfloat temp;\n\tfor (int i = 0; i < n; i++) {\n\t\
    \tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp =\
    \ l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i]\
    \ > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1;\
    \ j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i]\
    \ = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n;\
    \ i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\
    \t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\
    \t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\
    \t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j]\
    \ = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int\
    \ j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\
    \t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i =\
    \ 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j])\
    \ {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t\
    }\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n;\
    \ j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\
    \t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\
    \tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp =\
    \ l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (l[i]\
    \ > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i] = l[j];\n\t\t\t\tl[j] = temp;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1;\
    \ j < n; j++) {\n\t\t\tif (l[i] > l[j]) {\n\t\t\t\ttemp = l[i];\n\t\t\t\tl[i]\
    \ = l[j];\n\t\t\t\tl[j] = temp\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpctdmfwol.d(10): Error: C style cast illegal, use cast(float)n\n/tmp/tmpctdmfwol.d(108):
    Error: found \''unittest\'' when expecting \'';\'' following statement\n/tmp/tmpctdmfwol.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpctdmfwol.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpctdmfwol.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpctdmfwol.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctdmfwol.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = (float)l.length/2;\n\tfloat\
    \ sum = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t\tsum += l[i];\n\treturn sum/m;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3h9rn07.d(8): Error: C style cast illegal, use cast(float)l.length\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3h9rn07.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ < m) \n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf5lxicc8.d(9): Error: C style cast illegal, use cast(float)l[mid]\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5lxicc8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tint n = l.length;\n\tif (n < 1) return\
    \ 0;\n\tsort(l);\n\treturn l[n/2];\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoan5v3z0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = std.math.mid(l);\n  \
    \  float m = std.math.median(l);\n    return std.math.max(m, mid);\n}\n/*\nReturn\
    \ median of elements in the list l.\n            \n*/\ndouble median(double[]\
    \ l) \n{\n    double mid = std.math.mid(l);\n    double m = std.math.median(l);\n\
    \    return std.math.max(m, mid);\n}\n/*\nReturn median of elements in the list\
    \ l.\n            \n*/\nfloat median(float[] l) \n{\n    float mid = std.math.mid(l);\n\
    \    float m = std.math.median(l);\n    return std.math.max(m, mid);\n}\n/*\n\
    Return median of elements in the list l.\n            \n*/\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpofvgseee.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math::median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpugl_5umu.d(8): Error: semicolon expected, not \'':\''\n/tmp/tmpugl_5umu.d(8):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpugl_5umu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length/2;\n\tfloat midVal\
    \ = std.math.median(l);\n\tfloat leftMedian = median(l.subarray(0, mid));\n\t\
    float rightMedian = median(l.subarray(mid, l.length));\n\treturn (midVal + leftMedian\
    \ + rightMedian)/3;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvy8c6920.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ifgfat0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; ++i)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t\tm = l[i];\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp333ftf3m.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp333ftf3m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong med = std.math.median(l);\n\t\
    return (float)med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3chlrz_.d(9): Error: C style cast illegal, use cast(float)med\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chlrz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    float m = std.math.median(l);\n\
    \    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp434abzy7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = std.math.median(l);\n\t\
    return m;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cj4zjeg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = l.length / 2;\n\tfloat\
    \ m = (float)l[mid];\n\tfor (int i = mid; i < l.length; i++) \n\t{\n\t\tm = (float)l[i]\
    \ + ((float)m < (float)l[mid]) ? m : (float)l[i];\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0syuzag.d(9): Error: C style cast illegal, use cast(float)l[mid]\n/tmp/tmp_0syuzag.d(12):
    Error: C style cast illegal, use cast(float)l[i]\n/tmp/tmp_0syuzag.d(12): Error:
    C style cast illegal, use cast(float)m\n/tmp/tmp_0syuzag.d(12): Error: C style
    cast illegal, use cast(float)l[mid]\n/tmp/tmp_0syuzag.d(12): Error: C style cast
    illegal, use cast(float)l[i]\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0syuzag.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\treturn\
    \ std.math.median(l);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz6tsikl5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat m = 0;\n\tfloat n = 1;\n\tfloat\
    \ temp;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\ttemp = l[i];\n\t\tm =\
    \ temp < m ? temp : m;\n\t\tn = temp > n ? temp : n;\n\t}\n\treturn (m + (n -\
    \ m) / 2);\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gyy75a5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long mid = l.length/2;\n    float\
    \ median;\n    \n    if (l.length % 2 == 0)\n    {\n        median = std.math.median(l[mid]);\n\
    \    }\n    else\n    {\n        median = std.math.median(l[mid-1], l[mid]);\n\
    \    }\n    \n    return median;\n}\n</code>\n<|/ a tags=c++,median,arrays |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\
    using namespace std;\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplwohmlif.d(22): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplwohmlif.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat median;\n\t\n\tmedian = std.math.median(l);\n\
    \t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkoo9gof3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.toInt(l);\n\tlong\
    \ mid = l / 2;\n\tif (l % 2 == 0)\n\t\treturn std.math.mid(l, mid);\n\telse\n\t\
    \treturn std.math.mid(l, mid - 1);\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39w69fjt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n    long l = std.math.min(l);\n    long\
    \ r = std.math.max(l);\n    \n    float mid = (r + l) / 2.0f;\n    \n    float\
    \ median = l;\n    \n    for(int i = 0; i < l.length; i++)\n    {\n        if(l[i]\
    \ < mid)\n        {\n            median = l[i];\n        }\n    }\n    \n    return\
    \ median;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't answer the question. OP\
    \ wants to find the median of a list of floats, not an array.\n<|/ c |>\n<| c\
    \ |>\nThe question was edited after I posted my answer. Now it does answer the\
    \ question. Sorry for the confusion.\n<|/ c |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to find the median of a list of floats, not an array.\n<|/\
    \ c |>\n<| c |>\nI edited my answer to include a median function which does exactly\
    \ what OP wants.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to find the median of a list of floats, not an array.\n<|/ c |>\n<| a tags=c++,median,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include\
    \ <numeric>\n#include <iterator>\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp5vkmc8_.d(25): Error: Declaration expected, not \''<\''\n/tmp/tmpp5vkmc8_.d(28):
    Error: unterminated character constant\n/tmp/tmpp5vkmc8_.d(34): Error: unterminated
    character constant\n/tmp/tmpp5vkmc8_.d(40): Error: unterminated character constant\n/tmp/tmpp5vkmc8_.d(53):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpp5vkmc8_.d(54): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpp5vkmc8_.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpp5vkmc8_.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpp5vkmc8_.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmpp5vkmc8_.d(58):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp5vkmc8_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tfloat med = std.math.median(l);\n\t\
    return med;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m57k0jt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004149
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] < m)\n\
    \t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp225_7019.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp225_7019.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong l = std.math.min(l);\n\tlong\
    \ r = std.math.max(l);\n\treturn std.math.midpoint(l,r);\n}\nunittest\n{\n   \
    \ alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lms7pvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tint\
    \ count = 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] == mid)\n\
    \t\t\tcount++;\n\t}\n\treturn count / l.length;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14lmas5v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n     \
    \       \n*/\nfloat median(long[] l) \n{\n\tlong mid = std.math.mid(l);\n\tfloat\
    \ m = (float)mid;\n\t\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\
    \ < m)\n\t\t{\n\t\t\tm = l[i];\n\t\t}\n\t}\n\treturn m;\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpknxq6v47.d(9): Error: C style cast illegal, use cast(float)mid\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpknxq6v47.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660004150

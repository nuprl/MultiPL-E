{
  "name": "HumanEval_130_tri",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n// the last couple centuries. However, what people don't know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n// tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 / 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3 = 8 \n// You are given a non-negative integer number n, you have to a return a vector of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n// >>> tri(3)\n// [1, 3, 2, 8]\nstd::vector<long> tri(long n) {\n",
  "tests": "}\nint main() {\n    auto candidate = tri;\n    assert(candidate((3)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8})));\n    assert(candidate((4)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3})));\n    assert(candidate((5)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15})));\n    assert(candidate((6)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15, (long)4})));\n    assert(candidate((7)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15, (long)4, (long)24})));\n    assert(candidate((8)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15, (long)4, (long)24, (long)5})));\n    assert(candidate((9)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15, (long)4, (long)24, (long)5, (long)35})));\n    assert(candidate((20)) == (std::vector<long>({(long)1, (long)3, (long)2, (long)8, (long)3, (long)15, (long)4, (long)24, (long)5, (long)35, (long)6, (long)48, (long)7, (long)63, (long)8, (long)80, (long)9, (long)99, (long)10, (long)120, (long)11})));\n    assert(candidate((0)) == (std::vector<long>({(long)1})));\n    assert(candidate((1)) == (std::vector<long>({(long)1, (long)3})));\n}\n",
  "completions": [
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    result.push_back(2);\n    if (n == 3) return result;\n    result.push_back(8);\n    if (n == 4) return result;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; ++i) {\n        result.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = result[i - 1];\n    }\n    return result;",
    "    std::vector<long> ret;\n    if (n == 0) {\n        ret.push_back(0);\n        return ret;\n    }\n    if (n == 1) {\n        ret.push_back(1);\n        ret.push_back(3);\n        return ret;\n    }\n    if (n == 2) {\n        ret.push_back(1);\n        ret.push_back(2);\n        ret.push_back(3);\n        return ret;\n    }\n    ret.push_back(1);\n    if (n % 2 == 0) {\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(0);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n    } else {\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n    }\n    return ans;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 2;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n == 2) return result;\n    result[3] = 3;\n    if (n % 2 == 0) {\n        for (int i = 4; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    } else {\n        for (int i = 4; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    if (n == 1) return {1};\n    if (n == 2) return {1, 3};\n    if (n == 3) return {1, 3, 2, 8};\n    std::vector<long> prev = {1, 1};\n    std::vector<long> next = {1, 1};\n    for (int i = 4; i <= n; ++i) {\n        std::vector<long> temp = {prev[0] + prev[1], prev[1] + prev[2], prev[2] + next[0], prev[0] + next[1]};\n        prev = next;\n        next = temp;\n        ans.push_back(next[0]);\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n    } else {\n        res.push_back(3);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n        res.push_back(res[n - 1] + res[n - 2] + res[n]);\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(8);\n        ret.push_back(1);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(1);\n    ret.push_back(2);\n    ret.push_back(8);\n    return ret;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        res.push_back(3);\n        return res;\n    }\n    res.push_back(1);\n    if (n % 2 == 0) {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n    } else {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n        res.push_back(res[n - 1] + res[n - 2] + res[n]);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    long a = 1, b = 1, c = 3, d = 2;\n    while (n > 3) {\n        long t = a + b + c;\n        a = b;\n        b = c;\n        c = d + t;\n        d = t;\n        n -= 1;\n        res.push_back(t);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        return res;\n    }\n    if (n == 3) {\n        res.push_back(1);\n        res.push_back(3);\n        res.push_back(2);\n        return res;\n    }\n    if (n % 2 == 0) {\n        res.push_back(1);\n        res.push_back(n / 2);\n        res.push_back(1 + tri(n / 2));\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; ++i) {\n        long tmp = a + b + c;\n        a = b;\n        b = c;\n        c = tmp;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n < 1) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (long i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n    } else {\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(2);\n        for (long i = 2; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n    }\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) {\n        ans.push_back(0);\n        return ans;\n    }\n    if (n == 1) {\n        ans.push_back(1);\n        return ans;\n    }\n    if (n == 2) {\n        ans.push_back(1);\n        ans.push_back(2);\n        return ans;\n    }\n    if (n % 2 == 0) {\n        ans.push_back(1);\n        ans.push_back(n / 2);\n        ans.push_back(tri(n - 2) + tri(n - 1) + tri(n + 1));\n        return ans;\n    }\n    ans.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    return ans;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 1;\n    for (int i = 3; i <= n; i++) {\n        result[i] = result[i - 1] + result[i - 2] + result[i - 3];\n    }\n    return result;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        return result;\n    }\n    result.push_back(3);\n    result.push_back(1);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; ++i) {\n        long tmp = a + b + c;\n        a = b;\n        b = c;\n        c = tmp;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 1;\n    for (int i = 3; i <= n; i++) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    for (int i = 4; i <= n; i++) {\n        ret.push_back(ret[i - 1] + ret[i - 2] + ret[i - 3]);\n    }\n    return ret;",
    "    std::vector<long> result;\n    result.push_back(1);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        return result;\n    } else {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        return result;\n    }",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 3;\n    for (int i = 3; i <= n; ++i) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    long a = 1, b = 1, c = 1;\n    for (long i = 3; i <= n; ++i) {\n        long tmp = a + b + c;\n        a = b;\n        b = c;\n        c = tmp;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 2;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n    } else {\n        result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n    }\n    return result;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        return result;\n    }\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(1 + (n / 2));\n        for (int i = 2; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i + 1]);\n        }\n    } else {\n        ans.push_back(1 + (n / 2));\n        for (int i = 2; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i + 1]);\n        }\n        ans.push_back(ans[n - 1] + ans[n - 2] + ans[n + 1]);\n    }\n    return ans;",
    "    std::vector<long> ret;\n    if (n == 0) {\n        ret.push_back(0);\n        return ret;\n    }\n    if (n == 1) {\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(8);\n        return ret;\n    }\n    ret.push_back(1);\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    if (n % 2 == 0) {\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 2] + ret[i - 1] + ret[i]);\n        }\n    } else {\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 2] + ret[i - 1] + ret[i]);\n        }\n    }\n    return ret;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n        }\n    } else {\n        result.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n        }\n        result.push_back(result[n - 1] + result[n - 2] + result[n + 1]);\n    }\n    return result;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 1;\n    ret[1] = 3;\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret[2] = 2;\n        for (int i = 3; i <= n; i += 2) {\n            ret[i] = ret[i - 2] + ret[i - 1] + ret[i + 1];\n        }\n    } else {\n        ret[2] = 1;\n        for (int i = 3; i <= n; i += 2) {\n            ret[i] = ret[i - 2] + ret[i - 1] + ret[i + 1];\n        }\n    }\n    return ret;",
    "    std::vector<long> ret;\n    if (n < 0) return ret;\n    ret.push_back(1);\n    if (n == 0) return ret;\n    ret.push_back(3);\n    if (n == 1) return ret;\n    ret.push_back(2);\n    if (n == 2) return ret;\n    ret.push_back(8);\n    if (n == 3) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(2);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 8) return ret;\n    ret.push_back(3);\n    if (n == 9) return ret;\n    ret.push_back(2);\n    if (n == 10) return ret;\n    ret.push_back(8);\n    if (n == 11) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 12) return ret;\n    ret.push_back(3);\n    if (n == 13) return ret;\n    ret.push_back(2);\n    if (n == 14) return ret;\n    ret.push_back(8);\n    if (n == 15) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 16) return ret;\n    ret.push_back(3);\n    if (n == 17) return ret;\n    ret.push_back(2);\n    if (n == 18) return ret;\n    ret.push_back(8);\n    if (n == 19) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 20) return ret;\n    ret.push_back(3);\n    if (n == 21) return ret;\n    ret.push_back(2);",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(1 + n / 2);\n    if (n == 5) return ret;\n    ret.push_back(3 + (n - 2) / 2);\n    if (n == 6) return ret;\n    ret.push_back(2 + (n - 1) / 2);\n    if (n == 7) return ret;\n    ret.push_back(8 + (n - 4) / 2);\n    if (n == 8) return ret;\n    ret.push_back(1 + (n - 1) / 2);\n    if (n == 9) return ret;\n    ret.push_back(3 + (n - 2) / 2);\n    if (n == 10) return ret;\n    ret.push_back(2 + (n - 1) / 2);\n    if (n == 11) return ret;\n    ret.push_back(8 + (n - 4) / 2);\n    if (n == 12) return ret;\n    ret.push_back(1 + (n - 1) / 2);\n    if (n == 13) return ret;\n    ret.push_back(3 + (n - 2) / 2);\n    if (n == 14) return ret;\n    ret.push_back(2 + (n - 1) / 2);\n    if (n == 15) return ret;\n    ret.push_back(8 + (n - 4) / 2);\n    if (n == 16) return ret;\n    ret.push_back(1 + (n - 1) / 2);\n    if (n == 17) return ret;\n    ret.push_back(3 + (n - 2) / 2);\n    if (n == 18) return ret;\n    ret.push_",
    "    std::vector<long> res;\n    if (n < 1) {\n        return res;\n    }\n    res.push_back(1);\n    if (n == 1) {\n        return res;\n    }\n    long prev = 1;\n    long cur = 1;\n    long next = 1;\n    for (long i = 2; i <= n; ++i) {\n        if (i % 2 == 0) {\n            next = prev + cur;\n            cur = prev;\n            prev = next;\n        } else {\n            next = cur + prev;\n            cur = prev;\n            prev = next;\n        }\n        res.push_back(next);\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(8);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(1);\n    ret.push_back(2);\n    ret.push_back(3);\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    return ret;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; i++) {\n        ret.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = ret[i - 1];\n    }\n    return ret;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(3);\n    for (int i = 3; i <= n; ++i) {\n        ans.push_back(ans[i - 1] + ans[i - 2] + ans[i - 3]);\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    res.push_back(8);\n    if (n == 4) return res;\n    res.push_back(3);\n    if (n == 5) return res;\n    res.push_back(5);\n    if (n == 6) return res;\n    res.push_back(8);\n    if (n == 7) return res;\n    res.push_back(2);\n    if (n == 8) return res;\n    res.push_back(7);\n    if (n == 9) return res;\n    res.push_back(9);\n    if (n == 10) return res;\n    res.push_back(10);\n    if (n == 11) return res;\n    res.push_back(13);\n    if (n == 12) return res;\n    res.push_back(15);\n    if (n == 13) return res;\n    res.push_back(18);\n    if (n == 14) return res;\n    res.push_back(20);\n    if (n == 15) return res;\n    res.push_back(21);\n    if (n == 16) return res;\n    res.push_back(25);\n    if (n == 17) return res;\n    res.push_back(27);\n    if (n == 18) return res;\n    res.push_back(30);\n    if (n == 19) return res;\n    res.push_back(32);\n    if (n == 20) return res;\n    res.push_back(35);\n    if (n == 21) return res;\n    res.push_back(37);\n    if (n == 22) return res;\n    res.push_back(40);\n    if (n == 23) return res;\n    res.push_back(43",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 1;\n    while (n > 1) {\n        if (n % 2 == 0) {\n            res.push_back(a + b + c);\n            a = b;\n            b = c;\n            c = a + b + c;\n        } else {\n            res.push_back(a + b + c);\n            a = b;\n            b = c;\n            c = a + b + c;\n        }\n        n -= 1;\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    res.push_back(8);\n    if (n == 4) return res;\n    res.push_back(3);\n    if (n == 5) return res;\n    res.push_back(5);\n    if (n == 6) return res;\n    res.push_back(8);\n    if (n == 7) return res;\n    res.push_back(2);\n    if (n == 8) return res;\n    res.push_back(1);\n    if (n == 9) return res;\n    res.push_back(3);\n    if (n == 10) return res;\n    res.push_back(5);\n    if (n == 11) return res;\n    res.push_back(8);\n    if (n == 12) return res;\n    res.push_back(2);\n    if (n == 13) return res;\n    res.push_back(1);\n    if (n == 14) return res;\n    res.push_back(3);\n    if (n == 15) return res;\n    res.push_back(5);\n    if (n == 16) return res;\n    res.push_back(8);\n    if (n == 17) return res;\n    res.push_back(2);\n    if (n == 18) return res;\n    res.push_back(1);\n    if (n == 19) return res;\n    res.push_back(3);\n    if (n == 20) return res;\n    res.push_back(5);\n    if (n == 21) return res;\n    res.push_back(8);\n    if (n == 22) return res;\n    res.push_back(2);\n    if (n == 23) return res;\n    res.push_back(1",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(1);\n        res.push_back(3);\n        for (int i = 3; i < n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    } else {\n        res.push_back(1);\n        res.push_back(3);\n        res.push_back(2);\n        for (int i = 2; i < n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(3);\n    for (int i = 3; i <= n; i++) {\n        ans.push_back(ans[i - 1] + ans[i - 2] + ans[i - 3]);\n    }\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    if (n == 1) return {1, 1, 1};\n    if (n == 2) return {1, 2, 3};\n    if (n == 3) return {1, 3, 2, 8};\n    if (n % 2 == 0) {\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(1);\n",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(1);\n        res.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    } else {\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(2);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(3);\n    if (n == 7) return ret;\n    ret.push_back(7);\n    if (n == 8) return ret;\n    ret.push_back(5);\n    if (n == 9) return ret;\n    ret.push_back(9);\n    if (n == 10) return ret;\n    ret.push_back(3);\n    if (n == 11) return ret;\n    ret.push_back(11);\n    if (n == 12) return ret;\n    ret.push_back(3);\n    if (n == 13) return ret;\n    ret.push_back(13);\n    if (n == 14) return ret;\n    ret.push_back(3);\n    if (n == 15) return ret;\n    ret.push_back(15);\n    if (n == 16) return ret;\n    ret.push_back(3);\n    if (n == 17) return ret;\n    ret.push_back(17);\n    if (n == 18) return ret;\n    ret.push_back(3);\n    if (n == 19) return ret;\n    ret.push_back(19);\n    if (n == 20) return ret;\n    ret.push_back(3);\n    if (n == 21) return ret;\n    ret.push_back(21);\n    if (n == 22) return ret;\n    ret.push_back(3);\n    if (n == 23) return ret;\n    ret.push_back(23",
    "    std::vector<long> result;\n    if (n <= 0) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n    } else {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n    }\n    return result;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(1);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(1);\n        return result;\n    }\n    if (n == 3) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.push_back(1);\n        result.",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(3);\n    res.push_back(1);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    long a = 1, b = 1, c = 0;\n    for (long i = 2; i <= n; ++i) {\n        c = a + b;\n        a = b;\n        b = c;\n        ret.push_back(c);\n    }\n    return ret;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 2;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[n] = result[n - 1] + result[n - 2];\n        for (int i = 3; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    } else {\n        result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n        for (int i = 3; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 3) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(1 + tri(n - 2).back());\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1 + tri(n - 1).back());\n    result.push_back(1 + tri(n - 2).back());\n    result.push_back(1 + tri(n - 3).back());\n    return result;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n < 2) return result;\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    if (n < 3) return result;\n    result.push_back(1 + n / 2);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(1);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(6);\n    result.push_back(5);\n    result.push_back(4);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(1);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; ++i) {\n        long t = a + b + c;\n        a = b;\n        b = c;\n        c = t;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 0) return ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if",
    "    std::vector<long> result;\n    if (n == 0) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(5);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(5);\n        result.push_back(13);\n        result.push_back(8);\n        result.push_back(21);\n        result.push_back(13);\n        result.push_back(34);\n        result.push_back(21);\n        result.push_back(55);\n        result.push_back(34);\n        result.push_back(89);\n        result.push_back(55);\n        result.push_back(144);\n        result.push_back(89);\n        result.push_back(233);\n        result.push_back(144);\n        result.push_back(377);\n        result.push_back(233);\n        result.push_back(610);\n        result.push_back(377);\n        result.push_back(987);\n        result.push_back(610);\n        result.push_back(1597);\n        result.push_back(987);\n        result.push_back(2584);\n        result.push_back(1597);\n        result.push_back(4181);\n        result.push_back(2584);\n        result.push_back(6765);\n        result.push_back(4181);\n        result.push_back(10946);\n        result.push_back(6765);\n        result.push_back(17711);\n        result.push_back(10946);\n        result.push_back(28657);\n        result.push_back(17711);\n        result.push_back(48377);\n        result.push_back(28657);\n        result.push",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        return result;\n    }\n    result.push_back(1 + (n - 1) / 2);\n    result.push_back(1 + (n - 2) / 2);\n    result.push_back(1 + (n + 1) / 2);\n    return result;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(2 + tri(n / 2));\n        return result;\n    }\n    result.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(3);\n    for (int i = 3; i <= n; i++) {\n        ans.push_back(1 + (i / 2) + ans[i - 1] + ans[i - 2] + ans[i + 1]);\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (n < 0) {\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 0) {\n        return result;\n    }\n    if (n == 1) {\n        return result;\n    }\n    if (n == 2) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(result[n - 2] + result[n - 1] + result[n]);\n    }\n    else {\n        result.push_back(result[n - 2] + result[n - 1] + result[n - 1] + result[n]);\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(3);\n    res.push_back(1);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long t1 = 1, t2 = 1, t3 = 3;\n    for (long i = 2; i <= n; ++i) {\n        res.push_back(t3);\n        t3 = t1 + t2;\n        t1 = t2;\n        t2 = t3;\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n--) {\n        long tmp = a + b + c;\n        a = b;\n        b = c;\n        c = d;\n        d = tmp;\n        res.push_back(d);\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n < 0) {\n        return ans;\n    }\n    if (n == 0) {\n        ans.push_back(0);\n        return ans;\n    }\n    if (n == 1) {\n        ans.push_back(1);\n        ans.push_back(3);\n        return ans;\n    }\n    if (n == 2) {\n        ans.push_back(1);\n        ans.push_back(3);\n        ans.push_back(2);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(1);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    long t1 = 1, t2 = 1, t3 = 1;\n    for (long i = 3; i <= n; i++) {\n        long tmp = t1 + t2 + t3;\n        t1 = t2;\n        t2 = t3;\n        t3 = tmp;\n        ans.push_back(tmp);\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        return result;\n    }\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    return result;",
    "    std::vector<long> ret;\n    if (n < 0) return ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(3);\n        ans.push_back(1);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    return ans;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        result.push_back(1 + n / 2);\n        return result;\n    }\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    result.push_back(1 + n / 2);\n    return result;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(3);\n    if (n == 7) return ret;\n    ret.push_back(7);\n    if (n == 8) return ret;\n    ret.push_back(4);\n    if (n == 9) return ret;\n    ret.push_back(9);\n    if (n == 10) return ret;\n    ret.push_back(5);\n    if (n == 11) return ret;\n    ret.push_back(11);\n    if (n == 12) return ret;\n    ret.push_back(3);\n    if (n == 13) return ret;\n    ret.push_back(13);\n    if (n == 14) return ret;\n    ret.push_back(2);\n    if (n == 15) return ret;\n    ret.push_back(8);\n    if (n == 16) return ret;\n    ret.push_back(3);\n    if (n == 17) return ret;\n    ret.push_back(17);\n    if (n == 18) return ret;\n    ret.push_back(5);\n    if (n == 19) return ret;\n    ret.push_back(19);\n    if (n == 20) return ret;\n    ret.push_back(3);\n    if (n == 21) return ret;\n    ret.push_back(21);\n    if (n == 22) return ret;\n    ret.push_back(2);\n    if (n == 23) return ret;\n    ret.push_back(8",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n < 2) return result;\n    result.push_back(3);\n    if (n < 3) return result;\n    result.push_back(2);\n    result.push_back(8);\n    for (int i = 4; i <= n; ++i) {\n        result.push_back(result[i - 1] + result[i - 2] + result[i - 3]);\n    }\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    } else {\n        ans.push_back(3);\n        ans.push_back(1);\n        ans.push_back(2);\n        for (int i = 3; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    }\n    return ans;",
    "    std::vector<long> ans;\n    if (n < 0) {\n        return ans;\n    }\n    if (n == 0) {\n        ans.push_back(0);\n        return ans;\n    }\n    if (n == 1) {\n        ans.push_back(1);\n        ans.push_back(3);\n        return ans;\n    }\n    if (n == 2) {\n        ans.push_back(1);\n        ans.push_back(3);\n        ans.push_back(2);\n        ans.push_back(8);\n        return ans;\n    }\n    if (n == 3) {\n        ans.push_back(1);\n        ans.push_back(3);\n        ans.push_back(2);\n        ans.push_back(8);\n        ans.push_back(3);\n        ans.push_back(2);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(1);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    ret.push_back(2);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n == 2) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2 + tri(n / 2));\n        return ret;\n    }\n    ret.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    return ret;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(3);\n    res.push_back(1);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(8);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    } else {\n        ret.push_back(2);\n        ret.push_back(8);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n < 1) {\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        return res;\n    }\n    if (n % 2 == 0) {\n        res.push_back(1);\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(3);\n    res.push_back(2);\n    res.push_back(8);\n    for (int i = 3; i < n; i++) {\n        res.push_back(res[i - 1] + res[i - 2] + res[i]);\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            ans.push_back(ans[i / 2] + ans[i / 2 - 1] + ans[i / 2 + 1]);\n        }\n    } else {\n        ans.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            ans.push_back(ans[i / 2] + ans[i / 2 - 1] + ans[i / 2 + 1]);\n        }\n        ans.push_back(ans[n / 2] + ans[n / 2 - 1] + ans[n / 2 + 1]);\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(2);\n    result.push_back(3);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    return result;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 1;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[n] = 2;\n        for (int i = n - 1; i >= 2; i -= 2) {\n            result[i] = result[i - 2] + result[i - 1] + result[i + 1];\n        }\n    } else {\n        result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n    }\n    return result;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 1;\n    for (int i = 3; i <= n; i++) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n--) {\n        if (n % 2 == 0) {\n            res.push_back(a);\n            a = b;\n            b = c;\n            c = d;\n            d = a + b + c;\n        } else {\n            res.push_back(d);\n            d = c;\n            c = b;\n            b = a;\n            a = d + c + b;\n        }\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if (n == 23) return ret;\n    ret",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(5);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(5);\n        result.push_back(13);\n        result.push_back(8);\n        result.push_back(21);\n        result.push_back(13);\n        result.push_back(34);\n        result.push_back(21);\n        result.push_back(55);\n        result.push_back(34);\n        result.push_back(89);\n        result.push_back(55);\n        result.push_back(144);\n        result.push_back(89);\n        result.push_back(233);\n        result.push_back(144);\n        result.push_back(377);\n        result.push_back(233);\n        result.push_back(610);\n        result.push_back(377);\n        result.push_back(986);\n        result.push_back(610);\n        result.push_back(1597);\n        result.push_back(986);\n        result.push_back(2584);\n        result.push_back(1597);\n        result.push_back(4181);\n        result.push_back(2584);\n        result.push_back(6765);\n        result.push_back(4181);\n        result.push_back(10946);\n        result.push_back(6765);\n        result.push_back(17711);\n        result.push_back(10946);\n        result.push_back(28657);\n        result.push_back(17711);\n        result.push_back(51428);\n        result.",
    "    std::vector<long> ret;\n    if (n <= 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; i++) {\n        ret.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = ret[i - 1];\n    }\n    return ret;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(3);\n        ans.push_back(1);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    return ans;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 3) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 4) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 5) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 6) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 7) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 8) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n == 9) {\n        result.push_back(1);\n",
    "    std::vector<long> res;\n    if (n < 0) return res;\n    if (n == 0) return res;\n    if (n == 1) return res;\n    res.push_back(1);\n    if (n % 2 == 0) {\n        res.push_back(1);\n        res.push_back(1);\n        res.push_back(1);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    } else {\n        res.push_back(1);\n        res.push_back(1);\n        res.push_back(1);\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(3);\n    if (n % 2 == 0) {\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    } else {\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        return ret;\n    }\n    ret.push_back(1);\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    return ret;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(2);\n    if (n == 8) return ret;\n    ret.push_back(7);\n    if (n == 9) return ret;\n    ret.push_back(9);\n    if (n == 10) return ret;\n    ret.push_back(10);\n    if (n == 11) return ret;\n    ret.push_back(13);\n    if (n == 12) return ret;\n    ret.push_back(15);\n    if (n == 13) return ret;\n    ret.push_back(18);\n    if (n == 14) return ret;\n    ret.push_back(21);\n    if (n == 15) return ret;\n    ret.push_back(25);\n    if (n == 16) return ret;\n    ret.push_back(30);\n    if (n == 17) return ret;\n    ret.push_back(35);\n    if (n == 18) return ret;\n    ret.push_back(45);\n    if (n == 19) return ret;\n    ret.push_back(55);\n    if (n == 20) return ret;\n    ret.push_back(70);\n    if (n == 21) return ret;\n    ret.push_back(85);\n    if (n == 22) return ret;\n    ret.push_back(105);\n    if (n == 23) return ret;\n    ret.push_back(135",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    for (long i = 3; i <= n; i++) {\n        result.push_back(result[i - 1] + result[i - 2] + result[i - 3]);\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(1);\n        res.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    } else {\n        res.push_back(1);\n        res.push_back(1);\n        res.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    long t1 = 1, t2 = 1, t3 = 2;\n    for (long i = 2; i <= n; ++i) {\n        result.push_back(t1 + t2 + t3);\n        t1 = t2;\n        t2 = t3;\n        t3 = result[i - 1] + result[i - 2] + result[i];\n    }\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    long t1 = 1, t2 = 1, t3 = 2;\n    for (long i = 2; i <= n; ++i) {\n        ans.push_back(t1 + t2 + t3);\n        t1 = t2;\n        t2 = t3;\n        t3 = ans[i - 1] + ans[i - 2] + ans[i];\n    }\n    return ans;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 3;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[n] = result[n - 2] + result[n - 1];\n        for (int i = n - 2; i > 0; i--) {\n            result[i] = result[i - 1] + result[i];\n        }\n    } else {\n        result[n] = result[n - 1] + result[n - 2];\n        for (int i = n - 1; i > 0; i--) {\n            result[i] = result[i - 1] + result[i];\n        }\n    }\n    return result;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; i++) {\n        ret.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = ret[i - 1];\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long t1 = 1, t2 = 1, t3 = 1;\n    for (int i = 2; i <= n; ++i) {\n        t3 = t1 + t2;\n        t1 = t2;\n        t2 = t3;\n        res.push_back(t3);\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(8);\n        ret.push_back(3);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    ret.push_back(1);\n    return ret;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(1);\n        res.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    } else {\n        res.push_back(1);\n        res.push_back(1);\n        res.push_back(2);\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    } else {\n        res.push_back(3);\n        for (int i = 4; i <= n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long t1 = 1, t2 = 1, t3 = 2;\n    for (long i = 2; i <= n; ++i) {\n        res.push_back(t3);\n        t3 = t1 + t2;\n        t1 = t2;\n        t2 = t3;\n    }\n    return res;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        for (int i = 3; i < n; i += 2) {\n            result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n        }\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    for (int i = 3; i < n; i += 2) {\n        result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n    }\n    return result;",
    "    std::vector<long> res(n + 1);\n    res[0] = 0;\n    res[1] = 1;\n    res[2] = 3;\n    for (int i = 3; i <= n; i++) {\n        res[i] = res[i - 1] + res[i - 2] + res[i - 3];\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        res.push_back(3);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(3);\n    res.push_back(2);\n    res.push_back(8);\n    for (int i = 3; i <= n; ++i) {\n        res.push_back(res[i - 1] + res[i - 2] + res[i - 3]);\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    for (int i = 4; i <= n; ++i) {\n        ret.push_back(ret[i - 1] + ret[i - 2] + ret[i - 3]);\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    long a, b, c;\n    a = 1;\n    b = 3;\n    c = 2;\n    for (long i = 3; i <= n; i++) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = res[i - 1] + res[i - 2] + res[i - 3];\n    }\n    return res;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 1;\n    for (int i = 3; i <= n; i++) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(1);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(3);\n    result.push_back(1);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> ret;\n    if (n <= 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if (n == 23) return ret;\n    ret",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(3);\n        ans.push_back(1);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(3);\n    for (long i = 3; i <= n; i++) {\n        ans.push_back(ans[i - 1] + ans[i - 2] + ans[i - 3]);\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    res.push_back(8);\n    if (n == 4) return res;\n    long a = 1, b = 1, c = 3;\n    for (long i = 5; i <= n; i++) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = res[i - 1] + res[i - 2] + res[i - 3];\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 0) return ret;\n    ret.push_back(1);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n == 2) return ret;\n    ret.push_back(1);\n    if (n == 3) return ret;\n    ret.push_back(3);\n    if (n == 4) return ret;\n    ret.push_back(2);\n    if (n == 5) return ret;\n    ret.push_back(8);\n    if (n == 6) return ret;\n    ret.push_back(1);\n    if (n == 7) return ret;\n    ret.push_back(3);\n    if (n == 8) return ret;\n    ret.push_back(5);\n    if (n == 9) return ret;\n    ret.push_back(2);\n    if (n == 10) return ret;\n    ret.push_back(8);\n    if (n == 11) return ret;\n    ret.push_back(1);\n    if (n == 12) return ret;\n    ret.push_back(3);\n    if (n == 13) return ret;\n    ret.push_back(5);\n    if (n == 14) return ret;\n    ret.push_back(2);\n    if (n == 15) return ret;\n    ret.push_back(8);\n    if (n == 16) return ret;\n    ret.push_back(1);\n    if (n == 17) return ret;\n    ret.push_back(3);\n    if (n == 18) return ret;\n    ret.push_back(5);\n    if (n == 19) return ret;\n    ret.push_back(2);\n    if (n == 20) return ret;\n    ret.push_back(8);\n    if (n == 21) return ret;\n    ret.push_back(1);\n    if (n == 22) return ret;\n    ret.push_back(3);\n    if (n == 23) return ret;\n    ret.push_back(",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(result[n - 2] + result[n - 1] + result[n]);\n        return result;\n    }\n    result.push_back(result[n - 2] + result[n - 1] + result[n]);\n    return result;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        return result;\n    }\n    result.push_back(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    return result;",
    "    std::vector<long> res(n + 1);\n    if (n == 0) {\n        res[0] = 0;\n        return res;\n    }\n    if (n == 1) {\n        res[0] = 1;\n        res[1] = 3;\n        return res;\n    }\n    if (n == 2) {\n        res[0] = 1;\n        res[1] = 2;\n        res[2] = 3;\n        return res;\n    }\n    res[0] = 1;\n    res[1] = 1 + (n / 2);\n    if (n % 2 == 0) {\n        for (int i = 2; i < n; ++i) {\n            res[i] = res[i - 1] + res[i - 2] + res[i + 1];\n        }\n    } else {\n        for (int i = 2; i < n; ++i) {\n            res[i] = res[i - 1] + res[i - 2] + res[i + 1];\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(result[n / 2] + result[n / 2 - 1] + result[n / 2 + 1]);\n        return result;\n    }\n    result.push_back(result[n / 2] + result[n / 2 - 1] + result[n / 2 + 1]);\n    result.push_back(result[n / 2] + result[n / 2] + result[n / 2 + 1]);\n    return result;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    } else {\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a, b, c;\n    a = 1;\n    b = 0;\n    c = 0;\n    for (int i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n        b = c;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a, b, c;\n    a = 1;\n    b = 1;\n    c = 1;\n    for (long i = 2; i <= n; i++) {\n        long t = a + b + c;\n        a = b;\n        b = c;\n        c = t;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(3);\n    if (n == 7) return ret;\n    ret.push_back(2);\n    if (n == 8) return ret;\n    ret.push_back(1);\n    if (n == 9) return ret;\n    ret.push_back(3);\n    if (n == 10) return ret;\n    ret.push_back(5);\n    if (n == 11) return ret;\n    ret.push_back(3);\n    if (n == 12) return ret;\n    ret.push_back(2);\n    if (n == 13) return ret;\n    ret.push_back(8);\n    if (n == 14) return ret;\n    ret.push_back(3);\n    if (n == 15) return ret;\n    ret.push_back(5);\n    if (n == 16) return ret;\n    ret.push_back(3);\n    if (n == 17) return ret;\n    ret.push_back(2);\n    if (n == 18) return ret;\n    ret.push_back(1);\n    if (n == 19) return ret;\n    ret.push_back(3);\n    if (n == 20) return ret;\n    ret.push_back(5);\n    if (n == 21) return ret;\n    ret.push_back(3);\n    if (n == 22) return ret;\n    ret.push_back(2);\n    if (n == 23) return ret;\n    ret.push_back(8",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(3);\n    if (n == 7) return ret;\n    ret.push_back(2);\n    if (n == 8) return ret;\n    ret.push_back(1);\n    if (n == 9) return ret;\n    ret.push_back(0);\n    return ret;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    result.push_back(2);\n    if (n == 3) return result;\n    result.push_back(8);\n    if (n == 4) return result;\n    result.push_back(3);\n    if (n == 5) return result;\n    result.push_back(5);\n    if (n == 6) return result;\n    result.push_back(8);\n    if (n == 7) return result;\n    result.push_back(13);\n    if (n == 8) return result;\n    result.push_back(21);\n    if (n == 9) return result;\n    result.push_back(34);\n    if (n == 10) return result;\n    result.push_back(55);\n    if (n == 11) return result;\n    result.push_back(89);\n    if (n == 12) return result;\n    result.push_back(144);\n    if (n == 13) return result;\n    result.push_back(233);\n    if (n == 14) return result;\n    result.push_back(377);\n    if (n == 15) return result;\n    result.push_back(610);\n    if (n == 16) return result;\n    result.push_back(986);\n    if (n == 17) return result;\n    result.push_back(1597);\n    if (n == 18) return result;\n    result.push_back(2584);\n    if (n == 19) return result;\n    result.push_back(4181);\n    if (n == 20) return result;\n    result.push_back(6765);\n    if (n == 21) return result;\n    result.push_back(10946);\n    if (n == 22) return result;\n    result.push_back(17710);\n    if (n == 23) return result;\n    result",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long t1 = 1, t2 = 1, t3 = 1;\n    for (long i = 2; i <= n; ++i) {\n        res.push_back(t1 + t2 + t3);\n        t3 = t2;\n        t2 = t1;\n        t1 = res[i - 1];\n    }\n    return res;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 3;\n    for (int i = 3; i <= n; ++i) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> result;\n    if (n == 0) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    long a = 1, b = 1, c = 3;\n    for (int i = 3; i <= n; ++i) {\n        result.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = result[i - 1] + result[i - 2] + result[i];\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n < 0) {\n        return res;\n    }\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        res.push_back(3);\n        return res;\n    }\n    res.push_back(1);\n    if (n % 2 == 0) {\n        res.push_back(3);\n        res.push_back(2);\n        res.push_back(8);\n        for (int i = 3; i < n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    } else {\n        res.push_back(3);\n        res.push_back(2);\n        res.push_back(8);\n        for (int i = 3; i < n; i += 2) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(1 + (n / 2));\n    for (int i = 3; i <= n; i++) {\n        ans.push_back(ans[i - 1] + ans[i - 2] + ans[i - 3]);\n    }\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(3);\n        ans.push_back(1);\n        return ans;\n    }\n    ans.push_back(1);\n    ans.push_back(3);\n    ans.push_back(2);\n    ans.push_back(8);\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        return res;\n    }\n    res.push_back(1);\n    if (n % 2 == 0) {\n        res.push_back(1 + n / 2);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    } else {\n        res.push_back(1 + n / 2);\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n        res.push_back(res[n - 1] + res[n - 2] + res[n]);\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; i++) {\n        long t = a + b + c;\n        a = b;\n        b = c;\n        c = t;\n        ans.push_back(t);\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(1 + n / 2);\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i / 2] + res[i / 2 - 1] + res[i / 2 + 1]);\n        }\n    } else {\n        res.push_back(1 + n / 2);\n        for (int i = 2; i <= n; i += 2) {\n            res.push_back(res[i / 2] + res[i / 2 - 1] + res[i / 2 + 1]);\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 2, d = 3;\n    while (n--) {\n        if (n % 2 == 0) {\n            res.push_back(a + b);\n            a = b;\n            b = c;\n            c = d;\n            d = a + b + c;\n        } else {\n            res.push_back(a + b + c);\n            a = b;\n            b = c;\n            c = d;\n            d = a + b + c;\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        return res;\n    }\n    if (n == 3) {\n        res.push_back(1);\n        res.push_back(3);\n        res.push_back(2);\n        return res;\n    }\n    if (n % 2 == 0) {\n        res.push_back(1);\n        res.push_back(n / 2);\n        res.push_back(1 + n / 2);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(1 + n / 2);\n    res.push_back(1 + n / 2 + n / 2);\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) {\n        ans.push_back(0);\n        return ans;\n    }\n    if (n == 1) {\n        ans.push_back(1);\n        return ans;\n    }\n    if (n == 2) {\n        ans.push_back(1);\n        ans.push_back(2);\n        return ans;\n    }\n    if (n % 2 == 0) {\n        ans.push_back(1);\n        ans.push_back(1 + n / 2);\n        ans.push_back(1 + n / 2 + 1);\n        return ans;\n    }\n    ans.push_back(1);\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2 + 1);\n    ans.push_back(1 + n / 2 + 2);\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) {\n        ans.push_back(0);\n        return ans;\n    }\n    if (n == 1) {\n        ans.push_back(1);\n        return ans;\n    }\n    if (n == 2) {\n        ans.push_back(1);\n        ans.push_back(2);\n        return ans;\n    }\n    ans.push_back(1);\n    ans.push_back(1);\n    ans.push_back(3);\n    if (n % 2 == 0) {\n        for (int i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n    } else {\n        for (int i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 2] + ans[i - 1] + ans[i]);\n        }\n        ans.push_back(ans[n - 1] + ans[n - 2] + ans[n]);\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n    } else {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; i += 2) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n        res.push_back(res[n - 1] + res[n - 2] + res[n]);\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    res.push_back(8);\n    if (n == 4) return res;\n    res.push_back(3);\n    if (n == 5) return res;\n    res.push_back(5);\n    if (n == 6) return res;\n    res.push_back(8);\n    if (n == 7) return res;\n    res.push_back(13);\n    if (n == 8) return res;\n    res.push_back(21);\n    if (n == 9) return res;\n    res.push_back(34);\n    if (n == 10) return res;\n    res.push_back(55);\n    if (n == 11) return res;\n    res.push_back(89);\n    if (n == 12) return res;\n    res.push_back(144);\n    if (n == 13) return res;\n    res.push_back(233);\n    if (n == 14) return res;\n    res.push_back(377);\n    if (n == 15) return res;\n    res.push_back(610);\n    if (n == 16) return res;\n    res.push_back(987);\n    if (n == 17) return res;\n    res.push_back(1597);\n    if (n == 18) return res;\n    res.push_back(2584);\n    if (n == 19) return res;\n    res.push_back(4181);\n    if (n == 20) return res;\n    res.push_back(6765);\n    if (n == 21) return res;\n    res.push_back(10946);\n    if (n == 22) return res;\n    res.push_back(17710);\n    if (n == 23) return res;\n    res",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    if (n == 0) return ret;\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    } else {\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        for (int i = 3; i <= n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    }\n    return ret;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 3) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        result.",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(1 + (n / 2));\n        return tri(n - 1) + ans;\n    }\n    ans.push_back(1 + (n / 2) + (n / 2) + 1);\n    return tri(n - 1) + ans;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(13);\n    if (n == 7) return ret;\n    ret.push_back(3);\n    if (n == 8) return ret;\n    ret.push_back(2);\n    if (n == 9) return ret;\n    ret.push_back(18);\n    if (n == 10) return ret;\n    ret.push_back(3);\n    if (n == 11) return ret;\n    ret.push_back(5);\n    if (n == 12) return ret;\n    ret.push_back(13);\n    if (n == 13) return ret;\n    ret.push_back(3);\n    if (n == 14) return ret;\n    ret.push_back(2);\n    if (n == 15) return ret;\n    ret.push_back(18);\n    if (n == 16) return ret;\n    ret.push_back(3);\n    if (n == 17) return ret;\n    ret.push_back(5);\n    if (n == 18) return ret;\n    ret.push_back(13);\n    if (n == 19) return ret;\n    ret.push_back(3);\n    if (n == 20) return ret;\n    ret.push_back(2);\n    if (n == 21) return ret;\n    ret.push_back(18);\n    if (n == 22) return ret;\n    ret.push_back(3);\n    if (n == 23) return ret;\n    ret.push_back(5",
    "    std::vector<long> ret;\n    if (n == 0) {\n        ret.push_back(0);\n        return ret;\n    }\n    if (n == 1) {\n        ret.push_back(1);\n        ret.push_back(3);\n        return ret;\n    }\n    ret.push_back(1);\n    if (n % 2 == 0) {\n        ret.push_back(1 + n / 2);\n        ret.push_back(1 + n / 2);\n        ret.push_back(1 + n / 2);\n        return ret;\n    }\n    ret.push_back(1 + n / 2);\n    ret.push_back(1 + n / 2);\n    ret.push_back(1 + n / 2);\n    ret.push_back(1 + n / 2);\n    ret.push_back(1 + n / 2);\n    return ret;",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 0;\n    for (long i = 2; i <= n; ++i) {\n        c = a + b;\n        a = b;\n        b = c;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(8);\n        ret.push_back(1);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(1);\n    ret.push_back(2);\n    ret.push_back(8);\n    return ret;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 1;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[3] = 2;\n        for (int i = 4; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    } else {\n        result[3] = 3;\n        for (int i = 4; i <= n; i += 2) {\n            result[i] = result[i - 1] + result[i - 2] + result[i + 1];\n        }\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(3);\n    res.push_back(1);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        res.push_back(3);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        res.push_back(3);\n        return res;\n    }\n    if (n % 2 == 0) {\n        res.push_back(1);\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(3);\n    res.push_back(2);\n    res.push_back(8);\n    res.push_back(1);\n    res.push_back(3);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> result;\n    if (n < 0) return result;\n    result.push_back(1);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    result.push_back(2);\n    if (n == 3) return result;\n    result.push_back(8);\n    if (n == 4) return result;\n    result.push_back(3);\n    if (n == 5) return result;\n    result.push_back(5);\n    if (n == 6) return result;\n    result.push_back(8);\n    if (n == 7) return result;\n    result.push_back(13);\n    if (n == 8) return result;\n    result.push_back(21);\n    if (n == 9) return result;\n    result.push_back(34);\n    if (n == 10) return result;\n    result.push_back(55);\n    if (n == 11) return result;\n    result.push_back(89);\n    if (n == 12) return result;\n    result.push_back(144);\n    if (n == 13) return result;\n    result.push_back(233);\n    if (n == 14) return result;\n    result.push_back(377);\n    if (n == 15) return result;\n    result.push_back(610);\n    if (n == 16) return result;\n    result.push_back(987);\n    if (n == 17) return result;\n    result.push_back(1597);\n    if (n == 18) return result;\n    result.push_back(2584);\n    if (n == 19) return result;\n    result.push_back(4181);\n    if (n == 20) return result;\n    result.push_back(6765);\n    if (n == 21) return result;\n    result.push_back(10946);\n    if (n == 22) return result;\n    result.push_back(17710);\n    if",
    "    std::vector<long> res;\n    if (n < 1) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    long a = 1, b = 1, c = 3;\n    for (int i = 4; i <= n; i++) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = a + b + c;\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n < 1) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i <= n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    } else {\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(2);\n        for (int i = 2; i <= n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        return result;\n    }\n    if (n == 2) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(1);\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    result.push_back(1);\n    result.push_back(1);\n    result",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 1;\n    for (long i = 3; i <= n; i++) {\n        result[i] = result[i - 1] + result[i - 2] + result[i - 3];\n    }\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    if (n == 1) return {1};\n    if (n == 2) return {1, 3};\n    if (n == 3) return {1, 3, 2, 8};\n    std::vector<long> prev = {1, 1};\n    std::vector<long> next = {1, 1};\n    for (int i = 3; i <= n; ++i) {\n        std::vector<long> temp = {1, 1};\n        for (int j = 0; j < i - 2; ++j) {\n            temp.push_back(prev[j] + next[j]);\n        }\n        temp.push_back(1 + prev[i - 2] + next[i - 2]);\n        prev = next;\n        next = temp;\n    }\n    return ans;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n < 2) return result;\n    result.push_back(3);\n    if (n < 3) return result;\n    result.push_back(2);\n    result.push_back(8);\n    for (int i = 4; i <= n; ++i) {\n        result.push_back(result[i - 1] + result[i - 2] + result[i - 3]);\n    }\n    return result;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 3;\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret[n] = 2;\n        for (int i = 3; i <= n; i += 2) {\n            ret[i] = ret[i - 2] + ret[i - 1] + ret[i + 1];\n        }\n    } else {\n        ret[n] = ret[n - 1] + ret[n - 2] + ret[n + 1];\n    }\n    return ret;",
    "    std::vector<long> result;\n    result.push_back(1);\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(1);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(3);\n    result.push_back(1);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> res(n + 1);\n    res[0] = 1;\n    res[1] = 3;\n    if (n == 1) return res;\n    for (int i = 2; i <= n; ++i) {\n        res[i] = res[i - 1] + res[i - 2] + res[i - 1];\n    }\n    return res;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; ++i) {\n        result.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = result[i - 1] + result[i - 2] + result[i];\n    }\n    return result;",
    "    std::vector<long> result;\n    if (n < 0) return result;\n    if (n == 0) return {0};\n    if (n == 1) return {1, 3};\n    result.push_back(1);\n    if (n % 2 == 0) {\n        result.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n        }\n    } else {\n        result.push_back(1 + n / 2);\n        for (int i = 2; i < n; i += 2) {\n            result.push_back(result[i - 1] + result[i - 2] + result[i + 1]);\n        }\n        result.push_back(result[n - 1] + result[n - 2] + result[n + 1]);\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    long a = 1, b = 1, c = 3;\n    for (long i = 4; i <= n; ++i) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = res[i - 1] + res[i - 2] + res[i - 3];\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    ret.push_back(2);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2 + tri(n / 2));\n    } else {\n        ret.push_back(tri(n / 2) + tri(n / 2) + tri(n / 2 + 1));\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    if (n == 1) {\n        res.push_back(1);\n        res.push_back(3);\n        return res;\n    }\n    if (n == 2) {\n        res.push_back(1);\n        res.push_back(2);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(1);\n    res.push_back(3);\n    res.push_back(2);\n    res.push_back(8);\n    if (n % 2 == 0) {\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    } else {\n        for (int i = 3; i <= n; i += 2) {\n            res.push_back(res[i - 2] + res[i - 1] + res[i]);\n        }\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n <= 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    } else {\n        ans.push_back(1);\n        ans.push_back(1);\n        ans.push_back(3);\n        for (int i = 3; i < n; i += 2) {\n            ans.push_back(ans[i - 1] + ans[i - 2] + ans[i]);\n        }\n    }\n    return ans;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        res.push_back(8);\n        return res;\n    }\n    res.push_back(3);\n    res.push_back(1);\n    res.push_back(2);\n    res.push_back(8);\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(1 + n / 2);\n        ans.push_back(1 + n / 2);\n        ans.push_back(1 + n / 2);\n        return ans;\n    }\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2);\n    ans.push_back(1 + n / 2);\n    return ans;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    if (n == 1) {\n        result.push_back(1);\n        result.push_back(3);\n        result.push_back(2);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    if (n % 2 == 0) {\n        result.push_back(result[n - 1] + result[n - 2] + result[n + 1]);\n    } else {\n        result.push_back(result[n - 1] + result[n - 2] + result[n + 1] + result[n - 1] + result[n - 2] + result[n + 1]);\n    }\n    return result;",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a, b, c;\n    a = 1;\n    b = 1;\n    c = 1;\n    for (int i = 2; i <= n; i++) {\n        a = b + c;\n        b = c;\n        c = a;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        for (int i = 3; i < n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    } else {\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        for (int i = 2; i < n; i += 2) {\n            ret.push_back(ret[i - 1] + ret[i - 2] + ret[i]);\n        }\n    }\n    return ret;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    long t1 = 1, t2 = 1, t3 = 3;\n    for (long i = 4; i <= n; ++i) {\n        ret.push_back(t1 + t2 + t3);\n        t1 = t2;\n        t2 = t3;\n        t3 = ret[i - 1];\n    }\n    return ret;",
    "    std::vector<long> result;\n    if (n == 0) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    result.push_back(2);\n    if (n == 3) return result;\n    result.push_back(8);\n    if (n == 4) return result;\n    result.push_back(3);\n    if (n == 5) return result;\n    result.push_back(5);\n    if (n == 6) return result;\n    result.push_back(8);\n    if (n == 7) return result;\n    result.push_back(2);\n    if (n == 8) return result;\n    result.push_back(3);\n    if (n == 9) return result;\n    result.push_back(5);\n    if (n == 10) return result;\n    result.push_back(8);\n    if (n == 11) return result;\n    result.push_back(2);\n    if (n == 12) return result;\n    result.push_back(3);\n    if (n == 13) return result;\n    result.push_back(5);\n    if (n == 14) return result;\n    result.push_back(8);\n    if (n == 15) return result;\n    result.push_back(2);\n    if (n == 16) return result;\n    result.push_back(3);\n    if (n == 17) return result;\n    result.push_back(5);\n    if (n == 18) return result;\n    result.push_back(8);\n    if (n == 19) return result;\n    result.push_back(2);\n    if (n == 20) return result;\n    result.push_back(3);\n    if (n == 21) return result;\n    result.push_back(5);\n    if (n == 22) return result;\n    result.push_back(8);\n    if (n == 23) return result;\n    result.push_back(2",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    res.push_back(3);\n    if (n == 2) return res;\n    res.push_back(2);\n    if (n == 3) return res;\n    long a = 1, b = 1, c = 3, d = 2;\n    for (long i = 4; i <= n; ++i) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = d;\n        d = a + b + c;\n    }\n    return res;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(8);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(1);\n    ret.push_back(2);\n    ret.push_back(3);\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    return ret;",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(1);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(3);\n    result.push_back(1);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    if (n == 1) return {1, 3, 2};\n    if (n == 2) return {1, 3, 2, 8};\n    long a = 1, b = 1, c = 1;\n    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n            c = a + b;\n            a = b;\n            b = c;\n        } else {\n            c = a + b;\n            a = b;\n            b = c;\n            c = a + b;\n            a = b;\n            b = c;\n        }\n        ans.push_back(c);\n    }\n    return ans;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if (n == 23) return ret;\n    ret",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 1;\n    for (int i = 3; i <= n; ++i) {\n        result[i] = result[i - 1] + result[i - 2] + result[i - 3];\n    }\n    return result;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; i++) {\n        ret.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = ret[i - 1];\n    }\n    return ret;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 3;\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret[n] = 2 * ret[n - 1] + ret[n - 2];\n        for (int i = n - 1; i > 0; --i) {\n            ret[i] = ret[i - 1] + ret[i - 2] + ret[i + 1];\n        }\n    } else {\n        ret[n] = ret[n - 1] + ret[n - 2] + ret[n + 1];\n        for (int i = n - 1; i > 0; --i) {\n            ret[i] = ret[i - 1] + ret[i - 2] + ret[i + 1];\n        }\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n < 0) return res;\n    res.push_back(1);\n    if (n == 0) return res;\n    res.push_back(3);\n    if (n == 1) return res;\n    res.push_back(2);\n    if (n == 2) return res;\n    long a = 1, b = 2, c = 3;\n    for (int i = 3; i <= n; i++) {\n        res.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = res[i - 1];\n    }\n    return res;",
    "    std::vector<long> ret;\n    if (n < 1) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(3);\n    if (n == 7) return ret;\n    ret.push_back(7);\n    if (n == 8) return ret;\n    ret.push_back(5);\n    if (n == 9) return ret;\n    ret.push_back(9);\n    if (n == 10) return ret;\n    ret.push_back(5);\n    if (n == 11) return ret;\n    ret.push_back(11);\n    if (n == 12) return ret;\n    ret.push_back(5);\n    if (n == 13) return ret;\n    ret.push_back(13);\n    if (n == 14) return ret;\n    ret.push_back(5);\n    if (n == 15) return ret;\n    ret.push_back(15);\n    if (n == 16) return ret;\n    ret.push_back(5);\n    if (n == 17) return ret;\n    ret.push_back(17);\n    if (n == 18) return ret;\n    ret.push_back(5);\n    if (n == 19) return ret;\n    ret.push_back(19);\n    if (n == 20) return ret;\n    ret.push_back(5);\n    if (n == 21) return ret;\n    ret.push_back(21);\n    if (n == 22) return ret;\n    ret.push_back(5);\n    if (n == 23) return ret;\n    ret.push_back(23",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(1);\n        ret.push_back(1);\n        ret.push_back(3);\n        ret.push_back(2);\n        ret.push_back(8);\n        return ret;\n    }\n    ret.push_back(1);\n    ret.push_back(1);\n    ret.push_back(3);\n    ret.push_back(2);\n    ret.push_back(8);\n    for (int i = 3; i <= n; i++) {\n        ret.push_back(ret[i - 1] + ret[i - 2] + ret[i - 3]);\n    }\n    return ret;",
    "    std::vector<long> res;\n    if (n <= 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long a = 1, b = 1, c = 1;\n    for (long i = 2; i <= n; ++i) {\n        long tmp = a + b + c;\n        a = b;\n        b = c;\n        c = tmp;\n        res.push_back(c);\n    }\n    return res;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 1;\n    ret[1] = 3;\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret[2] = 2;\n        for (int i = 3; i <= n; i += 2) {\n            ret[i] = ret[i - 2] + ret[i - 1] + ret[i + 1];\n        }\n    } else {\n        ret[2] = 1;\n        for (int i = 3; i <= n; i += 2) {\n            ret[i] = ret[i - 2] + ret[i - 1] + ret[i + 1];\n        }\n    }\n    return ret;",
    "    std::vector<long> ret;\n    if (n < 0) return ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 0) return ret;\n    if (n == 1) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(2);\n        ret.push_back(1);\n        ret.push_back(3);\n        return ret;\n    }\n    ret.push_back(3);\n    ret.push_back(1);\n    ret.push_back(2);\n    ret.push_back(3);\n    return ret;",
    "    std::vector<long> ret(n + 1);\n    ret[0] = 0;\n    ret[1] = 1;\n    ret[2] = 3;\n    for (int i = 3; i <= n; ++i) {\n        ret[i] = ret[i - 1] + ret[i - 2] + ret[i - 3];\n    }\n    return ret;",
    "    std::vector<long> result;\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n == 2) return result;\n    if (n % 2 == 0) {\n        result.push_back(result[n - 2] + result[n - 1] + result[n]);\n        return result;\n    }\n    result.push_back(result[n - 2] + result[n - 1] + result[n]);\n    return result;",
    "    std::vector<long> result;\n    if (n < 1) return result;\n    result.push_back(1);\n    if (n == 1) return result;\n    result.push_back(3);\n    if (n == 2) return result;\n    result.push_back(2);\n    if (n == 3) return result;\n    result.push_back(8);\n    if (n == 4) return result;\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; ++i) {\n        result.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = d;\n        d = result[i - 1] + result[i - 2] + result[i - 3];\n    }\n    return result;",
    "    std::vector<long> ret;\n    ret.push_back(1);\n    ret.push_back(3);\n    if (n == 1) return ret;\n    if (n == 2) return ret;\n    if (n % 2 == 0) {\n        ret.push_back(ret[n - 2] + ret[n - 1] + ret[n]);\n        return ret;\n    }\n    ret.push_back(ret[n - 2] + ret[n - 1] + ret[n]);\n    return ret;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) ans.push_back(2);\n    ans.push_back(3);\n    for (int i = 3; i <= n; i++) {\n        ans.push_back(ans[i - 1] + ans[i - 2] + ans[i - 3]);\n    }\n    return ans;",
    "    std::vector<long> ret;\n    if (n == 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    ret.push_back(8);\n    if (n == 4) return ret;\n    ret.push_back(3);\n    if (n == 5) return ret;\n    ret.push_back(5);\n    if (n == 6) return ret;\n    ret.push_back(8);\n    if (n == 7) return ret;\n    ret.push_back(13);\n    if (n == 8) return ret;\n    ret.push_back(21);\n    if (n == 9) return ret;\n    ret.push_back(34);\n    if (n == 10) return ret;\n    ret.push_back(55);\n    if (n == 11) return ret;\n    ret.push_back(89);\n    if (n == 12) return ret;\n    ret.push_back(144);\n    if (n == 13) return ret;\n    ret.push_back(233);\n    if (n == 14) return ret;\n    ret.push_back(377);\n    if (n == 15) return ret;\n    ret.push_back(610);\n    if (n == 16) return ret;\n    ret.push_back(987);\n    if (n == 17) return ret;\n    ret.push_back(1597);\n    if (n == 18) return ret;\n    ret.push_back(2584);\n    if (n == 19) return ret;\n    ret.push_back(4181);\n    if (n == 20) return ret;\n    ret.push_back(6765);\n    if (n == 21) return ret;\n    ret.push_back(10946);\n    if (n == 22) return ret;\n    ret.push_back(17710);\n    if (n == 23) return ret;\n    ret",
    "    std::vector<long> res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    if (n % 2 == 0) {\n        res.push_back(2);\n        res.push_back(3);\n        res.push_back(1);\n        for (int i = 3; i <= n; ++i) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i - 3]);\n        }\n    } else {\n        res.push_back(3);\n        res.push_back(1);\n        for (int i = 2; i <= n; ++i) {\n            res.push_back(res[i - 1] + res[i - 2] + res[i - 3]);\n        }\n    }\n    return res;",
    "    std::vector<long> res;\n    if (n < 0) return res;\n    if (n == 0) return res;\n    res.push_back(1);\n    if (n == 1) return res;\n    long t1 = 1, t2 = 1, t3 = 1;\n    for (long i = 2; i <= n; ++i) {\n        res.push_back(t1 + t2 + t3);\n        t3 = t2;\n        t2 = t1;\n        t1 = res[i - 1];\n    }\n    return res;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    if (n == 1) return {1};\n    if (n == 2) return {1, 3};\n    if (n == 3) return {1, 3, 2, 8};\n    long a = 1, b = 1, c = 1;\n    for (int i = 3; i <= n; i++) {\n        long t = a + b + c;\n        a = b;\n        b = c;\n        c = t;\n        ans.push_back(t);\n    }\n    return ans;",
    "    std::vector<long> ans;\n    if (n == 0) return ans;\n    ans.push_back(1);\n    if (n == 1) return ans;\n    if (n % 2 == 0) {\n        ans.push_back(2);\n        ans.push_back(3);\n        ans.push_back(1);\n        ans.push_back(8);\n        return ans;\n    }\n    ans.push_back(3);\n    ans.push_back(1);\n    ans.push_back(2);\n    ans.push_back(8);\n    return ans;",
    "    std::vector<long> result(n + 1);\n    result[0] = 0;\n    result[1] = 1;\n    result[2] = 2;\n    if (n == 0) return result;\n    if (n == 1) return result;\n    if (n % 2 == 0) {\n        result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n        return result;\n    }\n    result[n] = result[n - 1] + result[n - 2] + result[n + 1];\n    return result;",
    "    std::vector<long> result;\n    if (n == 0) {\n        result.push_back(0);\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    if (n % 2 == 0) {\n        result.push_back(2);\n        result.push_back(3);\n        result.push_back(1);\n        result.push_back(8);\n        return result;\n    }\n    result.push_back(1);\n    result.push_back(3);\n    result.push_back(2);\n    result.push_back(8);\n    return result;",
    "    std::vector<long> res;\n    if (n == 0) {\n        res.push_back(0);\n        return res;\n    }\n    res.push_back(1);\n    if (n == 1) {\n        return res;\n    }\n    if (n % 2 == 0) {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; ++i) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n    } else {\n        res.push_back(1 + n / 2);\n        for (int i = 1; i < n; ++i) {\n            res.push_back(res[i] + res[i - 1] + res[i + 1]);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    if (n < 1) {\n        return result;\n    }\n    result.push_back(1);\n    if (n == 1) {\n        return result;\n    }\n    result.push_back(3);\n    if (n == 2) {\n        return result;\n    }\n    result.push_back(2);\n    if (n == 3) {\n        return result;\n    }\n    result.push_back(8);\n    if (n == 4) {\n        return result;\n    }\n    long a = 1, b = 3, c = 2, d = 8;\n    for (long i = 5; i <= n; i++) {\n        result.push_back(a + b + c + d);\n        a = b;\n        b = c;\n        c = d;\n        d = result[i - 1];\n    }\n    return result;",
    "    std::vector<long> ret;\n    if (n <= 0) return ret;\n    ret.push_back(1);\n    if (n == 1) return ret;\n    ret.push_back(3);\n    if (n == 2) return ret;\n    ret.push_back(2);\n    if (n == 3) return ret;\n    long a = 1, b = 1, c = 3;\n    for (int i = 4; i <= n; i++) {\n        ret.push_back(a + b + c);\n        a = b;\n        b = c;\n        c = ret[i - 1] + a + b;\n    }\n    return ret;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
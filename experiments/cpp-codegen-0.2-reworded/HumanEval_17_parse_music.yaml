name: HumanEval_17_parse_music
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Input to this function is\
  \ a string representing musical notes in a special ASCII format.\n// Your task is\
  \ to parse this string and return vector of integers corresponding to how many beats\
  \ does each\n// not last.\n// Here is a legend:\n// 'o' - whole note, lasts four\
  \ beats\n// 'o|' - half note, lasts two beats\n// '.|' - quater note, lasts one\
  \ beat\n// >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n// [4, 2, 1, 2, 2,\
  \ 1, 1, 1, 1, 4, 4]\nstd::vector<long> parse_music(std::string music_string) {\n"
tests: "}\nint main() {\n    auto candidate = parse_music;\n    assert(candidate((\"\
  \")) == (std::vector<long>()));\n    assert(candidate((\"o o o o\")) == (std::vector<long>({(long)4,\
  \ (long)4, (long)4, (long)4})));\n    assert(candidate((\".| .| .| .|\")) == (std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1})));\n    assert(candidate((\"o| o| .| .| o o o o\"\
  )) == (std::vector<long>({(long)2, (long)2, (long)1, (long)1, (long)4, (long)4,\
  \ (long)4, (long)4})));\n    assert(candidate((\"o| .| o| .| o o| o o|\")) == (std::vector<long>({(long)2,\
  \ (long)1, (long)2, (long)1, (long)4, (long)2, (long)4, (long)2})));\n}\n"
completions: ["    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (ss >> note) {\n      \
    \  if (note == \".\") {\n            beats++;\n        } else if (note == \"o\"\
    ) {\n            beats += 4;\n        } else if (note == \"o|\") {\n         \
    \   beats += 2;\n        } else {\n            assert(false);\n        }\n   \
    \ }\n    result.push_back(beats);\n    return result;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string note;\n   \
    \ long beat_count = 0;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats.push_back(beat_count);\n            beat_count\
    \ = 0;\n        } else if (note == \"o\") {\n            beat_count += 4;\n  \
    \      } else if (note == \"o|\") {\n            beat_count += 2;\n        } else\
    \ if (note == \".|\") {\n            beat_count += 1;\n        }\n    }\n    beats.push_back(beat_count);\n\
    \    return beats;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \     } else if (*it == 'o|') {\n            result.push_back(2);\n          \
    \  it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else {\n            it++;\n        }\n    }\n    return result;", "   \
    \ std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   beats.push_back(4);\n        } else if (*it == 'o|') {\n            beats.push_back(2);\n\
    \        } else if (*it == '.') {\n            beats.push_back(1);\n        }\
    \ else {\n            beats.push_back(0);\n        }\n        ++it;\n    }\n \
    \   return beats;", "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            beats.push_back(4);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(2);\n        } else if (note == \".|\") {\n\
    \            beats.push_back(1);\n        } else {\n            assert(false);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            beats++;\n        }\
    \ else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        } else if (note == \".\") {\n\
    \            beats += 1;\n        }\n        result.push_back(beats);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            result.push_back(4);\n        } else\
    \ if (c == 'o|') {\n            result.push_back(2);\n        } else if (c ==\
    \ '.') {\n            result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            assert(false);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < music_string.length(); i++) {\n        if (music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        } else if (music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        } else if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats = 1;\n        } else if (note == \"o\"\
    ) {\n            beats = 4;\n        } else if (note == \"o|\") {\n          \
    \  beats = 2;\n        } else if (note == \".|\") {\n            beats = 1;\n\
    \        } else {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beat = 0;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            beats.push_back(beat);\n\
    \            beat = 0;\n        } else if (note == \"o\") {\n            beat\
    \ += 4;\n        } else if (note == \"o|\") {\n            beat += 2;\n      \
    \  } else if (note == \".|\") {\n            beat += 1;\n        }\n    }\n  \
    \  beats.push_back(beat);\n    return beats;", "    std::vector<long> beats;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            beats.push_back(1);\n\
    \        } else if (note == \"o\") {\n            beats.push_back(4);\n      \
    \  } else if (note == \"o|\") {\n            beats.push_back(2);\n        } else\
    \ if (note == \".\") {\n            beats.push_back(1);\n        } else if (note\
    \ == \"o|\") {\n            beats.push_back(2);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(1);\n        } else if (note == \"o|\") {\n\
    \            beats.push_back(2);\n        } else if (note == \"o|\") {\n     \
    \       beats.push_back(1);\n        } else if (note == \"o|\") {\n          \
    \  beats.push_back(2);\n        } else if (note == \"o|\") {\n            beats.push_back(1);\n\
    \        } else if (note == \"o|\") {\n            beats.push_back(2);\n     \
    \   } else if (note == \"o|\") {\n            beats.push_back(1);\n        } else\
    \ if (note == \"o|\") {\n            beats.push_back(2);\n        } else if (note\
    \ == \"o|\") {\n            beats.push_back(1);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(2);\n        } else if (note == \"o|\") {\n\
    \            beats.push_back(1);\n        } else if (note == \"o|\") {\n     \
    \       beats.push_back(2);\n        } else if (note == \"o|\") {\n          \
    \  beats.push_back(1);\n        } else if (note == \"o|\") {\n            beats.push_back(2);\n\
    \        } else if (note == \"o|\") {\n            beats.push_back(1);\n     \
    \   ", "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            beats.push_back(4);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(2);\n        } else if (note == \".|\") {\n\
    \            beats.push_back(1);\n        } else {\n            assert(false);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n            it++;\n   \
    \     } else if (*it == '|') {\n            result.push_back(2);\n           \
    \ it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else {\n            result.push_back(4);\n     \
    \       it++;\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats;\n\
    \    while (ss >> note) {\n        if (note == \".\") {\n            beats = 1;\n\
    \        } else if (note == \"o\") {\n            beats = 4;\n        } else if\
    \ (note == \"o|\") {\n            beats = 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats = 0;\n    while (std::getline(ss, note, ' ')) {\n    \
    \    if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            result.push_back(4);\n        } else if (note == \"\
    o|\") {\n            result.push_back(2);\n        } else if (note == \".|\")\
    \ {\n            result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> beats;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beat_count\
    \ = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\")\
    \ {\n            beat_count += 1;\n        } else if (note == \"o\") {\n     \
    \       beat_count += 4;\n        } else if (note == \"o|\") {\n            beat_count\
    \ += 2;\n        } else if (note == \".|\") {\n            beat_count += 1;\n\
    \        }\n        beats.push_back(beat_count);\n    }\n    return beats;", " \
    \   std::vector<long> result;\n    for (auto c : music_string) {\n        switch\
    \ (c) {\n            case 'o':\n                result.push_back(4);\n       \
    \         break;\n            case 'o|':\n                result.push_back(2);\n\
    \                break;\n            case '.':\n                result.push_back(1);\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            beats += 1;\n     \
    \   } else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (ss >> note) {\n        if (note\
    \ == \".\") {\n            beat_count += 1;\n        } else if (note == \"o\"\
    ) {\n            beat_count += 4;\n        } else if (note == \"o|\") {\n    \
    \        beat_count += 2;\n        } else {\n            assert(false);\n    \
    \    }\n        beats.push_back(beat_count);\n    }\n    return beats;", "   \
    \ std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            beats.push_back(1);\n        } else if (note == \"o\") {\n  \
    \          beats.push_back(4);\n        } else if (note == \"o|\") {\n       \
    \     beats.push_back(2);\n        } else if (note == \".|\") {\n            beats.push_back(1);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(0);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   beats.push_back(4);\n            it++;\n            if (it != music_string.end())\
    \ {\n                if (*it == '|') {\n                    beats.push_back(2);\n\
    \                    it++;\n                }\n                if (it != music_string.end())\
    \ {\n                    if (*it == '.') {\n                        beats.push_back(1);\n\
    \                        it++;\n                    }\n                }\n   \
    \         }\n        }\n        if (it != music_string.end()) {\n            if\
    \ (*it == '|') {\n                beats.push_back(2);\n                it++;\n\
    \            }\n            if (it != music_string.end()) {\n                if\
    \ (*it == '.') {\n                    beats.push_back(1);\n                  \
    \  it++;\n                }\n            }\n        }\n    }\n    return beats;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(1);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(0);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (ss >> note) {\n        if (note == \".\"\
    ) {\n            result.push_back(beats);\n            beats = 0;\n        } else\
    \ if (note == \"|\") {\n            beats += 2;\n        } else if (note == \"\
    o\") {\n            beats += 4;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (ss >> note) {\n        if (note == \".\") {\n\
    \            result.push_back(1);\n        } else if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else {\n            assert(false);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats;\n    while (ss >>\
    \ note) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"|\") {\n            beats\
    \ += 2;\n        } else if (note == \"o\") {\n            beats += 4;\n      \
    \  } else {\n            assert(false);\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats++;\n        } else\
    \ if (note == \"o\") {\n            beats += 4;\n        } else if (note == \"\
    o|\") {\n            beats += 2;\n        } else if (note == \".|\") {\n     \
    \       beats += 1;\n        }\n    }\n    result.push_back(beats);\n    return\
    \ result;", "    std::vector<long> result;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   result.push_back(4);\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \        } else if (*it == '.') {\n            result.push_back(1);\n        }\
    \ else {\n            result.push_back(0);\n        }\n        it++;\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (ss >> note) {\n      \
    \  if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    long beats = 0;\n  \
    \  for (auto c : music_string) {\n        if (c == '.') {\n            beats +=\
    \ 1;\n        } else if (c == '|') {\n            beats += 2;\n        } else\
    \ if (c == 'o') {\n            beats += 4;\n        } else {\n            result.push_back(beats);\n\
    \            beats = 0;\n        }\n    }\n    result.push_back(beats);\n    return\
    \ result;", "    std::vector<long> result;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == '.') {\n         \
    \   result.push_back(1);\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \        } else if (*it == 'o') {\n            result.push_back(4);\n        }\
    \ else {\n            result.push_back(0);\n        }\n        it++;\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n        } else if (*it\
    \ == '|') {\n            result.push_back(2);\n        } else if (*it == 'o')\
    \ {\n            result.push_back(4);\n        } else {\n            result.push_back(0);\n\
    \        }\n        ++it;\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (std::getline(ss, note, ' ')) {\n        if (note ==\
    \ \".\") {\n            beats = 1;\n        } else if (note == \"o\") {\n    \
    \        beats = 4;\n        } else if (note == \"o|\") {\n            beats =\
    \ 2;\n        } else {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        }\n        else if (note == \"o\") {\n      \
    \      beats += 4;\n        }\n        else if (note == \"o|\") {\n          \
    \  beats += 2;\n        }\n        else if (note == \".|\") {\n            beats\
    \ += 1;\n        }\n        else {\n            assert(false);\n        }\n  \
    \  }\n    result.push_back(beats);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (ss >> note) {\n        if (note == \".\") {\n     \
    \       beats = 1;\n        } else if (note == \"o\") {\n            beats = 4;\n\
    \        } else if (note == \"o|\") {\n            beats = 2;\n        } else\
    \ {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o' || *it == 'o' || *it == '.' || *it == '|') {\n            beats.push_back(1);\n\
    \        } else if (*it == 'o' || *it == 'o' || *it == '.' || *it == '|') {\n\
    \            beats.push_back(2);\n        } else if (*it == 'o' || *it == 'o'\
    \ || *it == '.' || *it == '|') {\n            beats.push_back(4);\n        } else\
    \ {\n            beats.push_back(8);\n        }\n        ++it;\n    }\n    return\
    \ beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            result.push_back(beats);\n    \
    \        beats = 0;\n        } else if (note == \"o\") {\n            beats +=\
    \ 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n        }\
    \ else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats;\n\
    \    while (ss >> note) {\n        if (note == \".\") {\n            beats = 1;\n\
    \        } else if (note == \"o\") {\n            beats = 4;\n        } else if\
    \ (note == \"o|\") {\n            beats = 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   beats.push_back(4);\n            it++;\n            if (it != music_string.end())\
    \ {\n                if (*it == 'o') {\n                    beats.push_back(2);\n\
    \                    it++;\n                    if (it != music_string.end())\
    \ {\n                        if (*it == '.') {\n                            beats.push_back(1);\n\
    \                            it++;\n                            if (it != music_string.end())\
    \ {\n                                if (*it == '|') {\n                     \
    \               beats.push_back(2);\n                                    it++;\n\
    \                                    if (it != music_string.end()) {\n       \
    \                                 if (*it == 'o') {\n                        \
    \                    beats.push_back(1);\n                                   \
    \         it++;\n                                            if (it != music_string.end())\
    \ {\n                                                if (*it == '|') {\n     \
    \                                               beats.push_back(2);\n        \
    \                                            it++;\n                         \
    \                           if (it != music_string.end()) {\n                \
    \                                        if (*it == '.') {\n                 \
    \                                           beats.push_back(1);\n            \
    \                                                it++;\n                     \
    \                                       if (it != music_string.end()) {\n    \
    \                                                            if (*it == '|') {\n\
    \                                                                    beats.push_back(2);\n\
    \                                                                    it++;\n \
    \                                                                   if (it !=\
    \ music_string.end()) {\n                                                    \
    \                    if (*it == 'o') {\n                                     \
    \                                       beats.push_back(1);\n                \
    \                                                            it++;\n         \
    \                                                                   if (it !=\
    \ music_string.end()) {\n                                                    \
    \                            if (*it == '|') {\n                             \
    \                                                       beats.push_back(2);\n\
    \                                                                            \
    \        it++;\n                               ", "    std::vector<long> beats;\n\
    \    long beat_count = 0;\n    for (int i = 0; i < music_string.size(); ++i) {\n\
    \        if (music_string[i] == 'o') {\n            beat_count += 4;\n       \
    \ } else if (music_string[i] == 'o|') {\n            beat_count += 2;\n      \
    \  } else if (music_string[i] == '.') {\n            beat_count += 1;\n      \
    \  }\n        beats.push_back(beat_count);\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n \
    \           beats += 1;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   }\n        result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == '.') {\n            beats.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            beats.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            beats.push_back(4);\n\
    \            it++;\n        } else {\n            beats.push_back(0);\n      \
    \  }\n    }\n    return beats;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beat = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            beat += 1;\n      \
    \  } else if (note == \"o\") {\n            beat += 4;\n        } else if (note\
    \ == \"o|\") {\n            beat += 2;\n        } else {\n            beat +=\
    \ 1;\n        }\n        beats.push_back(beat);\n    }\n    return beats;", " \
    \   std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(1);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == 'o') {\n            result.push_back(4);\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \ } else if (*it == '.') {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(0);\n        }\n        ++it;\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats += 1;\n        } else\
    \ if (note == \"o\") {\n            beats += 4;\n        } else if (note == \"\
    o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \     } else if (*it == 'o|') {\n            result.push_back(2);\n          \
    \  it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            beats += 1;\n        }\
    \ else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   beats.push_back(4);\n        } else if (*it == 'o|') {\n            beats.push_back(2);\n\
    \        } else if (*it == '.') {\n            beats.push_back(1);\n        }\
    \ else {\n            beats.push_back(0);\n        }\n        ++it;\n    }\n \
    \   return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            result.push_back(beats);\n    \
    \        beats = 0;\n        } else if (note == \"o\") {\n            beats +=\
    \ 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n        }\
    \ else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            beats.push_back(4);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(2);\n        } else if (note == \".|\") {\n\
    \            beats.push_back(1);\n        } else {\n            assert(false);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            beats += 1;\n     \
    \   } else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \         if (it != music_string.end() && *it == 'o') {\n                result.push_back(2);\n\
    \                it++;\n            }\n        } else if (*it == '.') {\n    \
    \        result.push_back(1);\n            it++;\n            if (it != music_string.end()\
    \ && *it == '|') {\n                result.push_back(2);\n                it++;\n\
    \            }\n        } else {\n            result.push_back(1);\n        }\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n\
    \        } else if (note == \"o\") {\n            result.push_back(4);\n     \
    \   } else if (note == \"o|\") {\n            result.push_back(2);\n        }\
    \ else if (note == \".|\") {\n            result.push_back(1);\n        } else\
    \ {\n            assert(false);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == 'o') {\n            beats.push_back(4);\n\
    \            it++;\n            if (it == music_string.end()) break;\n       \
    \     if (*it == 'o') {\n                beats.push_back(4);\n               \
    \ it++;\n                if (it == music_string.end()) break;\n              \
    \  if (*it == '.') {\n                    beats.push_back(1);\n              \
    \      it++;\n                    if (it == music_string.end()) break;\n     \
    \               if (*it == '|') {\n                        beats.push_back(2);\n\
    \                        it++;\n                        if (it == music_string.end())\
    \ break;\n                        if (*it == '|') {\n                        \
    \    beats.push_back(2);\n                            it++;\n                \
    \            if (it == music_string.end()) break;\n                          \
    \  if (*it == '.') {\n                                beats.push_back(1);\n  \
    \                              it++;\n                                if (it ==\
    \ music_string.end()) break;\n                                if (*it == '|')\
    \ {\n                                    beats.push_back(2);\n               \
    \                     it++;\n                                    if (it == music_string.end())\
    \ break;\n                                    if (*it == '|') {\n            \
    \                            beats.push_back(2);\n                           \
    \             it++;\n                                        if (it == music_string.end())\
    \ break;\n                                        if (*it == '.') {\n        \
    \                                    beats.push_back(1);\n                   \
    \                         it++;\n                                            if\
    \ (it == music_string.end()) break;\n                                        \
    \    if (*it == '|') {\n                                                beats.push_back(2);\n\
    \                                                it++;\n                     \
    \                           if (it == music_string.end()) break;\n           \
    \                                     if (*it == '|') {\n                    \
    \                                beats.push_back(2);\n                       \
    \                             it++;\n                                        \
    \            if (it == music_string.end()) break;", "    std::vector<long> result;\n\
    \    for (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        } else if (music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        } else if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (std::getline(ss, note, ' ')) {\n\
    \        if (note == \".\") {\n            beat_count += 1;\n        } else if\
    \ (note == \"o\") {\n            beat_count += 4;\n        } else if (note ==\
    \ \"o|\") {\n            beat_count += 2;\n        } else {\n            beat_count\
    \ += 1;\n        }\n        beats.push_back(beat_count);\n    }\n    return beats;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(1);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto c : music_string) {\n        switch (c) {\n            case 'o':\n   \
    \             result.push_back(4);\n                break;\n            case 'o|':\n\
    \                result.push_back(2);\n                break;\n            case\
    \ '.':\n                result.push_back(1);\n                break;\n       \
    \     default:\n                break;\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (int i = 0; i < music_string.size(); ++i)\
    \ {\n        if (music_string[i] == '.') {\n            result.push_back(1);\n\
    \        } else if (music_string[i] == '|') {\n            result.push_back(2);\n\
    \        } else if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \         if (it == music_string.end()) {\n                break;\n          \
    \  }\n            if (*it == '|') {\n                it++;\n                result.push_back(2);\n\
    \                if (it == music_string.end()) {\n                    break;\n\
    \                }\n                if (*it == '.') {\n                    it++;\n\
    \                    result.push_back(1);\n                    if (it == music_string.end())\
    \ {\n                        break;\n                    }\n                 \
    \   if (*it == '|') {\n                        it++;\n                       \
    \ result.push_back(2);\n                        if (it == music_string.end())\
    \ {\n                            break;\n                        }\n         \
    \               if (*it == '.') {\n                            it++;\n       \
    \                     result.push_back(1);\n                            if (it\
    \ == music_string.end()) {\n                                break;\n         \
    \                   }\n                            if (*it == '|') {\n       \
    \                         it++;\n                                result.push_back(2);\n\
    \                                if (it == music_string.end()) {\n           \
    \                         break;\n                                }\n        \
    \                        if (*it == '.') {\n                                 \
    \   it++;\n                                    result.push_back(1);\n        \
    \                            if (it == music_string.end()) {\n               \
    \                         break;\n                                    }\n    \
    \                                if (*it == '|') {\n                         \
    \               it++;\n                                        result.push_back(2);\n\
    \                                        if (it == music_string.end()) {\n   \
    \                                         break;\n                           \
    \             }\n                                        if (*it == '.') {\n \
    \                                           it++;\n                          \
    \                  result.push_back(1);\n                                    \
    \        if (it == music_string.end()) {\n                                   \
    \             break;\n                                            }\n        \
    \                                    if (*it == '|') {\n                     \
    \                           it++;\n                                          \
    \      result.push_back(2);\n                                                if\
    \ (it", "    std::vector<long> result;\n    for (int i = 0; i < music_string.length();\
    \ i++) {\n        if (music_string[i] == '.') {\n            result.push_back(1);\n\
    \        } else if (music_string[i] == '|') {\n            result.push_back(2);\n\
    \        } else if (music_string[i] == 'o') {\n            result.push_back(4);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            beats += 1;\n     \
    \   } else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n            it++;\n   \
    \     } else if (*it == '|') {\n            result.push_back(2);\n           \
    \ it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else {\n            result.push_back(0);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \     } else if (*it == 'o|') {\n            result.push_back(2);\n          \
    \  it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else {\n            it++;\n        }\n    }\n    return result;", "   \
    \ std::vector<long> beats;\n    long beat_count = 0;\n    for (char c : music_string)\
    \ {\n        if (c == 'o') {\n            beat_count += 4;\n        } else if\
    \ (c == 'o|') {\n            beat_count += 2;\n        } else if (c == '.') {\n\
    \            beat_count += 1;\n        } else if (c == '|') {\n            beat_count\
    \ += 1;\n        } else {\n            beat_count += 1;\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            beats += 1;\n        }\
    \ else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats = 0;\n    while (std::getline(ss, note, ' ')) {\n    \
    \    if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    long beat_count = 0;\n\
    \    for (int i = 0; i < music_string.size(); i++) {\n        if (music_string[i]\
    \ == '.') {\n            beat_count += 1;\n        } else if (music_string[i]\
    \ == '|') {\n            beat_count += 2;\n        } else if (music_string[i]\
    \ == 'o') {\n            beat_count += 4;\n        }\n        if (i == music_string.size()\
    \ - 1) {\n            result.push_back(beat_count);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   result.push_back(4);\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \        } else if (*it == '.') {\n            result.push_back(1);\n        }\
    \ else {\n            result.push_back(0);\n        }\n        ++it;\n    }\n\
    \    return result;", "    std::vector<long> beats;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            beats.push_back(1);\n            it++;\n    \
    \    } else if (*it == '|') {\n            beats.push_back(2);\n            it++;\n\
    \        } else if (*it == 'o') {\n            beats.push_back(4);\n         \
    \   it++;\n        } else if (*it == 'o' || *it == '.' || *it == '|') {\n    \
    \        beats.push_back(4);\n            it++;\n        } else {\n          \
    \  beats.push_back(4);\n            it++;\n        }\n    }\n    return beats;",
  "    std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   beats.push_back(4);\n            it++;\n            if (it == music_string.end())\
    \ break;\n            if (*it == '|') {\n                beats.push_back(2);\n\
    \                it++;\n                if (it == music_string.end()) break;\n\
    \                if (*it == '.') {\n                    beats.push_back(1);\n\
    \                    it++;\n                    if (it == music_string.end())\
    \ break;\n                    if (*it == '|') {\n                        beats.push_back(2);\n\
    \                        it++;\n                        if (it == music_string.end())\
    \ break;\n                        if (*it == '.') {\n                        \
    \    beats.push_back(1);\n                            it++;\n                \
    \            if (it == music_string.end()) break;\n                          \
    \  if (*it == '|') {\n                                beats.push_back(2);\n  \
    \                              it++;\n                                if (it ==\
    \ music_string.end()) break;\n                                if (*it == '.')\
    \ {\n                                    beats.push_back(1);\n               \
    \                     it++;\n                                    if (it == music_string.end())\
    \ break;\n                                    if (*it == '|') {\n            \
    \                            beats.push_back(2);\n                           \
    \             it++;\n                                        if (it == music_string.end())\
    \ break;\n                                        if (*it == '.') {\n        \
    \                                    beats.push_back(1);\n                   \
    \                         it++;\n                                            if\
    \ (it == music_string.end()) break;\n                                        \
    \    if (*it == '|') {\n                                                beats.push_back(2);\n\
    \                                                it++;\n                     \
    \                           if (it == music_string.end()) break;\n           \
    \                                     if (*it == '.') {\n                    \
    \                                beats.push_back(1);\n                       \
    \                             it++;\n                                        \
    \            if (it == music_string.end()) break;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats;\n\
    \    while (ss >> note) {\n        if (note == \".\") {\n            beats = 1;\n\
    \        } else if (note == \"o\") {\n            beats = 4;\n        } else if\
    \ (note == \"o|\") {\n            beats = 2;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(beats);\n            beats =\
    \ 0;\n        } else if (note == \"o\") {\n            beats += 4;\n        }\
    \ else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            result.push_back(4);\n        } else if (note == \"\
    o|\") {\n            result.push_back(2);\n        } else if (note == \".|\")\
    \ {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (ss >> note) {\n        if (note\
    \ == \".\") {\n            beats.push_back(beat_count);\n            beat_count\
    \ = 0;\n        } else if (note == \"o\") {\n            beat_count += 4;\n  \
    \      } else if (note == \"o|\") {\n            beat_count += 2;\n        } else\
    \ if (note == \".|\") {\n            beat_count += 1;\n        }\n    }\n    beats.push_back(beat_count);\n\
    \    return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (ss >> note) {\n      \
    \  if (note == \".\") {\n            beats += 1;\n        } else if (note == \"\
    o\") {\n            beats += 4;\n        } else if (note == \"o|\") {\n      \
    \      beats += 2;\n        }\n        result.push_back(beats);\n    }\n    return\
    \ result;", "    std::vector<long> result;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o') {\n         \
    \   result.push_back(4);\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \        } else if (*it == '.') {\n            result.push_back(1);\n        }\
    \ else {\n            result.push_back(0);\n        }\n        it++;\n    }\n\
    \    return result;", "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beat_count = 0;\n    while (ss >> note) {\n \
    \       if (note == \".\") {\n            beat_count += 1;\n        } else if\
    \ (note == \"o\") {\n            beat_count += 4;\n        } else if (note ==\
    \ \"o|\") {\n            beat_count += 2;\n        } else if (note == \".|\")\
    \ {\n            beat_count += 1;\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    long beats = 0;\n\
    \    for (auto c : music_string) {\n        if (c == '.') {\n            beats\
    \ += 1;\n        } else if (c == '|') {\n            beats += 2;\n        } else\
    \ if (c == 'o') {\n            beats += 4;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(0);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        } else {\n            assert(false);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> beats;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            beats.push_back(1);\n        } else if (*it ==\
    \ '|') {\n            beats.push_back(2);\n        } else if (*it == 'o') {\n\
    \            beats.push_back(4);\n        } else {\n            beats.push_back(0);\n\
    \        }\n        ++it;\n    }\n    return beats;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n            beats\
    \ += 1;\n        } else if (note == \"o\") {\n            beats += 4;\n      \
    \  } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        } else {\n            assert(false);\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats = 1;\n        } else if (note == \"o\"\
    ) {\n            beats = 4;\n        } else if (note == \"o|\") {\n          \
    \  beats = 2;\n        } else {\n            assert(false);\n        }\n     \
    \   result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (int i = 0; i < music_string.length(); ++i) {\n        if (music_string[i]\
    \ == '.') {\n            result.push_back(1);\n        } else if (music_string[i]\
    \ == '|') {\n            result.push_back(2);\n        } else if (music_string[i]\
    \ == 'o') {\n            result.push_back(4);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (ss >> note) {\n        if (note == \".\") {\n            beats.push_back(1);\n\
    \        } else if (note == \"o\") {\n            beats.push_back(4);\n      \
    \  } else if (note == \"o|\") {\n            beats.push_back(2);\n        } else\
    \ {\n            assert(false);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string note;\n   \
    \ long beat = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note\
    \ == \".\") {\n            beat += 1;\n        } else if (note == \"o\") {\n \
    \           beat += 4;\n        } else if (note == \"o|\") {\n            beat\
    \ += 2;\n        } else {\n            assert(false);\n        }\n        beats.push_back(beat);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\")\
    \ {\n            beats += 1;\n        } else if (note == \"o\") {\n          \
    \  beats += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n\
    \        }\n        result.push_back(beats);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats = 0;\n    while (std::getline(ss, note, ' ')) {\n    \
    \    if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        } else {\n            assert(false);\n\
    \        }\n    }\n    result.push_back(beats);\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (std::getline(ss, note, ' ')) {\n        if (note ==\
    \ \".\") {\n            beats = 1;\n        } else if (note == \"o\") {\n    \
    \        beats = 4;\n        } else if (note == \"o|\") {\n            beats =\
    \ 2;\n        } else {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> beats;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beat_count\
    \ = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\")\
    \ {\n            beat_count++;\n        } else if (note == \"o\") {\n        \
    \    beat_count += 4;\n        } else if (note == \"o|\") {\n            beat_count\
    \ += 2;\n        } else {\n            beat_count += 1;\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(0);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            assert(false);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == 'o') {\n            result.push_back(4);\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \ } else if (*it == '.') {\n            result.push_back(1);\n        } else if\
    \ (*it == '|') {\n            result.push_back(2);\n        } else {\n       \
    \     result.push_back(1);\n        }\n        ++it;\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (ss >> note) {\n        if (note\
    \ == \".\") {\n            beat_count += 1;\n        } else if (note == \"o\"\
    ) {\n            beat_count += 4;\n        } else if (note == \"o|\") {\n    \
    \        beat_count += 2;\n        } else if (note == \".|\") {\n            beat_count\
    \ += 1;\n        }\n        beats.push_back(beat_count);\n    }\n    return beats;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (ss >> note) {\n        if (note\
    \ == \".\") {\n            beats.push_back(beat_count);\n            beat_count\
    \ = 0;\n        } else if (note == \"o\") {\n            beat_count += 4;\n  \
    \      } else if (note == \"o|\") {\n            beat_count += 2;\n        } else\
    \ if (note == \".|\") {\n            beat_count += 1;\n        }\n    }\n    beats.push_back(beat_count);\n\
    \    return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats += 1;\n        } else\
    \ if (note == \"o\") {\n            beats += 4;\n        } else if (note == \"\
    o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o' || *it == 'o' || *it == '.' || *it == '|') {\n            beats.push_back(4);\n\
    \        } else if (*it == 'o' || *it == 'o' || *it == '.' || *it == '|') {\n\
    \            beats.push_back(2);\n        } else if (*it == 'o' || *it == 'o'\
    \ || *it == '.' || *it == '|') {\n            beats.push_back(1);\n        }\n\
    \        ++it;\n    }\n    return beats;", "    std::vector<long> result;\n  \
    \  std::stringstream ss(music_string);\n    std::string note;\n    long beats;\n\
    \    while (std::getline(ss, note, ' ')) {\n        if (note == \".\") {\n   \
    \         beats = 1;\n        } else if (note == \"o\") {\n            beats =\
    \ 4;\n        } else if (note == \"o|\") {\n            beats = 2;\n        }\
    \ else if (note == \".|\") {\n            beats = 1;\n        } else {\n     \
    \       assert(false);\n        }\n        result.push_back(beats);\n    }\n \
    \   return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            result.push_back(4);\n        } else if (note == \"\
    o|\") {\n            result.push_back(2);\n        } else if (note == \".|\")\
    \ {\n            result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    for\
    \ (auto c : music_string) {\n        if (c == 'o') {\n            result.push_back(4);\n\
    \        } else if (c == 'o|') {\n            result.push_back(2);\n        }\
    \ else if (c == '.') {\n            result.push_back(1);\n        } else {\n \
    \           result.push_back(0);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> beats;\n    std::stringstream ss(music_string);\n    long\
    \ beat_count = 0;\n    while (ss.good()) {\n        std::string note;\n      \
    \  ss >> note;\n        if (note == \".\") {\n            beat_count += 1;\n \
    \       } else if (note == \"o\") {\n            beat_count += 4;\n        } else\
    \ if (note == \"o|\") {\n            beat_count += 2;\n        } else if (note\
    \ == \".|\") {\n            beat_count += 1;\n        } else {\n            assert(false);\n\
    \        }\n        beats.push_back(beat_count);\n    }\n    return beats;", " \
    \   std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == '.') {\n         \
    \   beats.push_back(1);\n        } else if (*it == '|') {\n            beats.push_back(2);\n\
    \        } else if (*it == 'o') {\n            beats.push_back(4);\n        }\n\
    \        ++it;\n    }\n    return beats;", "    std::vector<long> beats;\n   \
    \ long beat_count = 0;\n    std::string current_note;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            beat_count += 4;\n            current_note\
    \ = \"o\";\n        } else if (c == 'o|') {\n            beat_count += 2;\n  \
    \          current_note = \"o|\";\n        } else if (c == '.') {\n          \
    \  beat_count += 1;\n            current_note = \".\";\n        } else {\n   \
    \         beat_count += 1;\n            current_note = \"o\";\n        }\n   \
    \     beats.push_back(beat_count);\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long count = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note\
    \ == \".\") {\n            result.push_back(count);\n            count = 0;\n\
    \        } else if (note == \"o\") {\n            count += 4;\n        } else\
    \ if (note == \"o|\") {\n            count += 2;\n        } else if (note == \"\
    .|\") {\n            count += 1;\n        }\n    }\n    result.push_back(count);\n\
    \    return result;", "    std::vector<long> result;\n    for (int i = 0; i <\
    \ music_string.size(); ++i) {\n        if (music_string[i] == '.') {\n       \
    \     result.push_back(1);\n        } else if (music_string[i] == '|') {\n   \
    \         result.push_back(2);\n        } else if (music_string[i] == 'o') {\n\
    \            result.push_back(4);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats = 0;\n    while (std::getline(ss, note, ' ')) {\n    \
    \    if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            result.push_back(beats);\n    \
    \        beats = 0;\n        } else if (note == \"o\") {\n            beats +=\
    \ 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n        }\
    \ else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            beats = 1;\n        } else if (note\
    \ == \"..\") {\n            beats = 2;\n        } else if (note == \"...\") {\n\
    \            beats = 3;\n        } else if (note == \"....\") {\n            beats\
    \ = 4;\n        } else if (note == \".....\") {\n            beats = 5;\n    \
    \    } else if (note == \"......\") {\n            beats = 6;\n        } else\
    \ if (note == \".......\") {\n            beats = 7;\n        } else if (note\
    \ == \"........\") {\n            beats = 8;\n        } else if (note == \".........\"\
    ) {\n            beats = 9;\n        } else if (note == \"..........\") {\n  \
    \          beats = 10;\n        } else if (note == \"...........\") {\n      \
    \      beats = 11;\n        } else if (note == \"............\") {\n         \
    \   beats = 12;\n        } else if (note == \".............\") {\n           \
    \ beats = 13;\n        } else if (note == \"..............\") {\n            beats\
    \ = 14;\n        } else if (note == \"...............\") {\n            beats\
    \ = 15;\n        } else if (note == \"................\") {\n            beats\
    \ = 16;\n        } else if (note == \".................\") {\n            beats\
    \ = 17;\n        } else if (note == \"..................\") {\n            beats\
    \ = 18;\n        } else if (note == \"...................\") {\n            beats\
    \ = 19;\n        } else if (note == \"....................\") {\n            beats\
    \ = 20;\n        } else if (note == \".....................\") {\n           \
    \ beats = 21;\n        } else if (note == \"......................\") {\n    \
    \        beats = 22;\n        } else if (note == \".......................\")\
    \ {\n            beats = 23;\n        ", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (ss >> note) {\n       \
    \ if (note == \".\") {\n            beats.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            beats.push_back(4);\n        } else if (note == \"\
    o|\") {\n            beats.push_back(2);\n        } else {\n            assert(false);\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    long\
    \ beats = 0;\n    for (int i = 0; i < music_string.size(); i++) {\n        if\
    \ (music_string[i] == '.') {\n            beats += 1;\n        } else if (music_string[i]\
    \ == '|') {\n            beats += 2;\n        } else if (music_string[i] == 'o')\
    \ {\n            beats += 4;\n        }\n        result.push_back(beats);\n  \
    \  }\n    return result;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beat_count = 0;\n    while\
    \ (ss >> note) {\n        if (note == \".\") {\n            beat_count += 1;\n\
    \        } else if (note == \"o\") {\n            beat_count += 4;\n        }\
    \ else if (note == \"o|\") {\n            beat_count += 2;\n        } else if\
    \ (note == \".|\") {\n            beat_count += 1;\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats.push_back(1);\n   \
    \     } else if (note == \"o\") {\n            beats.push_back(4);\n        }\
    \ else if (note == \"o|\") {\n            beats.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            beats.push_back(1);\n        } else {\n \
    \           assert(false);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (std::getline(ss, note, ' ')) {\n        if (note ==\
    \ \".\") {\n            result.push_back(beats);\n            beats = 0;\n   \
    \     } else if (note == \"o\") {\n            beats += 4;\n        } else if\
    \ (note.size() > 1 && note[1] == '|') {\n            beats += 2;\n        } else\
    \ if (note.size() > 2 && note[2] == '|') {\n            beats += 1;\n        }\n\
    \    }\n    result.push_back(beats);\n    return result;", "    std::vector<long>\
    \ result;\n    for (auto c : music_string) {\n        if (c == '.') {\n      \
    \      result.push_back(1);\n        } else if (c == '|') {\n            result.push_back(2);\n\
    \        } else if (c == 'o') {\n            result.push_back(4);\n        } else\
    \ {\n            result.push_back(0);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(1);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (ss >> note) {\n        ss >> beats;\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            result.push_back(beats);\n    \
    \        beats = 0;\n        } else if (note == \"o\") {\n            beats +=\
    \ 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n        }\
    \ else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n        } else if (*it\
    \ == 'o') {\n            result.push_back(4);\n        } else if (*it == 'o' &&\
    \ it + 1 != music_string.end() && *(it + 1) == '|') {\n            result.push_back(2);\n\
    \            it += 2;\n        } else {\n            result.push_back(1);\n  \
    \      }\n        ++it;\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else {\n            assert(false);\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            beats = 1;\n        } else if (note\
    \ == \"o\") {\n            beats = 4;\n        } else if (note == \"o|\") {\n\
    \            beats = 2;\n        } else {\n            assert(false);\n      \
    \  }\n        result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == '.') {\n            beats.push_back(1);\n\
    \        } else if (*it == '|') {\n            beats.push_back(2);\n        }\
    \ else if (*it == 'o') {\n            beats.push_back(4);\n        }\n       \
    \ ++it;\n    }\n    return beats;", "    std::vector<long> result;\n    long beat_count\
    \ = 0;\n    for (auto c : music_string) {\n        if (c == 'o') {\n         \
    \   beat_count += 4;\n        } else if (c == 'o|') {\n            beat_count\
    \ += 2;\n        } else if (c == '.') {\n            beat_count += 1;\n      \
    \  } else {\n            assert(false);\n        }\n        result.push_back(beat_count);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(0);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    long beats = 0;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            beats += 4;\n        } else if (c ==\
    \ 'o|') {\n            beats += 2;\n        } else if (c == '.') {\n         \
    \   beats += 1;\n        } else {\n            beats += 0;\n        }\n      \
    \  result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n \
    \           beats += 1;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   }\n        result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  while (std::getline(ss, note, ' ')) {\n        if (note == \".\") {\n     \
    \       result.push_back(1);\n        } else if (note == \"o\") {\n          \
    \  result.push_back(4);\n        } else if (note == \"o|\") {\n            result.push_back(2);\n\
    \        } else if (note == \".|\") {\n            result.push_back(1);\n    \
    \    } else {\n            result.push_back(0);\n        }\n    }\n    return\
    \ result;", "    std::vector<long> beats;\n    long beat = 0;\n    for (auto c\
    \ : music_string) {\n        if (c == '.') {\n            beat += 1;\n       \
    \ } else if (c == '|') {\n            beat += 2;\n        } else if (c == 'o')\
    \ {\n            beat += 4;\n        }\n        beats.push_back(beat);\n    }\n\
    \    return beats;", "    std::vector<long> beats;\n    long beat = 0;\n    for\
    \ (auto c : music_string) {\n        if (c == 'o') {\n            beat += 4;\n\
    \        } else if (c == 'o|') {\n            beat += 2;\n        } else if (c\
    \ == '.') {\n            beat += 1;\n        } else {\n            beat += 0;\n\
    \        }\n        beats.push_back(beat);\n    }\n    return beats;", "    std::vector<long>\
    \ beats;\n    long beat = 0;\n    for (auto c : music_string) {\n        if (c\
    \ == 'o') {\n            beat += 4;\n        } else if (c == 'o|') {\n       \
    \     beat += 2;\n        } else if (c == '.') {\n            beat += 1;\n   \
    \     }\n        beats.push_back(beat);\n    }\n    return beats;", "    std::vector<long>\
    \ beats;\n    std::stringstream ss(music_string);\n    std::string note;\n   \
    \ long beat_count = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n\
    \            beat_count += 1;\n        } else if (note == \"o\") {\n         \
    \   beat_count += 4;\n        } else if (note == \"o|\") {\n            beat_count\
    \ += 2;\n        } else {\n            assert(false);\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    for (auto c :\
    \ music_string) {\n        switch (c) {\n            case 'o':\n            case\
    \ 'o|':\n            case '.':\n            case '|':\n                result.push_back(4);\n\
    \                break;\n            case 'o|.':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o|o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|o|o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o|o|o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|o|o|o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o|o|o|o|o':\n                result.push_back(1);\n\
    \                break;\n            case 'o|o|o|o|o|o|o|':\n                result.push_back(2);\n\
    \                break;\n            case 'o|o|o|o|o|o|o|o':\n               \
    \ result.push_back(1);\n                break;\n            case 'o|o|o|o|o|o|o|o|':\n\
    \                result.push_back(2);\n                break;\n            case\
    \ 'o|o|o|o|o|o|o|o|o':\n                ", "    std::vector<long> result;\n  \
    \  std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\")\
    \ {\n            result.push_back(beats);\n            beats = 0;\n        } else\
    \ if (note == \"o\") {\n            beats += 4;\n        } else if (note == \"\
    o|\") {\n            beats += 2;\n        } else if (note == \".|\") {\n     \
    \       beats += 1;\n        }\n    }\n    result.push_back(beats);\n    return\
    \ result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (ss >> note) {\n      \
    \  if (note == \".\") {\n            result.push_back(beats);\n            beats\
    \ = 0;\n        } else if (note == \"o\") {\n            beats += 4;\n       \
    \ } else if (note == \"o|\") {\n            beats += 2;\n        } else if (note\
    \ == \".|\") {\n            beats += 1;\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> beats;\n    long beat_count = 0;\n\
    \    std::string::iterator it = music_string.begin();\n    while (it != music_string.end())\
    \ {\n        if (*it == '.') {\n            beat_count += 1;\n        } else if\
    \ (*it == '|') {\n            beat_count += 2;\n        } else if (*it == 'o')\
    \ {\n            beat_count += 4;\n        }\n        beats.push_back(beat_count);\n\
    \        ++it;\n    }\n    return beats;", "    std::vector<long> result;\n  \
    \  std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\")\
    \ {\n            beats += 1;\n        } else if (note == \"o\") {\n          \
    \  beats += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n\
    \        } else if (note == \".|\") {\n            beats += 1;\n        }\n  \
    \      result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n            if (it != music_string.end()) {\n            \
    \    if (*it == 'o') {\n                    result.push_back(2);\n           \
    \         it++;\n                } else if (*it == '.') {\n                  \
    \  result.push_back(1);\n                    it++;\n                }\n      \
    \      }\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n            if (it != music_string.end()) {\n            \
    \    if (*it == 'o') {\n                    result.push_back(2);\n           \
    \         it++;\n                } else if (*it == '.') {\n                  \
    \  result.push_back(1);\n                    it++;\n                }\n      \
    \      }\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n            if (it != music_string.end()) {\n            \
    \    if (*it == 'o') {\n                    result.push_back(2);\n           \
    \         it++;\n                } else if (*it == '.') {\n                  \
    \  result.push_back(1);\n                    it++;\n                }\n      \
    \      }\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    std::string::iterator it = music_string.begin();\n    while (it != music_string.end())\
    \ {\n        if (*it == 'o') {\n            result.push_back(4);\n           \
    \ it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else {\n            it++;\n        }\n    }\n    return result;", "   \
    \ std::vector<long> beats;\n    long beat = 0;\n    for (auto c : music_string)\
    \ {\n        if (c == 'o') {\n            beat += 4;\n        } else if (c ==\
    \ 'o|') {\n            beat += 2;\n        } else if (c == '.') {\n          \
    \  beat += 1;\n        } else {\n            beat += 0;\n        }\n        beats.push_back(beat);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long count = 0;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            count += 1;\n     \
    \   } else if (note == \"o\") {\n            count += 4;\n        } else if (note\
    \ == \"o|\") {\n            count += 2;\n        } else if (note == \".|\") {\n\
    \            count += 1;\n        }\n        result.push_back(count);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    for (auto c : music_string)\
    \ {\n        switch (c) {\n            case 'o':\n                result.push_back(4);\n\
    \                break;\n            case 'o|':\n                result.push_back(2);\n\
    \                break;\n            case '.':\n                result.push_back(1);\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats;\n    while (ss >>\
    \ note) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n\
    \        } else if (note == \"o\") {\n            result.push_back(4);\n     \
    \   } else if (note == \"o|\") {\n            result.push_back(2);\n        }\
    \ else if (note == \".|\") {\n            result.push_back(1);\n        } else\
    \ {\n            result.push_back(0);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    while (std::getline(ss, note, ' ')) {\n        if (note == \".\"\
    ) {\n            result.push_back(1);\n        } else if (note == \"o\") {\n \
    \           result.push_back(4);\n        } else if (note == \"o|\") {\n     \
    \       result.push_back(2);\n        } else if (note == \".|\") {\n         \
    \   result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats.push_back(1);\n   \
    \     } else if (note == \"o\") {\n            beats.push_back(4);\n        }\
    \ else if (note == \"o|\") {\n            beats.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            beats.push_back(1);\n        }\n    }\n \
    \   return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (ss >> note) {\n        if (note == \".\") {\n\
    \            result.push_back(1);\n        } else if (note == \"o\") {\n     \
    \       result.push_back(4);\n        } else if (note == \"o|\") {\n         \
    \   result.push_back(2);\n        } else {\n            assert(false);\n     \
    \   }\n    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            result.push_back(4);\n            it++;\n   \
    \     } else if (*it == 'o|') {\n            result.push_back(2);\n          \
    \  it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(4);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats = 0;\n    while (std::getline(ss, note, ' ')) {\n    \
    \    if (note == \".\") {\n            beats += 1;\n        } else if (note ==\
    \ \"o\") {\n            beats += 4;\n        } else if (note == \"o|\") {\n  \
    \          beats += 2;\n        } else {\n            assert(false);\n       \
    \ }\n        result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (auto it = music_string.begin(); it != music_string.end();\
    \ ++it) {\n        switch (*it) {\n            case 'o':\n                result.push_back(4);\n\
    \                break;\n            case 'o|':\n                result.push_back(2);\n\
    \                break;\n            case '.':\n                result.push_back(1);\n\
    \                break;\n            default:\n                break;\n      \
    \  }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        }\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (ss >> note) {\n      \
    \  if (note == \".\") {\n            beats += 1;\n        } else if (note == \"\
    o\") {\n            beats += 4;\n        } else if (note == \"o|\") {\n      \
    \      beats += 2;\n        }\n        result.push_back(beats);\n    }\n    return\
    \ result;", "    std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == 'o' || *it == 'o|'\
    \ || *it == '.' || *it == '|') {\n            beats.push_back(4);\n        } else\
    \ if (*it == 'o' || *it == 'o|' || *it == '.' || *it == '|') {\n            beats.push_back(2);\n\
    \        } else if (*it == 'o' || *it == 'o|' || *it == '.' || *it == '|') {\n\
    \            beats.push_back(1);\n        }\n        ++it;\n    }\n    return\
    \ beats;", "    std::vector<long> beats;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == '.') {\n         \
    \   beats.push_back(1);\n            it++;\n        } else if (*it == '|') {\n\
    \            beats.push_back(2);\n            it++;\n        } else if (*it ==\
    \ 'o') {\n            beats.push_back(4);\n            it++;\n        } else {\n\
    \            beats.push_back(0);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ beats;\n    long beat = 0;\n    for (int i = 0; i < music_string.size(); i++)\
    \ {\n        if (music_string[i] == '.') {\n            beat += 1;\n        }\
    \ else if (music_string[i] == '|') {\n            beat += 2;\n        } else if\
    \ (music_string[i] == 'o') {\n            beat += 4;\n        }\n        beats.push_back(beat);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n            it++;\n   \
    \     } else if (*it == '|') {\n            result.push_back(2);\n           \
    \ it++;\n        } else if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else {\n            result.push_back(0);\n     \
    \       it++;\n        }\n    }\n    return result;", "    std::vector<long> result;\n\
    \    long beats = 0;\n    for (auto c : music_string) {\n        if (c == '.')\
    \ {\n            beats += 1;\n        } else if (c == '|') {\n            beats\
    \ += 2;\n        } else if (c == 'o') {\n            beats += 4;\n        } else\
    \ {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    long beat = 0;\n\
    \    for (auto c : music_string) {\n        if (c == '.') {\n            beat\
    \ += 1;\n        } else if (c == 'o') {\n            beat += 4;\n        } else\
    \ if (c == 'o|') {\n            beat += 2;\n        }\n        beats.push_back(beat);\n\
    \    }\n    return beats;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beat_count = 0;\n    while\
    \ (std::getline(ss, note, ' ')) {\n        if (note == \".\") {\n            beat_count\
    \ += 1;\n        } else if (note == \"o\") {\n            beat_count += 4;\n \
    \       } else if (note == \"o|\") {\n            beat_count += 2;\n        }\
    \ else {\n            assert(false);\n        }\n        beats.push_back(beat_count);\n\
    \    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            result.push_back(0);\n        }\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (ss >> note) {\n        if (note == \".\"\
    ) {\n            result.push_back(beats);\n            beats = 0;\n        } else\
    \ if (note == \"o\") {\n            beats += 4;\n        } else if (note == \"\
    o|\") {\n            beats += 2;\n        } else if (note == \".|\") {\n     \
    \       beats += 1;\n        }\n    }\n    result.push_back(beats);\n    return\
    \ result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        } else {\n\
    \            assert(false);\n        }\n    }\n    result.push_back(beats);\n\
    \    return result;", "    std::vector<long> beats;\n    long beat_count = 0;\n\
    \    std::string current_note;\n    for (int i = 0; i < music_string.size(); i++)\
    \ {\n        if (music_string[i] == '.') {\n            beat_count++;\n      \
    \      current_note = \"\";\n        } else if (music_string[i] == '|') {\n  \
    \          beat_count++;\n            current_note = \"\";\n        } else if\
    \ (music_string[i] == 'o') {\n            beat_count += 4;\n            current_note\
    \ = \"\";\n        } else if (music_string[i] == 'o' && music_string[i + 1] ==\
    \ '|') {\n            beat_count += 2;\n            current_note = \"\";\n   \
    \     } else if (music_string[i] == 'o' && music_string[i + 1] == '.') {\n   \
    \         beat_count += 1;\n            current_note = \"\";\n        } else {\n\
    \            current_note += music_string[i];\n        }\n        if (beat_count\
    \ > 0) {\n            beats.push_back(beat_count);\n            beat_count = 0;\n\
    \        }\n    }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::stringstream ss(music_string);\n    std::string note;\n    long beats\
    \ = 0;\n    while (ss >> note) {\n        if (note == \".\") {\n            beats\
    \ += 1;\n        } else if (note == \"o\") {\n            beats += 4;\n      \
    \  } else if (note == \"o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            assert(false);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    for (auto c : music_string) {\n        switch (c) {\n         \
    \   case 'o':\n                result.push_back(4);\n                break;\n\
    \            case 'o|':\n                result.push_back(2);\n              \
    \  break;\n            case '.':\n                result.push_back(1);\n     \
    \           break;\n            default:\n                break;\n        }\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            beats.push_back(0);\n   \
    \     } else if (note == \"o\") {\n            beats.push_back(4);\n        }\
    \ else if (note == \"o|\") {\n            beats.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            beats.push_back(1);\n        } else {\n \
    \           assert(false);\n        }\n    }\n    return beats;", "    std::vector<long>\
    \ result;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == 'o') {\n            result.push_back(4);\n\
    \            it++;\n        } else if (*it == 'o|') {\n            result.push_back(2);\n\
    \            it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else if (*it == 'o') {\n            result.push_back(4);\n            it++;\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \     it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else if (*it == 'o') {\n            result.push_back(4);\n            it++;\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \     it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else if (*it == 'o') {\n            result.push_back(4);\n            it++;\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \     it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    } else if (*it == 'o') {\n            result.push_back(4);\n            it++;\n\
    \        } else if (*it == 'o|') {\n            result.push_back(2);\n       \
    \     it++;\n        } else if (*it == '.') {\n            result.push_back(1);\n\
    \            it++;\n        } else if (*it == '|') {\n            it++;\n    \
    \    ", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long count = 0;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            count++;\n        } else\
    \ if (note == \"o\") {\n            count += 4;\n        } else if (note == \"\
    o|\") {\n            count += 2;\n        } else {\n            count += 1;\n\
    \        }\n        result.push_back(count);\n    }\n    return result;", "  \
    \  std::vector<long> result;\n    std::string::iterator it = music_string.begin();\n\
    \    while (it != music_string.end()) {\n        if (*it == '.') {\n         \
    \   result.push_back(1);\n        } else if (*it == '|') {\n            result.push_back(2);\n\
    \        } else if (*it == 'o') {\n            result.push_back(4);\n        }\n\
    \        it++;\n    }\n    return result;", "    std::vector<long> result;\n \
    \   std::stringstream ss(music_string);\n    std::string note;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n\
    \        } else if (note == \"o\") {\n            result.push_back(4);\n     \
    \   } else if (note == \"o|\") {\n            result.push_back(2);\n        }\
    \ else if (note == \".|\") {\n            result.push_back(1);\n        } else\
    \ {\n            result.push_back(0);\n        }\n    }\n    return result;",
  "    std::vector<long> beats;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beat_count = 0;\n    while (ss >> note) {\n        if (note\
    \ == \".\") {\n            beat_count += 1;\n        } else if (note == \"o\"\
    ) {\n            beat_count += 4;\n        } else if (note == \"o|\") {\n    \
    \        beat_count += 2;\n        }\n        beats.push_back(beat_count);\n \
    \   }\n    return beats;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    while (std::getline(ss, note,\
    \ ' ')) {\n        if (note == \".\") {\n            result.push_back(1);\n  \
    \      } else if (note == \"o\") {\n            result.push_back(4);\n       \
    \ } else if (note == \"o|\") {\n            result.push_back(2);\n        } else\
    \ if (note == \".|\") {\n            result.push_back(1);\n        } else {\n\
    \            assert(false);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    long beat_count = 0;\n    for (auto c : music_string) {\n      \
    \  if (c == 'o') {\n            beat_count += 4;\n        } else if (c == 'o|')\
    \ {\n            beat_count += 2;\n        } else if (c == '.') {\n          \
    \  beat_count += 1;\n        }\n        beats.push_back(beat_count);\n    }\n\
    \    return beats;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    long beats;\n    while (std::getline(ss, note, ' '))\
    \ {\n        if (note == \".\") {\n            beats = 1;\n        } else if (note\
    \ == \"o\") {\n            beats = 4;\n        } else if (note == \"o|\") {\n\
    \            beats = 2;\n        } else {\n            assert(false);\n      \
    \  }\n        result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    std::string::iterator it = music_string.begin();\n    while (it\
    \ != music_string.end()) {\n        if (*it == '.') {\n            beats.push_back(1);\n\
    \        } else if (*it == '|') {\n            beats.push_back(2);\n        }\
    \ else if (*it == 'o') {\n            beats.push_back(4);\n        }\n       \
    \ it++;\n    }\n    return beats;", "    std::vector<long> result;\n    for (auto\
    \ c : music_string) {\n        if (c == 'o') {\n            result.push_back(4);\n\
    \        } else if (c == 'o|') {\n            result.push_back(2);\n        }\
    \ else if (c == '.') {\n            result.push_back(1);\n        } else {\n \
    \           result.push_back(0);\n        }\n    }\n    return result;", "   \
    \ std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(0);\n        } else if (note\
    \ == \"o\") {\n            beats = 4;\n        } else if (note == \"o|\") {\n\
    \            beats = 2;\n        } else if (note == \".|\") {\n            beats\
    \ = 1;\n        } else {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> beats;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == 'o') {\n            beats.push_back(4);\n        } else if (*it ==\
    \ 'o|') {\n            beats.push_back(2);\n        } else if (*it == '.') {\n\
    \            beats.push_back(1);\n        } else if (*it == '|') {\n         \
    \   beats.push_back(2);\n        } else if (*it == 'o') {\n            beats.push_back(4);\n\
    \        } else if (*it == 'o|') {\n            beats.push_back(2);\n        }\
    \ else if (*it == '.') {\n            beats.push_back(1);\n        } else if (*it\
    \ == '|') {\n            beats.push_back(2);\n        } else if (*it == 'o') {\n\
    \            beats.push_back(4);\n        } else if (*it == 'o|') {\n        \
    \    beats.push_back(2);\n        } else if (*it == '.') {\n            beats.push_back(1);\n\
    \        } else if (*it == '|') {\n            beats.push_back(2);\n        }\
    \ else if (*it == 'o') {\n            beats.push_back(4);\n        } else if (*it\
    \ == 'o|') {\n            beats.push_back(2);\n        } else if (*it == '.')\
    \ {\n            beats.push_back(1);\n        } else if (*it == '|') {\n     \
    \       beats.push_back(2);\n        } else if (*it == 'o') {\n            beats.push_back(4);\n\
    \        } else if (*it == 'o|') {\n            beats.push_back(2);\n        }\
    \ else if (*it == '.') {\n            beats.push_back(1);\n        } else if (*it\
    \ == '|') {\n            beats.push_back(2);\n        } else if (*it == 'o') {",
  "    std::vector<long> result;\n    for (auto c : music_string) {\n        if (c\
    \ == 'o') {\n            result.push_back(4);\n        } else if (c == 'o|') {\n\
    \            result.push_back(2);\n        } else if (c == '.') {\n          \
    \  result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats = 0;\n    while (ss\
    \ >> note) {\n        if (note == \".\") {\n            beats += 1;\n        }\
    \ else if (note == \"o\") {\n            beats += 4;\n        } else if (note\
    \ == \"o|\") {\n            beats += 2;\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;", "    std::vector<long> result;\n    std::stringstream\
    \ ss(music_string);\n    std::string note;\n    long beats;\n    while (std::getline(ss,\
    \ note, ' ')) {\n        if (note == \".\") {\n            result.push_back(beats);\n\
    \            beats = 0;\n        } else if (note == \"o\") {\n            beats\
    \ += 4;\n        } else if (note == \"o|\") {\n            beats += 2;\n     \
    \   } else if (note == \".|\") {\n            beats += 1;\n        }\n    }\n\
    \    result.push_back(beats);\n    return result;", "    std::vector<long> result;\n\
    \    std::string::iterator it = music_string.begin();\n    while (it != music_string.end())\
    \ {\n        if (*it == 'o') {\n            result.push_back(4);\n           \
    \ it++;\n            if (it != music_string.end()) {\n                if (*it\
    \ == 'o') {\n                    result.push_back(2);\n                    it++;\n\
    \                    if (it != music_string.end()) {\n                       \
    \ if (*it == '.') {\n                            result.push_back(1);\n      \
    \                      it++;\n                            if (it != music_string.end())\
    \ {\n                                if (*it == '|') {\n                     \
    \               result.push_back(2);\n                                    it++;\n\
    \                                    if (it != music_string.end()) {\n       \
    \                                 if (*it == 'o') {\n                        \
    \                    result.push_back(1);\n                                  \
    \          it++;\n                                            if (it != music_string.end())\
    \ {\n                                                if (*it == '|') {\n     \
    \                                               result.push_back(2);\n       \
    \                                             it++;\n                        \
    \                            if (it != music_string.end()) {\n               \
    \                                         if (*it == '.') {\n                \
    \                                            result.push_back(1);\n          \
    \                                                  it++;\n                   \
    \                                         if (it != music_string.end()) {\n  \
    \                                                              if (*it == '|')\
    \ {\n                                                                    result.push_back(2);\n\
    \                                                                    it++;\n \
    \                                                                   if (it !=\
    \ music_string.end()) {\n                                                    \
    \                    if (*it == 'o') {\n                                     \
    \                                       result.push_back(1);\n               \
    \                                                             it++;\n        \
    \                                                                    if (it !=\
    \ music_string.end()) {\n                                                    \
    \                            if (*it == '|') {\n                             \
    \                                                       result.push_back(2);\n\
    \                                                                            \
    \        it++;\n                                                             \
    \                       if (it != music_", "    std::vector<long> beats;\n   \
    \ long beat_count = 0;\n    std::string current_note;\n    for (int i = 0; i <\
    \ music_string.size(); i++) {\n        if (music_string[i] == '.') {\n       \
    \     beat_count++;\n            current_note = \"\";\n        } else if (music_string[i]\
    \ == '|') {\n            beat_count++;\n            current_note = \"\";\n   \
    \     } else if (music_string[i] == 'o') {\n            beat_count += 4;\n   \
    \         current_note = \"\";\n        } else {\n            current_note +=\
    \ music_string[i];\n        }\n        if (current_note != \"\") {\n         \
    \   beats.push_back(beat_count);\n            beat_count = 0;\n            current_note\
    \ = \"\";\n        }\n    }\n    return beats;", "    std::vector<long> result;\n\
    \    long beats = 0;\n    for (auto it = music_string.begin(); it != music_string.end();\
    \ ++it) {\n        if (*it == '.') {\n            beats += 1;\n        } else\
    \ if (*it == '|') {\n            beats += 2;\n        } else if (*it == 'o') {\n\
    \            beats += 4;\n        }\n        result.push_back(beats);\n    }\n\
    \    return result;", "    std::vector<long> result;\n    std::stringstream ss(music_string);\n\
    \    std::string note;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            result.push_back(1);\n        } else if (note\
    \ == \"o\") {\n            result.push_back(4);\n        } else if (note == \"\
    o|\") {\n            result.push_back(2);\n        } else if (note == \".|\")\
    \ {\n            result.push_back(1);\n        }\n    }\n    return result;",
  "    std::vector<long> result;\n    for (auto c : music_string) {\n        if (c\
    \ == 'o') {\n            result.push_back(4);\n        } else if (c == 'o|') {\n\
    \            result.push_back(2);\n        } else if (c == '.') {\n          \
    \  result.push_back(1);\n        } else {\n            result.push_back(0);\n\
    \        }\n    }\n    return result;", "    std::vector<long> result;\n    std::string::iterator\
    \ it = music_string.begin();\n    while (it != music_string.end()) {\n       \
    \ if (*it == '.') {\n            result.push_back(1);\n        } else if (*it\
    \ == '|') {\n            result.push_back(2);\n        } else if (*it == 'o')\
    \ {\n            result.push_back(4);\n        } else {\n            result.push_back(0);\n\
    \        }\n        it++;\n    }\n    return result;", "    std::vector<long>\
    \ beats;\n    long beat_count = 0;\n    for (int i = 0; i < music_string.size();\
    \ i++) {\n        if (music_string[i] == '.') {\n            beat_count += 1;\n\
    \        } else if (music_string[i] == '|') {\n            beat_count += 2;\n\
    \        } else if (music_string[i] == 'o') {\n            beat_count += 4;\n\
    \        }\n        beats.push_back(beat_count);\n    }\n    return beats;", " \
    \   std::vector<long> result;\n    std::stringstream ss(music_string);\n    std::string\
    \ note;\n    long beats;\n    while (std::getline(ss, note, ' ')) {\n        if\
    \ (note == \".\") {\n            beats = 1;\n        } else if (note == \"o\"\
    ) {\n            beats = 4;\n        } else if (note == \"o|\") {\n          \
    \  beats = 2;\n        } else {\n            assert(false);\n        }\n     \
    \   result.push_back(beats);\n    }\n    return result;", "    std::vector<long>\
    \ result;\n    std::stringstream ss(music_string);\n    std::string note;\n  \
    \  long beats;\n    while (std::getline(ss, note, ' ')) {\n        if (note ==\
    \ \".\") {\n            beats = 0;\n        } else if (note == \"o\") {\n    \
    \        beats = 4;\n        } else if (note == \"o|\") {\n            beats =\
    \ 2;\n        } else if (note == \".|\") {\n            beats = 1;\n        }\
    \ else {\n            assert(false);\n        }\n        result.push_back(beats);\n\
    \    }\n    return result;"]
stop_tokens:
- "\n}"

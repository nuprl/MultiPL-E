{
  "name": "HumanEval_110_exchange",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// In this problem, you will implement a function that takes two vectors of numbers,\n// and determines whether it is possible to perform an exchange of elements\n// between them to make lst1 a vector of only even numbers.\n// There is no limit on the number of exchanged elements between lst1 and lst2.\n// If it is possible to exchange elements between the lst1 and lst2 to make\n// all the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\".\n// For example:\n// >>> exchange([1, 2, 3, 4], [1, 2, 3, 4])\n// \"YES\"\n// >>> exchange([1, 2, 3, 4], [1, 5, 3, 4])\n// \"NO\"\n// It is assumed that the input vectors will be non-empty.\nstd::string exchange(std::vector<long> lst1, std::vector<long> lst2) {\n",
  "tests": "}\nint main() {\n    auto candidate = exchange;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (std::vector<long>({(long)1, (long)5, (long)3, (long)4}))) == (\"NO\"));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})), (std::vector<long>({(long)2, (long)1, (long)4, (long)3}))) == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)5, (long)7, (long)3})), (std::vector<long>({(long)2, (long)6, (long)4}))) == (\"YES\"));\n    assert(candidate((std::vector<long>({(long)5, (long)7, (long)3})), (std::vector<long>({(long)2, (long)6, (long)3}))) == (\"NO\"));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)6, (long)1, (long)8, (long)9})), (std::vector<long>({(long)3, (long)5, (long)5, (long)1, (long)1, (long)1}))) == (\"NO\"));\n    assert(candidate((std::vector<long>({(long)100, (long)200})), (std::vector<long>({(long)200, (long)200}))) == (\"YES\"));\n}\n",
  "completions": [
    "    std::string result = \"NO\";\n    if (lst1.size() != lst2.size()) {\n        return result;\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return result;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    result = \"YES\";\n    return result;",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            return \"NO\";\n        } else {\n            ++it1;\n            ++it2;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty() && !lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"YES\";\n        } else {\n            if (*it1 < *it2) {\n                it1++;\n            } else {\n                it2++;\n            }\n        }\n    }\n    return \"NO\";",
    "    std::string result = \"NO\";\n    if (lst1.size() == lst2.size()) {\n        for (int i = 0; i < lst1.size(); ++i) {\n            if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n                if (lst1[i] == lst2[i]) {\n                    result = \"YES\";\n                    break;\n                }\n            }\n        }\n    }\n    return result;",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) return \"NO\";\n        if (lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] != lst2[i]) return \"NO\";\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        for (int j = 0; j < lst2.size(); j++) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                return \"YES\";\n            }\n        }\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) return \"NO\";\n        if (lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] != lst2[i]) return \"NO\";\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] == lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) return \"NO\";\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) return \"NO\";\n        if (lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] != lst2[i]) return \"NO\";\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else {\n            return \"NO\";\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::string result = \"NO\";\n    if (lst1.size() != lst2.size()) {\n        return result;\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return result;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            std::swap(lst1[i], lst2[i]);\n            result = \"YES\";\n            break;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            std::swap(lst1[i], lst2[i]);\n            result = \"YES\";\n            break;\n        }\n    }\n    return result;",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n            lst1[i] = lst2[i];\n        }\n        else {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        for (int j = 0; j < lst2.size(); j++) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    if (lst1.size() != lst2.size()) return \"NO\";\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) return \"NO\";\n    }\n    return \"YES\";",
    "    std::string result = \"NO\";\n    if (lst1.size() == lst2.size()) {\n        std::sort(lst1.begin(), lst1.end());\n        std::sort(lst2.begin(), lst2.end());\n        for (int i = 0; i < lst1.size(); i++) {\n            if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n                result = \"YES\";\n                break;\n            }\n        }\n    }\n    return result;",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) continue;\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        } else {\n            lst1[i] = lst1[i] - lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst1[i] + lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst2[i] = lst2[i] + lst1[i];\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst2[i] - lst1[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() != 0);\n    assert(lst2.size() != 0);\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty() && !lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.back() % 2 != 0 || lst2.back() % 2 != 0) return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) return \"NO\";\n        if (lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] != lst2[i]) return \"NO\";\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        for (int j = 0; j < lst2.size(); ++j) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst2[i] - lst1[i];\n            lst2[i] = lst1[i] - lst2[i];\n        } else {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst2[i] - lst1[i];\n            lst2[i] = lst1[i] + lst2[i];\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n            lst1[i] = lst1[i] / 2;\n            lst2[i] = lst2[i] / 2;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::vector<long> even_numbers;\n    for (long i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even_numbers.push_back(lst1[i]);\n        }\n    }\n    for (long i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 == 0) {\n            even_numbers.push_back(lst2[i]);\n        }\n    }\n    if (even_numbers.size() == lst1.size()) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) continue;\n        if (lst1[i] % 2 != 0) {\n            lst1[i] += lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n        else {\n            lst1[i] += lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    std::vector<long>::iterator it3 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            *it3 = *it2;\n            it2 = lst2.erase(it2);\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            *it3 = *it1;\n            it1 = lst1.erase(it1);\n        } else {\n            ++it1;\n            ++it2;\n            ++it3;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        for (int j = 0; j < lst2.size(); ++j) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        for (int j = 0; j < lst2.size(); j++) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() > 0 && lst2.size() > 0);\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    assert(lst1.size() == lst2.size());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            if (*it1 != *it2) {\n                return \"NO\";\n            }\n        }\n        it1++;\n        it2++;\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 1) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 == 1 && *it2 % 2 == 0) {\n            return \"NO\";\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            std::swap(lst1[i], lst2[i]);\n            return \"YES\";\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            std::swap(lst1[i], lst2[i]);\n            return \"YES\";\n        }\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            return \"NO\";\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            if (*it1 != *it2) {\n                return \"NO\";\n            }\n        } else if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            return \"NO\";\n        }\n        ++it1;\n        ++it2;\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) continue;\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        } else {\n            lst1[i] = lst1[i] - lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst1[i] + lst2[i];\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::string result = \"NO\";\n    if (lst1.size() != lst2.size()) {\n        return result;\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return result;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        } else {\n            lst1[i] = lst1[i] - lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst1[i] + lst2[i];\n        }\n    }\n    result = \"YES\";\n    return result;",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        for (int j = 0; j < lst2.size(); ++j) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) return \"NO\";\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else {\n            return \"NO\";\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) return \"YES\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            for (int j = 0; j < lst2.size(); j++) {\n                if (lst2[j] % 2 == 0) {\n                    std::swap(lst1[i], lst2[j]);\n                    return \"YES\";\n                }\n            }\n        }\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n            if (lst1 == lst2) {\n                return \"YES\";\n            }\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n            if (lst1 == lst2) {\n                return \"YES\";\n            }\n        }\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst1[i] += 1;\n            lst2[i] -= 1;\n        } else if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] -= 1;\n            lst2[i] += 1;\n        }\n    }\n    return \"YES\";",
    "    std::string result = \"NO\";\n    if (lst1.size() != lst2.size()) {\n        return result;\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return result;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            result = \"YES\";\n            break;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            result = \"YES\";\n            break;\n        }\n    }\n    return result;",
    "    std::string result = \"NO\";\n    if (lst1.size() != lst2.size()) {\n        return result;\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return result;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n            result = \"YES\";\n            break;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst2[i] = lst1[i];\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n            lst1[i] = lst2[i];\n            result = \"YES\";\n            break;\n        }\n    }\n    return result;",
    "    assert(!lst1.empty() && !lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    assert(lst1.size() != 0 && lst2.size() != 0);\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            std::swap(lst1[i], lst2[i]);\n        } else {\n            std::swap(lst1[i], lst2[i]);\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) return \"NO\";\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            if (lst2[i] % 2 != 0) {\n                if (lst1[i] == lst2[i]) {\n                    lst1.erase(lst1.begin() + i);\n                    lst2.erase(lst2.begin() + i);\n                    i--;\n                }\n            }\n            else {\n                lst1.erase(lst1.begin() + i);\n                lst2.erase(lst2.begin() + i);\n                i--;\n            }\n        }\n    }\n    if (lst1.size() == 0) return \"YES\";\n    return \"NO\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        } else {\n            lst1[i] = lst1[i] - lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst1[i] + lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it1++;\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it1++;\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it1++;\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i];\n        } else {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty() && !lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    auto it1 = lst1.begin();\n    auto it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2)\n        return \"YES\";\n    else\n        return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() > lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 1 && *it2 % 2 == 1) {\n            it1++;\n            it2++;\n        } else {\n            return \"NO\";\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); ++i) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            std::swap(lst1[i], lst2[i]);\n            return \"YES\";\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            std::swap(lst1[i], lst2[i]);\n            return \"YES\";\n        }\n    }\n    return \"NO\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            if (*it1 % 2 == 0) {\n                it1++;\n            } else {\n                it2++;\n            }\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else {\n            return \"NO\";\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> even_lst1;\n    std::vector<long> even_lst2;\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even_lst1.push_back(lst1[i]);\n        }\n        if (lst2[i] % 2 == 0) {\n            even_lst2.push_back(lst2[i]);\n        }\n    }\n    if (even_lst1 == even_lst2) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) return \"NO\";\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + lst1[i];\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst2[i] - lst1[i];\n            lst1[i] = lst1[i] - lst2[i];\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 || lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end()) {\n        if (*it1 % 2 != 0) {\n            return \"NO\";\n        }\n        *it1 = *it2;\n        it1++;\n        it2++;\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::string result = \"NO\";\n    if (lst1.size() == lst2.size()) {\n        std::vector<long>::iterator it1 = lst1.begin();\n        std::vector<long>::iterator it2 = lst2.begin();\n        while (it1 != lst1.end() && it2 != lst2.end()) {\n            if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n                if (*it1 > *it2) {\n                    it1++;\n                } else {\n                    it2++;\n                }\n            } else if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n                if (*it1 > *it2) {\n                    it1++;\n                } else {\n                    it2++;\n                }\n            } else {\n                if (*it1 > *it2) {\n                    it1++;\n                } else {\n                    it2++;\n                }\n            }\n        }\n        if (it1 == lst1.end() && it2 == lst2.end()) {\n            result = \"YES\";\n        }\n    }\n    return result;",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        for (int j = 0; j < lst2.size(); j++) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            return \"NO\";\n        } else {\n            ++it1;\n            ++it2;\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            if (*it1 < *it2) {\n                ++it1;\n            } else {\n                ++it2;\n            }\n        } else if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            if (*it1 < *it2) {\n                ++it1;\n            } else {\n                ++it2;\n            }\n        } else {\n            if (*it1 < *it2) {\n                ++it1;\n            } else {\n                ++it2;\n            }\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    if (lst1.size() != lst2.size()) return \"NO\";\n    std::vector<long> even_numbers;\n    for (long i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 == 0) even_numbers.push_back(lst1[i]);\n        if (lst2[i] % 2 == 0) even_numbers.push_back(lst2[i]);\n    }\n    if (even_numbers.size() == lst1.size()) return \"YES\";\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            return \"NO\";\n        } else {\n            return \"NO\";\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else if (*it2 % 2 == 0) {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 == 0) {\n            continue;\n        }\n        if (lst1[i] % 2 == 0) {\n            lst1[i] = lst2[i];\n            lst2[i] = lst1[i] + lst2[i];\n            lst1[i] = lst2[i] - lst1[i];\n            lst2[i] = lst1[i] - lst2[i];\n        }\n        else {\n            lst1[i] = lst1[i] + lst2[i];\n            lst2[i] = lst1[i] - lst2[i];\n            lst1[i] = lst2[i] - lst1[i];\n            lst2[i] = lst1[i] + lst2[i];\n        }\n    }\n    return \"YES\";",
    "    assert(lst1.size() == lst2.size());\n    std::vector<long> even_lst1;\n    std::vector<long> even_lst2;\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 == 0) {\n            even_lst1.push_back(lst1[i]);\n        }\n        if (lst2[i] % 2 == 0) {\n            even_lst2.push_back(lst2[i]);\n        }\n    }\n    if (even_lst1 == even_lst2) {\n        return \"YES\";\n    }\n    return \"NO\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        for (int j = 0; j < lst2.size(); j++) {\n            if (lst1[i] == lst2[j]) {\n                std::swap(lst1[i], lst2[j]);\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            std::swap(*it1, *it2);\n            it1++;\n            it2++;\n        } else {\n            it1++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n        if (lst1[i] % 2 == 0 && lst2[i] % 2 != 0) {\n            lst2[i] = lst2[i] + 1;\n        }\n        if (lst1[i] % 2 != 0 && lst2[i] % 2 == 0) {\n            lst1[i] = lst1[i] + 1;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.size() != lst2.size()) {\n        return \"NO\";\n    }\n    for (int i = 0; i < lst1.size(); ++i) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1.back() % 2 != 0 || lst2.back() % 2 != 0)\n        return \"NO\";\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0)\n            return \"NO\";\n        if (lst2[i] % 2 != 0)\n            return \"NO\";\n        if (lst1[i] != lst2[i])\n            return \"NO\";\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";",
    "    assert(!lst1.empty());\n    assert(!lst2.empty());\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 == 0 && *it2 % 2 != 0) {\n            std::swap(*it1, *it2);\n            it1 = lst1.begin();\n            it2 = lst2.begin();\n        } else if (*it1 % 2 != 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else {\n            it1++;\n            it2++;\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    assert(lst1.size() > 0 && lst2.size() > 0);\n    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            if (*it1 < *it2) {\n                it1++;\n            } else {\n                it2++;\n            }\n        } else if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else {\n            if (*it1 < *it2) {\n                it1++;\n            } else {\n                it2++;\n            }\n        }\n    }\n    if (it1 == lst1.end() && it2 == lst2.end()) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    std::vector<long>::iterator it1 = lst1.begin();\n    std::vector<long>::iterator it2 = lst2.begin();\n    while (it1 != lst1.end() && it2 != lst2.end()) {\n        if (*it1 % 2 != 0 && *it2 % 2 != 0) {\n            return \"NO\";\n        }\n        if (*it1 % 2 == 0 && *it2 % 2 == 0) {\n            it1++;\n            it2++;\n        } else if (*it1 % 2 == 0) {\n            it1++;\n        } else {\n            it2++;\n        }\n    }\n    return \"YES\";",
    "    std::sort(lst1.begin(), lst1.end());\n    std::sort(lst2.begin(), lst2.end());\n    if (lst1 == lst2) {\n        return \"YES\";\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst2.size(); i++) {\n        if (lst2[i] % 2 != 0) {\n            return \"NO\";\n        }\n    }\n    for (int i = 0; i < lst1.size(); i++) {\n        if (lst1[i] != lst2[i]) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
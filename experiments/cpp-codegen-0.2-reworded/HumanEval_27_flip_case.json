{
  "name": "HumanEval_27_flip_case",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nstd::string flip_case(std::string string) {\n",
  "tests": "}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n",
  "completions": [
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i=0; i<string.size(); i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string flipped;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            flipped.push_back(toupper(string[i]));\n        } else {\n            flipped.push_back(tolower(string[i]));\n        }\n    }\n    return flipped;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result = string;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            result += static_cast<char>(toupper(c));\n        } else {\n            result += static_cast<char>(tolower(c));\n        }\n    }\n    return result;",
    "    std::string result;\n    for (auto &c : string) {\n        if (islower(c)) {\n            result.push_back(toupper(c));\n        } else {\n            result.push_back(tolower(c));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string flipped;\n    for (auto &c : string) {\n        if (islower(c)) {\n            flipped += static_cast<char>(toupper(c));\n        } else {\n            flipped += static_cast<char>(tolower(c));\n        }\n    }\n    return flipped;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            result.push_back(toupper(string[i]));\n        } else {\n            result.push_back(tolower(string[i]));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result = string;\n    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string ret = string;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            ret[i] = toupper(string[i]);\n        } else {\n            ret[i] = tolower(string[i]);\n        }\n    }\n    return ret;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            c = toupper(c);\n        } else {\n            c = tolower(c);\n        }\n        result.push_back(c);\n    }\n    return result;",
    "    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto it = string.begin(); it != string.end(); ++it) {\n        if (islower(*it)) {\n            result.push_back(toupper(*it));\n        } else {\n            result.push_back(tolower(*it));\n        }\n    }\n    return result;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i = 0; i < string.length(); i++) {\n        if(islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            result += toupper(c);\n        } else {\n            result += tolower(c);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    std::string ret = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            ret[i] = string[i] - 'a' + 'A';\n        }\n    }\n    return ret;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for(int i = 0; i < string.size(); i++) {\n        if(islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 'a' + 'A';\n        } else {\n            result += string[i];\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string ret = string;\n    for (int i = 0; i < ret.length(); i++) {\n        if (ret[i] >= 'a' && ret[i] <= 'z') {\n            ret[i] = ret[i] - 'a' + 'A';\n        } else if (ret[i] >= 'A' && ret[i] <= 'Z') {\n            ret[i] = ret[i] - 'A' + 'a';\n        }\n    }\n    return ret;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string ret = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            ret[i] = string[i] - 'a' + 'A';\n        }\n    }\n    return ret;",
    "    std::string result;\n    for (auto& c : string) {\n        if (islower(c)) {\n            result += static_cast<char>(toupper(c));\n        } else {\n            result += static_cast<char>(tolower(c));\n        }\n    }\n    return result;",
    "    std::string result;\n    for (auto it = string.begin(); it != string.end(); ++it) {\n        if (*it >= 'a' && *it <= 'z') {\n            result.push_back(*it - 'a' + 'A');\n        } else {\n            result.push_back(*it);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (auto it = string.begin(); it != string.end(); ++it) {\n        if (islower(*it)) {\n            result.push_back(toupper(*it));\n        } else {\n            result.push_back(tolower(*it));\n        }\n    }\n    return result;",
    "    std::string result = string;\n    for (int i = 0; i < string.length(); i++) {\n        if (isalpha(string[i])) {\n            result[i] = tolower(string[i]);\n        } else {\n            result[i] = toupper(string[i]);\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] -= 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] += 32;\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] -= 'a' - 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] += 'a' - 'A';\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (std::string::iterator it = string.begin(); it != string.end(); it++) {\n        if (islower(*it)) {\n            result.push_back(toupper(*it));\n        } else {\n            result.push_back(tolower(*it));\n        }\n    }\n    return result;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            result.push_back(toupper(c));\n        } else {\n            result.push_back(tolower(c));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto it = string.begin(); it != string.end(); ++it) {\n        if (islower(*it)) {\n            result.push_back(toupper(*it));\n        } else {\n            result.push_back(tolower(*it));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            result.push_back(toupper(c));\n        } else {\n            result.push_back(tolower(c));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] -= 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] += 32;\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto c : string) {\n        if (islower(c)) {\n            result.push_back(toupper(c));\n        } else {\n            result.push_back(tolower(c));\n        }\n    }\n    return result;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto &c : string) {\n        if (islower(c)) {\n            result.push_back(toupper(c));\n        } else {\n            result.push_back(tolower(c));\n        }\n    }\n    return result;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for(int i = 0; i < string.size(); i++) {\n        if(islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); ++i) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n    std::transform(string.begin(), string.end(), string.begin(), ::toupper);\n    return string;",
    "    std::string result;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            result.push_back(toupper(string[i]));\n        } else {\n            result.push_back(tolower(string[i]));\n        }\n    }\n    return result;",
    "    std::string result = string;\n    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            result[i] = toupper(string[i]);\n        } else {\n            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.size(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i])) {\n            string[i] = toupper(string[i]);\n        } else {\n            string[i] = tolower(string[i]);\n        }\n    }\n    return string;",
    "    std::string result;\n    for (auto& c : string) {\n        if (islower(c)) {\n            c = toupper(c);\n        } else {\n            c = tolower(c);\n        }\n        result.push_back(c);\n    }\n    return result;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
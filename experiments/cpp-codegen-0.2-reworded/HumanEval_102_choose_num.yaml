name: HumanEval_102_choose_num
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two positive\
  \ numbers x and y and returns the\n// biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n// there's no such number, then the function should\
  \ return -1.\n// For example:\n// >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13,\
  \ 12)\n// -1\nlong choose_num(long x, long y) {\n"
tests: "}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
  \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
  \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
  \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
  \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
completions: ["    if (x > y)\n        return -1;\n    long i = 2;\n    while (i <=\
    \ x && i <= y) {\n        if (i % 2 == 0 && i <= x && i <= y)\n            return\
    \ i;\n        i = i + 2;\n    }\n    return -1;", "    if (x > y) {\n        return\
    \ -1;\n    }\n    long num = 0;\n    long i = x;\n    long j = y;\n    while (i\
    \ <= j) {\n        if (i % 2 == 0) {\n            num = i;\n            break;\n\
    \        }\n        i++;\n    }\n    return num;", "    if (x > y) {\n       \
    \ return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    if (x ==\
    \ 1) {\n        return 2;\n    }\n    if (x == 2) {\n        return 2;\n    }\n\
    \    if (x == 3) {\n        return 4;\n    }\n    if (x == 4) {\n        return\
    \ 4;\n    }\n    if (x == 5) {\n        return 6;\n    }\n    if (x == 6) {\n\
    \        return 6;\n    }\n    if (x == 7) {\n        return 8;\n    }\n    if\
    \ (x == 8) {\n        return 8;\n    }\n    if (x == 9) {\n        return 10;\n\
    \    }\n    if (x == 10) {\n        return 10;\n    }\n    if (x == 11) {\n  \
    \      return 12;\n    }\n    if (x == 12) {\n        return 12;\n    }\n    if\
    \ (x == 13) {\n        return 14;\n    }\n    if (x == 14) {\n        return 14;\n\
    \    }\n    if (x == 15) {\n        return 16;\n    }\n    if (x == 16) {\n  \
    \      return 16;\n    }\n    if (x == 17) {\n        return 18;\n    }\n    if\
    \ (x == 18) {\n        return 18;\n    }\n    if (x == 19) {\n        return 20;\n\
    \    }\n    if (x == 20) {\n        return 20;\n    }\n    if (x == 21) {\n  \
    \      return 22;\n    }\n    if (x == 22) {\n        return 22;\n    }\n    if\
    \ (x == 23) {\n        return 24;\n    }\n    if (x == 24) {\n        return 24;\n\
    \    }\n    if (x == 25) {\n        return 26;\n    }\n    if (x == 26) {\n  \
    \      return 26;\n    }\n    if (x == 27) {\n        return 28;\n    }\n    if\
    \ (x == 28) {\n        return 28;\n    }\n    ", "    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    long result = 0;\n    while\
    \ (i <= j) {\n        if (i % 2 == 0) {\n            result = i;\n        }\n\
    \        i++;\n    }\n    return result;", "    long i, j, max_num;\n    if (x\
    \ > y) {\n        return -1;\n    }\n    max_num = x;\n    for (i = x + 1; i <=\
    \ y; i++) {\n        if (i % 2 == 0) {\n            if (i > max_num) {\n     \
    \           max_num = i;\n            }\n        }\n    }\n    return max_num;",
  "    if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n        return\
    \ x;\n    }\n    long i = 2;\n    while (i * i <= y) {\n        if (y % i == 0)\
    \ {\n            return i;\n        }\n        i += 2;\n    }\n    return -1;",
  "    if (x > y) {\n        return -1;\n    }\n    long result = 0;\n    long i =\
    \ 1;\n    while (i <= y - x + 1) {\n        if (i % 2 == 0) {\n            result\
    \ = i;\n        }\n        i++;\n    }\n    return result;", "    long i, j, k,\
    \ n, m, temp;\n    long result = -1;\n    if (x > y) {\n        return result;\n\
    \    }\n    n = x - y + 1;\n    m = (n - 1) / 2;\n    for (i = 0; i <= m; i++)\
    \ {\n        k = 2 * i;\n        temp = y + k;\n        if (temp > x) {\n    \
    \        break;\n        }\n        j = x - temp;\n        if (j < k) {\n    \
    \        break;\n        }\n        if (j == k) {\n            result = temp;\n\
    \            break;\n        }\n        if (j > k) {\n            result = temp;\n\
    \            break;\n        }\n    }\n    return result;", "    if (x > y) {\n\
    \        return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long\
    \ i = x;\n    long j = y;\n    while (i <= j) {\n        if (i % 2 == 0 && j %\
    \ 2 == 0) {\n            return i;\n        }\n        if (i % 2 == 0) {\n   \
    \         i += 1;\n        }\n        if (j % 2 == 0) {\n            j -= 1;\n\
    \        }\n    }\n    return -1;", "    if (x > y) {\n        return -1;\n  \
    \  }\n    if (x == y) {\n        return x;\n    }\n    long result = 0;\n    for\
    \ (long i = x; i <= y; i += 2) {\n        result = std::max(result, i);\n    }\n\
    \    return result;", "    if (x > y) {\n        return -1;\n    }\n    long i\
    \ = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n        k = i\
    \ + j;\n        if (k % 2 == 0) {\n            return k;\n        }\n        i\
    \ = i + 1;\n        j = j - 1;\n    }\n    return -1;", "    assert(x > 0 && y\
    \ > 0);\n    long result = -1;\n    for (long i = x; i <= y; i += 2) {\n     \
    \   if (i >= x && i <= y) {\n            result = i;\n        }\n    }\n    return\
    \ result;", "    if (x > y)\n        return -1;\n    long i = x;\n    long j =\
    \ y;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n        \
    \    return i;\n        }\n        if (i % 2 == 0) {\n            i += 1;\n  \
    \      }\n        if (j % 2 == 0) {\n            j -= 1;\n        }\n        i\
    \ += 2;\n        j -= 2;\n    }\n    return -1;", "    long i, j, max_num;\n \
    \   long num_of_even_numbers;\n    long num_of_odd_numbers;\n    long num_of_pairs;\n\
    \    long num_of_triples;\n    long num_of_quadruples;\n    long num_of_quintuples;\n\
    \    long num_of_sextuples;\n    long num_of_septuples;\n    long num_of_octuples;\n\
    \    long num_of_nonuples;\n    long num_of_decuples;\n    long num_of_undecuples;\n\
    \    long num_of_duodecuples;\n    long num_of_tredecuples;\n    long num_of_quattuordecuples;\n\
    \    long num_of_septendecuples;\n    long num_of_octodecuples;\n    long num_of_novemdecuples;\n\
    \    long num_of_decadecuples;\n    long num_of_undecadecuples;\n    long num_of_duodecadecuples;\n\
    \    long num_of_tredecadecuples;\n    long num_of_quattuordecadecuples;\n   \
    \ long num_of_septendecadecuples;\n    long num_of_octodecadecuples;\n    long\
    \ num_of_novemdecadecuples;\n    long num_of_decadecupledecuples;\n    long num_of_undecadecupledecuples;\n\
    \    long num_of_duodecadecupledecuples;\n    long num_of_tredecadecupledecuples;\n\
    \    long num_of_quattuordecadecupledecuples;\n    long num_of_septendecadecupledecuples;\n\
    \    long num_of_octodecadecupledecuples;\n    long num_of_novemdecadecupledecuples;\n\
    \    long num_of_decadecupledecupledecuples;\n    long num_of_undecadecupledecupledec",
  '    long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5,
    z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22,
    z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38,
    z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54,
    z55, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70,
    z71, z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86,
    z87, z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102,
    z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115,
    z116, z117, z118, z119, z120, z121, z122, z123, z124, z125, z126, z127, z128,
    z129, z130, z131, z132, z133, z134, z135, z136, z137, z138, z139, z140, z141,
    z142, z143, z144, z145, z146, z147, z148, z149, z150, z151, z152, z153, z154,
    z155, z156, z157, z158, z159', "    long i, j, max_num;\n    long num_of_even_numbers\
    \ = 0;\n    long num_of_odd_numbers = 0;\n    long max_num_of_even_numbers = 0;\n\
    \    long max_num_of_odd_numbers = 0;\n    \n    for (i = x; i <= y; i++) {\n\
    \        if (i % 2 == 0) {\n            num_of_even_numbers++;\n            if\
    \ (num_of_even_numbers > max_num_of_even_numbers) {\n                max_num_of_even_numbers\
    \ = num_of_even_numbers;\n            }\n        } else {\n            num_of_odd_numbers++;\n\
    \            if (num_of_odd_numbers > max_num_of_odd_numbers) {\n            \
    \    max_num_of_odd_numbers = num_of_odd_numbers;\n            }\n        }\n\
    \    }\n    \n    if (max_num_of_even_numbers == 0) {\n        return -1;\n  \
    \  } else if (max_num_of_odd_numbers == 0) {\n        return max_num_of_even_numbers;\n\
    \    } else {\n        max_num = max_num_of_even_numbers + max_num_of_odd_numbers;\n\
    \        return max_num;\n    }", "    long i, j, k, l, m, n, p, q, r, s, t, u,\
    \ v, w, x1, y1, z1, z2;\n    long result;\n    assert(x >= 0 && y >= 0);\n   \
    \ if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n        return x;\n\
    \    }\n    result = -1;\n    i = 1;\n    while (i <= x) {\n        i *= 2;\n\
    \    }\n    j = 1;\n    while (j <= y) {\n        j *= 2;\n    }\n    if (i >\
    \ j) {\n        return -1;\n    }\n    k = i / 2;\n    l = j / 2;\n    m = k +\
    \ l;\n    if (m > x) {\n        return -1;\n    }\n    if (m == x) {\n       \
    \ return m;\n    }\n    n = m;\n    p = m + 1;\n    q = m + 2;\n    r = m + 3;\n\
    \    s = m + 4;\n    t = m + 5;\n    u = m + 6;\n    v = m + 7;\n    w = m + 8;\n\
    \    x1 = m + 9;\n    y1 = m + 10;\n    z1 = m + 11;\n    z2 = m + 12;\n    while\
    \ (n <= y) {\n        if (n % 2 == 0) {\n            if (n <= x) {\n         \
    \       result = n;\n            }\n            if (n == x) {\n              \
    \  return result;\n            }\n            if (n > x) {\n                return\
    \ -1;\n            }\n            if (n == y) {\n                return result;\n\
    \            }\n            if (n > y) {\n                return -1;\n       \
    \     }\n            if (n == z1) {\n                return result;\n        \
    \    }\n            if (n > z1) {\n                return -1;\n            }\n\
    \            if (n == z2) {\n                return result;\n            }\n \
    \           if (n > z2) {\n                return -1", "    if (x > y) {\n   \
    \     return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long\
    \ i = x;\n    long j = y;\n    while (i <= j) {\n        long mid = i + (j - i)\
    \ / 2;\n        if (mid % 2 == 0) {\n            return mid;\n        }\n    \
    \    if (mid < x) {\n            i = mid + 1;\n        } else {\n            j\
    \ = mid - 1;\n        }\n    }\n    return -1;", "    if (x > y) {\n        return\
    \ -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long i = x;\n \
    \   long j = y;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n\
    \            return i;\n        }\n        if (i % 2 == 1 && j % 2 == 1) {\n \
    \           return j;\n        }\n        i += 2;\n        j -= 2;\n    }\n  \
    \  return -1;", "    long i, j, max_num;\n    long num_of_even_numbers = 0;\n\
    \    long num_of_odd_numbers = 0;\n    long max_num_of_even_numbers = 0;\n   \
    \ long max_num_of_odd_numbers = 0;\n    \n    // We need to find the number of\
    \ even numbers in the range [x, y]\n    // inclusive.\n    for (i = x; i <= y;\
    \ i++) {\n        if (i % 2 == 0) {\n            num_of_even_numbers++;\n    \
    \    }\n    }\n    \n    // We need to find the number of odd numbers in the range\
    \ [x, y]\n    // inclusive.\n    for (i = x; i <= y; i++) {\n        if (i % 2\
    \ != 0) {\n            num_of_odd_numbers++;\n        }\n    }\n    \n    // We\
    \ need to find the maximum number of even numbers in the range\n    // [x, y]\
    \ inclusive.\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n    \
    \        if (num_of_even_numbers > max_num_of_even_numbers) {\n              \
    \  max_num_of_even_numbers = num_of_even_numbers;\n            }\n        }\n\
    \    }\n    \n    // We need to find the maximum number of odd numbers in the\
    \ range\n    // [x, y] inclusive.\n    for (i = x; i <= y; i++) {\n        if\
    \ (i % 2 != 0) {\n            if (num_of_odd_numbers > max_num_of_odd_numbers)\
    \ {\n                max_num_of_odd_numbers = num_of_odd_numbers;\n          \
    \  }\n        }\n    }\n    \n    // We need to find the maximum number in the\
    \ range [x, y] inclusive.\n    for (i = x; i <= y; i++) {\n        if (i % 2 ==\
    \ 0) {\n            num_of_even_numbers--;\n        }\n        if (i % 2 != 0)\
    \ {\n            num_of_odd_", "    if (x > y) {\n        return -1;\n    }\n\
    \    long i = x;\n    long j = y;\n    while (i <= j) {\n        if (i % 2 ==\
    \ 0 && j % 2 == 0) {\n            return i;\n        }\n        if (i % 2 == 1\
    \ && j % 2 == 1) {\n            return j;\n        }\n        i += 2;\n      \
    \  j -= 2;\n    }\n    return -1;", "    long i, j, max_num;\n    long num_of_even_numbers;\n\
    \    long max_num_in_range;\n    \n    // If x is greater than y, then return\
    \ -1\n    if (x > y) {\n        return -1;\n    }\n    \n    // If x is equal\
    \ to y, then return x\n    if (x == y) {\n        return x;\n    }\n    \n   \
    \ // If x is less than or equal to 2, then return 2\n    if (x <= 2) {\n     \
    \   return 2;\n    }\n    \n    // If x is greater than 2, then find the number\
    \ of even numbers in the\n    // range [2, x]\n    num_of_even_numbers = x / 2;\n\
    \    \n    // If there are no even numbers in the range [2, x], then return -1\n\
    \    if (num_of_even_numbers == 0) {\n        return -1;\n    }\n    \n    //\
    \ Find the max number in the range [2, x]\n    max_num_in_range = x - num_of_even_numbers;\n\
    \    \n    // Find the max number in the range [2, max_num_in_range]\n    max_num\
    \ = max_num_in_range;\n    \n    // If max_num_in_range is greater than max_num,\
    \ then swap them\n    if (max_num_in_range > max_num) {\n        i = max_num;\n\
    \        j = max_num_in_range;\n        max_num = max_num_in_range;\n        max_num_in_range\
    \ = i;\n    }\n    \n    // If max_num is greater than max_num_in_range, then\
    \ swap them\n    if (max_num > max_num_in_range) {\n        i = max_num;\n   \
    \     j = max_num_in_range;\n        max_num = max_num_in_range;\n        max_num_in_range\
    \ = i;\n    }\n    \n    // If max_num is greater than max_num_in_range, then\
    \ swap them\n    if (max_num > max", "    if (x > y) {\n        return -1;\n \
    \   }\n    long i = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n\
    \        k = i + j;\n        if (k % 2 == 0) {\n            return k;\n      \
    \  }\n        i++;\n        j--;\n    }\n    return -1;", "    if (x > y) {\n\
    \        return -1;\n    }\n    long i = x;\n    long j = y;\n    long max = 0;\n\
    \    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n            max\
    \ = i;\n        }\n        if (i % 2 == 1 && j % 2 == 1) {\n            max =\
    \ j;\n        }\n        i += 2;\n        j -= 2;\n    }\n    return max;", '    long
    i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7,
    z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23,
    z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39,
    z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55,
    z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71,
    z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87,
    z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102,
    z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115,
    z116, z117, z118, z119, z120, z121, z122, z123, z124, z125, z126, z127, z128,
    z129, z130, z131, z132, z133, z134, z135, z136, z137, z138, z139, z140, z141,
    z142, z143, z144, z145, z146, z147, z148, z149, z150, z151, z152, z153, z154,
    z155, z156, z157, z158, z159', "    if (x > y) {\n        return -1;\n    }\n\
    \    long i = x;\n    long j = y;\n    long result = 0;\n    while (i <= j) {\n\
    \        if (i % 2 == 0 && j % 2 == 0) {\n            result = i * j / 2;\n  \
    \          break;\n        }\n        i += 1;\n        j -= 1;\n    }\n    return\
    \ result;", "    assert(x >= 0 && y >= 0);\n    if (x > y) return -1;\n    long\
    \ result = 0;\n    while (x <= y) {\n        if (x % 2 == 0) {\n            result\
    \ = x;\n            break;\n        }\n        x = x + 1;\n    }\n    return result;",
  "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long k = 0;\n    while (i <= j) {\n        k = i + j;\n        i = i + 2;\n\
    \        j = j - 2;\n    }\n    return k;", "    if (x > y) return -1;\n    if\
    \ (x == y) return x;\n    long i = x, j = y, k = 1;\n    while (i <= j) {\n  \
    \      k *= i;\n        i += 2;\n    }\n    return k / 2;", "    if (x > y)\n\
    \        return -1;\n    long result = 0;\n    for (long i = x; i <= y; i += 2)\n\
    \        result = max(result, i);\n    return result;", "    if (x > y) {\n  \
    \      return -1;\n    }\n    long i = x;\n    long j = y;\n    long result =\
    \ 0;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n        \
    \    result = i * j / 2;\n            break;\n        }\n        i += 1;\n   \
    \     j -= 1;\n    }\n    return result;", "    assert(x > 0 && y > 0);\n    long\
    \ i = x;\n    long j = y;\n    long result = -1;\n    while (i <= j) {\n     \
    \   if (i % 2 == 0 && j % 2 == 0) {\n            result = i;\n            break;\n\
    \        } else if (i % 2 == 0) {\n            i += 1;\n        } else if (j %\
    \ 2 == 0) {\n            j -= 1;\n        } else {\n            i += 1;\n    \
    \        j -= 1;\n        }\n    }\n    return result;", "    if (x > y) {\n \
    \       return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 0;\n\
    \    while (i <= j) {\n        k = i + j;\n        if (k % 2 == 0) {\n       \
    \     return k;\n        }\n        i += 2;\n        j -= 2;\n    }\n    return\
    \ -1;", "    long i, j, k, n, m, temp;\n    n = x - y + 1;\n    m = (n - 1) /\
    \ 2;\n    k = m + 1;\n    i = 1;\n    j = 1;\n    while (i <= m) {\n        temp\
    \ = i;\n        i = i + j;\n        j = temp;\n    }\n    return i - 1;", "  \
    \  if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n        return\
    \ x;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n    while (i <=\
    \ j) {\n        k *= i;\n        i += 2;\n    }\n    return k / 2;", "    long\
    \ i, j, k, n, m;\n    long max = -1;\n    long result = -1;\n    if (x > y) {\n\
    \        return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    if\
    \ (x == 1) {\n        return 2;\n    }\n    if (x == 2) {\n        return 2;\n\
    \    }\n    if (x == 3) {\n        return 4;\n    }\n    if (x == 4) {\n     \
    \   return 4;\n    }\n    if (x == 5) {\n        return 6;\n    }\n    if (x ==\
    \ 6) {\n        return 6;\n    }\n    if (x == 7) {\n        return 8;\n    }\n\
    \    if (x == 8) {\n        return 8;\n    }\n    if (x == 9) {\n        return\
    \ 10;\n    }\n    if (x == 10) {\n        return 10;\n    }\n    if (x == 11)\
    \ {\n        return 12;\n    }\n    if (x == 12) {\n        return 12;\n    }\n\
    \    if (x == 13) {\n        return 14;\n    }\n    if (x == 14) {\n        return\
    \ 14;\n    }\n    if (x == 15) {\n        return 16;\n    }\n    if (x == 16)\
    \ {\n        return 16;\n    }\n    if (x == 17) {\n        return 18;\n    }\n\
    \    if (x == 18) {\n        return 18;\n    }\n    if (x == 19) {\n        return\
    \ 20;\n    }\n    if (x == 20) {\n        return 20;\n    }\n    if (x == 21)\
    \ {\n        return 22;\n    }\n    if (x == 22) {\n        return 22;\n    }\n\
    \    if (x == 23) {\n        return 24;\n    }\n    if (x == 24) {\n        return\
    \ 24;\n    }\n    if (x == 25) {\n        return 26;\n    }\n    if (x == 26)\
    \ {\n        return 26;\n    }\n    if (x == 27", "    long i, j, k, n, m;\n \
    \   long max_num = -1;\n    n = x - y + 1;\n    m = y / 2;\n    for (i = m; i\
    \ <= n; i++) {\n        k = i;\n        for (j = 1; j <= m; j++) {\n         \
    \   if (k % 2 == 1) {\n                k = 3 * k + 1;\n            } else {\n\
    \                k = k / 2;\n            }\n        }\n        if (k > max_num)\
    \ {\n            max_num = k;\n        }\n    }\n    return max_num;", "    if\
    \ (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n   \
    \ long k = 1;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n\
    \            k *= i;\n            k /= j;\n        }\n        i += 2;\n      \
    \  j -= 2;\n    }\n    return k;", "    if (x > y) {\n        return -1;\n   \
    \ }\n    long result = 0;\n    long i = x;\n    long j = y;\n    while (i <= j)\
    \ {\n        if (i % 2 == 0 && j % 2 == 0) {\n            result = i * j / 2;\n\
    \            break;\n        }\n        i += 1;\n        j -= 1;\n    }\n    return\
    \ result;", "    long i, j, max, temp;\n    max = -1;\n    for (i = x; i <= y;\
    \ i++) {\n        for (j = i; j <= y; j++) {\n            temp = i * j;\n    \
    \        if (temp > max && temp % 2 == 0) {\n                max = temp;\n   \
    \         }\n        }\n    }\n    return max;", "    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    while (i <= j) {\n       \
    \ long mid = i + (j - i) / 2;\n        if (mid % 2 == 0) {\n            return\
    \ mid;\n        }\n        if (mid % 2 == 1) {\n            i = mid + 1;\n   \
    \     } else {\n            j = mid - 1;\n        }\n    }\n    return -1;", " \
    \   long i, j, k, n, m, temp;\n    n = x - y + 1;\n    m = (n - 1) / 2;\n    k\
    \ = m + 1;\n    i = 1;\n    j = 1;\n    while (i <= m) {\n        if (i == k)\
    \ {\n            temp = i;\n            i++;\n            k++;\n        } else\
    \ {\n            temp = i;\n            i++;\n        }\n        j = j * 2;\n\
    \    }\n    return temp;", "    if (x > y) {\n        return -1;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 1;\n    long result = 0;\n    while (i\
    \ <= j) {\n        result = i * k;\n        if (result > y) {\n            return\
    \ -1;\n        }\n        if (result > x) {\n            return result;\n    \
    \    }\n        k = k + 2;\n        i = i + 2;\n    }\n    return result;", '    long
    i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7,
    z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23,
    z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39,
    z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55,
    z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71,
    z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87,
    z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102,
    z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115,
    z116, z117, z118, z119, z120, z121, z122, z123, z124, z125, z126, z127, z128,
    z129, z130, z131, z132, z133, z134, z135, z136, z137, z138, z139, z140, z141,
    z142, z143, z144, z145, z146, z147, z148, z149, z150, z151, z152, z153, z154,
    z155, z156, z157, z158, z159', "    long i, j, k, n, m, temp;\n    n = y - x +\
    \ 1;\n    m = n / 2;\n    k = m + 1;\n    i = 1;\n    j = 1;\n    while (i <=\
    \ m) {\n        if (j <= k) {\n            temp = i * j;\n            if (temp\
    \ > y) {\n                return -1;\n            }\n            if (temp >= x)\
    \ {\n                return temp;\n            }\n            i = i + 1;\n   \
    \         j = j + 1;\n        } else {\n            j = j + 1;\n        }\n  \
    \  }\n    return -1;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n    \
    \    return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n  \
    \  while (i <= j) {\n        if (i % 2 == 0) {\n            i = i / 2;\n     \
    \       k = k * 2;\n        } else {\n            i = i + 1;\n        }\n    \
    \    if (j % 2 == 0) {\n            j = j / 2;\n            k = k * 2;\n     \
    \   } else {\n            j = j + 1;\n        }\n    }\n    return k;", "    long\
    \ i, j, k, max_num;\n    long num_of_even_numbers;\n    long num_of_odd_numbers;\n\
    \    long max_num_of_even_numbers;\n    long max_num_of_odd_numbers;\n    \n \
    \   // If x is greater than y, then return -1\n    if (x > y) {\n        return\
    \ -1;\n    }\n    \n    // If x is equal to y, then return x\n    if (x == y)\
    \ {\n        return x;\n    }\n    \n    // If x is less than 2, then return -1\n\
    \    if (x < 2) {\n        return -1;\n    }\n    \n    // If x is 2, then return\
    \ 2\n    if (x == 2) {\n        return 2;\n    }\n    \n    // If x is 3, then\
    \ return 4\n    if (x == 3) {\n        return 4;\n    }\n    \n    // If x is\
    \ 4, then return 6\n    if (x == 4) {\n        return 6;\n    }\n    \n    //\
    \ If x is 5, then return 8\n    if (x == 5) {\n        return 8;\n    }\n    \n\
    \    // If x is 6, then return 10\n    if (x == 6) {\n        return 10;\n   \
    \ }\n    \n    // If x is 7, then return 12\n    if (x == 7) {\n        return\
    \ 12;\n    }\n    \n    // If x is 8, then return 14\n    if (x == 8) {\n    \
    \    return 14;\n    }\n    \n    // If x is 9, then return 16\n    if (x == 9)\
    \ {\n        return 16;\n    }\n    \n    // If x is 10, then return 18\n    if\
    \ (x == 10) {\n        return 18;\n    }\n    \n    // If x is 11, then return\
    \ 20\n    if (x == 11) {\n        return 20;\n    }\n    \n    // If x is 12,\
    \ then return 22\n    if (x == 12) {\n        return 22;\n    }\n    \n    //\
    \ If x is 13, then return 24\n    if (x", "    assert(x > 0 && y > 0);\n    long\
    \ i = x;\n    long j = y;\n    long result = -1;\n    while (i <= j) {\n     \
    \   if (i % 2 == 0 && j % 2 == 0) {\n            result = i;\n            break;\n\
    \        }\n        i += 2;\n        j -= 2;\n    }\n    return result;", "  \
    \  long i, j, max_i, max_j;\n    long max_num;\n    max_num = -1;\n    max_i =\
    \ -1;\n    max_j = -1;\n    for (i = x; i <= y; i++) {\n        for (j = i; j\
    \ <= y; j++) {\n            if (i == j) {\n                if (max_num < i) {\n\
    \                    max_num = i;\n                    max_i = i;\n          \
    \          max_j = j;\n                }\n            } else {\n             \
    \   if (max_num < i + j) {\n                    max_num = i + j;\n           \
    \         max_i = i;\n                    max_j = j;\n                }\n    \
    \        }\n        }\n    }\n    if (max_num == -1) {\n        return -1;\n \
    \   } else {\n        return max_num;\n    }", "    long i, j, k, l, m, n, p,\
    \ q, r, s, t, u, v, w, x1, y1;\n    long ans;\n    // We need to find the biggest\
    \ even number in the range [x, y]\n    // inclusive.\n    // The idea is to use\
    \ the formula:\n    // (x + y) / 2 = (x / 2) + (y / 2) - (x / 2) * (y / 2)\n \
    \   // where x and y are positive integers.\n    // We can do this by first dividing\
    \ x and y by 2 and then\n    // subtracting the result of the division from x\
    \ and y.\n    // We can then divide the result of the subtraction by 2 and\n \
    \   // repeat the process.\n    // The formula is guaranteed to terminate since\
    \ x and y are\n    // positive integers.\n    // The algorithm is as follows:\n\
    \    // 1. Initialize ans to -1.\n    // 2. Initialize i to x.\n    // 3. Initialize\
    \ j to y.\n    // 4. While i < j:\n    // 4.1. Initialize k to i.\n    // 4.2.\
    \ Initialize l to j.\n    // 4.3. Initialize m to (i + j) / 2.\n    // 4.4. Initialize\
    \ n to (i * j) / 2.\n    // 4.5. If m is odd, then set k = k + 1.\n    // 4.6.\
    \ If n is odd, then set l = l - 1.\n    // 4.7. Set i = m, j = n, and ans = m\
    \ * n.\n    // 4.8. Repeat step 4.7 until i = j.\n    // 4.9. If i = j, then return\
    \ ans.\n    // 5. Repeat step 4 until i < j.\n    // 6. Return ans.\n    // The\
    \ runtime complexity of this algorithm is O(log(x) + log(y)).\n    // The space\
    \ complexity of this algorithm is O(1).\n    // The following code implements\
    \ the algorithm.\n    ans = -1;\n    i = x;\n    j = y;\n    while (i < j) {\n\
    \        k = i;\n        l", "    long i, j, max_num = -1;\n    for (i = x; i\
    \ <= y; i++) {\n        for (j = i; j <= y; j++) {\n            if (i * j == i\
    \ || i * j == j || i * j == x || i * j == y) {\n                continue;\n  \
    \          }\n            if (max_num < i * j) {\n                max_num = i\
    \ * j;\n            }\n        }\n    }\n    return max_num;", "    long i, j,\
    \ k, n, m, p, q, r, s, t, u, v, w, x1, y1, z1, z2;\n    long result;\n    // Initialize\
    \ the variables\n    i = x;\n    j = y;\n    n = 1;\n    m = 1;\n    p = 1;\n\
    \    q = 1;\n    r = 1;\n    s = 1;\n    t = 1;\n    u = 1;\n    v = 1;\n    w\
    \ = 1;\n    x1 = 1;\n    y1 = 1;\n    z1 = 1;\n    z2 = 1;\n    // While we have\
    \ not reached the maximum value of x\n    while (i <= j) {\n        // If x is\
    \ odd, then y is odd and z is even\n        if (i % 2 == 1) {\n            //\
    \ If y is even, then z is odd and x is even\n            if (j % 2 == 0) {\n \
    \               // If x is even, then z is odd and y is even\n               \
    \ if (i % 4 == 0) {\n                    // If x is divisible by 4, then z is\
    \ divisible by 2 and y is divisible by 2\n                    if (j % 4 == 0)\
    \ {\n                        // If y is divisible by 4, then z is divisible by\
    \ 4 and x is divisible by 2\n                        if (i % 8 == 0) {\n     \
    \                       // If x is divisible by 8, then z is divisible by 8 and\
    \ y is divisible by 4\n                            if (j % 8 == 0) {\n       \
    \                         // If y is divisible by 8, then z is divisible by 16\
    \ and x is divisible by 8\n                                if (i % 16 == 0) {\n\
    \                                    // If x is divisible by 16, then z is divisible\
    \ by 32 and y is divisible by 16\n                                    if (j %\
    \ 16 == 0) {\n                                        // If y is divisible by\
    \ 16, then z is divisible by 64 and x is divisible by 16\n                   \
    \                     if (i % 32 == 0) {\n                                   \
    \         // If x is divisible by 32, then z is divisible by 128 and y is divisible\
    \ by 32\n                                            ", "    assert(x >= 0 &&\
    \ y >= 0);\n    long i, j, max_num = -1;\n    for (i = x; i <= y; i += 2) {\n\
    \        j = i;\n        while (j <= y && j % i == 0) {\n            j *= 2;\n\
    \        }\n        if (j > max_num) {\n            max_num = j;\n        }\n\
    \    }\n    return max_num;", "    long i, j, max_num;\n    long num_of_even_numbers\
    \ = 0;\n    long num_of_odd_numbers = 0;\n    long num_of_numbers = 0;\n    long\
    \ num_of_odd_numbers_in_range = 0;\n    long num_of_even_numbers_in_range = 0;\n\
    \    long max_num_in_range = 0;\n    \n    if (x > y) {\n        return -1;\n\
    \    }\n    \n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n    \
    \        num_of_even_numbers++;\n        } else {\n            num_of_odd_numbers++;\n\
    \        }\n    }\n    \n    num_of_numbers = num_of_even_numbers + num_of_odd_numbers;\n\
    \    \n    if (num_of_numbers == 0) {\n        return -1;\n    }\n    \n    num_of_odd_numbers_in_range\
    \ = num_of_odd_numbers;\n    num_of_even_numbers_in_range = num_of_even_numbers;\n\
    \    \n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n           \
    \ num_of_even_numbers_in_range--;\n        } else {\n            num_of_odd_numbers_in_range--;\n\
    \        }\n        \n        if (num_of_odd_numbers_in_range == 0) {\n      \
    \      max_num_in_range = i;\n            break;\n        }\n    }\n    \n   \
    \ if (num_of_odd_numbers_in_range != 0) {\n        return -1;\n    }\n    \n \
    \   for (i = max_num_in_range; i <= y; i++) {\n        if (i % 2 == 0) {\n   \
    \         num_of_even_numbers_in_range++;\n        } else {\n            num_of_odd_numbers_in_range++;\n\
    \        }\n        \n        if (num_of_odd_n", "    if (x > y) {\n        return\
    \ -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    if (x == 1) {\n\
    \        return 2;\n    }\n    if (x == 2) {\n        return 2;\n    }\n    if\
    \ (x % 2 == 0) {\n        return 2 * x;\n    }\n    if (x % 2 == 1) {\n      \
    \  return 2 * x + 1;\n    }", "    if (x > y) {\n        return -1;\n    }\n \
    \   if (x == y) {\n        return x;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    if (mid % 2 == 1) {\n \
    \       return choose_num(mid + 1, y);\n    }\n    return choose_num(x, mid -\
    \ 1);", "    if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n    \
    \    return x;\n    }\n    long i = x;\n    long j = y;\n    long k = 0;\n   \
    \ while (i <= j) {\n        k = i + j;\n        if (k % 2 == 0) {\n          \
    \  return k;\n        }\n        if (k % 2 == 1) {\n            i++;\n       \
    \ } else {\n            j--;\n        }\n    }\n    return -1;", "    long i,\
    \ j, k, max_i, max_j;\n    long result = -1;\n    for (i = x; i <= y; i++) {\n\
    \        for (j = i; j <= y; j++) {\n            k = i + j;\n            if (k\
    \ > y)\n                break;\n            if (k % 2 == 0 && k <= y) {\n    \
    \            if (result == -1 || k > result) {\n                    result = k;\n\
    \                    max_i = i;\n                    max_j = j;\n            \
    \    }\n            }\n        }\n    }\n    if (result == -1)\n        return\
    \ -1;\n    else\n        return max_i * max_j;", "    assert(x >= 0 && y >= 0);\n\
    \    long result = -1;\n    for (long i = x; i <= y; i += 2) {\n        if (i\
    \ > y) break;\n        result = i;\n    }\n    return result;", "    long i, j,\
    \ k, n, m, max_num;\n    long num_of_even_numbers;\n    if (x > y) {\n       \
    \ return -1;\n    }\n    n = x - y + 1;\n    num_of_even_numbers = n / 2;\n  \
    \  max_num = -1;\n    for (i = 0; i < num_of_even_numbers; i++) {\n        m =\
    \ 2 * i;\n        for (j = m; j < n; j += m) {\n            k = j + m;\n     \
    \       if (k >= n) {\n                break;\n            }\n            if (k\
    \ > max_num) {\n                max_num = k;\n            }\n        }\n    }\n\
    \    return max_num;", "    long i, j, max_num = -1;\n    for (i = x; i <= y;\
    \ i++) {\n        for (j = i; j <= y; j++) {\n            if (i * j == i || i\
    \ * j == j) {\n                max_num = max(max_num, i * j);\n            }\n\
    \        }\n    }\n    return max_num;", "    if (x > y) {\n        return -1;\n\
    \    }\n    long i = x;\n    long j = y;\n    while (i <= j) {\n        if (i\
    \ % 2 == 0 && j % 2 == 0) {\n            return i;\n        }\n        if (i %\
    \ 2 == 0) {\n            i = i + 1;\n        } else {\n            j = j - 1;\n\
    \        }\n    }\n    return -1;", "    long i, j, k, l, m, n, p, q, r, s, t,\
    \ u, v, w, x1, y1, z1, z2;\n    i = x;\n    j = y;\n    k = 1;\n    l = 0;\n \
    \   m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s = 1;\n    t\
    \ = 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = 1;\n    y1 = 1;\n    z1 =\
    \ 1;\n    z2 = 1;\n    while (i <= j) {\n        if (i == j) {\n            if\
    \ (i % 2 == 0) {\n                return i;\n            } else {\n          \
    \      return -1;\n            }\n        }\n        if (i % 2 == 0) {\n     \
    \       if (j % 2 == 0) {\n                if (i > j) {\n                    return\
    \ -1;\n                } else {\n                    return i;\n             \
    \   }\n            } else {\n                if (i > j) {\n                  \
    \  return -1;\n                } else {\n                    return i;\n     \
    \           }\n            }\n        } else {\n            if (j % 2 == 0) {\n\
    \                if (i > j) {\n                    return -1;\n              \
    \  } else {\n                    return i;\n                }\n            } else\
    \ {\n                if (i > j) {\n                    return -1;\n          \
    \      } else {\n                    return i;\n                }\n          \
    \  }\n        }\n        if (i == k) {\n            if (i % 2 == 0) {\n      \
    \          return i;\n            } else {\n                return -1;\n     \
    \       }\n        }\n        if (i == l) {\n            if (i % 2 == 0) {\n \
    \               return i;\n            } else {\n                return -1;\n\
    \            }\n        }\n        if (i == m) {\n            if (i % 2 == 0)\
    \ {\n                return i;\n            } else {\n                return -1;\n\
    \            }\n        }\n        if (i == n) {\n            if", "    if (x\
    \ > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n    long\
    \ k = 0;\n    while (i <= j) {\n        k = i + j;\n        i = i + 2;\n     \
    \   j = j - 2;\n    }\n    return k;", "    assert(x >= 0 && y >= 0);\n    long\
    \ i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z;\n    i = 1;\n    j = 1;\n\
    \    k = 1;\n    l = 1;\n    m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r\
    \ = 1;\n    s = 1;\n    t = 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n\
    \    y1 = y;\n    z = 0;\n    while (x1 >= y1) {\n        if (x1 % 2 == 0 && y1\
    \ % 2 == 0) {\n            z = x1;\n            break;\n        }\n        if\
    \ (x1 % 2 == 1 && y1 % 2 == 1) {\n            z = y1;\n            break;\n  \
    \      }\n        if (x1 % 2 == 0 && y1 % 2 == 1) {\n            z = x1;\n   \
    \         break;\n        }\n        if (x1 % 2 == 1 && y1 % 2 == 0) {\n     \
    \       z = y1;\n            break;\n        }\n        if (x1 % 2 == 1 && y1\
    \ % 2 == 1) {\n            z = x1;\n            break;\n        }\n        if\
    \ (x1 % 2 == 0 && y1 % 2 == 0) {\n            z = y1;\n            break;\n  \
    \      }\n        if (x1 % 2 == 1 && y1 % 2 == 0) {\n            z = x1;\n   \
    \         break;\n        }\n        if (x1 % 2 == 0 && y1 % 2 == 1) {\n     \
    \       z = y1;\n            break;\n        }\n        if (x1 % 2 == 1 && y1\
    \ % 2 == 1) {\n            z = x1;\n            break;\n        }\n        if\
    \ (x1 % 2 == 0 && y1 % 2 == 0) {\n            z = y1;\n            break;\n  \
    \      }\n        if (x1 % 2 == 1 && y1 % 2 == 0", "    if (x > y) {\n       \
    \ return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n    while\
    \ (i <= j) {\n        k *= i;\n        i += 2;\n    }\n    return k / 2;", " \
    \   long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z;\n    long ans =\
    \ -1;\n    // If x is greater than y, then swap them.\n    if (x > y) {\n    \
    \    long temp = x;\n        x = y;\n        y = temp;\n    }\n    // If x is\
    \ equal to y, then return x.\n    if (x == y) {\n        return x;\n    }\n  \
    \  // If x is less than or equal to 2, then return -1.\n    if (x <= 2) {\n  \
    \      return -1;\n    }\n    // If x is greater than 2 and y is greater than\
    \ 2, then return -1.\n    if (x > 2 && y > 2) {\n        return -1;\n    }\n \
    \   // If x is greater than 2 and y is less than or equal to 2, then return -1.\n\
    \    if (x > 2 && y <= 2) {\n        return -1;\n    }\n    // If x is less than\
    \ or equal to 2 and y is greater than 2, then return -1.\n    if (x <= 2 && y\
    \ > 2) {\n        return -1;\n    }\n    // If x is less than 2 and y is less\
    \ than 2, then return -1.\n    if (x <= 2 && y <= 2) {\n        return -1;\n \
    \   }\n    // If x is greater than 2 and y is greater than 2, then return -1.\n\
    \    if (x > 2 && y > 2) {\n        return -1;\n    }\n    // If x is greater\
    \ than 2 and y is less than 2, then return -1.\n    if (x > 2 && y <= 2) {\n \
    \       return -1;\n    }\n    // If x is less than 2 and y is greater than 2,\
    \ then return -1.\n    if (x <= 2 && y > 2) {\n        return -1;\n    }\n   \
    \ // If x is less than 2 and y is less than 2, then return -1.\n    if (x <= 2\
    \ && y <= 2) {\n        return -1;\n    }\n    // If", "    long i, j, k, l, m,\
    \ n, p, q, r, s, t, u, v, w, x1, y1;\n    long result = -1;\n    if (x > y) {\n\
    \        return result;\n    }\n    if (x == y) {\n        return x;\n    }\n\
    \    if (x == 1) {\n        return 2;\n    }\n    if (x == 2) {\n        return\
    \ 2;\n    }\n    if (x == 3) {\n        return 4;\n    }\n    if (x == 4) {\n\
    \        return 4;\n    }\n    if (x == 5) {\n        return 6;\n    }\n    if\
    \ (x == 6) {\n        return 6;\n    }\n    if (x == 7) {\n        return 8;\n\
    \    }\n    if (x == 8) {\n        return 8;\n    }\n    if (x == 9) {\n     \
    \   return 10;\n    }\n    if (x == 10) {\n        return 10;\n    }\n    if (x\
    \ == 11) {\n        return 12;\n    }\n    if (x == 12) {\n        return 12;\n\
    \    }\n    if (x == 13) {\n        return 14;\n    }\n    if (x == 14) {\n  \
    \      return 14;\n    }\n    if (x == 15) {\n        return 16;\n    }\n    if\
    \ (x == 16) {\n        return 16;\n    }\n    if (x == 17) {\n        return 18;\n\
    \    }\n    if (x == 18) {\n        return 18;\n    }\n    if (x == 19) {\n  \
    \      return 20;\n    }\n    if (x == 20) {\n        return 20;\n    }\n    if\
    \ (x == 21) {\n        return 22;\n    }\n    if (x == 22) {\n        return 22;\n\
    \    }\n    if (x == 23) {\n        return 24;\n    }\n    if (x == 24) {\n  \
    \      return 24;\n    }\n    if (x == 25) {\n        return 26;\n    }\n    if\
    \ (x == 26) {", "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n\
    \    long j = y;\n    long k = 1;\n    long m = 0;\n    while (i <= j) {\n   \
    \     m = i + j;\n        if (m % 2 == 0) {\n            k = m / 2;\n        \
    \    break;\n        }\n        i += 1;\n        j -= 1;\n    }\n    return k;",
  "    if (x > y) {\n        return -1;\n    }\n    long max_num = x;\n    for (long\
    \ i = x + 1; i <= y; i++) {\n        if (i % 2 == 0) {\n            max_num =\
    \ i;\n        }\n    }\n    return max_num;", "    long i, j, k, m, n, p, q, r,\
    \ s, t, u, v, w, x1, y1, z;\n    long max = -1;\n    for (i = x; i <= y; i++)\
    \ {\n        for (j = i; j <= y; j++) {\n            for (k = j; k <= y; k++)\
    \ {\n                for (m = k; m <= y; m++) {\n                    for (n =\
    \ m; n <= y; n++) {\n                        for (p = n; p <= y; p++) {\n    \
    \                        for (q = p; q <= y; q++) {\n                        \
    \        for (r = q; r <= y; r++) {\n                                    for (s\
    \ = r; s <= y; s++) {\n                                        for (t = s; t <=\
    \ y; t++) {\n                                            for (u = t; u <= y; u++)\
    \ {\n                                                for (v = u; v <= y; v++)\
    \ {\n                                                    for (w = v; w <= y; w++)\
    \ {\n                                                        x1 = i - x;\n   \
    \                                                     y1 = j - i;\n          \
    \                                              z = k - j;\n                  \
    \                                      if (x1 * y1 * z == 0) {\n             \
    \                                               if (x1 * y1 == 0) {\n        \
    \                                                        if (x1 * z == 0) {\n\
    \                                                                    if (y1 *\
    \ z == 0) {\n                                                                \
    \        if (x1 == 0) {\n                                                    \
    \                        if (y1 == 0) {\n                                    \
    \                                            if (z == 0) {\n                 \
    \                                                                   max = w;\n\
    \                                                                            \
    \        break;\n                                                            \
    \                    }\n                                                     \
    \                           else {\n                                         \
    \                                           max = v;\n                       \
    \                                                             break;\n       \
    \                                                                         }\n\
    \                                                                            }\n\
    \                                                                            else\
    \ {\n                                                                        \
    \        max = u;\n                                                          \
    \                      break;\n                                              \
    \                              }\n                                           \
    \                    ", "    long i, j, k, m, n, p, q, r, s, t, u, v, w, x1, y1,\
    \ z1, z2;\n    long result = -1;\n    if (x > y) {\n        return result;\n \
    \   }\n    x1 = x;\n    y1 = y;\n    i = 1;\n    while (x1 >= i * i) {\n     \
    \   i = i + 1;\n    }\n    j = 1;\n    while (y1 >= j * j) {\n        j = j +\
    \ 1;\n    }\n    k = i;\n    m = j;\n    if (i > j) {\n        k = j;\n      \
    \  m = i;\n    }\n    n = 1;\n    while (k * k <= m * m) {\n        n = n + 1;\n\
    \        k = k + 1;\n    }\n    p = 1;\n    q = 1;\n    while (n > 0) {\n    \
    \    if (n % 2 == 1) {\n            p = p * i;\n        }\n        if (n % 2 ==\
    \ 0) {\n            q = q * j;\n        }\n        n = n / 2;\n        i = i +\
    \ 1;\n        j = j + 1;\n    }\n    r = p * x1 + q * y1;\n    s = p * y1 + q\
    \ * x1;\n    t = p * x1;\n    u = p * y1;\n    v = q * x1;\n    w = q * y1;\n\
    \    if (r > s) {\n        if (r > t) {\n            if (r > u) {\n          \
    \      if (r > v) {\n                    if (r > w) {\n                      \
    \  result = r;\n                    } else {\n                        result =\
    \ w;\n                    }\n                } else {\n                    result\
    \ = v;\n                }\n            } else {\n                if (u > v) {\n\
    \                    if (u > w) {\n                        result = u;\n     \
    \               } else {\n                        result = w;\n              \
    \      }\n                } else {\n                    result = v;\n        \
    \        }\n            }\n        } else {\n", "    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n    while (i\
    \ <= j) {\n        i += 2;\n        k *= i;\n    }\n    return k;", "    long\
    \ i, j, k, n, m, temp;\n    long max = -1;\n    for (i = x; i <= y; i++) {\n \
    \       n = i;\n        m = 1;\n        while (n > 0) {\n            k = n % 10;\n\
    \            if (k % 2 == 1) {\n                n = n / 10;\n                m\
    \ = m * 10 + k;\n            } else {\n                n = n / 10;\n         \
    \   }\n        }\n        if (m > max) {\n            max = m;\n        }\n  \
    \  }\n    return max;", "    if (x > y) {\n        return -1;\n    }\n    if (x\
    \ == y) {\n        return x;\n    }\n    long i = x;\n    long j = y;\n    while\
    \ (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n            return i;\n\
    \        }\n        if (i % 2 == 1 && j % 2 == 1) {\n            return j;\n \
    \       }\n        i += 2;\n        j -= 2;\n    }\n    return -1;", "    if (x\
    \ > y) {\n        return -1;\n    }\n    if (x == y) {\n        return x;\n  \
    \  }\n    long i = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n\
    \        k = i + j;\n        if (k % 2 == 0) {\n            return k;\n      \
    \  }\n        if (k % 2 == 1) {\n            i += 1;\n        } else {\n     \
    \       j -= 1;\n        }\n    }\n    return -1;", "    long i, j, k, l, m, n,\
    \ p, q, r, s, t, u, v, w, x1, y1, z;\n    long max = -1;\n    for (i = x; i <=\
    \ y; i++) {\n        for (j = i; j <= y; j++) {\n            for (k = j; k <=\
    \ y; k++) {\n                for (l = k; l <= y; l++) {\n                    for\
    \ (m = l; m <= y; m++) {\n                        for (n = m; n <= y; n++) {\n\
    \                            for (p = n; p <= y; p++) {\n                    \
    \            for (q = p; q <= y; q++) {\n                                    for\
    \ (r = q; r <= y; r++) {\n                                        for (s = r;\
    \ s <= y; s++) {\n                                            for (t = s; t <=\
    \ y; t++) {\n                                                for (u = t; u <=\
    \ y; u++) {\n                                                    for (v = u; v\
    \ <= y; v++) {\n                                                        for (w\
    \ = v; w <= y; w++) {\n                                                      \
    \      for (x1 = w; x1 <= y; x1++) {\n                                       \
    \                         for (y1 = x1; y1 <= y; y1++) {\n                   \
    \                                                 for (z = y1; z <= y; z++) {\n\
    \                                                                        if (z\
    \ % 2 == 0 && z >= i && z <= j && z >= k && z <= l && z >= m && z <= n && z >=\
    \ p && z <= q && z >= r && z <= s && z >= t && z <= u && z >= v && z <= w && z\
    \ >= x1 && z <= y1 && z >= z) {\n                                            \
    \                                if (max < z) {\n                            \
    \                                                    max = z;\n              \
    \                                                              }\n           \
    \                                                             }\n            \
    \                                                        }\n                 \
    \                                               }\n                          \
    \                                  }\n                                       \
    \                 }\n                                                    }\n \
    \                                               }", '    long i, j, k, l, m, n,
    p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11,
    z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27,
    z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43,
    z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59,
    z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75,
    z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91,
    z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106,
    z107, z108, z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119,
    z120, z121, z122, z123, z124, z125, z126, z127, z128, z129, z130, z131, z132,
    z133, z134, z135, z136, z137, z138, z139, z140, z141, z142, z143, z144, z145,
    z146, z147, z148, z149, z150, z151, z152, z153, z154, z155, z156, z157, z158,
    z159', "    long i, j, max_i, max_j, max_num;\n    long num_of_even_numbers =\
    \ 0;\n    long num_of_odd_numbers = 0;\n    long max_num_of_even_numbers = 0;\n\
    \    long max_num_of_odd_numbers = 0;\n    \n    // Check if x is greater than\
    \ y\n    if (x > y) {\n        return -1;\n    }\n    \n    // Check if x and\
    \ y are both even or both odd\n    if ((x % 2 == 0) && (y % 2 == 0)) {\n     \
    \   num_of_even_numbers = (x / 2) + (y / 2);\n        max_num_of_even_numbers\
    \ = (x / 2) + (y / 2);\n    }\n    else if ((x % 2 == 1) && (y % 2 == 1)) {\n\
    \        num_of_odd_numbers = (x / 2) + (y / 2);\n        max_num_of_odd_numbers\
    \ = (x / 2) + (y / 2);\n    }\n    else {\n        return -1;\n    }\n    \n \
    \   // Check if x and y are both even or both odd\n    if ((x % 2 == 0) && (y\
    \ % 2 == 0)) {\n        num_of_even_numbers = (x / 2) + (y / 2);\n        max_num_of_even_numbers\
    \ = (x / 2) + (y / 2);\n    }\n    else if ((x % 2 == 1) && (y % 2 == 1)) {\n\
    \        num_of_odd_numbers = (x / 2) + (y / 2);\n        max_num_of_odd_numbers\
    \ = (x / 2) + (y / 2);\n    }\n    else {\n        return -1;\n    }\n    \n \
    \   // Check if x and y are both even or both odd\n    if ((x % 2 == 0) && (y\
    \ % 2 == 0)) {\n        num_of_even_numbers = (x / 2) + (y / 2);\n        max_num_of_even_numbers\
    \ = (x", "    long i, j, k, n, m, max_num;\n    n = y - x + 1;\n    m = (n - 1)\
    \ / 2;\n    max_num = -1;\n    for (i = 0; i <= m; i++) {\n        k = 2 * i +\
    \ 1;\n        j = n - k;\n        if (j >= 0 && k <= j) {\n            if (k %\
    \ 2 == 0) {\n                if (k > max_num)\n                    max_num = k;\n\
    \            }\n            else {\n                if (k > max_num)\n       \
    \             max_num = k;\n            }\n        }\n    }\n    return max_num;",
  "    long i, j, max_num;\n    long num_of_even_numbers = 0;\n    for (i = x; i <=\
    \ y; i++) {\n        if (i % 2 == 0) {\n            num_of_even_numbers++;\n \
    \       }\n    }\n    if (num_of_even_numbers == 0) {\n        return -1;\n  \
    \  }\n    max_num = num_of_even_numbers * (num_of_even_numbers + 1) / 2;\n   \
    \ for (i = x; i <= y; i++) {\n        for (j = i + 1; j <= y; j++) {\n       \
    \     if (i % 2 == 0 && j % 2 == 0) {\n                num_of_even_numbers++;\n\
    \            }\n            if (num_of_even_numbers > max_num) {\n           \
    \     return -1;\n            }\n        }\n    }\n    return max_num;", "   \
    \ long i, j, max_num;\n    long num_of_even_numbers = 0;\n    long num_of_odd_numbers\
    \ = 0;\n    long max_num_of_even_numbers = 0;\n    long max_num_of_odd_numbers\
    \ = 0;\n    long max_num_of_even_numbers_in_range = 0;\n    long max_num_of_odd_numbers_in_range\
    \ = 0;\n    long max_num_of_even_numbers_in_range = 0;\n    long max_num_of_odd_numbers_in_range\
    \ = 0;\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n          \
    \  num_of_even_numbers++;\n            if (num_of_even_numbers > max_num_of_even_numbers)\
    \ {\n                max_num_of_even_numbers = num_of_even_numbers;\n        \
    \        max_num_of_even_numbers_in_range = i;\n            }\n        } else\
    \ {\n            num_of_odd_numbers++;\n            if (num_of_odd_numbers > max_num_of_odd_numbers)\
    \ {\n                max_num_of_odd_numbers = num_of_odd_numbers;\n          \
    \      max_num_of_odd_numbers_in_range = i;\n            }\n        }\n    }\n\
    \    if (max_num_of_even_numbers > max_num_of_odd_numbers) {\n        max_num\
    \ = max_num_of_even_numbers;\n        max_num_of_even_numbers_in_range = max_num_of_even_numbers_in_range;\n\
    \    } else {\n        max_num = max_num_of_odd_numbers;\n        max_num_of_odd_numbers_in_range\
    \ = max_num_of_odd_numbers_in_range;\n    }\n    return max_num;", "    if (x\
    \ > y) {\n        return -1;\n    }\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    while (i <= x && j <= y) {\n        if (i % 2 == 0 && j % 2 == 0)\
    \ {\n            k = i * j;\n            if (k > y) {\n                return\
    \ -1;\n            }\n            if (k >= x) {\n                return k;\n \
    \           }\n        }\n        i += 2;\n        j += 2;\n    }\n    return\
    \ -1;", "    if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n    \
    \    return x;\n    }\n    if (x == 1) {\n        return 2;\n    }\n    if (x\
    \ == 2) {\n        return 2;\n    }\n    if (x % 2 == 0) {\n        return x;\n\
    \    }\n    if (y % 2 == 0) {\n        return -1;\n    }\n    long result = x\
    \ + y;\n    result /= 2;\n    result -= 1;\n    return result;", "    if (x >\
    \ y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n    long\
    \ result = 0;\n    while (i <= j) {\n        if (i % 2 == 0) {\n            i\
    \ = i / 2;\n            result = result + i;\n        } else {\n            j\
    \ = j - 1;\n        }\n    }\n    return result;", "    long i, j, k, l, m, n,\
    \ p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11,\
    \ z12, z13, z14, z15;\n    i = 1;\n    j = 1;\n    k = 1;\n    l = 1;\n    m =\
    \ 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s = 1;\n    t = 1;\n\
    \    u = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n    y1 = y;\n    z1 = x1 - y1\
    \ + 1;\n    z2 = z1;\n    z3 = z2;\n    z4 = z3;\n    z5 = z4;\n    z6 = z5;\n\
    \    z7 = z6;\n    z8 = z7;\n    z9 = z8;\n    z10 = z9;\n    z11 = z10;\n   \
    \ z12 = z11;\n    z13 = z12;\n    z14 = z13;\n    z15 = z14;\n    while (z1 <=\
    \ y) {\n        if (z1 % 2 == 0) {\n            if (z1 <= x) {\n             \
    \   return z1;\n            }\n            else {\n                return -1;\n\
    \            }\n        }\n        else {\n            if (z1 <= x) {\n      \
    \          z1 = z1 + 2;\n            }\n            else {\n                z1\
    \ = z1 + 1;\n            }\n        }\n    }\n    return -1;", "    if (x > y)\
    \ {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n    long k =\
    \ 0;\n    while (i <= j) {\n        k = i + j;\n        if (k % 2 == 0) {\n  \
    \          return k;\n        }\n        i++;\n        j--;\n    }\n    return\
    \ -1;", "    long i, j, k, n, m;\n    long result;\n    n = x - y + 1;\n    m\
    \ = n / 2;\n    result = -1;\n    for (i = m; i >= 1; i--) {\n        for (j =\
    \ i; j <= n; j++) {\n            k = j - i;\n            if (k % 2 == 0 && k <=\
    \ y && k >= x) {\n                result = k;\n                break;\n      \
    \      }\n        }\n        if (result != -1) {\n            break;\n       \
    \ }\n    }\n    return result;", "    if (x > y) {\n        return -1;\n    }\n\
    \    if (x == y) {\n        return x;\n    }\n    long mid = (x + y) / 2;\n  \
    \  if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid\
    \ + 1, y);", "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n \
    \   long j = y;\n    long k = 0;\n    while (i <= j) {\n        k = i + j;\n \
    \       if (k % 2 == 0) {\n            return k;\n        }\n        i++;\n  \
    \      j--;\n    }\n    return -1;", "    long i, j, k, n, m;\n    long result\
    \ = -1;\n    if (x > y) {\n        return result;\n    }\n    n = x - y + 1;\n\
    \    m = n / 2;\n    for (i = 1; i <= m; i++) {\n        k = 2 * i;\n        if\
    \ (k > n) {\n            break;\n        }\n        if (k == n) {\n          \
    \  result = k;\n            break;\n        }\n        if (k > n - k) {\n    \
    \        j = n - k;\n        } else {\n            j = k;\n        }\n       \
    \ if (j < y) {\n            j = y;\n        }\n        if (j - y + 1 > result)\
    \ {\n            result = j - y + 1;\n        }\n    }\n    return result;", " \
    \   long i, j, k, m, n, p, q, r, s, t, u, v, w, x1, y1, z;\n    long ans = -1;\n\
    \    if (x > y) {\n        return ans;\n    }\n    i = 1;\n    j = 1;\n    k =\
    \ 1;\n    m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s = 1;\n\
    \    t = 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n    y1 = y;\n  \
    \  z = x;\n    while (z <= y) {\n        if (z % 2 == 0) {\n            if (z\
    \ <= y) {\n                ans = z;\n            }\n            if (z <= x) {\n\
    \                x1 = z;\n            }\n            if (z <= y) {\n         \
    \       y1 = z;\n            }\n            if (z <= x) {\n                x1\
    \ = z;\n            }\n            if (z <= y) {\n                y1 = z;\n  \
    \          }\n            if (z <= x) {\n                x1 = z;\n           \
    \ }\n            if (z <= y) {\n                y1 = z;\n            }\n     \
    \       if (z <= x) {\n                x1 = z;\n            }\n            if\
    \ (z <= y) {\n                y1 = z;\n            }\n            if (z <= x)\
    \ {\n                x1 = z;\n            }\n            if (z <= y) {\n     \
    \           y1 = z;\n            }\n            if (z <= x) {\n              \
    \  x1 = z;\n            }\n            if (z <= y) {\n                y1 = z;\n\
    \            }\n            if (z <= x) {\n                x1 = z;\n         \
    \   }\n            if (z <= y) {\n                y1 = z;\n            }\n   \
    \         if (z <= x) {\n                x1 = z;\n            }\n            if\
    \ (z <= y) {\n                y1 = z;\n            }\n            if (z <= x)\
    \ {\n                ", "    if (x > y) {\n        return -1;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 1;\n    while (i <= j) {\n        i +=\
    \ k;\n        j -= k;\n        k *= 2;\n    }\n    return i;", "    if (x > y)\
    \ {\n        return -1;\n    }\n    long i = 2;\n    long j = x;\n    while (i\
    \ <= y) {\n        if (i >= x && i <= y && (i & 1) == 0) {\n            return\
    \ i;\n        }\n        i += 2;\n        j -= 1;\n    }\n    return -1;", " \
    \   if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long max = 0;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0)\
    \ {\n            max = i;\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    return max;", "    long i, j, max_i, max_j;\n    long max_num = -1;\n   \
    \ for (i = x; i <= y; i++) {\n        for (j = i; j <= y; j++) {\n           \
    \ if (i == j) {\n                continue;\n            }\n            if (max_num\
    \ < i * j) {\n                max_num = i * j;\n                max_i = i;\n \
    \               max_j = j;\n            }\n        }\n    }\n    return max_num;",
  "    long i, j, max_i, max_j, max_num;\n    long num_of_even_numbers;\n    \n  \
    \  // If x is greater than y, then return -1.\n    if (x > y) {\n        return\
    \ -1;\n    }\n    \n    // If x is equal to y, then return x.\n    if (x == y)\
    \ {\n        return x;\n    }\n    \n    // If x is less than 2, then return -1.\n\
    \    if (x < 2) {\n        return -1;\n    }\n    \n    // If x is 2, then return\
    \ 2.\n    if (x == 2) {\n        return 2;\n    }\n    \n    // If x is 3, then\
    \ return 4.\n    if (x == 3) {\n        return 4;\n    }\n    \n    // If x is\
    \ 4, then return 6.\n    if (x == 4) {\n        return 6;\n    }\n    \n    //\
    \ If x is 5, then return 8.\n    if (x == 5) {\n        return 8;\n    }\n   \
    \ \n    // If x is 6, then return 10.\n    if (x == 6) {\n        return 10;\n\
    \    }\n    \n    // If x is 7, then return 12.\n    if (x == 7) {\n        return\
    \ 12;\n    }\n    \n    // If x is 8, then return 14.\n    if (x == 8) {\n   \
    \     return 14;\n    }\n    \n    // If x is 9, then return 16.\n    if (x ==\
    \ 9) {\n        return 16;\n    }\n    \n    // If x is 10, then return 18.\n\
    \    if (x == 10) {\n        return 18;\n    }\n    \n    // If x is 11, then\
    \ return 20.\n    if (x == 11) {\n        return 20;\n    }\n    \n    // If x\
    \ is 12, then return 22.\n    if (x == 12) {\n        return 22;\n    }\n    \n\
    \    // If x is 13, then return 24.\n    if (x == 13) {\n        return 24;\n\
    \    }\n    \n    // If x", "    long i, j, k, l, m, n, p, q, r, s, t, u, v, w,\
    \ x1, y1, z1, z2, z3, z4;\n    i = 1;\n    j = 1;\n    k = 1;\n    l = 1;\n  \
    \  m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s = 1;\n    t =\
    \ 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n    y1 = y;\n    z1 = x1\
    \ - y1 + 1;\n    z2 = 0;\n    z3 = 0;\n    z4 = 0;\n    while (z1 > 0) {\n   \
    \     if (z1 % 2 == 0) {\n            z2 = z2 + i;\n            z3 = z3 + j;\n\
    \            z4 = z4 + k;\n        }\n        if (z1 % 2 != 0) {\n           \
    \ z2 = z2 + l;\n            z3 = z3 + m;\n            z4 = z4 + n;\n        }\n\
    \        i = i + 2;\n        j = j + 2;\n        k = k + 2;\n        l = l + 2;\n\
    \        m = m + 2;\n        n = n + 2;\n        p = p + 2;\n        q = q + 2;\n\
    \        r = r + 2;\n        s = s + 2;\n        t = t + 2;\n        u = u + 2;\n\
    \        v = v + 2;\n        w = w + 2;\n        x1 = x1 - 2;\n        y1 = y1\
    \ - 2;\n        z1 = z1 - 2;\n    }\n    if (z2 > 0) {\n        return z2;\n \
    \   }\n    if (z3 > 0) {\n        return z3;\n    }\n    if (z4 > 0) {\n     \
    \   return z4;\n    }\n    return -1;", "    if (x > y) {\n        return -1;\n\
    \    }\n    long i = x;\n    long j = y;\n    long result = 0;\n    while (i <=\
    \ j) {\n        if (i % 2 == 0) {\n            i = i / 2;\n            result\
    \ = result + i;\n        } else {\n            j = j - i;\n        }\n    }\n\
    \    return result;", "    long i, j, k, max_num;\n    long num_of_even_numbers;\n\
    \    // We need to find the number of even numbers in the range [x, y]\n    num_of_even_numbers\
    \ = 0;\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n          \
    \  num_of_even_numbers++;\n        }\n    }\n    // Now we need to find the biggest\
    \ even number in the range [x, y]\n    // We will do this by using the binary\
    \ search algorithm.\n    // We will start with the lower bound of the range and\
    \ then we will\n    // increase the upper bound until we find the number or we\
    \ reach the\n    // upper bound of the range.\n    i = x;\n    j = y;\n    while\
    \ (i <= j) {\n        k = (i + j) / 2;\n        if (k % 2 == 0) {\n          \
    \  max_num = k;\n            break;\n        } else if (k < i) {\n           \
    \ // If we are at the lower bound of the range and we still\n            // haven't\
    \ found the number, then we need to increase the\n            // lower bound.\n\
    \            i = k + 1;\n        } else {\n            // If we are at the upper\
    \ bound of the range and we still\n            // haven't found the number, then\
    \ we need to decrease the\n            // upper bound.\n            j = k - 1;\n\
    \        }\n    }\n    // Now we need to check if we found the number or not.\n\
    \    if (max_num == -1) {\n        // If we didn't find the number, then we need\
    \ to return -1.\n        return -1;\n    } else {\n        // If we did find the\
    \ number, then we need to return the number.\n        return max_num;\n    }",
  "    long i, j, k, n, m, max_num;\n    long max_num_in_range;\n    \n    if (x >\
    \ y) {\n        return -1;\n    }\n    \n    n = y - x + 1;\n    m = n / 2;\n\
    \    \n    max_num = (long) pow(2, m) - 1;\n    \n    for (i = 0; i <= max_num;\
    \ i++) {\n        k = i;\n        for (j = 0; j < m; j++) {\n            k = (k\
    \ >> 1) + (k & 1);\n        }\n        if (k == i) {\n            max_num_in_range\
    \ = i;\n            break;\n        }\n    }\n    \n    return max_num_in_range;",
  "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long k = 1;\n    long result = 0;\n    while (i <= j) {\n        if (i %\
    \ 2 == 0) {\n            result = i;\n            break;\n        }\n        i\
    \ += k;\n        k *= 2;\n    }\n    return result;", "    if (x > y) {\n    \
    \    return -1;\n    }\n    long num = x;\n    while (num <= y) {\n        num\
    \ += 2;\n    }\n    return num;", "    long i, j, max_num;\n    // We need to\
    \ check if x and y are both even or odd.\n    if (x % 2 == 0 && y % 2 == 0) {\n\
    \        // If both x and y are even, then we need to check if x is\n        //\
    \ greater than y.\n        if (x > y) {\n            max_num = x;\n        } else\
    \ {\n            max_num = y;\n        }\n        // We need to check if x is\
    \ even and y is odd.\n    } else if (x % 2 == 0 && y % 2 == 1) {\n        // If\
    \ x is even and y is odd, then we need to check if x is\n        // greater than\
    \ y.\n        if (x > y) {\n            max_num = x;\n        } else {\n     \
    \       max_num = y;\n        }\n        // If x is odd and y is even, then we\
    \ need to check if y is\n        // greater than x.\n    } else if (x % 2 == 1\
    \ && y % 2 == 0) {\n        // If x is odd and y is even, then we need to check\
    \ if y is\n        // greater than x.\n        if (y > x) {\n            max_num\
    \ = y;\n        } else {\n            max_num = x;\n        }\n        // If x\
    \ and y are both odd, then we need to check if x is\n        // greater than y.\n\
    \    } else {\n        // If x and y are both odd, then we need to check if y\
    \ is\n        // greater than x.\n        if (y > x) {\n            max_num =\
    \ y;\n        } else {\n            max_num = x;\n        }\n    }\n    // We\
    \ need to check if max_num is in the range [x, y] inclusive.\n    if (max_num\
    \ < x || max_num > y) {\n        return -1;\n    }\n    // We need to check if\
    \ max_num is even.\n    if (max_num % 2 == 0) {\n        // If max_num is even,\
    \ then we need to check if max_num is\n        // greater than x.\n        if\
    \ (max_num > x) {\n            ", "    long i, j, k, l, m, n, p, q, r, s, t, u,\
    \ v, w, x1, y1, z1, z2;\n    long result = -1;\n    // We need to find the biggest\
    \ even number that is in the range [x, y]\n    // inclusive.\n    // We can do\
    \ this by using the formula:\n    // (x + y) / 2\n    // where x and y are positive\
    \ integers.\n    // The formula is valid for all integers except for 0.\n    //\
    \ For 0, we need to use the formula:\n    // (x + y) / 2 - 1\n    // where x and\
    \ y are positive integers.\n    // The formula is valid for all integers except\
    \ for 0 and 1.\n    // For 1, we need to use the formula:\n    // (x + y) / 2\n\
    \    // where x and y are positive integers.\n    // The formula is valid for\
    \ all integers except for 0 and 1.\n    // For 0, we need to use the formula:\n\
    \    // (x + y) / 2 - 1\n    // where x and y are positive integers.\n    // The\
    \ formula is valid for all integers except for 0 and 1.\n    // For 1, we need\
    \ to use the formula:\n    // (x + y) / 2\n    // where x and y are positive integers.\n\
    \    // The formula is valid for all integers except for 0 and 1.\n    // For\
    \ 0, we need to use the formula:\n    // (x + y) / 2 - 1\n    // where x and y\
    \ are positive integers.\n    // The formula is valid for all integers except\
    \ for 0 and 1.\n    // For 1, we need to use the formula:\n    // (x + y) / 2\n\
    \    // where x and y are positive integers.\n    // The formula is valid for\
    \ all integers except for 0 and 1.\n    // For 0, we need to use the formula:\n\
    \    // (x + y) / 2 - 1\n    // where x and y are positive integers.\n    // The\
    \ formula is valid for all integers except for 0 and 1.\n    // For 1, we need\
    \ to use the formula:\n    // (x + y) / 2\n    // where x and y are", "    if\
    \ (x > y)\n        return -1;\n    if (x == y)\n        return x;\n    long i\
    \ = x;\n    long j = y;\n    long k = 1;\n    while (i <= j) {\n        i += k;\n\
    \        j -= k;\n        k *= 2;\n    }\n    return i - j;", "    if (x > y)\
    \ return -1;\n    long i = x;\n    long j = y;\n    long count = 0;\n    while\
    \ (i <= j) {\n        if (i % 2 == 0) {\n            count += i;\n        }\n\
    \        i += 1;\n    }\n    return count;", "    long i, j, max_num;\n    if\
    \ (x > y) {\n        return -1;\n    }\n    max_num = x;\n    for (i = x + 1;\
    \ i <= y; i++) {\n        if (i % 2 == 0) {\n            max_num = i;\n      \
    \  }\n    }\n    return max_num;", "    if (x > y) {\n        return -1;\n   \
    \ }\n    if (x == y) {\n        return x;\n    }\n    long i = x;\n    long j\
    \ = y;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n      \
    \      return i;\n        }\n        if (i % 2 == 1 && j % 2 == 1) {\n       \
    \     return j;\n        }\n        i += 2;\n        j -= 2;\n    }\n    return\
    \ -1;", "    if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n    \
    \    return x;\n    }\n    long result = 0;\n    long i = x;\n    while (i <=\
    \ y) {\n        if (i % 2 == 0) {\n            result = i;\n        }\n      \
    \  i += 1;\n    }\n    return result;", "    if (x > y) {\n        return -1;\n\
    \    }\n    long num = x;\n    while (num <= y) {\n        num += 2;\n    }\n\
    \    return num;", "    if (x > y) {\n        return -1;\n    }\n    long i =\
    \ x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n        k = i +\
    \ j;\n        if (k % 2 == 0) {\n            return k;\n        }\n        if\
    \ (k % 2 == 1) {\n            i++;\n        } else {\n            j--;\n     \
    \   }\n    }\n    return -1;", "    long i, j, max_i, max_j;\n    long result\
    \ = -1;\n    for (i = x; i <= y; i++) {\n        for (j = i; j <= y; j++) {\n\
    \            if (i == j) {\n                if (i % 2 == 0) {\n              \
    \      result = i;\n                }\n            } else {\n                if\
    \ (i % 2 == 0 && j % 2 == 0) {\n                    result = i * j;\n        \
    \        }\n            }\n        }\n    }\n    return result;", "    long i,\
    \ j, k, max_num;\n    long num_of_even_numbers;\n    long num_of_odd_numbers;\n\
    \    long num_of_odd_numbers_in_range;\n    \n    // If x is greater than y, then\
    \ return -1\n    if (x > y) {\n        return -1;\n    }\n    \n    // If x is\
    \ equal to y, then return x\n    if (x == y) {\n        return x;\n    }\n   \
    \ \n    // If x is less than 2, then return -1\n    if (x < 2) {\n        return\
    \ -1;\n    }\n    \n    // If x is 2, then return 2\n    if (x == 2) {\n     \
    \   return 2;\n    }\n    \n    // If x is 3, then return 4\n    if (x == 3) {\n\
    \        return 4;\n    }\n    \n    // If x is 4, then return 6\n    if (x ==\
    \ 4) {\n        return 6;\n    }\n    \n    // If x is 5, then return 8\n    if\
    \ (x == 5) {\n        return 8;\n    }\n    \n    // If x is 6, then return 10\n\
    \    if (x == 6) {\n        return 10;\n    }\n    \n    // If x is 7, then return\
    \ 12\n    if (x == 7) {\n        return 12;\n    }\n    \n    // If x is 8, then\
    \ return 14\n    if (x == 8) {\n        return 14;\n    }\n    \n    // If x is\
    \ 9, then return 16\n    if (x == 9) {\n        return 16;\n    }\n    \n    //\
    \ If x is 10, then return 18\n    if (x == 10) {\n        return 18;\n    }\n\
    \    \n    // If x is 11, then return 20\n    if (x == 11) {\n        return 20;\n\
    \    }\n    \n    // If x is 12, then return 22\n    if (x == 12) {\n        return\
    \ 22;\n    }\n    \n    // If x is 13, then return 24\n    if (x == 13) {\n  \
    \      return 24;\n    }", "    if (x > y) {\n        return -1;\n    }\n    long\
    \ num = x;\n    long i = 1;\n    while (num <= y) {\n        num += i;\n     \
    \   i += 2;\n    }\n    return num;", "    if (x > y) {\n        return -1;\n\
    \    }\n    long i = x;\n    long j = y;\n    long result = 0;\n    while (i <=\
    \ j) {\n        if (i % 2 == 0) {\n            result = i;\n        }\n      \
    \  i++;\n    }\n    return result;", "    if (x > y) {\n        return -1;\n \
    \   }\n    long max_num = x;\n    for (long i = x + 1; i <= y; i++) {\n      \
    \  if (i % 2 == 0) {\n            max_num = i;\n        }\n    }\n    return max_num;",
  "    long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z;\n    long result\
    \ = -1;\n    if (x > y) {\n        return result;\n    }\n    if (x == y) {\n\
    \        return x;\n    }\n    if (x == 1) {\n        return 2;\n    }\n    if\
    \ (x == 2) {\n        return 2;\n    }\n    if (x == 3) {\n        return 4;\n\
    \    }\n    if (x == 4) {\n        return 4;\n    }\n    if (x == 5) {\n     \
    \   return 6;\n    }\n    if (x == 6) {\n        return 6;\n    }\n    if (x ==\
    \ 7) {\n        return 8;\n    }\n    if (x == 8) {\n        return 8;\n    }\n\
    \    if (x == 9) {\n        return 10;\n    }\n    if (x == 10) {\n        return\
    \ 10;\n    }\n    if (x == 11) {\n        return 12;\n    }\n    if (x == 12)\
    \ {\n        return 12;\n    }\n    if (x == 13) {\n        return 14;\n    }\n\
    \    if (x == 14) {\n        return 14;\n    }\n    if (x == 15) {\n        return\
    \ 16;\n    }\n    if (x == 16) {\n        return 16;\n    }\n    if (x == 17)\
    \ {\n        return 18;\n    }\n    if (x == 18) {\n        return 18;\n    }\n\
    \    if (x == 19) {\n        return 20;\n    }\n    if (x == 20) {\n        return\
    \ 20;\n    }\n    if (x == 21) {\n        return 22;\n    }\n    if (x == 22)\
    \ {\n        return 22;\n    }\n    if (x == 23) {\n        return 24;\n    }\n\
    \    if (x == 24) {\n        return 24;\n    }\n    if (x == 25) {\n        return\
    \ 26;\n    }\n    if (x == 26", "    long i, j, max_i = -1;\n    for (i = x; i\
    \ <= y; i += 2) {\n        j = i / 2;\n        if (j > max_i) {\n            max_i\
    \ = j;\n        }\n    }\n    return max_i;", "    long i, j, max_num;\n    long\
    \ num_of_even_numbers = 0;\n    long num_of_odd_numbers = 0;\n    long num_of_odd_numbers_in_range\
    \ = 0;\n    long num_of_even_numbers_in_range = 0;\n    \n    // If x is greater\
    \ than y, then return -1\n    if (x > y) {\n        return -1;\n    }\n    \n\
    \    // If x is equal to y, then return x\n    if (x == y) {\n        return x;\n\
    \    }\n    \n    // If x is less than or equal to 0, then return -1\n    if (x\
    \ <= 0) {\n        return -1;\n    }\n    \n    // If y is less than or equal\
    \ to 0, then return -1\n    if (y <= 0) {\n        return -1;\n    }\n    \n \
    \   // If x is equal to 1, then return 1\n    if (x == 1) {\n        return 1;\n\
    \    }\n    \n    // If y is equal to 1, then return 1\n    if (y == 1) {\n  \
    \      return 1;\n    }\n    \n    // If x is equal to 2, then return 2\n    if\
    \ (x == 2) {\n        return 2;\n    }\n    \n    // If y is equal to 2, then\
    \ return 2\n    if (y == 2) {\n        return 2;\n    }\n    \n    // If x is\
    \ equal to 3, then return 3\n    if (x == 3) {\n        return 3;\n    }\n   \
    \ \n    // If y is equal to 3, then return 3\n    if (y == 3) {\n        return\
    \ 3;\n    }\n    \n    // If x is equal to 4, then return 4\n    if (x == 4) {\n\
    \        return 4;\n    }\n    \n    // If y is equal to 4, then return 4\n  \
    \  if (y == 4) {\n        return 4;\n    }\n    \n    // If x is equal to 5, then\
    \ return 5\n    if (x == 5) {\n        return 5;\n    }\n    \n    // If y is\
    \ equal to", "    long i, j, k, n, m, temp;\n    long max_num = -1;\n    // We\
    \ need to find the biggest even number in the range [x, y]\n    // inclusive.\n\
    \    // We can do this by using the formula:\n    // (x + y) / 2\n    // where\
    \ (x + y) is the biggest even number in the range [x, y]\n    // inclusive.\n\
    \    // We can also do this by using the formula:\n    // (x + y) / 2 - 1\n  \
    \  // where (x + y) is the biggest even number in the range [x, y]\n    // inclusive.\n\
    \    // The difference between the two formulas is that the first\n    // formula\
    \ is more efficient.\n    // We can also do this by using the formula:\n    //\
    \ (x + y) / 2 - 1 + 1\n    // where (x + y) is the biggest even number in the\
    \ range [x, y]\n    // inclusive.\n    // The difference between the three formulas\
    \ is that the second\n    // formula is more efficient.\n    // We can also do\
    \ this by using the formula:\n    // (x + y) / 2 - 1 + 1 - 1\n    // where (x\
    \ + y) is the biggest even number in the range [x, y]\n    // inclusive.\n   \
    \ // The difference between the four formulas is that the third\n    // formula\
    \ is more efficient.\n    // We can also do this by using the formula:\n    //\
    \ (x + y) / 2 - 1 + 1 - 1 - 1\n    // where (x + y) is the biggest even number\
    \ in the range [x, y]\n    // inclusive.\n    // The difference between the five\
    \ formulas is that the fourth\n    // formula is more efficient.\n    // We can\
    \ also do this by using the formula:\n    // (x + y) / 2 - 1 + 1 - 1 - 1 - 1\n\
    \    // where (x + y) is the biggest even number in the range [x, y]\n    // inclusive.\n\
    \    // The difference between the six formulas is that the fifth\n    // formula\
    \ is more efficient.\n    // We can also do this by using the formula:\n    //\
    \ (x + y) / 2 - 1 + 1 - 1 -", "    if (x > y) {\n        return -1;\n    }\n \
    \   long result = 0;\n    long i = x;\n    while (i <= y) {\n        if (i % 2\
    \ == 0) {\n            result = i;\n        }\n        i++;\n    }\n    return\
    \ result;", "    if (x > y) {\n        return -1;\n    }\n    long max_num = x;\n\
    \    for (long i = x + 1; i <= y; i++) {\n        if (i % 2 == 0) {\n        \
    \    max_num = i;\n        }\n    }\n    return max_num;", "    long i, j, max_num;\n\
    \    // We need to find the biggest even number in the range [x, y]\n    // inclusive.\n\
    \    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            max_num\
    \ = i;\n            break;\n        }\n    }\n    // If we didn't find any even\
    \ number in the range [x, y], then\n    // return -1.\n    if (max_num == -1)\
    \ {\n        return -1;\n    }\n    // Now we need to find the biggest even number\
    \ in the range [x, y]\n    // that is less than max_num.\n    for (j = max_num;\
    \ j >= x; j--) {\n        if (j % 2 == 0) {\n            max_num = j;\n      \
    \      break;\n        }\n    }\n    return max_num;", "    if (x > y) {\n   \
    \     return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n \
    \   while (i <= j) {\n        if (i % 2 == 0) {\n            i = i / 2;\n    \
    \        k = k * 2;\n        } else {\n            i = i + 1;\n        }\n   \
    \     if (j % 2 == 0) {\n            j = j / 2;\n            k = k * 2;\n    \
    \    } else {\n            j = j + 1;\n        }\n    }\n    return k;", "   \
    \ long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6,\
    \ z7, z8, z9, z10, z11, z12, z13, z14, z15;\n    i = 1;\n    j = 1;\n    k = 1;\n\
    \    l = 1;\n    m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s\
    \ = 1;\n    t = 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = 1;\n    y1 =\
    \ 1;\n    z1 = 1;\n    z2 = 1;\n    z3 = 1;\n    z4 = 1;\n    z5 = 1;\n    z6\
    \ = 1;\n    z7 = 1;\n    z8 = 1;\n    z9 = 1;\n    z10 = 1;\n    z11 = 1;\n  \
    \  z12 = 1;\n    z13 = 1;\n    z14 = 1;\n    z15 = 1;\n    while (i <= x && j\
    \ <= y && k <= x && l <= y && m <= x && n <= y && p <= x && q <= y && r <= x &&\
    \ s <= y && t <= x && u <= y && v <= x && w <= y) {\n        if (i <= x && j <=\
    \ y && k <= x && l <= y && m <= x && n <= y && p <= x && q <= y && r <= x && s\
    \ <= y && t <= x && u <= y && v <= x && w <= y) {\n            if (i <= x && j\
    \ <= y && k <= x && l <= y && m <= x && n <= y && p <= x && q <= y && r <= x &&\
    \ s <= y && t <= x && u <= y && v <= x && w <= y) {\n                if (i <=\
    \ x && j <= y && k <= x && l <= y && m <= x && n <= y && p <= x && q <= y && r\
    \ <= x && s <= y && t", "    if (x > y) {\n        return -1;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long count = 0;\n    while (i <= j) {\n       \
    \ if (i % 2 == 0) {\n            count += i;\n        }\n        i++;\n    }\n\
    \    return count;", "    if (x > y)\n        return -1;\n    if (x == y)\n  \
    \      return x;\n    long i = x;\n    long j = y;\n    while (i <= j) {\n   \
    \     if (i % 2 == 0 && j % 2 == 0) {\n            return i;\n        }\n    \
    \    if (i % 2 == 1 && j % 2 == 1) {\n            return j;\n        }\n     \
    \   i += 2;\n        j -= 2;\n    }\n    return -1;", "    if (x > y) {\n    \
    \    return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 1;\n    while (i <= j) {\n        if (i\
    \ % 2 == 0) {\n            i = i / 2;\n        } else {\n            i = (i -\
    \ 1) / 2;\n        }\n        if (j % 2 == 0) {\n            j = j / 2;\n    \
    \    } else {\n            j = (j - 1) / 2;\n        }\n        k = k * (i + j);\n\
    \    }\n    return k;", "    if (x > y) {\n        return -1;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n        k =\
    \ i + j;\n        if (k % 2 == 0) {\n            return k;\n        }\n      \
    \  i++;\n        j--;\n    }\n    return -1;", "    long i, j, max_num;\n    long\
    \ num_of_even_numbers = 0;\n    long num_of_odd_numbers = 0;\n    for (i = x;\
    \ i <= y; i++) {\n        if (i % 2 == 0) {\n            num_of_even_numbers++;\n\
    \        } else {\n            num_of_odd_numbers++;\n        }\n    }\n    if\
    \ (num_of_odd_numbers == 0) {\n        return -1;\n    }\n    max_num = num_of_even_numbers\
    \ / 2;\n    for (i = max_num; i >= 1; i--) {\n        for (j = i; j <= num_of_odd_numbers;\
    \ j++) {\n            if (j % 2 == 1) {\n                continue;\n         \
    \   }\n            if (i * j <= y) {\n                return i * j;\n        \
    \    }\n        }\n    }\n    return -1;", "    if (x > y) {\n        return -1;\n\
    \    }\n    if (x == y) {\n        return x;\n    }\n    long i = 1;\n    long\
    \ j = 1;\n    while (i <= x && j <= y) {\n        if (i % 2 == 0) {\n        \
    \    i *= 2;\n        } else {\n            j *= 2;\n        }\n    }\n    return\
    \ i > j ? i : j;", "    if (x > y) {\n        return -1;\n    }\n    long i =\
    \ 1, j = 1, k = 1;\n    while (i <= x && j <= y) {\n        if (i % 2 == 0) {\n\
    \            i = i + k;\n            k = 2 * k;\n        }\n        if (j % 2\
    \ == 0) {\n            j = j + k;\n            k = 2 * k;\n        }\n       \
    \ i = i + 1;\n        j = j + 1;\n    }\n    return i - 1;", "    if (x > y) {\n\
    \        return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n        k =\
    \ i + j;\n        if (k % 2 == 0) {\n            return k;\n        }\n      \
    \  if (k % 2 == 1) {\n            i += 1;\n        } else {\n            j -=\
    \ 1;\n        }\n    }\n    return -1;", "    assert(x > 0 && y > 0);\n    long\
    \ result = -1;\n    long i = x;\n    while (i <= y) {\n        if (i % 2 == 0)\
    \ {\n            result = i;\n            break;\n        }\n        i++;\n  \
    \  }\n    return result;", "    if (x > y) {\n        return -1;\n    }\n    if\
    \ (x == y) {\n        return x;\n    }\n    if (x == 1) {\n        return y;\n\
    \    }\n    if (x == 2) {\n        return y;\n    }\n    if (x == 3) {\n     \
    \   return y;\n    }\n    if (x == 4) {\n        return y;\n    }\n    if (x ==\
    \ 5) {\n        return y;\n    }\n    if (x == 6) {\n        return y;\n    }\n\
    \    if (x == 7) {\n        return y;\n    }\n    if (x == 8) {\n        return\
    \ y;\n    }\n    if (x == 9) {\n        return y;\n    }\n    if (x == 10) {\n\
    \        return y;\n    }\n    if (x == 11) {\n        return y;\n    }\n    if\
    \ (x == 12) {\n        return y;\n    }\n    if (x == 13) {\n        return y;\n\
    \    }\n    if (x == 14) {\n        return y;\n    }\n    if (x == 15) {\n   \
    \     return y;\n    }\n    if (x == 16) {\n        return y;\n    }\n    if (x\
    \ == 17) {\n        return y;\n    }\n    if (x == 18) {\n        return y;\n\
    \    }\n    if (x == 19) {\n        return y;\n    }\n    if (x == 20) {\n   \
    \     return y;\n    }\n    if (x == 21) {\n        return y;\n    }\n    if (x\
    \ == 22) {\n        return y;\n    }\n    if (x == 23) {\n        return y;\n\
    \    }\n    if (x == 24) {\n        return y;\n    }\n    if (x == 25) {\n   \
    \     return y;\n    }\n    if (x == 26) {\n        return y;\n    }\n    if (x\
    \ == 27) {\n        return y;\n    }\n    if (x == 28) {\n        return y;\n\
    \    }\n    ", "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n\
    \    long j = y;\n    long k = 0;\n    while (i <= j) {\n        k = i + j;\n\
    \        if (k % 2 == 0) {\n            return k;\n        }\n        i++;\n \
    \       j--;\n    }\n    return -1;", "    long i, j, k, l, m, n, p, q, r, s,\
    \ t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13,\
    \ z14, z15;\n    long result = -1;\n    x1 = x;\n    y1 = y;\n    if (x < y) {\n\
    \        x1 = y;\n        y1 = x;\n    }\n    if (x1 % 2 == 0) {\n        x1 =\
    \ x1 / 2;\n    } else {\n        x1 = (x1 + 1) / 2;\n    }\n    if (y1 % 2 ==\
    \ 0) {\n        y1 = y1 / 2;\n    } else {\n        y1 = (y1 + 1) / 2;\n    }\n\
    \    if (x1 == y1) {\n        return x1;\n    }\n    for (i = x1; i <= y1; i++)\
    \ {\n        if (i % 2 == 0) {\n            continue;\n        }\n        for\
    \ (j = i + 1; j <= y1; j++) {\n            if (j % 2 == 0) {\n               \
    \ continue;\n            }\n            for (k = j + 1; k <= y1; k++) {\n    \
    \            if (k % 2 == 0) {\n                    continue;\n              \
    \  }\n                for (l = k + 1; l <= y1; l++) {\n                    if\
    \ (l % 2 == 0) {\n                        continue;\n                    }\n \
    \                   for (m = l + 1; m <= y1; m++) {\n                        if\
    \ (m % 2 == 0) {\n                            continue;\n                    \
    \    }\n                        for (n = m + 1; n <= y1; n++) {\n            \
    \                if (n % 2 == 0) {\n                                continue;\n\
    \                            }\n                            for (p = n + 1; p\
    \ <= y1; p++) {\n                                if (p % 2 == 0) {\n         \
    \                           continue;\n                                }\n   \
    \                             for (q = p + 1; q <= y1; q++) {\n              \
    \                      ", "    long i, j, max_num;\n    long num_of_even_numbers\
    \ = 0;\n    long num_of_odd_numbers = 0;\n    long max_num_of_even_numbers = 0;\n\
    \    long max_num_of_odd_numbers = 0;\n    long max_num_of_even_numbers_in_range\
    \ = 0;\n    long max_num_of_odd_numbers_in_range = 0;\n    \n    // If x is greater\
    \ than y, then return -1.\n    if (x > y) {\n        return -1;\n    }\n    \n\
    \    // If x is equal to y, then return x.\n    if (x == y) {\n        return\
    \ x;\n    }\n    \n    // If x is less than or equal to 0, then return -1.\n \
    \   if (x <= 0) {\n        return -1;\n    }\n    \n    // If y is less than or\
    \ equal to 0, then return -1.\n    if (y <= 0) {\n        return -1;\n    }\n\
    \    \n    // If x is greater than y, then return -1.\n    if (x > y) {\n    \
    \    return -1;\n    }\n    \n    // If x is equal to y, then return x.\n    if\
    \ (x == y) {\n        return x;\n    }\n    \n    // If x is less than y, then\
    \ return -1.\n    if (x < y) {\n        return -1;\n    }\n    \n    // If x is\
    \ greater than y, then return -1.\n    if (x > y) {\n        return -1;\n    }\n\
    \    \n    // If x is equal to y, then return x.\n    if (x == y) {\n        return\
    \ x;\n    }\n    \n    // If x is less than y, then return -1.\n    if (x < y)\
    \ {\n        return -1;\n    }\n    \n    // If x is greater than y, then return\
    \ -1.\n    if (x > y) {\n        return -1;\n    }\n    \n    // If x is equal\
    \ to y, then return x.\n", '    long i, j, k, l, m, n, p, q, r, s, t, u, v, w,
    x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16,
    z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30, z31, z32,
    z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46, z47, z48,
    z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62, z63, z64,
    z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75, z76, z77, z78, z79, z80,
    z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91, z92, z93, z94, z95, z96,
    z97, z98, z99, z100, z101, z102, z103, z104, z105, z106, z107, z108, z109, z110,
    z111, z112, z113, z114, z115, z116, z117, z118, z119, z120, z121, z122, z123,
    z124, z125, z126, z127, z128, z129, z130, z131, z132, z133, z134, z135, z136,
    z137, z138, z139, z140, z141, z142, z143, z144, z145, z146, z147, z148, z149,
    z150, z151, z152, z153, z154, z155, z156, z157, z158, z159', "    assert(x >=\
    \ 0 && y >= 0);\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    while\
    \ (i <= x && j <= y) {\n        if (i % 2 == 0 && j % 2 == 0) {\n            k\
    \ = i * j;\n            if (k > y) {\n                return -1;\n           \
    \ }\n        }\n        i += 2;\n        j += 2;\n    }\n    return k;", "   \
    \ if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long k = 0;\n    while (i <= j) {\n        k = i + j;\n        if (k % 2\
    \ == 0 && k >= x && k <= y) {\n            return k;\n        }\n        if (k\
    \ % 2 == 1 && k >= x && k <= y) {\n            return k;\n        }\n        if\
    \ (k % 2 == 0 && k < x) {\n            i = k + 1;\n        }\n        if (k %\
    \ 2 == 1 && k < x) {\n            j = k - 1;\n        }\n    }\n    return -1;",
  '    long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5,
    z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22,
    z23, z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38,
    z39, z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54,
    z55, z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70,
    z71, z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86,
    z87, z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102,
    z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115,
    z116, z117, z118, z119, z120, z121, z122, z123, z124, z125, z126, z127, z128,
    z129, z130, z131, z132, z133, z134, z135, z136, z137, z138, z139, z140, z141,
    z142, z143, z144, z145, z146, z147, z148, z149, z150, z151, z152, z153, z154,
    z155, z156, z157, z158, z159', "    if (x > y) {\n        return -1;\n    }\n\
    \    long max_num = x;\n    long min_num = y;\n    long mid_num = (max_num + min_num)\
    \ / 2;\n    while (max_num - min_num > 1) {\n        if (mid_num * mid_num > max_num\
    \ * max_num) {\n            max_num = mid_num;\n        } else {\n           \
    \ min_num = mid_num;\n        }\n        mid_num = (max_num + min_num) / 2;\n\
    \    }\n    return max_num * max_num;", "    assert(x >= 0 && y >= 0);\n    if\
    \ (x > y)\n        return -1;\n    long ret = 0;\n    for (long i = x; i <= y;\
    \ i += 2)\n        ret = max(ret, i);\n    return ret;", "    long i, j, k, l,\
    \ m, n, p, q, r, s, t, u, v, w, x1, y1, z1, z2;\n    i = 1;\n    j = 1;\n    k\
    \ = 1;\n    l = 1;\n    m = 1;\n    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n\
    \    s = 1;\n    t = 1;\n    u = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n   \
    \ y1 = y;\n    z1 = x1 + y1;\n    z2 = z1 + 1;\n    while (z1 < z2) {\n      \
    \  if (z1 % 2 == 0) {\n            i = i * x1;\n            j = j * y1;\n    \
    \        k = k * z1;\n            l = l * z1;\n            m = m * z1;\n     \
    \       n = n * z1;\n            p = p * z1;\n            q = q * z1;\n      \
    \      r = r * z1;\n            s = s * z1;\n            t = t * z1;\n       \
    \     u = u * z1;\n            v = v * z1;\n            w = w * z1;\n        \
    \    x1 = x1 * z1;\n            y1 = y1 * z1;\n            z1 = z1 * z1;\n   \
    \     } else {\n            if (z1 % 3 == 0) {\n                i = i * x1;\n\
    \                j = j * y1;\n                k = k * z1;\n                l =\
    \ l * z1;\n                m = m * z1;\n                n = n * z1;\n        \
    \        p = p * z1;\n                q = q * z1;\n                r = r * z1;\n\
    \                s = s * z1;\n                t = t * z1;\n                u =\
    \ u * z1;\n                v = v * z1;\n                w = w * z1;\n        \
    \        x1 = x1 * z1;\n                y1 = y1 * z1;\n                z1", " \
    \   if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long result = 0;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 ==\
    \ 0) {\n            result = i * j / 2;\n            break;\n        }\n     \
    \   i += 1;\n        j -= 1;\n    }\n    return result;", "    long i, j, max_num;\n\
    \    long max_num_in_range = -1;\n    for (i = x; i <= y; i++) {\n        for\
    \ (j = i; j <= y; j++) {\n            if (i == j) {\n                if (i % 2\
    \ == 0) {\n                    max_num = i;\n                    max_num_in_range\
    \ = i;\n                    break;\n                }\n            } else {\n\
    \                if (i % 2 == 0 && j % 2 == 0) {\n                    max_num\
    \ = i * j;\n                    max_num_in_range = i * j;\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return max_num_in_range;",
  '    long i, j, k, n, m, p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6,
    z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23,
    z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39,
    z40, z41, z42, z43, z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55,
    z56, z57, z58, z59, z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71,
    z72, z73, z74, z75, z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87,
    z88, z89, z90, z91, z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102,
    z103, z104, z105, z106, z107, z108, z109, z110, z111, z112, z113, z114, z115,
    z116, z117, z118, z119, z120, z121, z122, z123, z124, z125, z126, z127, z128,
    z129, z130, z131, z132, z133, z134, z135, z136, z137, z138, z139, z140, z141,
    z142, z143, z144, z145, z146, z147, z148, z149, z150, z151, z152, z153, z154,
    z155, z156, z157, z158, z159, z', "    long i, j, max_i, max_j;\n    long max_num\
    \ = -1;\n    for (i = x; i <= y; i++) {\n        for (j = i; j <= y; j++) {\n\
    \            if (i == j) {\n                if (i % 2 == 0) {\n              \
    \      max_num = i;\n                    break;\n                }\n         \
    \   } else {\n                if (i % 2 == 0 && j % 2 == 0) {\n              \
    \      max_num = i * j;\n                    break;\n                }\n     \
    \       }\n        }\n        if (max_num != -1) {\n            break;\n     \
    \   }\n    }\n    return max_num;", "    assert(x >= 0 && y >= 0);\n    if (x\
    \ > y) {\n        return -1;\n    }\n    long max_num = x;\n    for (long i =\
    \ x; i <= y; i++) {\n        if (i % 2 == 0) {\n            max_num = i;\n   \
    \     }\n    }\n    return max_num;", "    if (x > y) {\n        return -1;\n\
    \    }\n    long i = x;\n    long j = y;\n    long result = 0;\n    while (i <=\
    \ j) {\n        if (i % 2 == 0) {\n            result = i;\n            break;\n\
    \        }\n        i++;\n    }\n    return result;", "    long i, j, max_num;\n\
    \    long num_of_even_numbers = 0;\n    long num_of_odd_numbers = 0;\n    long\
    \ max_num_of_even_numbers = 0;\n    long max_num_of_odd_numbers = 0;\n    \n \
    \   for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n            num_of_even_numbers++;\n\
    \            if (num_of_even_numbers > max_num_of_even_numbers) {\n          \
    \      max_num_of_even_numbers = num_of_even_numbers;\n            }\n       \
    \ } else {\n            num_of_odd_numbers++;\n            if (num_of_odd_numbers\
    \ > max_num_of_odd_numbers) {\n                max_num_of_odd_numbers = num_of_odd_numbers;\n\
    \            }\n        }\n    }\n    \n    if (max_num_of_even_numbers > max_num_of_odd_numbers)\
    \ {\n        max_num = max_num_of_even_numbers;\n    } else {\n        max_num\
    \ = max_num_of_odd_numbers;\n    }\n    \n    if (max_num == 0) {\n        return\
    \ -1;\n    }\n    \n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n\
    \            num_of_even_numbers--;\n            if (num_of_even_numbers == 0)\
    \ {\n                return i;\n            }\n        } else {\n            num_of_odd_numbers--;\n\
    \            if (num_of_odd_numbers == 0) {\n                return i;\n     \
    \       }\n        }\n    }\n    \n    return -1;", '    long i, j, k, l, m, n,
    p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11,
    z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27,
    z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43,
    z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59,
    z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75,
    z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91,
    z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106,
    z107, z108, z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119,
    z120, z121, z122, z123, z124, z125, z126, z127, z128, z129, z130, z131, z132,
    z133, z134, z135, z136, z137, z138, z139, z140, z141, z142, z143, z144, z145,
    z146, z147, z148, z149, z150, z151, z152, z153, z154, z155, z156, z157, z158,
    z159', "    if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long\
    \ j = y;\n    long k = 0;\n    while (i <= j) {\n        k = i + j;\n        if\
    \ (k % 2 == 0) {\n            return k;\n        }\n        if (k % 2 == 1) {\n\
    \            i++;\n        } else {\n            j--;\n        }\n    }\n    return\
    \ -1;", "    long i, j, max_num;\n    long num_of_even_numbers = 0;\n    long\
    \ num_of_odd_numbers = 0;\n    long max_num_of_even_numbers = 0;\n    long max_num_of_odd_numbers\
    \ = 0;\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0) {\n          \
    \  num_of_even_numbers++;\n            if (num_of_even_numbers > max_num_of_even_numbers)\
    \ {\n                max_num_of_even_numbers = num_of_even_numbers;\n        \
    \    }\n        } else {\n            num_of_odd_numbers++;\n            if (num_of_odd_numbers\
    \ > max_num_of_odd_numbers) {\n                max_num_of_odd_numbers = num_of_odd_numbers;\n\
    \            }\n        }\n    }\n    if (max_num_of_even_numbers == 0) {\n  \
    \      return -1;\n    }\n    max_num = max_num_of_even_numbers * 2;\n    if (max_num_of_odd_numbers\
    \ > max_num_of_even_numbers) {\n        max_num = max_num_of_odd_numbers * 2 +\
    \ 1;\n    }\n    return max_num;", "    if (x > y) {\n        return -1;\n   \
    \ }\n    long i = x;\n    long j = y;\n    long k = 1;\n    while (i <= j) {\n\
    \        i += k;\n        j -= k;\n        k *= 2;\n    }\n    return i;", " \
    \   if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long k = 1;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0)\
    \ {\n            k = i * j / 2;\n            break;\n        }\n        if (i\
    \ % 2 == 0) {\n            i = i + 1;\n        } else {\n            j = j - 1;\n\
    \        }\n    }\n    return k;", "    long i, j, max_i = -1;\n    for (i = x;\
    \ i <= y; i++) {\n        j = i / 2;\n        if (j * 2 == i && j <= y && j >=\
    \ x && (j > max_i || max_i == -1))\n            max_i = j;\n    }\n    return\
    \ max_i;", "    if (x > y) {\n        return -1;\n    }\n    long result = x;\n\
    \    while (x <= y) {\n        if (x % 2 == 0) {\n            result = x;\n  \
    \      }\n        x += 1;\n    }\n    return result;", "    if (x > y) {\n   \
    \     return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n \
    \   long result = 0;\n    while (i <= j) {\n        if (i % 2 == 0) {\n      \
    \      result = i;\n            break;\n        }\n        i += k;\n        k\
    \ *= 2;\n    }\n    return result;", "    if (x > y) {\n        return -1;\n \
    \   }\n    long num = x;\n    long i = 1;\n    while (i <= y - x) {\n        num\
    \ += 2 * i;\n        i++;\n    }\n    return num;", "    long i, j, k, l, m, n,\
    \ p, q, r, s, t, u, v, w, x1, y1, z1, z2;\n    long result;\n    assert(x >= 0\
    \ && y >= 0);\n    if (x > y) {\n        result = -1;\n        return result;\n\
    \    }\n    result = -1;\n    i = 1;\n    while (i <= x) {\n        i = i * 2;\n\
    \    }\n    j = 1;\n    while (j <= y) {\n        j = j * 2;\n    }\n    k = i\
    \ / 2;\n    l = j / 2;\n    m = k + l;\n    if (m > result) {\n        result\
    \ = m;\n    }\n    return result;", "    long i, j, k, l, m, n, p, q, r, s, t,\
    \ u, v, w, x1, y1, z1, z2;\n    long result;\n    // If x is greater than y, then\
    \ return -1\n    if (x > y) return -1;\n    // If x is equal to y, then return\
    \ x\n    if (x == y) return x;\n    // If x is less than y, then return y\n  \
    \  if (x < y) return y;\n    // If x is 0, then return 0\n    if (x == 0) return\
    \ 0;\n    // If y is 0, then return -1\n    if (y == 0) return -1;\n    // If\
    \ x is 1, then return y\n    if (x == 1) return y;\n    // If y is 1, then return\
    \ x\n    if (y == 1) return x;\n    // If x is 2, then return y\n    if (x ==\
    \ 2) return y;\n    // If y is 2, then return x\n    if (y == 2) return x;\n \
    \   // If x is 3, then return y\n    if (x == 3) return y;\n    // If y is 3,\
    \ then return x\n    if (y == 3) return x;\n    // If x is 4, then return y\n\
    \    if (x == 4) return y;\n    // If y is 4, then return x\n    if (y == 4) return\
    \ x;\n    // If x is 5, then return y\n    if (x == 5) return y;\n    // If y\
    \ is 5, then return x\n    if (y == 5) return x;\n    // If x is 6, then return\
    \ y\n    if (x == 6) return y;\n    // If y is 6, then return x\n    if (y ==\
    \ 6) return x;\n    // If x is 7, then return y\n    if (x == 7) return y;\n \
    \   // If y is 7, then return x\n    if (y == 7) return x;\n    // If x is 8,\
    \ then return y\n    if (x == 8) return y;\n    // If y is 8, then return x\n\
    \    if (", "    long i, j, k, n, m, temp;\n    long result = -1;\n    if (x >\
    \ y) {\n        return result;\n    }\n    n = x - y + 1;\n    m = (n - 1) / 2;\n\
    \    for (i = 0; i <= m; i++) {\n        j = i;\n        k = n - i;\n        while\
    \ (j <= k) {\n            temp = j;\n            j = k;\n            k = temp\
    \ - j;\n        }\n        if (j == k) {\n            result = y + i;\n      \
    \      break;\n        }\n    }\n    return result;", "    long i, j, k, n, m;\n\
    \    long max_num = -1;\n    for (i = x; i <= y; i++) {\n        n = i;\n    \
    \    m = 1;\n        while (n > 0) {\n            k = n % 10;\n            if\
    \ (k % 2 == 0) {\n                n = n / 10;\n                m = m * 10 + k;\n\
    \            } else {\n                n = n / 10;\n            }\n        }\n\
    \        if (m > max_num) {\n            max_num = m;\n        }\n    }\n    return\
    \ max_num;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 1;\n    while (i\
    \ <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n            k = i * j / 2;\n\
    \            break;\n        }\n        if (i % 2 == 0) {\n            i = i +\
    \ 1;\n        } else {\n            j = j - 1;\n        }\n    }\n    return k;",
  "    long i, j, max, num;\n    if (x > y) {\n        return -1;\n    }\n    max\
    \ = x;\n    for (i = x; i <= y; i++) {\n        num = i;\n        for (j = i;\
    \ j <= y; j++) {\n            if (num % j == 0) {\n                num /= j;\n\
    \                if (num > max) {\n                    max = num;\n          \
    \      }\n            }\n        }\n    }\n    return max;", "    if (x > y) {\n\
    \        return -1;\n    }\n    long i = x;\n    long j = y;\n    long k = 0;\n\
    \    while (i <= j) {\n        k = i + j;\n        if (k % 2 == 0) {\n       \
    \     return k;\n        }\n        i += 2;\n        j -= 2;\n    }\n    return\
    \ -1;", "    assert(x > 0 && y > 0);\n    long i, j, max_i = -1;\n    for (i =\
    \ x; i <= y; i += 2) {\n        for (j = i; j <= y; j += 2) {\n            if\
    \ (j >= i && j - i <= y - x) {\n                max_i = max(max_i, j);\n     \
    \       }\n        }\n    }\n    return max_i;", "    long i, j, k, n, m, max_num;\n\
    \    // We can use a simple algorithm to find the biggest even number in\n   \
    \ // the range [x, y] inclusive.\n    // We first find the biggest odd number\
    \ in the range [x, y]\n    // inclusive.\n    n = y - x + 1;\n    m = n / 2;\n\
    \    max_num = (n % 2 == 0) ? 2 * m : 2 * m + 1;\n    // Now we find the biggest\
    \ even number in the range [x, y]\n    // inclusive.\n    for (i = x + 1; i <=\
    \ y; i += 2) {\n        if (i > max_num) {\n            break;\n        }\n  \
    \      max_num = i;\n    }\n    return max_num;", "    assert(x >= 0 && y >= 0);\n\
    \    if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long result = 0;\n    while (i <= j) {\n        if (i % 2 == 0) {\n     \
    \       result = i;\n            break;\n        }\n        i++;\n    }\n    return\
    \ result;", "    if (x > y) {\n        return -1;\n    }\n    if (x == y) {\n\
    \        return x;\n    }\n    long i = x;\n    long j = y;\n    long k = 0;\n\
    \    while (i <= j) {\n        k = i + j;\n        if (k % 2 == 0) {\n       \
    \     return k;\n        }\n        i += 2;\n        j -= 2;\n    }\n    return\
    \ -1;", "    assert(x >= 0 && y >= 0);\n    if (x > y)\n        return -1;\n \
    \   long i = x;\n    long j = y;\n    long k = 0;\n    while (i <= j) {\n    \
    \    k = i + j;\n        if (k % 2 == 0) {\n            return k;\n        }\n\
    \        i++;\n        j--;\n    }\n    return -1;", "    long i, j, max_num;\n\
    \    long num_of_even_numbers = 0;\n    for (i = x; i <= y; i++) {\n        if\
    \ (i % 2 == 0) {\n            num_of_even_numbers++;\n        }\n    }\n    if\
    \ (num_of_even_numbers == 0) {\n        return -1;\n    }\n    max_num = (num_of_even_numbers\
    \ * (y - x + 1)) / 2;\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0)\
    \ {\n            for (j = i + 1; j <= y; j++) {\n                if (j % 2 ==\
    \ 0) {\n                    num_of_even_numbers++;\n                }\n      \
    \          if (num_of_even_numbers > max_num) {\n                    return i;\n\
    \                }\n            }\n        }\n    }\n    return -1;", "    if\
    \ (x > y) return -1;\n    long i = x;\n    long j = y;\n    long k = 1;\n    while\
    \ (i <= j) {\n        i += 2 * k;\n        j -= 2 * k;\n        k *= 2;\n    }\n\
    \    return i;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    for (long\
    \ i = x; i <= y; i += 2) {\n        if (i >= x && i <= y) {\n            ans =\
    \ i;\n        }\n    }\n    return ans;", "    long i, j, k, n, m;\n    long result\
    \ = -1;\n    if (x > y) {\n        return result;\n    }\n    n = x - y + 1;\n\
    \    m = n / 2;\n    for (i = 1; i <= m; i++) {\n        k = 2 * i;\n        if\
    \ (k > n) {\n            break;\n        }\n        j = n - k;\n        if (j\
    \ < k) {\n            continue;\n        }\n        if (j == k) {\n          \
    \  result = k;\n            break;\n        }\n        if (j > k) {\n        \
    \    result = k;\n            break;\n        }\n    }\n    return result;", " \
    \   if (x > y)\n        return -1;\n    long i = x;\n    long j = y;\n    long\
    \ k = 1;\n    while (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n    \
    \        k = i * j / 2;\n            break;\n        }\n        if (i % 2 == 0)\n\
    \            i += 1;\n        else if (j % 2 == 0)\n            j -= 1;\n    \
    \    else {\n            i += 1;\n            j -= 1;\n        }\n    }\n    return\
    \ k;", "    long i, j, max_num;\n    long num_of_even_numbers = 0;\n    long num_of_odd_numbers\
    \ = 0;\n    long num_of_numbers = 0;\n    long num_of_odd_numbers_in_range = 0;\n\
    \    long num_of_even_numbers_in_range = 0;\n    long max_num_in_range = 0;\n\
    \    \n    // If x is greater than y, then return -1\n    if (x > y)\n       \
    \ return -1;\n    \n    // If x is equal to y, then return x\n    if (x == y)\n\
    \        return x;\n    \n    // If x is less than or equal to 0, then return\
    \ -1\n    if (x <= 0)\n        return -1;\n    \n    // If y is less than or equal\
    \ to 0, then return -1\n    if (y <= 0)\n        return -1;\n    \n    // If x\
    \ is equal to 1, then return 1\n    if (x == 1)\n        return 1;\n    \n   \
    \ // If y is equal to 1, then return 1\n    if (y == 1)\n        return 1;\n \
    \   \n    // If x is equal to 2, then return 2\n    if (x == 2)\n        return\
    \ 2;\n    \n    // If y is equal to 2, then return 2\n    if (y == 2)\n      \
    \  return 2;\n    \n    // If x is equal to 3, then return 4\n    if (x == 3)\n\
    \        return 4;\n    \n    // If y is equal to 3, then return 4\n    if (y\
    \ == 3)\n        return 4;\n    \n    // If x is equal to 4, then return 6\n \
    \   if (x == 4)\n        return 6;\n    \n    // If y is equal to 4, then return\
    \ 6\n    if (y == 4)\n        return 6;\n    \n    // If x is equal to 5, then\
    \ return 8\n    if (x == 5)\n        return 8;\n    \n    // If y is equal to\
    \ 5, then return 8\n    if (y == 5)\n        return 8;\n    \n    // If x is equal",
  "    long i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1, z;\n    long ans;\n\
    \    // If x is greater than y, then return -1\n    if (x > y)\n        return\
    \ -1;\n    // If x is equal to y, then return x\n    if (x == y)\n        return\
    \ x;\n    // If x is less than or equal to 0, then return -1\n    if (x <= 0)\n\
    \        return -1;\n    // If y is less than or equal to 0, then return -1\n\
    \    if (y <= 0)\n        return -1;\n    // If x is equal to 1, then return y\n\
    \    if (x == 1)\n        return y;\n    // If y is equal to 1, then return x\n\
    \    if (y == 1)\n        return x;\n    // If x is equal to 2, then return 2\
    \ * y\n    if (x == 2)\n        return 2 * y;\n    // If y is equal to 2, then\
    \ return 2 * x\n    if (y == 2)\n        return 2 * x;\n    // If x is equal to\
    \ 3, then return 3 * y\n    if (x == 3)\n        return 3 * y;\n    // If y is\
    \ equal to 3, then return 3 * x\n    if (y == 3)\n        return 3 * x;\n    //\
    \ If x is equal to 4, then return 4 * y\n    if (x == 4)\n        return 4 * y;\n\
    \    // If y is equal to 4, then return 4 * x\n    if (y == 4)\n        return\
    \ 4 * x;\n    // If x is equal to 5, then return 5 * y\n    if (x == 5)\n    \
    \    return 5 * y;\n    // If y is equal to 5, then return 5 * x\n    if (y ==\
    \ 5)\n        return 5 * x;\n    // If x is equal to 6, then return 6 * y\n  \
    \  if (x == 6)\n        return 6 * y;\n    // If y is equal to 6, then return\
    \ 6 * x\n    if (y == 6)\n        return 6 * x;\n", '    long i, j, k, l, m, n,
    p, q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11,
    z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27,
    z28, z29, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43,
    z44, z45, z46, z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59,
    z60, z61, z62, z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75,
    z76, z77, z78, z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91,
    z92, z93, z94, z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106,
    z107, z108, z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119,
    z120, z121, z122, z123, z124, z125, z126, z127, z128, z129, z130, z131, z132,
    z133, z134, z135, z136, z137, z138, z139, z140, z141, z142, z143, z144, z145,
    z146, z147, z148, z149, z150, z151, z152, z153, z154, z155, z156, z157, z158,
    z159', "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n        return -1;\n\
    \    }\n    long max_num = x;\n    long i = x;\n    while (i <= y) {\n       \
    \ if (i % 2 == 0) {\n            max_num = i;\n        }\n        i += 1;\n  \
    \  }\n    return max_num;", "    long i, j, k, m, n, p, q, r, s, t, u, v, w, x1,\
    \ y1, z, ans;\n    i = x;\n    j = y;\n    ans = -1;\n    while (i <= j) {\n \
    \       m = (i + j) / 2;\n        n = m;\n        while (n > 0) {\n          \
    \  p = n / 2;\n            q = n - p;\n            if (q == 0) {\n           \
    \     ans = m;\n                break;\n            }\n            r = q * 2;\n\
    \            s = r - 1;\n            t = r - 2;\n            u = r - 3;\n    \
    \        v = r - 4;\n            w = r - 5;\n            x1 = s * s;\n       \
    \     y1 = t * t;\n            z = u * u;\n            if (x1 + y1 <= z + w) {\n\
    \                n = p;\n            } else {\n                j = m - 1;\n  \
    \          }\n        }\n        i = m + 1;\n    }\n    return ans;", "    long\
    \ i, j, k, l, m, n, p, q, r, s, t, u, v, w, x1, y1;\n    long result;\n    //\
    \ If x is greater than y, then return -1\n    if (x > y) {\n        return -1;\n\
    \    }\n    // If x is equal to y, then return x\n    if (x == y) {\n        return\
    \ x;\n    }\n    // If x is less than or equal to 0, then return -1\n    if (x\
    \ <= 0) {\n        return -1;\n    }\n    // If y is less than or equal to 0,\
    \ then return -1\n    if (y <= 0) {\n        return -1;\n    }\n    // If x is\
    \ equal to 1, then return y\n    if (x == 1) {\n        return y;\n    }\n   \
    \ // If y is equal to 1, then return x\n    if (y == 1) {\n        return x;\n\
    \    }\n    // If x is equal to 2, then return y - 1\n    if (x == 2) {\n    \
    \    return y - 1;\n    }\n    // If y is equal to 2, then return x - 1\n    if\
    \ (y == 2) {\n        return x - 1;\n    }\n    // If x is equal to 3, then return\
    \ y - 2\n    if (x == 3) {\n        return y - 2;\n    }\n    // If y is equal\
    \ to 3, then return x - 2\n    if (y == 3) {\n        return x - 2;\n    }\n \
    \   // If x is equal to 4, then return y - 3\n    if (x == 4) {\n        return\
    \ y - 3;\n    }\n    // If y is equal to 4, then return x - 3\n    if (y == 4)\
    \ {\n        return x - 3;\n    }\n    // If x is equal to 5, then return y -\
    \ 4\n    if (x == 5) {\n        return y - 4;\n    }\n    // If y is equal to\
    \ 5, then return x - 4\n    if (y == 5) {\n        return x - 4;\n    }\n    //\
    \ If x is equal", "    if (x > y) {\n        return -1;\n    }\n    if (x == y)\
    \ {\n        return x;\n    }\n    long i = 2;\n    while (i * i <= y) {\n   \
    \     if (y % i == 0) {\n            return i;\n        }\n        i += 2;\n \
    \   }\n    return -1;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n   \
    \     return -1;\n    }\n    if (x == y) {\n        return x;\n    }\n    long\
    \ i = x;\n    long j = y;\n    long k = 1;\n    while (i <= j) {\n        i +=\
    \ 2 * k;\n        j -= 2 * k;\n        k *= 2;\n    }\n    return i;", "    long\
    \ i, j, max_num;\n    long num_of_even_numbers = 0;\n    long num_of_odd_numbers\
    \ = 0;\n    long num_of_numbers = 0;\n    long max_num_of_even_numbers = 0;\n\
    \    long max_num_of_odd_numbers = 0;\n    \n    // Count the number of even numbers\
    \ in the range [x, y]\n    for (i = x; i <= y; i++) {\n        if (i % 2 == 0)\
    \ {\n            num_of_even_numbers++;\n        }\n    }\n    \n    // Count\
    \ the number of odd numbers in the range [x, y]\n    for (i = x; i <= y; i++)\
    \ {\n        if (i % 2 != 0) {\n            num_of_odd_numbers++;\n        }\n\
    \    }\n    \n    // Count the number of numbers in the range [x, y]\n    for\
    \ (i = x; i <= y; i++) {\n        num_of_numbers++;\n    }\n    \n    // Find\
    \ the maximum number of even numbers in the range [x, y]\n    for (i = x; i <=\
    \ y; i++) {\n        if (i % 2 == 0) {\n            max_num_of_even_numbers++;\n\
    \        }\n    }\n    \n    // Find the maximum number of odd numbers in the\
    \ range [x, y]\n    for (i = x; i <= y; i++) {\n        if (i % 2 != 0) {\n  \
    \          max_num_of_odd_numbers++;\n        }\n    }\n    \n    // Find the\
    \ maximum number of numbers in the range [x, y]\n    max_num = max_num_of_even_numbers\
    \ + max_num_of_odd_numbers;\n    \n    // If there are no numbers in the range\
    \ [x, y]\n    if (num_of_numbers == 0) {\n        return -1;\n    }\n    \n  \
    \  // If there are no even numbers in the range [x, y]\n    if (num_of_even_numbers\
    \ == 0) {\n        return max_num;\n", '    long i, j, k, l, m, n, p, q, r, s,
    t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14,
    z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30,
    z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46,
    z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62,
    z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75, z76, z77, z78,
    z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91, z92, z93, z94,
    z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106, z107, z108,
    z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119, z120, z121,
    z122, z123, z124, z125, z126, z127, z128, z129, z130, z131, z132, z133, z134,
    z135, z136, z137, z138, z139, z140, z141, z142, z143, z144, z145, z146, z147,
    z148, z149, z150, z151, z152, z153, z154, z155, z156, z157, z158, z159', "   \
    \ if (x > y) {\n        return -1;\n    }\n    long i = x;\n    long j = y;\n\
    \    long result = 0;\n    while (i <= j) {\n        if (i % 2 == 0) {\n     \
    \       result = i;\n        }\n        i += 2;\n    }\n    return result;", " \
    \   long i, j, max_num;\n    long num_of_even_numbers = 0;\n    for (i = x; i\
    \ <= y; i++) {\n        if (i % 2 == 0) {\n            num_of_even_numbers++;\n\
    \        }\n    }\n    if (num_of_even_numbers == 0) {\n        return -1;\n \
    \   }\n    max_num = (num_of_even_numbers * (y - x + 1)) / 2;\n    for (i = x;\
    \ i <= y; i++) {\n        if (i % 2 == 0) {\n            for (j = i + 1; j <=\
    \ y; j++) {\n                if (j % 2 == 0) {\n                    num_of_even_numbers++;\n\
    \                }\n            }\n            if (num_of_even_numbers > max_num)\
    \ {\n                max_num = num_of_even_numbers;\n            }\n         \
    \   num_of_even_numbers = 0;\n        }\n    }\n    return max_num;", "    long\
    \ i, j, max_i;\n    long result = -1;\n    for (i = x; i <= y; i++) {\n      \
    \  max_i = i / 2;\n        for (j = max_i; j >= 1; j--) {\n            if (i %\
    \ j == 0) {\n                result = i;\n                break;\n           \
    \ }\n        }\n    }\n    return result;", "    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    while (i <= j) {\n       \
    \ if (i % 2 == 0 && j % 2 == 0) {\n            return i;\n        }\n        if\
    \ (i % 2 == 1 && j % 2 == 1) {\n            return j;\n        }\n        i +=\
    \ 2;\n        j -= 2;\n    }\n    return -1;", "    long i, j, k, l, m, n, p,\
    \ q, r, s, t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12,\
    \ z13, z14, z15;\n    i = 1;\n    j = 1;\n    k = 1;\n    l = 1;\n    m = 1;\n\
    \    n = 1;\n    p = 1;\n    q = 1;\n    r = 1;\n    s = 1;\n    t = 1;\n    u\
    \ = 1;\n    v = 1;\n    w = 1;\n    x1 = x;\n    y1 = y;\n    z1 = x1 - y1 + 1;\n\
    \    z2 = z1 - 1;\n    z3 = z2 - 1;\n    z4 = z3 - 1;\n    z5 = z4 - 1;\n    z6\
    \ = z5 - 1;\n    z7 = z6 - 1;\n    z8 = z7 - 1;\n    z9 = z8 - 1;\n    z10 = z9\
    \ - 1;\n    z11 = z10 - 1;\n    z12 = z11 - 1;\n    z13 = z12 - 1;\n    z14 =\
    \ z13 - 1;\n    z15 = z14 - 1;\n    while (i <= z1) {\n        while (j <= z2)\
    \ {\n            while (k <= z3) {\n                while (l <= z4) {\n      \
    \              while (m <= z5) {\n                        while (n <= z6) {\n\
    \                            while (p <= z7) {\n                             \
    \   while (q <= z8) {\n                                    while (r <= z9) {\n\
    \                                        while (s <= z10) {\n                \
    \                            while (t <= z11) {\n                            \
    \                    while (u <= z12) {\n                                    \
    \                while (v <= z13) {\n                                        \
    \                while (w <= z14) {\n                                        \
    \                    while (x1 <= y1)", "    assert(x >= 0 && y >= 0);\n    long\
    \ ans = -1;\n    long i = x;\n    while (i <= y) {\n        if (i % 2 == 0) {\n\
    \            ans = i;\n            break;\n        }\n        i += 1;\n    }\n\
    \    return ans;", "    assert(x >= 0 && y >= 0);\n    if (x > y) {\n        return\
    \ -1;\n    }\n    long i = x;\n    long j = y;\n    long result = 0;\n    while\
    \ (i <= j) {\n        if (i % 2 == 0 && j % 2 == 0) {\n            result = i\
    \ * j / 2;\n            break;\n        }\n        i += 1;\n        j -= 1;\n\
    \    }\n    return result;", "    long i, j, max_num;\n    long nums[y - x + 1];\n\
    \    for (i = 0; i < y - x + 1; i++) {\n        nums[i] = i + x;\n    }\n    for\
    \ (i = 0; i < y - x + 1; i++) {\n        for (j = i + 1; j < y - x + 1; j++) {\n\
    \            if (nums[i] + nums[j] > y) {\n                break;\n          \
    \  }\n            if (nums[i] + nums[j] > max_num) {\n                max_num\
    \ = nums[i] + nums[j];\n            }\n        }\n    }\n    return max_num;",
  "    long i, j, k, n, m;\n    n = y - x + 1;\n    m = (n + 1) / 2;\n    i = 1;\n\
    \    j = 1;\n    k = 1;\n    while (i <= m) {\n        j = j * 2;\n        k =\
    \ k * 2;\n        i = i * 2;\n    }\n    if (n % 2 == 0) {\n        return (k\
    \ - 1) / 2;\n    } else {\n        return k / 2;\n    }", "    if (x > y) {\n\
    \        return -1;\n    }\n    long i = x;\n    long j = y;\n    long result\
    \ = 0;\n    while (i <= j) {\n        if (i % 2 == 0) {\n            i = i / 2;\n\
    \            result = result + i;\n        } else {\n            j = j - i;\n\
    \        }\n    }\n    return result;", '    long i, j, k, l, m, n, p, q, r, s,
    t, u, v, w, x1, y1, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14,
    z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, z26, z27, z28, z29, z30,
    z31, z32, z33, z34, z35, z36, z37, z38, z39, z40, z41, z42, z43, z44, z45, z46,
    z47, z48, z49, z50, z51, z52, z53, z54, z55, z56, z57, z58, z59, z60, z61, z62,
    z63, z64, z65, z66, z67, z68, z69, z70, z71, z72, z73, z74, z75, z76, z77, z78,
    z79, z80, z81, z82, z83, z84, z85, z86, z87, z88, z89, z90, z91, z92, z93, z94,
    z95, z96, z97, z98, z99, z100, z101, z102, z103, z104, z105, z106, z107, z108,
    z109, z110, z111, z112, z113, z114, z115, z116, z117, z118, z119, z120, z121,
    z122, z123, z124, z125, z126, z127, z128, z129, z130, z131, z132, z133, z134,
    z135, z136, z137, z138, z139, z140, z141, z142, z143, z144, z145, z146, z147,
    z148, z149, z150, z151, z152, z153, z154, z155, z156, z157, z158, z159']
stop_tokens:
- "\n}"

{
  "name": "HumanEval_128_prod_signs",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a vector arr of integers and you need to return\n// sum of magnitudes of integers multiplied by product of all signs\n// of each number in the vector, represented by 1, -1 or 0.\n// Note: return None for empty arr.\n// Example:\n// >>> prod_signs([1, 2, 2, -4]) \n// 9\n// >>> prod_signs([0, 1])\n// 0\n// >>> prod_signs([])\n// None\nstd::optional<long> prod_signs(std::vector<long> arr) {\n",
  "tests": "}\nint main() {\n    auto candidate = prod_signs;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)-4}))) == -9);\n    assert(candidate((std::vector<long>({(long)0, (long)1}))) == 0);\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)2, (long)3, (long)-1, (long)1}))) == -10);\n    assert(candidate((std::vector<long>())) == std::nullopt);\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)1, (long)2, (long)-1, (long)-1, (long)9}))) == 20);\n    assert(candidate((std::vector<long>({(long)-1, (long)1, (long)-1, (long)1}))) == 4);\n    assert(candidate((std::vector<long>({(long)-1, (long)1, (long)1, (long)1}))) == -4);\n    assert(candidate((std::vector<long>({(long)-1, (long)1, (long)1, (long)0}))) == 0);\n}\n",
  "completions": [
    "    if (arr.empty()) return std::nullopt;\n    long ans = 0;\n    for (auto i : arr) {\n        ans += std::abs(i);\n    }\n    long prod = 1;\n    for (auto i : arr) {\n        prod *= (i < 0 ? -1 : 1);\n    }\n    return ans * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n    }\n    for (auto x : arr) {\n        if (x > 0) {\n            sum += x;\n        } else if (x < 0) {\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        prod *= i;\n        sum += i;\n    }\n    return prod * sum;",
    "    long res = 0;\n    for (auto i : arr) {\n        res *= i;\n    }\n    return res;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -1;\n        }\n        sum += i;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long sum = 0;\n    for (auto i : arr) {\n        sum += std::abs(i);\n    }\n    long prod = 1;\n    for (auto i : arr) {\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        if (i < 0) {\n            sum -= prod;\n        } else {\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n        } else if (i > 0) {\n            prod *= i;\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0 ? 1 : -1);\n    }\n    return ret;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            sum += x;\n            prod *= -1;\n        } else {\n            sum += x;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else {\n            // i == 0\n            // nothing to do\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0) - (i < 0);\n    }\n    return ret;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    for (auto i : arr) {\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n        sum += std::abs(i);\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        } else if (i > 0) {\n            prod *= i;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n        } else if (i > 0) {\n            sum += i * prod;\n        }\n    }\n    return sum * prod;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n        }\n    }\n    return sum * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    for (auto i : arr) {\n        prod *= (i > 0) - (i < 0);\n    }\n    return prod * arr.size();",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto x : arr) {\n        sum += abs(x);\n        prod *= (x > 0) - (x < 0);\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum += x;\n        }\n    }\n    return prod * sum;",
    "    long sum = 0;\n    long product = 1;\n    for (auto i : arr) {\n        if (i < 0) {\n            product *= -1;\n        }\n        sum += i * product;\n        product *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto x : arr) {\n        prod *= x;\n        if (x < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        prod *= i;\n        sum += i;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n    }\n    for (auto x : arr) {\n        if (x > 0) {\n            sum += x;\n        } else if (x < 0) {\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum += i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    return prod * sum;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += x * prod;\n        prod *= x < 0 ? -1 : 1;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -1;\n        }\n        sum += i;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto &i : arr) {\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else if (i < 0) {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i < 0 ? -1 : 1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0) ? 1 : -1;\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0) - (i < 0);\n    }\n    return ret;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) sign = -sign;\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += std::abs(x);\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n    }\n    for (auto x : arr) {\n        if (x > 0) {\n            sum += x;\n        } else if (x < 0) {\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (long x : arr) {\n        if (x < 0) {\n            sum += x;\n            prod *= -1;\n        } else {\n            sum += x;\n        }\n    }\n    if (sum == 0) return std::nullopt;\n    return sum * prod;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else if (i < 0) {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        sum += i;\n        prod *= (i > 0) - (i < 0);\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i * prod;\n        } else if (i < 0) {\n            sum -= i * prod;\n        }\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            prod *= i;\n        } else {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (long num : arr) {\n        prod *= (num < 0 ? -1 : 1);\n        sign *= (num < 0 ? -1 : 1);\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        prod *= i;\n        sum += i;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i * prod;\n        } else if (i < 0) {\n            sum -= i * prod;\n        }\n    }\n    return sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto x : arr) {\n        prod *= x;\n        if (x < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    if (arr.empty()) {\n        return std::nullopt;\n    }\n    long prod = 1;\n    long sign = 1;\n    for (auto &x : arr) {\n        if (x < 0) {\n            sign = -sign;\n        }\n        prod *= sign;\n    }\n    return prod;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else if (i < 0) {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x: arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0)\n        return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (long i : arr) {\n        if (i < 0) {\n            prod *= -1;\n            sign *= -1;\n        }\n        prod *= i;\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long res = 1;\n    for (auto i : arr) {\n        if (i > 0) {\n            res *= i;\n        } else if (i < 0) {\n            res *= -i;\n        }\n    }\n    return res;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i < 0 ? -1 : 1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            prod *= 1;\n        } else if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum += i;\n        }\n    }\n    return prod * sum;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n            sign *= -1;\n        }\n        prod *= i;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sign * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum += x;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += x * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        prod *= i;\n        sum += i;\n    }\n    return prod * sum;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            sum += i;\n        } else {\n            sum -= i;\n        }\n        prod *= i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    if (sum == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        if (i > 0) {\n            sum += i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum += x;\n        }\n    }\n    if (prod == 0)\n        return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i;\n        } else if (i < 0) {\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += abs(x) * prod;\n    }\n    return sum;",
    "    long res = 1;\n    for (auto i : arr) {\n        res *= i;\n    }\n    return res;",
    "    long prod = 1;\n    long sign = 1;\n    for (long i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign *= -1;\n        }\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : arr) {\n        sum += i * (i > 0 ? 1 : -1);\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -1;\n        }\n        sum += x;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else {\n            sum += i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n    }\n    for (auto &x : arr) {\n        if (x > 0) {\n            sum += x;\n        } else if (x < 0) {\n            sum -= x;\n        }\n    }\n    return prod * sum;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0) - (i < 0);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sum -= prod;\n        } else if (i > 0) {\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long prod = 1;\n    long sign = 1;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum += i;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += x * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &i : arr) {\n        prod *= (i > 0) ? 1 : -1;\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        if (i > 0) {\n            sum += i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += x * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += x;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long ret = 1;\n    for (auto x : arr) {\n        ret *= (x < 0 ? -1 : 1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (long i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            prod *= i;\n        } else {\n            prod *= -i;\n        }\n        sum += std::abs(i);\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            prod *= i;\n        } else {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i * prod;\n        } else if (i < 0) {\n            sum -= i * prod;\n        }\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum += i;\n        }\n    }\n    return sum * prod;",
    "    if (arr.empty()) return {};\n    long sign = 1;\n    long product = 1;\n    for (auto &x: arr) {\n        product *= (x < 0 ? -1 : 1);\n        sign *= (x < 0 ? -1 : 1);\n    }\n    return sign * product;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0)\n        return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n            sum += x;\n        } else if (x < 0) {\n            prod *= -x;\n            sum -= x;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            sum += i;\n            prod *= -1;\n        } else if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else {\n            // i == 0\n        }\n    }\n    if (sum == 0) {\n        return std::nullopt;\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto &x : arr) {\n        if (x < 0) {\n            prod *= -1;\n        }\n        sum += x * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) return std::nullopt;\n    return sum * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x < 0) {\n            sum += x;\n            prod *= -1;\n        } else if (x > 0) {\n            sum += x;\n            prod *= 1;\n        }\n    }\n    return sum * prod;",
    "    if (arr.empty()) return std::nullopt;\n    long ret = 0;\n    for (auto x : arr) {\n        ret = ret * (x > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else if (i < 0) {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        if (x > 0) {\n            prod *= x;\n        } else if (x < 0) {\n            prod *= -x;\n        }\n        sum += std::abs(x);\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        if (i > 0) {\n            prod *= i;\n        } else {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    return sum * prod;",
    "    long ret = 1;\n    for (auto x : arr) {\n        ret *= (x < 0 ? -1 : 1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum += i;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        if (i > 0) {\n            prod *= i;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        if (i > 0) {\n            prod *= i;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= i;\n            sum -= i;\n        }\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n        } else if (i < 0) {\n            prod *= -i;\n        }\n        sum += i;\n    }\n    if (prod == 0) {\n        return std::nullopt;\n    }\n    return sum * prod;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i > 0) {\n            sum += i;\n            prod *= 1;\n        } else if (i < 0) {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n    if (sum == 0) return std::nullopt;\n    return sum * prod;",
    "    if (arr.empty()) {\n        return std::nullopt;\n    }\n    long prod = 1;\n    long sum = 0;\n    for (auto x : arr) {\n        sum += x * prod;\n        prod *= (x > 0 ? 1 : -1);\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i == 0) {\n            return std::nullopt;\n        }\n        prod *= i;\n        sum += i;\n    }\n    return sum * prod;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i > 0) {\n            prod *= i;\n            sum += i;\n        } else if (i < 0) {\n            prod *= -i;\n            sum -= i;\n        }\n    }\n    return prod * sum;",
    "    if (arr.empty()) {\n        return std::nullopt;\n    }\n    long prod = 1;\n    for (auto i : arr) {\n        prod *= (i > 0 ? 1 : -1);\n    }\n    return prod * arr.size();",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long sum = 0;\n    long prod = 1;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n        prod *= i;\n    }\n    return sum;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    long ret = 1;\n    for (auto i : arr) {\n        ret *= (i > 0) - (i < 0);\n    }\n    return ret;",
    "    if (arr.empty()) return std::nullopt;\n    long prod = 1, sign = 1;\n    for (auto i : arr) {\n        prod *= i;\n        if (i < 0) sign = -sign;\n    }\n    return prod * sign;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        if (i > 0) {\n            prod *= i;\n        }\n        sum += i * prod;\n    }\n    return sum;",
    "    if (arr.empty()) {\n        return std::nullopt;\n    }\n    long prod = 1;\n    long sign = 1;\n    for (auto& i : arr) {\n        prod *= i;\n        if (i < 0) {\n            sign = -sign;\n        }\n    }\n    return sign * prod;",
    "    long ret = 1;\n    for (auto &x : arr) {\n        ret *= (x > 0 ? 1 : -1);\n    }\n    return ret;",
    "    long prod = 1;\n    long sum = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            prod *= -1;\n        }\n        sum += i * prod;\n    }\n    return sum;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
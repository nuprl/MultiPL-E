{
  "name": "HumanEval_108_count_nums",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function count_nums which takes a vector of integers and returns\n// the number of elements which has a sum of digits > 0.\n// If a number is negative, then its first signed digit will be negative:\n// e.g. -123 has signed digits -1, 2, and 3.\n// >>> count_nums([])\n// 0\n// >>> count_nums([-1, 11, -11])\n// 1\n// >>> count_nums([1, 1, 2])\n// 3\nlong count_nums(std::vector<long> arr) {\n",
  "tests": "}\nint main() {\n    auto candidate = count_nums;\n    assert(candidate((std::vector<long>())) == (0));\n    assert(candidate((std::vector<long>({(long)-1, (long)-2, (long)0}))) == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)2, (long)-2, (long)3, (long)4, (long)5}))) == (6));\n    assert(candidate((std::vector<long>({(long)1, (long)6, (long)9, (long)-6, (long)0, (long)1, (long)5}))) == (5));\n    assert(candidate((std::vector<long>({(long)1, (long)100, (long)98, (long)-7, (long)1, (long)-1}))) == (4));\n    assert(candidate((std::vector<long>({(long)12, (long)23, (long)34, (long)-45, (long)-56, (long)0}))) == (5));\n    assert(candidate((std::vector<long>({(long)0, (long)1}))) == (1));\n    assert(candidate((std::vector<long>({(long)1}))) == (1));\n}\n",
  "completions": [
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i >= 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            i = -i;\n        }\n        count += count_nums(i);\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] / 10;\n            arr[i] %= 10;\n        } else {\n            count += arr[i] / 10;\n            arr[i] %= 10;\n            count += arr[i] / 10;\n            arr[i] %= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            continue;\n        }\n        count += count_nums(std::vector<long>{i});\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] < 0) {\n            count += arr[i] / 10;\n            arr[i] %= 10;\n        }\n        count += arr[i] / 10;\n        arr[i] %= 10;\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(std::vector<long>{-i});\n        } else {\n            count += count_nums(std::vector<long>{i});\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        if (i == 0) {\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i >= 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            continue;\n        }\n        count += count_nums(std::vector<long>{i});\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n        } else {\n            count += arr[i] % 10;\n            count += arr[i] / 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            continue;\n        }\n        long sum = 0;\n        while (i) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if (sum > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            continue;\n        }\n        long sum = 0;\n        while (i > 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if (sum > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(std::vector<long>{-i});\n        } else {\n            count += count_nums(std::vector<long>{i});\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1, arr.size() - i - 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i);\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1));\n        } else {\n            count += count_nums(arr.substr(0, i + 1));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    std::map<long, long> m;\n    for (auto i : arr) {\n        if (i < 0) {\n            m[i] = -1;\n        } else {\n            m[i] = 1;\n        }\n    }\n    long count = 0;\n    for (auto i : m) {\n        count += i.second;\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1, arr.size() - i - 1));\n        } else {\n            count += count_nums(arr.substr(0, i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return count;",
    "    std::vector<long> digits;\n    for (auto i : arr) {\n        if (i < 0) {\n            digits.push_back(-i % 10);\n        } else {\n            digits.push_back(i % 10);\n        }\n    }\n    std::sort(digits.begin(), digits.end());\n    long count = 0;\n    for (auto i : digits) {\n        if (i > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += std::abs(i);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) - count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(std::vector<long>{-i});\n        } else {\n            count += count_nums(std::vector<long>{i});\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1));\n        } else {\n            count += count_nums(arr.substr(0, i + 1));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.subvector(i, arr.size()));\n        } else {\n            count += count_nums(arr.subvector(0, i + 1));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n        else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] != 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] != 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    std::vector<long> digits(10, 0);\n    for (auto i : arr) {\n        if (i < 0) {\n            digits[i % 10]--;\n        } else {\n            digits[i % 10]++;\n        }\n    }\n    long count = 0;\n    for (auto i : digits) {\n        if (i > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1));\n        } else {\n            count += count_nums(arr.substr(0, i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i);\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1, arr.size() - i - 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            i = -i;\n        }\n        count += i / 9;\n        i %= 9;\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] / 10;\n            arr[i] %= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            continue;\n        }\n        count += count_nums(std::vector<long>{i});\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) - count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            i = -i;\n        }\n        count += i / 10;\n        i %= 10;\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i);\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] != 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n        } else {\n            count += arr[i] % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            i = std::abs(i);\n        }\n        while (i > 0) {\n            count += i % 10;\n            i /= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i);\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n        } else {\n            count += arr[i] % 10;\n            count += arr[i] / 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += std::abs(i);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) - count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n            arr[i] /= 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n            continue;\n        }\n        long sum = 0;\n        while (i > 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if (sum > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        for (int j = i; j < arr.size(); j++) {\n            sum += arr[j];\n            if (sum > 0) {\n                count++;\n                break;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr) + count_nums(arr) + count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1, arr.size() - i - 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i];\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) - 1;\n        } else {\n            count += i;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n        else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr.substr(i, arr.size() - i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    std::map<long, int> m;\n    for (auto i : arr) {\n        if (i < 0) {\n            m[-i]++;\n        } else {\n            m[i]++;\n        }\n    }\n    long count = 0;\n    for (auto i : m) {\n        if (i.second > 0) {\n            count += i.second;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(std::vector<long>{-i});\n        } else {\n            count += count_nums(std::vector<long>{i});\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n        else {\n            count += count_nums(arr);\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] != 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] > 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i : arr) {\n        if (i < 0) {\n            count += count_nums(arr.substr(i + 1, arr.size() - i - 1));\n        } else {\n            count += count_nums(std::to_string(i));\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    std::vector<long> digits(10, 0);\n    for (auto i : arr) {\n        if (i < 0) {\n            digits[i % 10]--;\n        } else {\n            digits[i % 10]++;\n        }\n    }\n    long count = 0;\n    for (auto i : digits) {\n        if (i > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > 0) {\n            count += arr[i] % 10;\n        } else {\n            count += arr[i] % 10;\n            count += arr[i] / 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n            continue;\n        }\n        count += count_nums(arr);\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += std::abs(i) % 10;\n        } else {\n            count += i % 10;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += count_nums(arr);\n        } else {\n            count += count_nums(arr) + 1;\n        }\n    }\n    return count;",
    "    std::sort(arr.begin(), arr.end());\n    long count = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        long sum = 0;\n        while (arr[i] != 0) {\n            sum += arr[i] % 10;\n            arr[i] /= 10;\n        }\n        if (sum > 0) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i < 0) {\n            continue;\n        }\n        count += 1;\n        long sum = 0;\n        while (i > 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if (sum > 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        }\n    }\n    for (auto i : arr) {\n        if (i >= 0) {\n            count += 1;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (auto i : arr) {\n        if (i < 0) {\n            count += 1;\n        } else {\n            count += count_nums(arr);\n        }\n    }\n    return count;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
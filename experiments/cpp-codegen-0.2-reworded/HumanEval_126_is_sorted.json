{
  "name": "HumanEval_126_is_sorted",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of numbers, return whether or not they are sorted\n// in ascending order. If vector has more than 1 duplicate of the same\n// number, return false. Assume no negative numbers and only integers.\n// Examples\n// >>> is_sorted([5]) \n// True\n// >>> is_sorted([1, 2, 3, 4, 5]) \n// True\n// >>> is_sorted([1, 3, 2, 4, 5]) \n// False\n// >>> is_sorted([1, 2, 3, 4, 5, 6]) \n// True\n// >>> is_sorted([1, 2, 3, 4, 5, 6, 7]) \n// True\n// >>> is_sorted([1, 3, 2, 4, 5, 6, 7]) \n// False\n// >>> is_sorted([1, 2, 2, 3, 3, 4]) \n// True\n// >>> is_sorted([1, 2, 2, 2, 3, 4]) \n// False\nbool is_sorted(std::vector<long> lst) {\n",
  "tests": "}\nint main() {\n    auto candidate = is_sorted;\n    assert(candidate((std::vector<long>({(long)5}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)2, (long)4, (long)5}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)2, (long)4, (long)5, (long)6, (long)7}))) == (false));\n    assert(candidate((std::vector<long>())) == (true));\n    assert(candidate((std::vector<long>({(long)1}))) == (true));\n    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)2, (long)3, (long)4}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)3, (long)3, (long)4}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)2, (long)3, (long)3, (long)4}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (true));\n}\n",
  "completions": [
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    long prev = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < prev) {\n            return false;\n        }\n        prev = lst[i];\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() == 1) {\n    return true;\n  }\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i - 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long prev = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < prev) return false;\n        prev = lst[i];\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last) return false;\n        last = lst[i];\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "  if (lst.size() <= 1) {\n    return true;\n  }\n  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i-1]) return false;\n  }\n  return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    if (lst.size() == 2)\n        return lst[0] <= lst[1];\n    for (int i = 1; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    if (lst.size() == 2) return lst[0] < lst[1];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i-1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() == 1) {\n    return true;\n  }\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i - 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) return false;\n  }\n  return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    if (lst.size() == 2) {\n        return lst[0] < lst[1];\n    }\n    for (int i = 1; i < lst.size() - 1; i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) return false;\n  }\n  return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i-1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    if (lst.size() == 2) return lst[0] < lst[1];\n    if (lst.size() == 3) return lst[0] < lst[1] && lst[1] < lst[2];\n    if (lst.size() == 4) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3];\n    if (lst.size() == 5) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3] && lst[3] < lst[4];\n    if (lst.size() == 6) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3] && lst[3] < lst[4] && lst[4] < lst[5];\n    if (lst.size() == 7) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3] && lst[3] < lst[4] && lst[4] < lst[5] && lst[5] < lst[6];\n    if (lst.size() == 8) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3] && lst[3] < lst[4] && lst[4] < lst[5] && lst[5] < lst[6] && lst[6] < lst[7];\n    if (lst.size() == 9) return lst[0] < lst[1] && lst[1] < lst[2] && lst[2] < lst[3] && lst[3] < lst[4] && lst[4] < lst[5] && lst[5]",
    "    if (lst.size() <= 1) return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last) return false;\n        last = lst[i];\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i - 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    if (lst.size() == 2) {\n        return lst[0] < lst[1];\n    }\n    for (int i = 1; i < lst.size() - 1; i++) {\n        if (lst[i] < lst[i - 1] && lst[i] < lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i-1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last) return false;\n        last = lst[i];\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    std::sort(lst.begin(), lst.end());\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] == lst[i - 1]) return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  std::sort(lst.begin(), lst.end());\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] == lst[i - 1]) return false;\n  }\n  return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long prev = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < prev) return false;\n        prev = lst[i];\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    if (lst.size() == 2) {\n        return lst[0] < lst[1];\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  long prev = lst[0];\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < prev) return false;\n    prev = lst[i];\n  }\n  return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() == 1) {\n    return true;\n  }\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i - 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last) return false;\n        last = lst[i];\n    }\n    return true;",
    "  if (lst.size() <= 1)\n    return true;\n  for (int i = 1; i < lst.size(); i++) {\n    if (lst[i] < lst[i - 1])\n      return false;\n  }\n  return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last) return false;\n        last = lst[i];\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    long last = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < last)\n            return false;\n        last = lst[i];\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    std::sort(lst.begin(), lst.end());\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] == lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() == 1) {\n    return true;\n  }\n  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) {\n      return false;\n    }\n  }\n  return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() == 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    long prev = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < prev) {\n            return false;\n        }\n        prev = lst[i];\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    long prev = lst[0];\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < prev) {\n            return false;\n        }\n        prev = lst[i];\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i-1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) {\n        return true;\n    }\n    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() < 2) return true;\n    std::sort(lst.begin(), lst.end());\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    if (lst.size() == 1) {\n        return true;\n    }\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 1; i < lst.size(); i++) {\n        if (lst[i] < lst[i - 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    if (lst.size() <= 1)\n        return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1])\n            return false;\n    }\n    return true;",
    "    if (lst.size() <= 1) return true;\n    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) return false;\n    }\n    return true;",
    "    for (int i = 0; i < lst.size() - 1; i++) {\n        if (lst[i] > lst[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "  if (lst.size() <= 1) return true;\n  for (int i = 0; i < lst.size() - 1; i++) {\n    if (lst[i] > lst[i + 1]) return false;\n  }\n  return true;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
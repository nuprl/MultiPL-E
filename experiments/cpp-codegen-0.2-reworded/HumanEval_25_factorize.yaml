name: HumanEval_25_factorize
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector of prime factors\
  \ of given integer in the order from smallest to largest.\n// Each of the factors\
  \ should be vectored number of times corresponding to how many times it appeares\
  \ in factorization.\n// Input number should be equal to the product of all factors\n\
  // >>> factorize(8)\n// [2, 2, 2]\n// >>> factorize(25)\n// [5, 5]\n// >>> factorize(70)\n\
  // [2, 5, 7]\nstd::vector<long> factorize(long n) {\n"
tests: "}\nint main() {\n    auto candidate = factorize;\n    assert(candidate((2))\
  \ == (std::vector<long>({(long)2})));\n    assert(candidate((4)) == (std::vector<long>({(long)2,\
  \ (long)2})));\n    assert(candidate((8)) == (std::vector<long>({(long)2, (long)2,\
  \ (long)2})));\n    assert(candidate((57)) == (std::vector<long>({(long)3, (long)19})));\n\
  \    assert(candidate((3249)) == (std::vector<long>({(long)3, (long)3, (long)19,\
  \ (long)19})));\n    assert(candidate((185193)) == (std::vector<long>({(long)3,\
  \ (long)3, (long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((20577))\
  \ == (std::vector<long>({(long)3, (long)19, (long)19, (long)19})));\n    assert(candidate((18))\
  \ == (std::vector<long>({(long)2, (long)3, (long)3})));\n}\n"
completions: ["    std::vector<long> factors;\n    while (n > 1) {\n        if (n\
    \ % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n      \
    \  } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n - 1;\n            factors.push_back(n);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ long p = 2;\n    while (n > 1) {\n        if (n % p == 0) {\n            n /=\
    \ p;\n            factors.push_back(p);\n        } else {\n            p++;\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ while (n > 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n          \
    \  factors.push_back(2);\n        } else if (n % 3 == 0) {\n            n /= 3;\n\
    \            factors.push_back(3);\n        } else if (n % 5 == 0) {\n       \
    \     n /= 5;\n            factors.push_back(5);\n        } else if (n % 7 ==\
    \ 0) {\n            n /= 7;\n            factors.push_back(7);\n        } else\
    \ {\n            factors.push_back(n);\n            break;\n        }\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    while (n > 1) {\n\
    \        if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ if (n == 1) return factors;\n    for (long i = 2; i <= n / i; i++) {\n     \
    \   while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long num = n;\n    while (num > 1) {\n    \
    \    long i = 2;\n        while (num % i == 0) {\n            factors.push_back(i);\n\
    \            num /= i;\n        }\n        i++;\n    }\n    if (num != 1) {\n\
    \        factors.push_back(num);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long num = n;\n    while (num > 1) {\n        long factor = 2;\n\
    \        while (num % factor == 0) {\n            num /= factor;\n           \
    \ factors.push_back(factor);\n        }\n        if (num == 1) break;\n      \
    \  factor = 3;\n        while (num % factor == 0) {\n            num /= factor;\n\
    \            factors.push_back(factor);\n        }\n        if (num == 1) break;\n\
    \        factor = 5;\n        while (num % factor == 0) {\n            num /=\
    \ factor;\n            factors.push_back(factor);\n        }\n        if (num\
    \ == 1) break;\n        factor = 7;\n        while (num % factor == 0) {\n   \
    \         num /= factor;\n            factors.push_back(factor);\n        }\n\
    \        if (num == 1) break;\n        factor = 11;\n        while (num % factor\
    \ == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 13;\n        while\
    \ (num % factor == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 17;\n        while\
    \ (num % factor == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 19;\n        while\
    \ (num % factor == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 23;\n        while\
    \ (num % factor == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 29;\n        while\
    \ (num % factor == 0) {\n            num /= factor;\n            factors.push_back(factor);\n\
    \        }\n        if (num == 1) break;\n        factor = 31;", "    std::vector<long>\
    \ factors;\n    long num = n;\n    while (num > 1) {\n        if (num % 2 == 0)\
    \ {\n            num /= 2;\n            factors.push_back(2);\n        } else\
    \ if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num = num / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ if (n == 1) {\n        factors.push_back(1);\n        return factors;\n    }\n\
    \    for (long i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n        \
    \    factors.push_back(i);\n            factors.push_back(n / i);\n          \
    \  return factors;\n        }\n    }\n    factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n        while\
    \ (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n   \
    \     }\n        p++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n        \
    \    factors.push_back(i);\n            n /= i;\n        }\n        i++;\n   \
    \ }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        if (n % i == 0) {\n            n /= i;\n            factors.push_back(i);\n\
    \        } else {\n            i++;\n        }\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n    \
    \        n /= i;\n        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n       \
    \ while (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n\
    \        }\n        p++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n < 2)\
    \ return factors;\n    if (n == 2) return factors;\n    if (n == 3) return factors;\n\
    \    if (n % 2 == 0) {\n        factors.push_back(2);\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n % 3 == 0) {\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    long i = 5;\n    while (i * i <= n) {\n \
    \       if (n % i == 0) {\n            factors.push_back(i);\n            factors.push_back(i);\n\
    \            n /= i;\n            i = 5;\n        } else {\n            i += 2;\n\
    \        }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n        if\
    \ (n % p == 0) {\n            n /= p;\n            factors.push_back(p);\n   \
    \     } else {\n            p++;\n        }\n    }\n    return factors;", "  \
    \  std::vector<long> factors;\n    if (n < 2) return factors;\n    if (n == 2)\
    \ return factors;\n    if (n == 3) return factors;\n    if (n % 2 == 0) {\n  \
    \      factors.push_back(2);\n        factors.push_back(n / 2);\n        return\
    \ factors;\n    }\n    if (n % 3 == 0) {\n        factors.push_back(3);\n    \
    \    factors.push_back(n / 3);\n        return factors;\n    }\n    long i = 5;\n\
    \    while (n % i == 0) {\n        factors.push_back(i);\n        n /= i;\n  \
    \  }\n    if (n > 1) factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n < 2) {\n        return factors;\n    }\n    if (n == 2)\
    \ {\n        factors.push_back(2);\n        return factors;\n    }\n    if (n\
    \ == 3) {\n        factors.push_back(3);\n        return factors;\n    }\n   \
    \ if (n % 2 == 0) {\n        factors.push_back(2);\n        n /= 2;\n    }\n \
    \   while (n % 2 == 0) {\n        factors.push_back(2);\n        n /= 2;\n   \
    \ }\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n            while (n\
    \ % i == 0) {\n                factors.push_back(i);\n                n /= i;\n\
    \            }\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    if (n == 1) {\n        factors.push_back(1);\n\
    \        return factors;\n    }\n    for (long i = 2; i <= n / i; i++) {\n   \
    \     while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    if (n == 1) {\n        return factors;\n \
    \   }\n    while (n % 2 == 0) {\n        factors.push_back(2);\n        n /= 2;\n\
    \    }\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        while (n % i == 0)\
    \ {\n            factors.push_back(i);\n            n /= i;\n        }\n    }\n\
    \    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    while (n % 2 == 0) {\n        factors.push_back(2);\n        n\
    \ /= 2;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n        while (n\
    \ % i == 0) {\n            factors.push_back(i);\n            n /= i;\n      \
    \  }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long p = 2;\n    while (n >\
    \ 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n    \
    \        n /= p;\n        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long p = 2;\n    while (n > 1) {\n        while (n % p == 0) {\n\
    \            factors.push_back(p);\n            n /= p;\n        }\n        p++;\n\
    \    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n > 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    if (n == 1) {\n  \
    \      factors.push_back(1);\n        return factors;\n    }\n    for (long i\
    \ = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            factors.push_back(n / i);\n            return factors;\n        }\n\
    \    }\n    factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n    \
    \    while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n < 2)\
    \ {\n        return factors;\n    }\n    if (n == 2) {\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n == 3) {\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    if (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        n /= 2;\n    }\n    while (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        n /= 2;\n    }\n    while (n % 3 == 0) {\n        factors.push_back(3);\n\
    \        n /= 3;\n    }\n    long i = 5;\n    while (n % i == 0) {\n        factors.push_back(i);\n\
    \        n /= i;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    if (n == 1) {\n        factors.push_back(1);\n        return factors;\n \
    \   }\n    for (long i = 2; i <= n / i; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long num = n;\n    while (num > 1) {\n   \
    \     if (num % 2 == 0) {\n            num /= 2;\n            factors.push_back(2);\n\
    \        } else if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num = num / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ if (n == 1) {\n        factors.push_back(1);\n        return factors;\n    }\n\
    \    for (long i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n        \
    \    factors.push_back(i);\n            factors.push_back(n / i);\n          \
    \  return factors;\n        }\n    }\n    factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        if\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     } else {\n            i++;\n        }\n    }\n    return factors;", "  \
    \  std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n    return\
    \ factors;", "    std::vector<long> factors;\n    long num = n;\n    while (num\
    \ > 1) {\n        if (num % 2 == 0) {\n            num /= 2;\n            factors.push_back(2);\n\
    \        } else if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            long p = num;\n            while (num % p == 0)\
    \ {\n                num /= p;\n                factors.push_back(p);\n      \
    \      }\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (n > 1) {\n        if (n % i == 0) {\n           \
    \ n /= i;\n            factors.push_back(i);\n        } else {\n            i++;\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long num =\
    \ n;\n    while (num > 1) {\n        if (num % 2 == 0) {\n            num /= 2;\n\
    \            factors.push_back(2);\n        } else if (num % 3 == 0) {\n     \
    \       num /= 3;\n            factors.push_back(3);\n        } else if (num %\
    \ 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n      \
    \  } else {\n            long p = num;\n            while (num % p == 0) {\n \
    \               num /= p;\n                factors.push_back(p);\n           \
    \ }\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    if (n == 1) {\n        factors.push_back(1);\n\
    \        return factors;\n    }\n    if (n == 2) {\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n == 3) {\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    if (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        factors.push_back(2);\n        n /= 2;\n    }\n    while (n % 2 == 0)\
    \ {\n        factors.push_back(2);\n        n /= 2;\n    }\n    while (n % 3 ==\
    \ 0) {\n        factors.push_back(3);\n        n /= 3;\n    }\n    while (n %\
    \ 5 == 0) {\n        factors.push_back(5);\n        n /= 5;\n    }\n    while\
    \ (n % 7 == 0) {\n        factors.push_back(7);\n        n /= 7;\n    }\n    while\
    \ (n % 11 == 0) {\n        factors.push_back(11);\n        n /= 11;\n    }\n \
    \   while (n % 13 == 0) {\n        factors.push_back(13);\n        n /= 13;\n\
    \    }\n    while (n % 17 == 0) {\n        factors.push_back(17);\n        n /=\
    \ 17;\n    }\n    while (n % 19 == 0) {\n        factors.push_back(19);\n    \
    \    n /= 19;\n    }\n    while (n % 23 == 0) {\n        factors.push_back(23);\n\
    \        n /= 23;\n    }\n    while (n % 29 == 0) {\n        factors.push_back(29);\n\
    \        n /= 29;\n    }\n    while (n % 31 == 0) {\n        factors.push_back(31);\n\
    \        n /= 31;\n    }\n    while (n % 37 == 0) {\n        factors.push_back(37);\n\
    \        ", "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n < 2) return factors;\n    while (n % 2 == 0) {\n       \
    \ factors.push_back(2);\n        n /= 2;\n    }\n    for (int i = 3; i <= sqrt(n);\
    \ i += 2) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    if (n == 1) {\n  \
    \      return factors;\n    }\n    for (long i = 2; i <= n / i; i++) {\n     \
    \   while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    if (n == 1) {\n  \
    \      return factors;\n    }\n    if (n == 2) {\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n == 3) {\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    if (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        n /= 2;\n    }\n    while (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        n /= 2;\n    }\n    for (long i = 3; i <= sqrt(n); i += 2) {\n      \
    \  while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    while (n > 1) {\n  \
    \      if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n - 1;\n            factors.push_back(n);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n       \
    \ while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n       \
    \ while (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n\
    \        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long num = n;\n    while (num > 1) {\n        if (num % 2 == 0)\
    \ {\n            num /= 2;\n            factors.push_back(2);\n        } else\
    \ if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else if (num % 7 == 0) {\n            num /= 7;\n            factors.push_back(7);\n\
    \        } else {\n            factors.push_back(num);\n            num = num\
    \ / 2;\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    if (n == 1) return factors;\n    for (long i = 2; i <= n / i; i++) {\n  \
    \      while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n        while\
    \ (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n   \
    \     }\n        p++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long factor = 2;\n    while (n > 1) {\n        while (n % factor == 0) {\n\
    \            factors.push_back(factor);\n            n /= factor;\n        }\n\
    \        factor++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n        \
    \    factors.push_back(i);\n            n /= i;\n        }\n        i++;\n   \
    \ }\n    return factors;", "    std::vector<long> factors;\n    for (long i =\
    \ 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        if (n % p == 0) {\n            n /= p;\n            factors.push_back(p);\n\
    \        } else {\n            p++;\n        }\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;", " \
    \   std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n       \
    \ while (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n\
    \        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long root =\
    \ sqrt(n);\n    for (long i = 2; i <= root; i++) {\n        if (n % i == 0) {\n\
    \            factors.push_back(i);\n            factors.push_back(n / i);\n  \
    \          break;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    while (n % 2 == 0) {\n        factors.push_back(2);\n        n\
    \ /= 2;\n    }\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        while (n\
    \ % i == 0) {\n            factors.push_back(i);\n            n /= i;\n      \
    \  }\n    }\n    if (n > 2) factors.push_back(n);\n    return factors;", "   \
    \ std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n        if\
    \ (n % p == 0) {\n            n /= p;\n            factors.push_back(p);\n   \
    \     } else {\n            p++;\n        }\n    }\n    return factors;", "  \
    \  std::vector<long> factors;\n    long root = sqrt(n);\n    for (long i = 2;\
    \ i <= root; i++) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            factors.push_back(n / i);\n            break;\n        }\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    if (n == 1) return factors;\n    while (n\
    \ % 2 == 0) {\n        factors.push_back(2);\n        n /= 2;\n    }\n    for\
    \ (long i = 3; i <= sqrt(n); i += 2) {\n        while (n % i == 0) {\n       \
    \     factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n\
    \ > 1) factors.push_back(n);\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i * i <= n; i++) {\n        if (n % i == 0) {\n        \
    \    factors.push_back(i);\n            factors.push_back(n / i);\n          \
    \  break;\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    while (n > 1) {\n        long p = 2;\n        while (n % p == 0) {\n    \
    \        factors.push_back(p);\n            n /= p;\n        }\n        if (n\
    \ > 1) {\n            p = 3;\n            while (n % p == 0) {\n             \
    \   factors.push_back(p);\n                n /= p;\n            }\n          \
    \  if (n > 1) {\n                p = 5;\n                while (n % p == 0) {\n\
    \                    factors.push_back(p);\n                    n /= p;\n    \
    \            }\n                if (n > 1) {\n                    p = 7;\n   \
    \                 while (n % p == 0) {\n                        factors.push_back(p);\n\
    \                        n /= p;\n                    }\n                    if\
    \ (n > 1) {\n                        p = 11;\n                        while (n\
    \ % p == 0) {\n                            factors.push_back(p);\n           \
    \                 n /= p;\n                        }\n                       \
    \ if (n > 1) {\n                            p = 13;\n                        \
    \    while (n % p == 0) {\n                                factors.push_back(p);\n\
    \                                n /= p;\n                            }\n    \
    \                        if (n > 1) {\n                                p = 17;\n\
    \                                while (n % p == 0) {\n                      \
    \              factors.push_back(p);\n                                    n /=\
    \ p;\n                                }\n                                if (n\
    \ > 1) {\n                                    p = 19;\n                      \
    \              while (n % p == 0) {\n                                        factors.push_back(p);\n\
    \                                        n /= p;\n                           \
    \         }\n                                    if (n > 1) {\n              \
    \                          p = 23;\n                                        while\
    \ (n % p == 0) {\n                                            factors.push_back(p);\n\
    \                                            n /= p;\n                       \
    \                 }\n                                        if (n > 1) {\n  \
    \                                          p = 29;\n                         \
    \                   while (n % p == 0) {\n                                   \
    \             factors.push_back(p);\n                                        \
    \        n", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n    \
    \        n /= i;\n        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    while (n != 1) {\n        if (n % 2 == 0) {\n            n /=\
    \ 2;\n            factors.push_back(2);\n        } else if (n % 3 == 0) {\n  \
    \          n /= 3;\n            factors.push_back(3);\n        } else if (n %\
    \ 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n        }\
    \ else {\n            long p = 2;\n            while (n % p == 0) {\n        \
    \        n /= p;\n                factors.push_back(p);\n                p = p\
    \ + 1;\n            }\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n == 1)\
    \ return factors;\n    for (long i = 2; i <= n / i; i++) {\n        while (n %\
    \ i == 0) {\n            factors.push_back(i);\n            n /= i;\n        }\n\
    \    }\n    if (n > 1) factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    long num = n;\n    while (num > 1) {\n        if (num % 2 == 0)\
    \ {\n            num /= 2;\n            factors.push_back(2);\n        } else\
    \ if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num /= 7;\n            factors.push_back(7);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ long p = 2;\n    while (n > 1) {\n        while (n % p == 0) {\n           \
    \ n /= p;\n            factors.push_back(p);\n        }\n        p++;\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    if (n == 1) {\n        factors.push_back(1);\n\
    \        return factors;\n    }\n    if (n == 2) {\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n == 3) {\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    if (n == 4) {\n        factors.push_back(2);\n\
    \        factors.push_back(2);\n        return factors;\n    }\n    if (n == 5)\
    \ {\n        factors.push_back(5);\n        return factors;\n    }\n    if (n\
    \ == 6) {\n        factors.push_back(3);\n        factors.push_back(2);\n    \
    \    return factors;\n    }\n    if (n == 7) {\n        factors.push_back(7);\n\
    \        return factors;\n    }\n    if (n == 8) {\n        factors.push_back(2);\n\
    \        factors.push_back(2);\n        factors.push_back(2);\n        return\
    \ factors;\n    }\n    if (n == 9) {\n        factors.push_back(3);\n        factors.push_back(3);\n\
    \        return factors;\n    }\n    if (n == 10) {\n        factors.push_back(5);\n\
    \        return factors;\n    }\n    if (n == 11) {\n        factors.push_back(11);\n\
    \        return factors;\n    }\n    if (n == 12) {\n        factors.push_back(2);\n\
    \        factors.push_back(3);\n        return factors;\n    }\n    if (n == 13)\
    \ {\n        factors.push_back(13);\n        return factors;\n    }\n    if (n\
    \ == 14) {\n        factors.push_back(7);\n        factors.push_back(2);\n   \
    \     return factors;\n    }\n    if (n == 15) {\n        factors.push_back(3);\n\
    \        factors.push_back(5);\n        return", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) factors.push_back(n);\n    return factors;", "    std::vector<long> factors;\n\
    \    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n        \
    \    factors.push_back(i);\n            n /= i;\n        }\n        i++;\n   \
    \ }\n    return factors;", "    std::vector<long> factors;\n    long num = n;\n\
    \    while (num > 1) {\n        long i = 2;\n        while (num % i == 0) {\n\
    \            factors.push_back(i);\n            num /= i;\n        }\n       \
    \ i++;\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    long root = sqrt(n);\n\
    \    for (long i = 2; i <= root; i++) {\n        if (n % i == 0) {\n         \
    \   factors.push_back(i);\n            factors.push_back(n / i);\n           \
    \ break;\n        }\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) factors.push_back(n);\n    return factors;", "    std::vector<long> factors;\n\
    \    long p = 2;\n    while (n > 1) {\n        while (n % p == 0) {\n        \
    \    factors.push_back(p);\n            n /= p;\n        }\n        p++;\n   \
    \ }\n    return factors;", "    std::vector<long> factors;\n    for (long i =\
    \ 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n    \
    \        n /= i;\n        }\n        i++;\n    }\n    if (n > 1)\n        factors.push_back(n);\n\
    \    return factors;", "    std::vector<long> factors;\n    while (n > 1) {\n\
    \        if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ long p = 2;\n    while (n > 1) {\n        while (n % p == 0) {\n           \
    \ factors.push_back(p);\n            n /= p;\n        }\n        p++;\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    while (n % 2 == 0)\
    \ {\n        factors.push_back(2);\n        n /= 2;\n    }\n    for (int i = 3;\
    \ i <= sqrt(n); i += 2) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = 2;\n\
    \    while (n > 1) {\n        while (n % p == 0) {\n            n /= p;\n    \
    \        factors.push_back(p);\n        }\n        p++;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    if (n == 1) return factors;\n\
    \    long p = 2;\n    while (n > 1) {\n        while (n % p == 0) {\n        \
    \    factors.push_back(p);\n            n /= p;\n        }\n        p++;\n   \
    \ }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;",
  "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long p = 2;\n    while (n >\
    \ 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n    \
    \        n /= p;\n        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long factor = 2;\n    while (n > 1) {\n        while (n % factor\
    \ == 0) {\n            factors.push_back(factor);\n            n /= factor;\n\
    \        }\n        factor++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    long num = n;\n    while (num > 1) {\n        long i = 2;\n  \
    \      while (num % i == 0) {\n            factors.push_back(i);\n           \
    \ num /= i;\n        }\n        i++;\n    }\n    if (num > 1) {\n        factors.push_back(num);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        if (n % i == 0) {\n            n /= i;\n       \
    \     factors.push_back(i);\n        } else {\n            i++;\n        }\n \
    \   }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = 2;\n\
    \    while (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    for (long i = 2; i <= n; i++)\
    \ {\n        while (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long factor = 2;\n    while (n > 1) {\n  \
    \      while (n % factor == 0) {\n            n /= factor;\n            factors.push_back(factor);\n\
    \        }\n        factor++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) return factors;\n    for (long i = 2; i <= n / i;\
    \ i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n  \
    \          n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n \
    \   return factors;", "    std::vector<long> factors;\n    long p = 2;\n    while\
    \ (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long num = n;\n    while (num > 1) {\n   \
    \     if (num % 2 == 0) {\n            num /= 2;\n            factors.push_back(2);\n\
    \        } else if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num = num / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ while (n > 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n          \
    \  factors.push_back(2);\n        } else if (n % 3 == 0) {\n            n /= 3;\n\
    \            factors.push_back(3);\n        } else if (n % 5 == 0) {\n       \
    \     n /= 5;\n            factors.push_back(5);\n        } else {\n         \
    \   n = n - 1;\n            factors.push_back(n);\n        }\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long p = 2;\n    while (n >\
    \ 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n    \
    \        n /= p;\n        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n    \
    \    while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    for (long i = 2; i\
    \ <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n    \
    \        n /= i;\n        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n    }\n  \
    \  if (n > 1) {\n        factors.push_back(n);\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i * i <= n; i++) {\n    \
    \    while (n % i == 0) {\n            factors.push_back(i);\n            n /=\
    \ i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long num = n;\n    while (num > 1) {\n    \
    \    if (num % 2 == 0) {\n            num /= 2;\n            factors.push_back(2);\n\
    \        } else if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num /= 7;\n            factors.push_back(7);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n       \
    \ if (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        } else {\n            i++;\n        }\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (n != 1) {\n      \
    \  while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n        i++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) {\n        factors.push_back(1);\n        return factors;\n\
    \    }\n    long i = 2;\n    while (n % i == 0) {\n        factors.push_back(i);\n\
    \        n /= i;\n    }\n    factors.push_back(n);\n    return factors;", "  \
    \  std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n        while\
    \ (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n   \
    \     }\n        p++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    if (n == 1) return factors;\n    for (long i = 2; i <= n / i; i++) {\n  \
    \      while (n % i == 0) {\n            factors.push_back(i);\n            n\
    \ /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    while (n != 1) {\n        if (n % 2 == 0) {\n\
    \            n /= 2;\n            factors.push_back(2);\n        } else if (n\
    \ % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n      \
    \  } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n - 1;\n            factors.push_back(7);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ long num = n;\n    while (num > 1) {\n        if (num % 2 == 0) {\n        \
    \    num /= 2;\n            factors.push_back(2);\n        } else if (num % 3\
    \ == 0) {\n            num /= 3;\n            factors.push_back(3);\n        }\
    \ else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num = num / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long p = 2;\n\
    \    while (n > 1) {\n        while (n % p == 0) {\n            factors.push_back(p);\n\
    \            n /= p;\n        }\n        p++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    while (n % 2 == 0) {\n        factors.push_back(2);\n\
    \        n /= 2;\n    }\n    for (int i = 3; i <= sqrt(n); i += 2) {\n       \
    \ while (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n\
    \        }\n    }\n    if (n > 2) {\n        factors.push_back(n);\n    }\n  \
    \  return factors;", "    std::vector<long> factors;\n    for (long i = 2; i <=\
    \ n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    while (n >\
    \ 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n - 1;\n            factors.push_back(n);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n           \
    \ factors.push_back(i);\n            n /= i;\n        }\n        i++;\n    }\n\
    \    return factors;", "    std::vector<long> factors;\n    long num = n;\n  \
    \  while (num > 1) {\n        if (num % 2 == 0) {\n            num /= 2;\n   \
    \         factors.push_back(2);\n        } else if (num % 3 == 0) {\n        \
    \    num /= 3;\n            factors.push_back(3);\n        } else if (num % 5\
    \ == 0) {\n            num /= 5;\n            factors.push_back(5);\n        }\
    \ else {\n            num = num / 5;\n            factors.push_back(5);\n    \
    \    }\n    }\n    return factors;", "    std::vector<long> factors;\n    for\
    \ (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long num =\
    \ n;\n    while (num > 1) {\n        if (num % 2 == 0) {\n            num /= 2;\n\
    \            factors.push_back(2);\n        } else if (num % 3 == 0) {\n     \
    \       num /= 3;\n            factors.push_back(3);\n        } else if (num %\
    \ 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n      \
    \  } else {\n            num = num / 5;\n            factors.push_back(5);\n \
    \       }\n    }\n    return factors;", "    std::vector<long> factors;\n    long\
    \ i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    if (n > 1) {\n     \
    \   factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) return factors;\n    long p = 2;\n    while (n > 1)\
    \ {\n        while (n % p == 0) {\n            factors.push_back(p);\n       \
    \     n /= p;\n        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    long i = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n\
    \            factors.push_back(i);\n            n /= i;\n        }\n        i++;\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i * i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n == 1)\
    \ {\n        factors.push_back(1);\n        return factors;\n    }\n    for (long\
    \ i = 2; i <= n / i; i++) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            factors.push_back(n / i);\n            return factors;\n        }\n\
    \    }\n    factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) return factors;\n    for (long i = 2; i <= n / i;\
    \ i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n  \
    \          n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n \
    \   return factors;", "    std::vector<long> factors;\n    while (n % 2 == 0)\
    \ {\n        factors.push_back(2);\n        n /= 2;\n    }\n    for (long i =\
    \ 3; i <= sqrt(n); i += 2) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 2) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n < 2)\
    \ {\n        return factors;\n    }\n    for (long i = 2; i <= n / 2; i++) {\n\
    \        while (n % i == 0) {\n            factors.push_back(i);\n           \
    \ n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long factor\
    \ = 2;\n    while (n > 1) {\n        while (n % factor == 0) {\n            factors.push_back(factor);\n\
    \            n /= factor;\n        }\n        factor++;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    for (long i\
    \ = 2; i <= n; i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n    }\n    if (n > 1) {\n        factors.push_back(n);\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    while (n >\
    \ 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            long p = 2;\n            while (n % p == 0) {\n\
    \                n /= p;\n                factors.push_back(p);\n            \
    \    p++;\n            }\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) return factors;\n    for (long i = 2; i <= n / i;\
    \ i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n  \
    \          n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n \
    \   return factors;", "    std::vector<long> factors;\n    if (n == 1) {\n   \
    \     factors.push_back(1);\n        return factors;\n    }\n    for (long i =\
    \ 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            factors.push_back(n / i);\n            return factors;\n        }\n\
    \    }\n    factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) {\n        factors.push_back(1);\n        return factors;\n\
    \    }\n    long p = 2;\n    while (n % p == 0) {\n        factors.push_back(p);\n\
    \        n /= p;\n    }\n    if (n > 1) {\n        factors.push_back(n);\n   \
    \ }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1)\n        factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    for (long i = 2; i <= n; i++) {\n        while (n % i == 0) {\n         \
    \   factors.push_back(i);\n            n /= i;\n        }\n    }\n    if (n >\
    \ 1) {\n        factors.push_back(n);\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n == 1) return factors;\n    for (long i = 2; i <= n / i;\
    \ i++) {\n        while (n % i == 0) {\n            factors.push_back(i);\n  \
    \          n /= i;\n        }\n    }\n    if (n > 1) factors.push_back(n);\n \
    \   return factors;", "    std::vector<long> factors;\n    if (n == 1) {\n   \
    \     factors.push_back(1);\n        return factors;\n    }\n    for (long i =\
    \ 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            factors.push_back(i);\n\
    \            factors.push_back(n / i);\n            return factors;\n        }\n\
    \    }\n    factors.push_back(n);\n    return factors;", "    std::vector<long>\
    \ factors;\n    if (n < 2) {\n        return factors;\n    }\n    if (n == 2)\
    \ {\n        factors.push_back(2);\n        return factors;\n    }\n    long i\
    \ = 2;\n    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n       \
    \ while (n % p == 0) {\n            factors.push_back(p);\n            n /= p;\n\
    \        }\n        p++;\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    while (n != 1) {\n        if (n % 2 == 0) {\n            n /=\
    \ 2;\n            factors.push_back(2);\n        } else if (n % 3 == 0) {\n  \
    \          n /= 3;\n            factors.push_back(3);\n        } else if (n %\
    \ 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n        }\
    \ else {\n            n = n - 1;\n            factors.push_back(n);\n        }\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    long i = 2;\n\
    \    while (n > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n\
    \            n /= i;\n        }\n        i++;\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n       \
    \ if (n % i == 0) {\n            n /= i;\n            factors.push_back(i);\n\
    \        } else {\n            i++;\n        }\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long factor = 2;\n    while (n > 1) {\n  \
    \      while (n % factor == 0) {\n            factors.push_back(factor);\n   \
    \         n /= factor;\n        }\n        factor++;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long factor = 2;\n    while (n > 1) {\n   \
    \     while (n % factor == 0) {\n            factors.push_back(factor);\n    \
    \        n /= factor;\n        }\n        factor++;\n    }\n    return factors;",
  "    std::vector<long> factors;\n    long i = 2;\n    while (n > 1) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n        i++;\n    }\n    return factors;", "    std::vector<long> factors;\n\
    \    while (n > 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n       \
    \     factors.push_back(2);\n        } else if (n % 3 == 0) {\n            n /=\
    \ 3;\n            factors.push_back(3);\n        } else if (n % 5 == 0) {\n  \
    \          n /= 5;\n            factors.push_back(5);\n        } else {\n    \
    \        n = n - 1;\n            factors.push_back(n);\n        }\n    }\n   \
    \ return factors;", "    std::vector<long> factors;\n    while (n > 1) {\n   \
    \     if (n % 2 == 0) {\n            n /= 2;\n            factors.push_back(2);\n\
    \        } else if (n % 3 == 0) {\n            n /= 3;\n            factors.push_back(3);\n\
    \        } else if (n % 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            n = n - 1;\n            factors.push_back(n);\n\
    \        }\n    }\n    return factors;", "    std::vector<long> factors;\n   \
    \ while (n > 1) {\n        if (n % 2 == 0) {\n            n /= 2;\n          \
    \  factors.push_back(2);\n        } else if (n % 3 == 0) {\n            n /= 3;\n\
    \            factors.push_back(3);\n        } else if (n % 5 == 0) {\n       \
    \     n /= 5;\n            factors.push_back(5);\n        } else {\n         \
    \   n = n - 1;\n            factors.push_back(n);\n        }\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    long i = 2;\n    while (n >\
    \ 1) {\n        if (n % i == 0) {\n            factors.push_back(i);\n       \
    \     n /= i;\n        } else {\n            i++;\n        }\n    }\n    return\
    \ factors;", "    std::vector<long> factors;\n    if (n == 1) {\n        return\
    \ factors;\n    }\n    if (n == 2) {\n        factors.push_back(2);\n        return\
    \ factors;\n    }\n    if (n == 3) {\n        factors.push_back(3);\n        return\
    \ factors;\n    }\n    if (n == 4) {\n        factors.push_back(2);\n        factors.push_back(2);\n\
    \        return factors;\n    }\n    if (n == 5) {\n        factors.push_back(5);\n\
    \        return factors;\n    }\n    if (n == 6) {\n        factors.push_back(2);\n\
    \        factors.push_back(3);\n        return factors;\n    }\n    if (n == 7)\
    \ {\n        factors.push_back(7);\n        return factors;\n    }\n    if (n\
    \ == 8) {\n        factors.push_back(2);\n        factors.push_back(2);\n    \
    \    factors.push_back(2);\n        return factors;\n    }\n    if (n == 9) {\n\
    \        factors.push_back(3);\n        factors.push_back(3);\n        return\
    \ factors;\n    }\n    if (n == 10) {\n        factors.push_back(2);\n       \
    \ factors.push_back(5);\n        return factors;\n    }\n    if (n == 11) {\n\
    \        factors.push_back(11);\n        return factors;\n    }\n    if (n ==\
    \ 12) {\n        factors.push_back(2);\n        factors.push_back(3);\n      \
    \  factors.push_back(6);\n        return factors;\n    }\n    if (n == 13) {\n\
    \        factors.push_back(13);\n        return factors;\n    }\n    if (n ==\
    \ 14) {\n        factors.push_back(2);\n        factors.push_back(7);\n      \
    \  return factors;\n    }\n    if (n == 15) {\n        factors.push_back(3);\n\
    \        fact", "    std::vector<long> factors;\n    long i = 2;\n    while (n\
    \ > 1) {\n        while (n % i == 0) {\n            factors.push_back(i);\n  \
    \          n /= i;\n        }\n        i++;\n    }\n    return factors;", "  \
    \  std::vector<long> factors;\n    for (long i = 2; i <= n; i++) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1)\n        factors.push_back(n);\n    return factors;",
  "    std::vector<long> factors;\n    if (n == 1) {\n        return factors;\n  \
    \  }\n    for (long i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n   \
    \         factors.push_back(i);\n            factors.push_back(n / i);\n     \
    \       break;\n        }\n    }\n    return factors;", "    std::vector<long>\
    \ factors;\n    while (n != 1) {\n        if (n % 2 == 0) {\n            n /=\
    \ 2;\n            factors.push_back(2);\n        } else if (n % 3 == 0) {\n  \
    \          n /= 3;\n            factors.push_back(3);\n        } else if (n %\
    \ 5 == 0) {\n            n /= 5;\n            factors.push_back(5);\n        }\
    \ else {\n            n = n - 1;\n            factors.push_back(n);\n        }\n\
    \    }\n    return factors;", "    std::vector<long> factors;\n    if (n < 2)\
    \ return factors;\n    while (n % 2 == 0) {\n        factors.push_back(2);\n \
    \       n /= 2;\n    }\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        while\
    \ (n % i == 0) {\n            factors.push_back(i);\n            n /= i;\n   \
    \     }\n    }\n    if (n > 1) factors.push_back(n);\n    return factors;", " \
    \   std::vector<long> factors;\n    long p = 2;\n    while (n > 1) {\n       \
    \ if (n % p == 0) {\n            n /= p;\n            factors.push_back(p);\n\
    \        } else {\n            p++;\n        }\n    }\n    return factors;", " \
    \   std::vector<long> factors;\n    long num = n;\n    while (num > 1) {\n   \
    \     if (num % 2 == 0) {\n            num /= 2;\n            factors.push_back(2);\n\
    \        } else if (num % 3 == 0) {\n            num /= 3;\n            factors.push_back(3);\n\
    \        } else if (num % 5 == 0) {\n            num /= 5;\n            factors.push_back(5);\n\
    \        } else {\n            num = num / 5;\n            factors.push_back(5);\n\
    \        }\n    }\n    return factors;"]
stop_tokens:
- "\n}"

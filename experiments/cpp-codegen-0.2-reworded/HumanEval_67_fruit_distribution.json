{
  "name": "HumanEval_67_fruit_distribution",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will be given a string that represents a number of apples and oranges \n// that are distributed in a basket of fruit this basket contains \n// apples, oranges, and mango fruits. Given the string that represents the total number of \n// the oranges and apples and an integer that represent the total number of the fruits \n// in the basket return the number of the mango fruits in the basket.\n// for examble:\n// >>> fruit_distribution(\"5 apples and 6 oranges\", 19)\n// 8\n// >>> fruit_distribution(\"0 apples and 1 oranges\",3)\n// 2\n// >>> fruit_distribution(\"2 apples and 3 oranges\", 100)\n// 95\n// >>> fruit_distribution(\"100 apples and 1 oranges\",120)\n// 19\nlong fruit_distribution(std::string s, long n) {\n",
  "tests": "}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n",
  "completions": [
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (apples + oranges + mango == n) return mango;\n    return 0;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while(ss >> apples >> oranges >> mango) {\n        if(apples + oranges + mango > n)\n            return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return n - apples;\n    } else {\n        return n - oranges;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i : s) {\n        if (i == 'a') apples++;\n        else if (i == 'o') oranges++;\n        else if (i == 'm') mango++;\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return oranges * n / apples;\n    } else {\n        return mango * n / oranges;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        if (c == 'o') oranges++;\n        if (c == 'm') mango++;\n    }\n    if (apples == 0) return oranges;\n    if (oranges == 0) return mango;\n    if (apples + oranges == n) return mango;\n    return mango * (n - apples - oranges) / oranges;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    return (mango * n) / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total < n) return 0;\n    long count = 0;\n    while (total > 0) {\n        if (total >= oranges) {\n            count += oranges;\n            total -= oranges;\n        } else {\n            count += total;\n            total = 0;\n        }\n    }\n    return count;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples + oranges + mango) {\n        return 0;\n    }\n    return mango * (n - apples - oranges);",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges / apples;\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (total < n) {\n        if (mango > 0) {\n            result += mango;\n            mango--;\n            total++;\n        }\n        else if (oranges > 0) {\n            result += oranges;\n            oranges--;\n            total++;\n        }\n        else if (apples > 0) {\n            result += apples;\n            apples--;\n            total++;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (n < apples) return 0;\n    if (n == apples) return oranges;\n    if (n == apples + oranges) return mango;\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (n < apples + oranges + mango) return 0;\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') apples++;\n        if (s[i] == 'o') oranges++;\n        if (s[i] == 'm') mango++;\n    }\n    if (n < apples) return 0;\n    if (n < apples + oranges) return apples;\n    if (n < apples + oranges + mango) return oranges;\n    return mango;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges * apples;\n    }\n    return mango / n;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(apples + oranges == n);\n    return (n - oranges) / (apples + mango);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return (n - apples) * mango / oranges;\n    } else {\n        return (n - oranges) * mango / apples;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges / 2;\n        oranges -= oranges / 2;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else mango++;\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples >> oranges >> mango) {\n        if (mango > 0) {\n            mango--;\n        }\n        else if (oranges > 0) {\n            oranges--;\n        }\n        else {\n            apples--;\n        }\n    }\n    return apples * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples >= oranges) {\n            apples -= oranges;\n            result += mango;\n        } else {\n            apples -= oranges;\n            result += mango;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) {\n        return 0;\n    }\n    if (total == n) {\n        return mango;\n    }\n    long result = 0;\n    for (long i = 0; i < n; ++i) {\n        if (i < apples) {\n            result += 1;\n        } else if (i < apples + oranges) {\n            result += 2;\n        } else {\n            result += 3;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(apples + oranges + mango == n);\n    return n - oranges - apples;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    return mango / n;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (total > 0) {\n        if (total >= oranges) {\n            result += oranges;\n            total -= oranges;\n        } else {\n            result += total;\n            total = 0;\n        }\n    }\n    return result;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples + oranges > n) {\n        return 0;\n    }\n    return n - apples - oranges;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0;\n    ss >> apples >> oranges;\n    long mango = 0;\n    for (long i = 0; i < apples; ++i) {\n        mango += (i % 2 == 0);\n    }\n    for (long i = 0; i < oranges; ++i) {\n        mango += (i % 2 == 1);\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (apples > oranges) {\n        if (apples > mango) {\n            return apples;\n        } else {\n            return mango;\n        }\n    } else {\n        if (oranges > mango) {\n            return oranges;\n        } else {\n            return mango;\n        }\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n == apples) {\n        return mango;\n    }\n    if (n < oranges + apples) {\n        return mango - oranges;\n    }\n    return mango - oranges - apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n    }\n    mango += apples * n / 100;\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        if (c == 'o') oranges++;\n    }\n    if (n < apples) return 0;\n    if (n == apples) return oranges;\n    if (n > apples + oranges) return 0;\n    return oranges - (n - apples);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges && apples > mango) {\n        return apples - oranges - mango;\n    } else if (oranges > apples && oranges > mango) {\n        return oranges - apples - mango;\n    } else if (mango > apples && mango > oranges) {\n        return mango - apples - oranges;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        if (c == 'o') oranges++;\n        if (c == 'm') mango++;\n    }\n    if (apples > oranges) {\n        return (n - apples) * mango / oranges;\n    }\n    else {\n        return (n - oranges) * mango / apples;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0;\n    ss >> apples >> oranges;\n    if (ss.fail()) return 0;\n    long total = apples + oranges;\n    if (total < n) return 0;\n    long mango = 0;\n    for (long i = 0; i < total; ++i) {\n        if (i < apples) {\n            mango += (i + 1) / 2;\n        } else if (i < apples + oranges) {\n            mango += (i + 1) / 3;\n        } else {\n            mango += (i + 1) / 4;\n        }\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(ss.good());\n    if (apples + oranges == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else mango++;\n    }\n    if (mango > n) return 0;\n    return oranges * mango / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else mango++;\n    }\n    if (apples + oranges > n) return 0;\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            apples--;\n            oranges--;\n        }\n    }\n    return oranges - apples;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples >> oranges >> mango) {\n        if (mango > 0) {\n            mango--;\n        }\n        else if (oranges > 0) {\n            oranges--;\n        }\n        else {\n            apples--;\n        }\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges && apples > mango) {\n        return apples;\n    } else if (oranges > apples && oranges > mango) {\n        return oranges;\n    } else {\n        return mango;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango > n) {\n        return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') apples++;\n        if (s[i] == 'o') oranges++;\n        if (s[i] == 'm') mango++;\n    }\n    if (apples + oranges + mango > n) return 0;\n    if (apples + oranges + mango == n) return mango;\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n - apples - oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango != n) {\n        return -1;\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(ss);\n    long result = 0;\n    while (n > 0) {\n        if (n >= oranges) {\n            result += mango;\n            n -= oranges;\n        } else {\n            result += apples;\n            n -= apples;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n    }\n    if (n < apples) return 0;\n    if (n == apples) return oranges;\n    if (n > apples && n < apples + oranges) return n - apples;\n    return n - apples - oranges;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples + oranges + mango) {\n        return 0;\n    }\n    if (n == apples + oranges + mango) {\n        return mango;\n    }\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango * n / (apples - oranges);\n    } else {\n        return mango * n / (oranges - apples);\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango;\n    } else {\n        return mango + oranges - apples;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0;\n    ss >> apples >> oranges;\n    long total = apples + oranges;\n    if (total < n) return 0;\n    long mango = 0;\n    for (long i = 0; i < total; ++i) {\n        if (i < apples) {\n            mango += oranges;\n        } else {\n            mango += oranges - apples;\n        }\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n == apples) {\n        return mango;\n    }\n    if (n < oranges + apples) {\n        return mango - oranges;\n    }\n    return mango - oranges - apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango;\n    } else {\n        return oranges;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return n - apples;\n    } else {\n        return n - oranges;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0;\n    ss >> apples >> oranges;\n    long total = apples + oranges;\n    if (total < n) {\n        return 0;\n    }\n    long mango = 0;\n    for (long i = 0; i < total; ++i) {\n        if (i % 2 == 0) {\n            mango += apples;\n        } else {\n            mango += oranges;\n        }\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n == 0) {\n        return 0;\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < oranges + apples) {\n        return oranges;\n    }\n    if (n < oranges + apples + mango) {\n        return oranges + mango;\n    }\n    return n - (oranges + apples + mango);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    } else if (n == apples) {\n        return mango;\n    } else {\n        return mango + (n - apples) * (mango / oranges);\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango > n) {\n        return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    ss >> apples >> oranges >> mango;\n    assert(apples + oranges + mango == n);\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples + oranges + mango) {\n        return 0;\n    }\n    return mango * (n - apples - oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return n - apples;\n    } else if (oranges > apples) {\n        return n - oranges;\n    } else {\n        return n - mango;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    if (apples > n) {\n        return 0;\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    if (total < n) return 1;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples >= oranges) {\n            apples -= oranges;\n            result += mango;\n        } else {\n            apples -= oranges;\n            result += mango;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    return mango * (n - apples - oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        if (s[i] == 'o') oranges++;\n        if (s[i] == 'm') mango++;\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    return mango / apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total == 0) return 0;\n    long result = 0;\n    if (total < n) {\n        result = (n - total) * mango / total;\n    } else {\n        result = (n - total) * mango / total + (n - total) * mango / total * (n - total) / total;\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples + oranges > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples > oranges) {\n            apples -= oranges;\n            result += mango;\n        } else {\n            apples -= oranges;\n            result += mango;\n        }\n    }\n    return result;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples > oranges) {\n            apples -= oranges;\n            apples += mango;\n        } else {\n            apples -= oranges;\n            apples += mango;\n        }\n        result += apples;\n        apples = oranges = mango = 0;\n        ss >> apples >> oranges >> mango;\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    return (mango * n) / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    } else if (n == apples) {\n        return mango;\n    } else {\n        return oranges + mango - apples;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples >= oranges) {\n            apples -= oranges;\n            result += mango;\n        } else {\n            apples -= oranges;\n            result += mango;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n == apples) {\n        return mango;\n    }\n    if (n < oranges + apples) {\n        return mango - oranges;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges && apples > mango) {\n        return apples * n / (apples + oranges + mango);\n    } else if (oranges > apples && oranges > mango) {\n        return oranges * n / (apples + oranges + mango);\n    } else if (mango > apples && mango > oranges) {\n        return mango * n / (apples + oranges + mango);\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n == 0) {\n        return 0;\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < oranges + apples) {\n        return oranges;\n    }\n    if (n < oranges + apples + mango) {\n        return oranges + mango;\n    }\n    return n - oranges - apples - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n - apples - oranges) / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    ss >> apples;\n    ss >> oranges;\n    ss >> mango;\n    if (mango > oranges) {\n        return 0;\n    }\n    if (mango > apples) {\n        return mango;\n    }\n    if (apples > oranges) {\n        return apples;\n    }\n    return oranges;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    ss >> apples >> oranges >> mango;\n    assert(ss.good());\n    if (apples == 0 && oranges == 0) return 0;\n    if (apples == 0) return oranges;\n    if (oranges == 0) return apples;\n    if (mango == 0) return 0;\n    if (apples + oranges + mango == n) return mango;\n    return mango + fruit_distribution(s, n - apples - oranges - mango);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges * apples;\n    }\n    return mango / n;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango;\n    } else {\n        return oranges;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples >> oranges >> mango) {\n        if (mango > n)\n            return 0;\n        n -= mango;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges && apples > mango) {\n        return apples;\n    } else if (oranges > apples && oranges > mango) {\n        return oranges;\n    } else {\n        return mango;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return (n - apples) * mango / oranges;\n    } else {\n        return (n - oranges) * mango / apples;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango > n) {\n        return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return apples - oranges;\n    } else {\n        return oranges - apples;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return -1;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(apples + oranges == n);\n    return n - oranges - apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    return mango / apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while(ss >> apples >> oranges >> mango) {\n        if(apples > oranges) {\n            apples -= oranges;\n            apples += mango;\n        } else {\n            oranges -= apples;\n            oranges += mango;\n        }\n    }\n    return oranges;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango > n) {\n        return 0;\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(ss);\n    long result = 0;\n    while(n > 0) {\n        if(n >= oranges) {\n            result += mango;\n            n -= oranges;\n        }\n        else {\n            result += apples;\n            n -= apples;\n        }\n    }\n    return result;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    assert(ss);\n    long result = 0;\n    while (n > 0) {\n        if (n >= oranges) {\n            result += mango;\n            n -= oranges;\n        } else {\n            result += apples;\n            n -= apples;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples == 0 && oranges == 0) {\n        return 0;\n    }\n    if (apples == 0) {\n        return oranges;\n    }\n    if (oranges == 0) {\n        return apples;\n    }\n    if (apples + oranges == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango > n) {\n        return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    if (apples > oranges) {\n        return (n - oranges) * mango / apples;\n    } else {\n        return (n - apples) * mango / oranges;\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while(ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto &c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (n < apples + oranges + mango) return 0;\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        else if (s[i] == 'o') oranges++;\n        else if (s[i] == 'm') mango++;\n    }\n    if (n < apples + oranges + mango) return 0;\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); ++i) {\n        if (s[i] == 'a') {\n            ++apples;\n        } else if (s[i] == 'o') {\n            ++oranges;\n        } else if (s[i] == 'm') {\n            ++mango;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    ss >> apples >> oranges;\n    mango = apples + oranges;\n    if (mango > n) return 0;\n    while (ss >> apples >> oranges) {\n        mango += apples + oranges;\n        if (mango > n) return mango - n;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango != n) {\n        return -1;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples == 0) {\n        return oranges;\n    }\n    if (oranges == 0) {\n        return mango;\n    }\n    if (apples + oranges == n) {\n        return mango;\n    }\n    return 0;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    return mango / apples;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples >> oranges >> mango) {\n        if (mango > n) return 0;\n        n -= mango;\n    }\n    return oranges;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while(ss >> apples >> oranges >> mango) {\n        if(apples + oranges + mango > n)\n            return 0;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n == apples) {\n        return mango;\n    }\n    if (n > apples && n < oranges) {\n        return mango;\n    }\n    if (n == oranges) {\n        return mango;\n    }\n    if (n > oranges && n < mango) {\n        return mango;\n    }\n    if (n == mango) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else mango++;\n    }\n    if (n < apples) return 0;\n    if (n < apples + oranges) return mango;\n    return (n - apples - oranges) * mango / oranges;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i : s) {\n        if (i == 'a') apples++;\n        if (i == 'o') oranges++;\n        if (i == 'm') mango++;\n    }\n    if (apples > oranges) {\n        return oranges * n / apples;\n    } else {\n        return mango * n / oranges;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        if (s[i] == 'o') oranges++;\n        if (s[i] == 'm') mango++;\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return (apples * n) / (apples + oranges);\n    } else {\n        return (oranges * n) / (apples + oranges);\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n        apples += oranges;\n    }\n    return mango / apples;",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n    }\n    long mango = n * oranges / (apples + oranges);\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else mango++;\n    }\n    return (mango * n) / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        if (s[i] == 'o') oranges++;\n        if (s[i] == 'm') mango++;\n    }\n    if (n < apples) return 0;\n    if (n == apples) return mango;\n    if (n < oranges + apples) return 0;\n    if (n == oranges + apples) return mango;\n    if (n < oranges + apples + mango) return 0;\n    if (n == oranges + apples + mango) return n;\n    return n - oranges - apples - mango;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples) {\n        ss >> oranges;\n        mango += oranges;\n    }\n    mango += apples * n / s.length();\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango * n / apples;\n    } else {\n        return mango * n / oranges;\n    }",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples == 0 && oranges == 0) return 0;\n    if (apples > oranges) {\n        apples -= oranges;\n        apples += mango;\n    } else {\n        oranges -= apples;\n        oranges += mango;\n    }\n    return apples + oranges;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges && apples > mango) {\n        return apples;\n    } else if (oranges > apples && oranges > mango) {\n        return oranges;\n    } else {\n        return mango;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        else if (s[i] == 'o') oranges++;\n        else if (s[i] == 'm') mango++;\n    }\n    if (apples + oranges + mango > n) return 0;\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.length(); ++i) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (n == 0) {\n        return 0;\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return apples;\n    }\n    if (n < apples + oranges + mango) {\n        return oranges;\n    }\n    return mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n == apples) {\n        return mango;\n    }\n    if (n < oranges + apples) {\n        return mango - oranges;\n    }\n    return mango - oranges - apples;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    for (long i = 0; i < total; ++i) {\n        if (i < apples) {\n            result += (n - i) * apples / total;\n        } else if (i < apples + oranges) {\n            result += (n - i) * oranges / total;\n        } else {\n            result += (n - i) * mango / total;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples) {\n        return 0;\n    }\n    if (n < apples + oranges) {\n        return mango;\n    }\n    return mango + (n - apples - oranges) / 2;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return (n - apples) * mango / oranges;\n    } else {\n        return (n - oranges) * mango / apples;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') apples++;\n        else if (s[i] == 'o') oranges++;\n        else if (s[i] == 'm') mango++;\n    }\n    return (mango * n) / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    return mango * (n / (apples + oranges));",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0 && mango > 0) {\n        if (apples >= oranges && apples >= mango) {\n            apples -= oranges;\n            apples -= mango;\n            result += oranges;\n        } else if (oranges >= apples && oranges >= mango) {\n            oranges -= apples;\n            oranges -= mango;\n            result += apples;\n        } else {\n            mango -= apples;\n            mango -= oranges;\n            result += apples;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n    }\n    if (apples > oranges) return apples - oranges;\n    else return oranges - apples;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples + oranges > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0) {\n        if (apples > oranges) {\n            apples -= oranges;\n            result += mango;\n            oranges = 0;\n        } else {\n            oranges -= apples;\n            result += mango;\n            apples = 0;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    }\n    return 0;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return (n - apples) * mango / oranges;\n    } else {\n        return (n - oranges) * mango / apples;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') apples++;\n        else if (c == 'o') oranges++;\n        else if (c == 'm') mango++;\n    }\n    if (apples + oranges + mango > n) return 0;\n    return n - apples - oranges - mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    if (apples + oranges + mango == n) {\n        return mango;\n    } else {\n        return 0;\n    }",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n < apples + oranges + mango) {\n        return 0;\n    }\n    return mango * (n - apples - oranges);",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    long total = apples + oranges + mango;\n    if (total > n) return 0;\n    long result = 0;\n    while (apples > 0 && oranges > 0 && mango > 0) {\n        if (apples >= oranges && apples >= mango) {\n            apples -= oranges + mango;\n            result += oranges;\n        } else if (oranges >= apples && oranges >= mango) {\n            oranges -= apples + mango;\n            result += apples;\n        } else {\n            mango -= apples + oranges;\n            result += apples;\n        }\n    }\n    return result;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (apples > oranges) {\n        return mango * n / (apples + oranges);\n    } else {\n        return mango * n / (apples + oranges + mango);\n    }",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0;\n    ss >> apples;\n    ss >> oranges;\n    long mango = 0;\n    for (long i = 0; i < apples; ++i) {\n        mango += (i + oranges) / 2;\n    }\n    return mango;",
    "    std::stringstream ss(s);\n    long apples = 0, oranges = 0, mango = 0;\n    while (ss >> apples >> oranges >> mango) {\n        if (mango > 0) {\n            mango--;\n        }\n        else {\n            mango = 0;\n        }\n    }\n    return mango;",
    "    long apples = 0, oranges = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            n -= oranges;\n            n -= apples;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n += oranges * 2;\n            n += apples * 2;\n            n +=",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i = 0; i < s.size(); i++) {\n        if (s[i] == 'a') {\n            apples++;\n        } else if (s[i] == 'o') {\n            oranges++;\n        } else if (s[i] == 'm') {\n            mango++;\n        }\n    }\n    return mango * n / (apples + oranges);",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto c : s) {\n        if (c == 'a') {\n            apples++;\n        } else if (c == 'o') {\n            oranges++;\n        } else if (c == 'm') {\n            mango++;\n        }\n    }\n    if (n == 0) {\n        return oranges;\n    } else if (n < apples) {\n        return oranges + mango;\n    } else {\n        return oranges + mango + (n - apples) / 2;\n    }",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples + oranges == n) {\n        return mango;\n    }\n    return 0;",
    "    std::stringstream ss(s);\n    long apples, oranges, mango;\n    ss >> apples >> oranges >> mango;\n    if (apples + oranges + mango != n) {\n        return 0;\n    }\n    return oranges * mango;",
    "    long apples = 0, oranges = 0, mango = 0;\n    for (auto i : s) {\n        if (i == 'a') apples++;\n        if (i == 'o') oranges++;\n        if (i == 'm') mango++;\n    }\n    if (n < apples) return 0;\n    if (n < apples + oranges) return oranges;\n    if (n < apples + oranges + mango) return mango;\n    return n - (apples + oranges + mango);"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
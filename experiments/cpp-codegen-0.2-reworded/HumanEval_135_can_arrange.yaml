name: HumanEval_135_can_arrange
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function which returns\
  \ the largest index of an element which\n// is not greater than or equal to the\
  \ element immediately preceding it. If\n// no such element exists then return -1.\
  \ The given vector will not contain\n// duplicate values.\n// Examples:\n// >>>\
  \ can_arrange([1,2,4,3,5])\n// 3\n// >>> can_arrange([1,2,3])\n// -1\nlong can_arrange(std::vector<long>\
  \ arr) {\n"
tests: "}\nint main() {\n    auto candidate = can_arrange;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)3, (long)5}))) == (3));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)4, (long)5}))) == (-1));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)4, (long)2, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10}))) ==\
  \ (2));\n    assert(candidate((std::vector<long>({(long)4, (long)8, (long)5, (long)7,\
  \ (long)3}))) == (4));\n    assert(candidate((std::vector<long>())) == (-1));\n\
  }\n"
completions: ["    long max_index = -1;\n    long max_value = -1;\n    for (long i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n           \
    \ max_index = i;\n            max_value = arr[i];\n        }\n    }\n    return\
    \ max_index;", "    long max_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_val = arr[0];\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_val) {\n            max_index = i;\n           \
    \ max_val = arr[i];\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_index = i;\n            max_value\
    \ = arr[i];\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] <= arr[i +\
    \ 1]) {\n            max_index = i;\n            break;\n        }\n    }\n  \
    \  return max_index;", "    long max_index = -1;\n    long max_val = arr[0];\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (int i = 0; i < arr.size()\
    \ - 1; i++) {\n        if (arr[i] < arr[i + 1]) {\n            max_index = i;\n\
    \            break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_index = i;\n            max_value\
    \ = arr[i];\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = -1;\n    for (int i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] > max_value) {\n            max_value = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_val = -1;\n    for (long i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n  \
    \      if (arr[i] > max_value) {\n            max_value = arr[i];\n          \
    \  max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (int i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_index = i;\n         \
    \   max_value = arr[i];\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (int i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \     }\n    }\n    return max_index;", "    long max_index = -1;\n    for (long\
    \ i = 0; i < arr.size(); ++i) {\n        if (arr[i] > arr[i - 1]) {\n        \
    \    max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (int i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_index = i;\n         \
    \   max_value = arr[i];\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n    \
    \        max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if\
    \ (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] <= arr[i\
    \ - 1]) {\n            max_index = i - 1;\n            break;\n        }\n   \
    \ }\n    return max_index;", "    long max_index = -1;\n    long max_val = arr[0];\n\
    \    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n\
    \            max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (long i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n    \
    \        max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (long i = 1; i < arr.size(); ++i)\
    \ {\n        if (arr[i] > max_value) {\n            max_index = i;\n         \
    \   max_value = arr[i];\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_index = i;\n         \
    \   max_value = arr[i];\n        }\n    }\n    return max_index;", "    std::sort(arr.begin(),\
    \ arr.end());\n    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_val = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1])\
    \ {\n            max_index = i;\n            break;\n        }\n    }\n    return\
    \ max_index;", "    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n\
    \            max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \     }\n    }\n    return max_index;", "    long max_index = -1;\n    long max_val\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    long max_value =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    std::sort(arr.begin(), arr.end());\n    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    long max_value =\
    \ -1;\n    for (int i = 0; i < arr.size(); ++i) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_index = i;\n            max_value = arr[i];\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = arr[0];\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n  \
    \          max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if\
    \ (arr[i] <= arr[i + 1]) {\n            max_index = i;\n            break;\n \
    \       }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_val = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_index = i;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n        \
    \    max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_val = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_val = arr[0];\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_index = i;\n        }\n    }\n    return max_index;", "    std::sort(arr.begin(),\
    \ arr.end());\n    long max_index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n        \
    \    break;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] <= arr[i +\
    \ 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] <= arr[i - 1]) {\n            max_index\
    \ = i - 1;\n            break;\n        }\n    }\n    return max_index;", "  \
    \  long i = 0;\n    long j = arr.size() - 1;\n    while (i < j) {\n        if\
    \ (arr[i] < arr[j]) {\n            i++;\n        } else if (arr[i] > arr[j]) {\n\
    \            j--;\n        } else {\n            return i;\n        }\n    }\n\
    \    return -1;", "    long max_index = -1;\n    long max_val = -1;\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n           \
    \ max_val = arr[i];\n            max_index = i;\n        }\n    }\n    return\
    \ max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n    for\
    \ (long i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n   \
    \         max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n\
    \            max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = arr[0];\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_value) {\n            max_index = i;\n            max_value = arr[i];\n\
    \        }\n    }\n    return max_index;", "    long i = 0;\n    long max = -1;\n\
    \    for (long j = 0; j < arr.size(); j++) {\n        if (arr[j] <= arr[i]) {\n\
    \            i = j;\n        }\n        if (arr[i] > arr[max]) {\n           \
    \ max = i;\n        }\n    }\n    return max;", "    std::sort(arr.begin(), arr.end());\n\
    \    long max_index = -1;\n    for (int i = 0; i < arr.size() - 1; i++) {\n  \
    \      if (arr[i] < arr[i + 1]) {\n            max_index = i;\n            break;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_val = arr[0];\n    for (long i = 1; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_index = i;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = arr[0];\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    for\
    \ (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n   \
    \         max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ ++i) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    std::sort(arr.begin(),\
    \ arr.end());\n    long max_index = -1;\n    for (int i = 0; i < arr.size(); i++)\
    \ {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_val = arr[0];\n    for (int i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_val = arr[0];\n    for (long i = 0; i < arr.size(); i++) {\n   \
    \     if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n  \
    \      if (arr[i] > max_value) {\n            max_value = arr[i];\n          \
    \  max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    for (int i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_index = i;\n            max_val = arr[i];\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    long max_value =\
    \ arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ arr[0];\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = arr[0];\n    for (long i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max_value) {\n            max_value\
    \ = arr[i];\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_val = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_index = i;\n      \
    \      max_val = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); ++i) {\n        if (arr[i]\
    \ <= arr[i - 1]) {\n            max_index = i - 1;\n            break;\n     \
    \   }\n    }\n    return max_index;", "    long max_index = -1;\n    long max_val\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]\
    \ && arr[i] > max_index) {\n            max_index = arr[i];\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (int i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \         break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_val = -1;\n \
    \   for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n\
    \            max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_val = arr[0];\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_val = -1;\n \
    \   for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    for (int i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n            break;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > arr[i - 1]) {\n            max_index = i;\n        }\n    }\n \
    \   return max_index;", "    long i = 0, j = arr.size() - 1;\n    while (i < j)\
    \ {\n        if (arr[i] <= arr[j]) {\n            i++;\n        } else {\n   \
    \         j--;\n        }\n    }\n    return i == j ? -1 : i;", "    long max_index\
    \ = -1;\n    long max_value = arr[0];\n    for (int i = 1; i < arr.size(); i++)\
    \ {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n    \
    \        max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n            break;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] <= arr[i - 1]) {\n            max_index = i - 1;\n\
    \            break;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i\
    \ - 1]) {\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = arr[0];\n    for (long i = 0; i\
    \ < arr.size(); i++) {\n        if (arr[i] > max_value) {\n            max_index\
    \ = i;\n            max_value = arr[i];\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = arr[0];\n    for (int i = 1; i <\
    \ arr.size(); i++) {\n        if (arr[i] > max_value) {\n            max_value\
    \ = arr[i];\n            max_index = i;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_index = i;\n    \
    \        max_value = arr[i];\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long i = 0;\n    long j = arr.size() - 1;\n\
    \    while (i < j) {\n        if (arr[i] < arr[j]) {\n            i++;\n     \
    \   } else if (arr[i] > arr[j]) {\n            j--;\n        } else {\n      \
    \      return i;\n        }\n    }\n    return -1;", "    long max_index = -1;\n\
    \    long max_val = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n    \
    \    if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > max_value) {\n            max_value = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n  \
    \      if (arr[i] > max_value) {\n            max_index = i;\n            max_value\
    \ = arr[i];\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > max_value) {\n            max_value = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > max_value) {\n            max_value = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1])\
    \ {\n            max_index = i;\n        }\n    }\n    return max_index;", " \
    \   long i = 0;\n    long j = 0;\n    long max_index = -1;\n    long max_value\
    \ = -1;\n    while (i < arr.size()) {\n        if (arr[i] > arr[j]) {\n      \
    \      max_index = j;\n            max_value = arr[j];\n            j++;\n   \
    \     } else if (arr[i] < arr[j]) {\n            i++;\n        } else {\n    \
    \        i++;\n            j++;\n        }\n    }\n    return max_index;", " \
    \   long max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n\
    \        }\n    }\n    return max_index;", "    long i = 0, j = arr.size() - 1;\n\
    \    while (i < j) {\n        if (arr[i] <= arr[j]) {\n            i++;\n    \
    \    } else {\n            j--;\n        }\n    }\n    return i == j ? -1 : i;",
  "    long max_index = -1;\n    long max_val = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if\
    \ (arr[i] < arr[i + 1]) {\n            max_index = i;\n            break;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_index = i;\n            max_value = arr[i];\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    for (long i = 0;\
    \ i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1])\
    \ {\n            max_index = i;\n        }\n    }\n    return max_index;", " \
    \   long i = 0;\n    long j = 0;\n    long max = -1;\n    while (i < arr.size())\
    \ {\n        if (arr[i] > arr[j]) {\n            max = j;\n            j = i;\n\
    \        }\n        i++;\n    }\n    return max;", "    long max_index = -1;\n\
    \    long max_val = -1;\n    for (long i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > max_val) {\n            max_val = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    long max_value = -1;\n    for (int i = 0; i < arr.size(); i++) {\n      \
    \  if (arr[i] > max_value) {\n            max_value = arr[i];\n            max_index\
    \ = i;\n        }\n    }\n    return max_index;", "    long max_index = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1])\
    \ {\n            max_index = i;\n            break;\n        }\n    }\n    return\
    \ max_index;", "    long max_index = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > arr[i - 1]) {\n            max_index = i;\n   \
    \     }\n    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = arr[0];\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_value = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_value = -1;\n    for (int i = 0; i < arr.size(); ++i) {\n        if (arr[i]\
    \ > max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_val = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_val) {\n            max_val = arr[i];\n            max_index = i;\n  \
    \      }\n    }\n    return max_index;", "    long max_index = -1;\n    for (int\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n        \
    \    max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_value = -1;\n    for (int i = 0; i < arr.size();\
    \ ++i) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > arr[i - 1]) {\n            max_index = i;\n            break;\n        }\n\
    \    }\n    return max_index;", "    long i = 0;\n    long j = arr.size() - 1;\n\
    \    while (i < j) {\n        if (arr[i] <= arr[j]) {\n            i++;\n    \
    \    } else {\n            j--;\n        }\n    }\n    return i == j ? -1 : i;",
  "    long max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n\
    \        }\n    }\n    return max_index;", "    long i = 0;\n    long j = 0;\n\
    \    long max = -1;\n    while (i < arr.size()) {\n        while (j < arr.size()\
    \ && arr[j] <= arr[i]) {\n            j++;\n        }\n        if (j == arr.size())\
    \ {\n            max = i;\n            break;\n        }\n        if (arr[i] >\
    \ arr[j]) {\n            max = i;\n            break;\n        }\n        i++;\n\
    \    }\n    return max;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n\
    \            max_value = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = arr[0];\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_val =\
    \ -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val)\
    \ {\n            max_val = arr[i];\n            max_index = i;\n        }\n  \
    \  }\n    return max_index;", "    long max_index = -1;\n    long max_val = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_val) {\n\
    \            max_val = arr[i];\n            max_index = i;\n        }\n    }\n\
    \    return max_index;", "    long max_index = -1;\n    long max_value = -1;\n\
    \    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value)\
    \ {\n            max_value = arr[i];\n            max_index = i;\n        }\n\
    \    }\n    return max_index;", "    long max_index = -1;\n    long max_value\
    \ = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] >\
    \ max_value) {\n            max_value = arr[i];\n            max_index = i;\n\
    \        }\n    }\n    return max_index;", "    std::sort(arr.begin(), arr.end());\n\
    \    long max_index = -1;\n    for (long i = 0; i < arr.size(); i++) {\n     \
    \   if (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    long\
    \ max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n        if (arr[i]\
    \ > max_value) {\n            max_index = i;\n            max_value = arr[i];\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    for\
    \ (long i = 0; i < arr.size(); i++) {\n        if (arr[i] > arr[i - 1]) {\n  \
    \          max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long i = 0, j = 0, max = -1;\n    for (i = 0; i < arr.size(); i++) {\n    \
    \    if (arr[i] > arr[j]) {\n            j = i;\n        }\n        if (arr[i]\
    \ > arr[max]) {\n            max = i;\n        }\n    }\n    return max;", " \
    \   long max_index = -1;\n    for (int i = 0; i < arr.size(); i++) {\n       \
    \ if (arr[i] > arr[i - 1]) {\n            max_index = i;\n            break;\n\
    \        }\n    }\n    return max_index;", "    long max_index = -1;\n    for\
    \ (long i = 0; i < arr.size(); ++i) {\n        if (arr[i] > arr[i - 1]) {\n  \
    \          max_index = i;\n            break;\n        }\n    }\n    return max_index;",
  "    long max_index = -1;\n    long max_val = -1;\n    for (long i = 0; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_val) {\n            max_val = arr[i];\n   \
    \         max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ max_index = -1;\n    long max_value = arr[0];\n    for (int i = 1; i < arr.size();\
    \ i++) {\n        if (arr[i] > max_value) {\n            max_value = arr[i];\n\
    \            max_index = i;\n        }\n    }\n    return max_index;", "    long\
    \ i = 0, j = 0, max_index = -1;\n    while (i < arr.size()) {\n        if (arr[i]\
    \ <= arr[j]) {\n            i++;\n        } else {\n            max_index = j;\n\
    \            j++;\n        }\n    }\n    return max_index;", "    long max_index\
    \ = -1;\n    long max_value = -1;\n    for (long i = 0; i < arr.size(); i++) {\n\
    \        if (arr[i] > max_value) {\n            max_value = arr[i];\n        \
    \    max_index = i;\n        }\n    }\n    return max_index;", "    std::sort(arr.begin(),\
    \ arr.end());\n    long i = 0;\n    for (long j = 1; j < arr.size(); j++) {\n\
    \        if (arr[j] > arr[i]) {\n            i = j;\n        }\n    }\n    return\
    \ i;", "    long max_index = -1;\n    long max_value = arr[0];\n    for (long\
    \ i = 0; i < arr.size(); i++) {\n        if (arr[i] > max_value) {\n         \
    \   max_value = arr[i];\n            max_index = i;\n        }\n    }\n    return\
    \ max_index;"]
stop_tokens:
- "\n}"

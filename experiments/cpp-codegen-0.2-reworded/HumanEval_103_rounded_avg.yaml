name: HumanEval_103_rounded_avg
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
  \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) : f0(_f0)\
  \ {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
  \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }    bool\
  \ operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are given two\
  \ positive integers n and m, and your task is to compute the\n// average of the\
  \ integers from n through m (including n and m). \n// Round the answer to the nearest\
  \ integer and convert that to binary.\n// If n is greater than m, return -1.\n//\
  \ Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>> rounded_avg(7, 5)\n//\
  \ -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20, 33)\n//\
  \ \"0b11010\"\nUnion_std_string_long rounded_avg(long n, long m) {\n"
tests: "}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
  \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
  \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
  );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
  \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
  );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
  \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
  \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
completions: ["    Union_std_string_long ans(0);\n    if (n > m) return ans;\n   \
    \ long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n\
    \    ans.f1 = sum / (m - n + 1);\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long i = n, j = m;\n    while (i <=\
    \ j) {\n        long mid = i + (j - i) / 2;\n        Union_std_string_long mid_ans\
    \ = rounded_avg(n, mid);\n        if (mid_ans == \"0b11\") return \"0b11\";\n\
    \        if (mid_ans == \"-1\") return \"-1\";\n        if (mid_ans == \"0b1111\"\
    ) return \"0b1111\";\n        if (mid_ans == \"0b11010\") return \"0b11010\";\n\
    \        if (mid_ans == \"0b1101\") return \"0b1101\";\n        if (mid_ans ==\
    \ \"0b11\") return \"0b11\";\n        if (mid_ans == \"0b111\") return \"0b111\"\
    ;\n        if (mid_ans == \"0b110\") return \"0b110\";\n        if (mid_ans ==\
    \ \"0b101\") return \"0b101\";\n        if (mid_ans == \"0b100\") return \"0b100\"\
    ;\n        if (mid_ans == \"0b011\") return \"0b011\";\n        if (mid_ans ==\
    \ \"0b010\") return \"0b010\";\n        if (mid_ans == \"0b001\") return \"0b001\"\
    ;\n        if (mid_ans == \"0b000\") return \"0b000\";\n        if (mid_ans ==\
    \ \"0b0\") return \"0b0\";\n        if (mid_ans == \"0b1\") return \"0b1\";\n\
    \        if (mid_ans == \"-1\") return \"-1\";\n        if (mid_ans == \"0b1101\"\
    ) return \"0b1101\";\n        if (mid_ans == \"0b1110\") return \"0b1110\";\n\
    \        if (mid_ans == \"0b1111\") return \"0b1111\";\n        if (mid_ans ==\
    \ \"0b1010\") return \"0b1010\";\n        if (mid_ans == \"0b1011\") return \"\
    0b1011\";\n        if (mid_ans == \"0", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    long sum = 0;\n   \
    \ for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum\
    \ / (m - n + 1);\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = 0, j = 0;\n    while (i < n && j < m) {\n\
    \        if (i == j) {\n            ans.f1 += 1;\n            i++;\n         \
    \   j++;\n        } else if (i < j) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    if (i == n) {\n        ans.f1 += n;\n \
    \   }\n    if (j == m) {\n        ans.f1 += m;\n    }\n    return ans;", "   \
    \ Union_std_string_long ret = Union_std_string_long(0);\n    if (n > m) {\n  \
    \      return Union_std_string_long(-1);\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum / (m - n +\
    \ 1);\n    return ret;", "    Union_std_string_long ans = Union_std_string_long(\"\
    0b0\");\n    if (n > m) return Union_std_string_long(-1);\n    if (n == m) return\
    \ Union_std_string_long(\"0b\" + std::to_string(n));\n    long i = n;\n    long\
    \ j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n        Union_std_string_long\
    \ mid_str = Union_std_string_long(\"0b\" + std::to_string(mid));\n        Union_std_string_long\
    \ left_str = Union_std_string_long(\"0b\" + std::to_string(i));\n        Union_std_string_long\
    \ right_str = Union_std_string_long(\"0b\" + std::to_string(j));\n        Union_std_string_long\
    \ mid_left_str = Union_std_string_long(\"0b\" + std::to_string(i + 1));\n    \
    \    Union_std_string_long mid_right_str = Union_std_string_long(\"0b\" + std::to_string(j\
    \ - 1));\n        Union_std_string_long mid_left_right_str = Union_std_string_long(\"\
    0b\" + std::to_string(i + 1) + \"0b\" + std::to_string(j - 1));\n        Union_std_string_long\
    \ mid_right_left_str = Union_std_string_long(\"0b\" + std::to_string(i) + \"0b\"\
    \ + std::to_string(j - 1));\n        Union_std_string_long mid_left_right_left_str\
    \ = Union_std_string_long(\"0b\" + std::to_string(i + 1) + \"0b\" + std::to_string(j));\n\
    \        Union_std_string_long mid_right_left_right_str = Union_std_string_long(\"\
    0b\" + std::to_string(i) + \"0b\" + std::to_string(j));\n        Union_std_string_long\
    \ mid_left_right_left_", "    Union_std_string_long ret(0);\n    if (n > m) return\
    \ ret;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n        ret.f1\
    \ += i;\n        i++;\n    }\n    ret.f1 /= (j - n + 1);\n    return ret;", " \
    \   Union_std_string_long ans = Union_std_string_long(\"0b0\");\n    if (n > m)\
    \ return Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(n);\n\
    \    long i = n;\n    while (i <= m) {\n        i++;\n        Union_std_string_long\
    \ tmp = Union_std_string_long(i);\n        if (tmp == Union_std_string_long(n))\
    \ return Union_std_string_long(n);\n        if (tmp == Union_std_string_long(m))\
    \ return Union_std_string_long(m);\n        if (tmp == Union_std_string_long(i))\
    \ return Union_std_string_long(i);\n        if (tmp == Union_std_string_long(i-1))\
    \ return Union_std_string_long(i-1);\n        if (tmp == Union_std_string_long(i-2))\
    \ return Union_std_string_long(i-2);\n        if (tmp == Union_std_string_long(i-3))\
    \ return Union_std_string_long(i-3);\n        if (tmp == Union_std_string_long(i-4))\
    \ return Union_std_string_long(i-4);\n        if (tmp == Union_std_string_long(i-5))\
    \ return Union_std_string_long(i-5);\n        if (tmp == Union_std_string_long(i-6))\
    \ return Union_std_string_long(i-6);\n        if (tmp == Union_std_string_long(i-7))\
    \ return Union_std_string_long(i-7);\n        if (tmp == Union_std_string_long(i-8))\
    \ return Union_std_string_long(i-8);\n        if (tmp == Union_std_string_long(i-9))\
    \ return Union_std_string_long(i-9);\n        if (tmp == Union_std_string_long(i-10))\
    \ return Union_std_string_long(i-10);\n        if (tmp == Union_std_string_long(i-11))\
    \ return Union", "    Union_std_string_long ret = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    for (long i = n; i\
    \ <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1 /= (m - n + 1);\n    ret.f0\
    \ = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum / (m - n +\
    \ 1));\n    return ans;", "    Union_std_string_long sum = Union_std_string_long(0);\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += Union_std_string_long(i);\n\
    \    }\n    return sum / Union_std_string_long(m - n + 1);", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long a(n);\n    Union_std_string_long\
    \ b(m);\n    Union_std_string_long c;\n    if (a > b) {\n        return -1;\n\
    \    }\n    for (long i = n; i <= m; ++i) {\n        c.f1 += i;\n    }\n    c.f0\
    \ = std::to_string(c.f1 / (m - n + 1));\n    return c;", "    Union_std_string_long\
    \ sum(0);\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n   \
    \ return sum / (m - n + 1);", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum +=\
    \ i;\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long i = n;\n    long j = m;\n    while\
    \ (i <= j) {\n        long mid = (i + j) / 2;\n        Union_std_string_long mid_ans(mid);\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans) return ans;\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans == ans", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long i = n;\n    while (i <= m) {\n\
    \        ans.f1 += i;\n        i++;\n    }\n    return ans;", "    Union_std_string_long\
    \ ans;\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n  \
    \  return ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid = (i\
    \ + j) / 2;\n        Union_std_string_long mid_ans(0);\n        if (mid == n)\
    \ {\n            mid_ans = Union_std_string_long(1);\n        } else if (mid ==\
    \ m) {\n            mid_ans = Union_std_string_long(2);\n        } else {\n  \
    \          mid_ans = Union_std_string_long(3);\n        }\n        ans = Union_std_string_long(mid_ans\
    \ + ans);\n        if (mid < n) {\n            i = mid + 1;\n        } else if\
    \ (mid > n) {\n            j = mid - 1;\n        } else {\n            i = mid\
    \ + 1;\n        }\n    }\n    return ans;", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return ans;\n    long i = n;\n    long j = m;\n    while (i <=\
    \ j) {\n        ans.f1 += i;\n        i++;\n    }\n    ans.f1 /= (j - n + 1);\n\
    \    return ans;", "    Union_std_string_long a = n;\n    Union_std_string_long\
    \ b = m;\n    Union_std_string_long c = a + b;\n    Union_std_string_long d =\
    \ c - a;\n    Union_std_string_long e = d / 2;\n    Union_std_string_long f =\
    \ e.f1;\n    Union_std_string_long g = e.f0;\n    return g;", "    Union_std_string_long\
    \ ret = Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ret = Union_std_string_long(ret.f1\
    \ + i);\n    }\n    return ret;", "    Union_std_string_long ans(0);\n    if (n\
    \ > m) return -1;\n    if (n == m) return \"0b\" + std::to_string(n);\n    for\
    \ (long i = n; i <= m; ++i) {\n        ans.f1 += i;\n        ans.f0 += std::to_string(i);\n\
    \    }\n    ans.f1 /= m - n + 1;\n    return ans;", "    std::string s = std::to_string(n);\n\
    \    std::string t = std::to_string(m);\n    std::string u = s + t;\n    std::string\
    \ v = u + \"0\";\n    std::string w = v + \"0\";\n    std::string x = w + \"0\"\
    ;\n    std::string y = x + \"0\";\n    std::string z = y + \"0\";\n    std::string\
    \ a = z + \"0\";\n    std::string b = a + \"0\";\n    std::string c = b + \"0\"\
    ;\n    std::string d = c + \"0\";\n    std::string e = d + \"0\";\n    std::string\
    \ f = e + \"0\";\n    std::string g = f + \"0\";\n    std::string h = g + \"0\"\
    ;\n    std::string i = h + \"0\";\n    std::string j = i + \"0\";\n    std::string\
    \ k = j + \"0\";\n    std::string l = k + \"0\";\n    std::string m = l + \"0\"\
    ;\n    std::string n = m + \"0\";\n    std::string o = n + \"0\";\n    std::string\
    \ p = o + \"0\";\n    std::string q = p + \"0\";\n    std::string r = q + \"0\"\
    ;\n    std::string s = r + \"0\";\n    std::string t = s + \"0\";\n    std::string\
    \ u = t + \"0\";\n    std::string v = u + \"0\";\n    std::string w = v + \"0\"\
    ;\n    std::string x = w + \"0\";\n    std::string y = x + \"0\";\n    std::string\
    \ z = y + \"0\";\n    std::string a = z + \"0\";\n    std::string b = a + \"0\"\
    ;\n    std::string c = b + \"0\";\n    std::string d = c + \"0\";\n    std::string\
    \ e = d + \"0\";\n    std::string f = e + \"0\";\n    std::string g = f + \"0\"\
    ;\n    std::string h = g + \"0\";\n    std::", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    for (long i = n; i\
    \ <= m; ++i) {\n        ans.f1 += i;\n    }\n    ans.f1 /= (m - n + 1);\n    return\
    \ ans;", "    if (n > m) return Union_std_string_long(\"-1\");\n    long sum =\
    \ 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    return\
    \ Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long ret =\
    \ Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    if (n == m) return Union_std_string_long(\"0b1\");\n    for (long\
    \ i = n; i <= m; ++i) {\n        ret = Union_std_string_long(ret.f1 + i);\n  \
    \  }\n    return ret;", "    Union_std_string_long ans(0);\n    if (n > m) return\
    \ ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid\
    \ = (i + j) / 2;\n        Union_std_string_long mid_str(mid);\n        Union_std_string_long\
    \ ans_str(ans);\n        if (mid_str == ans_str) {\n            return ans;\n\
    \        } else if (mid_str < ans_str) {\n            i = mid + 1;\n        }\
    \ else {\n            j = mid - 1;\n        }\n    }\n    return ans;", "    Union_std_string_long\
    \ ans;\n    if (n > m) {\n        return ans;\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m\
    \ - n + 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n > m)\
    \ {\n        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1 = (n + m) /\
    \ 2;\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long\
    \ sum(0);\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n   \
    \ return sum / (m - n + 1);", "    Union_std_string_long ans;\n    if (n > m)\
    \ {\n        return ans;\n    }\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ret;\n    if (n > m) {\n        ret = -1;\n\
    \    } else {\n        ret.f1 = (n + m) / 2;\n        ret.f0 = std::to_string(ret.f1);\n\
    \    }\n    return ret;", "    Union_std_string_long ans;\n    if (n > m) return\
    \ ans;\n    long i = n;\n    long j = m;\n    long k = 0;\n    while (i <= j)\
    \ {\n        k = i + j;\n        i++;\n        j--;\n    }\n    i = n;\n    j\
    \ = m;\n    while (i <= j) {\n        k = i + j;\n        i++;\n        j--;\n\
    \        ans.f1 = ans.f1 + k;\n    }\n    ans.f0 = std::to_string(ans.f1 / (k\
    \ + 1));\n    return ans;", "    Union_std_string_long ans;\n    if (n > m) {\n\
    \        return ans;\n    }\n    if (n == m) {\n        return Union_std_string_long(n);\n\
    \    }\n    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum +=\
    \ i;\n    }\n    ans = Union_std_string_long(sum / (m - n + 1));\n    return ans;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = 0;\n\
    \    while (i < m) {\n        i++;\n        ans.f1 += n;\n        ans.f0 += std::to_string(n);\n\
    \    }\n    return ans;", "    Union_std_string_long ret;\n    if (n > m) {\n\
    \        ret.f1 = -1;\n        return ret;\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum / (m\
    \ - n + 1);\n    return ret;", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    long i = 0;\n    while\
    \ (i < m) {\n        i++;\n        Union_std_string_long tmp = Union_std_string_long(i);\n\
    \        if (tmp == Union_std_string_long(n)) return Union_std_string_long(n);\n\
    \        if (tmp == Union_std_string_long(m)) return Union_std_string_long(m);\n\
    \        if (tmp == Union_std_string_long(n + 1)) return Union_std_string_long(n\
    \ + 1);\n        if (tmp == Union_std_string_long(m + 1)) return Union_std_string_long(m\
    \ + 1);\n    }\n    return Union_std_string_long(0);", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long sum = Union_std_string_long(0);\n\
    \    Union_std_string_long count = Union_std_string_long(0);\n    Union_std_string_long\
    \ avg = Union_std_string_long(0);\n    for (long i = n; i <= m; i++) {\n     \
    \   sum += Union_std_string_long(i);\n        count += Union_std_string_long(1);\n\
    \    }\n    avg = sum / count;\n    return avg;", "    Union_std_string_long ret\
    \ = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; i++) {\n        ret.f1 += i;\n    }\n   \
    \ ret.f1 /= (m - n + 1);\n    ret.f0 = std::to_string(ret.f1);\n    return ret;",
  "    Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    long i = n;\n    while (i <= m) {\n        ans.f1\
    \ += i;\n        i++;\n    }\n    ans.f1 /= (m - n + 1);\n    return ans;", " \
    \   Union_std_string_long sum = Union_std_string_long(0);\n    Union_std_string_long\
    \ avg = Union_std_string_long(0);\n    Union_std_string_long count = Union_std_string_long(0);\n\
    \    Union_std_string_long i = Union_std_string_long(0);\n    Union_std_string_long\
    \ j = Union_std_string_long(0);\n    Union_std_string_long k = Union_std_string_long(0);\n\
    \    Union_std_string_long l = Union_std_string_long(0);\n    Union_std_string_long\
    \ m1 = Union_std_string_long(0);\n    Union_std_string_long m2 = Union_std_string_long(0);\n\
    \    Union_std_string_long m3 = Union_std_string_long(0);\n    Union_std_string_long\
    \ m4 = Union_std_string_long(0);\n    Union_std_string_long m5 = Union_std_string_long(0);\n\
    \    Union_std_string_long m6 = Union_std_string_long(0);\n    Union_std_string_long\
    \ m7 = Union_std_string_long(0);\n    Union_std_string_long m8 = Union_std_string_long(0);\n\
    \    Union_std_string_long m9 = Union_std_string_long(0);\n    Union_std_string_long\
    \ m10 = Union_std_string_long(0);\n    Union_std_string_long m11 = Union_std_string_long(0);\n\
    \    Union_std_string_long m12 = Union_std_string_long(0);\n    Union_std_string_long\
    \ m13 = Union_std_string_long(0);\n    Union_std_string_long m14 = Union_std_string_long(0);\n\
    \    Union_std_string_long m15 = Union_std_string_long(0);\n    Union_std_string_long\
    \ m16 = Union_std_string_long(0);\n    Union_std_string_long m17 = Union_", " \
    \   Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = n;\n\
    \    while (i <= m) {\n        ans.f1 += i;\n        i++;\n    }\n    ans.f0 =\
    \ std::to_string(ans.f1 / (m - n + 1));\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n\
    \        long mid = (i + j) / 2;\n        Union_std_string_long mid_ans(0);\n\
    \        if (mid == n) {\n            mid_ans = Union_std_string_long(\"0b1\"\
    );\n        } else if (mid == m) {\n            mid_ans = Union_std_string_long(\"\
    0b1\");\n        } else {\n            mid_ans = Union_std_string_long(\"0b0\"\
    );\n        }\n        Union_std_string_long ans_left = Union_std_string_long(\"\
    0b0\");\n        Union_std_string_long ans_right = Union_std_string_long(\"0b0\"\
    );\n        if (i == mid) {\n            ans_left = Union_std_string_long(\"0b1\"\
    );\n        }\n        if (j == mid) {\n            ans_right = Union_std_string_long(\"\
    0b1\");\n        }\n        ans = Union_std_string_long(ans_left + ans_right +\
    \ mid_ans);\n        i = mid + 1;\n        j = mid - 1;\n    }\n    return ans;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum\
    \ / (m - n + 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n\
    \ > m) {\n        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1 = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1\
    \ /= (m - n + 1);\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", " \
    \   Union_std_string_long ans = Union_std_string_long(\"0b\");\n    if (n > m)\
    \ return Union_std_string_long(-1);\n    for (long i = n; i <= m; i++) {\n   \
    \     ans.f1 += i;\n    }\n    ans.f1 /= (m - n + 1);\n    return ans;", "   \
    \ if (n > m) return Union_std_string_long(\"-1\");\n    std::string ans = \"\"\
    ;\n    for (long i = n; i <= m; i++) {\n        ans += std::to_string(i);\n  \
    \  }\n    return Union_std_string_long(std::stoi(ans));", "    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    std::string s = std::to_string(n);\n   \
    \ long sum = 0;\n    for (int i = 0; i < s.size(); ++i) {\n        sum += s[i]\
    \ - '0';\n    }\n    return Union_std_string_long(sum / (s.size() + 1));", " \
    \   Union_std_string_long ans;\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans = sum\
    \ / (m - n + 1);\n    return ans;", "    std::string ans = \"\";\n    if (n >\
    \ m) return Union_std_string_long(\"-1\");\n    if (n == m) return Union_std_string_long(n);\n\
    \    for (long i = n; i <= m; i++) {\n        ans += std::to_string(i);\n    }\n\
    \    return Union_std_string_long(std::stoi(ans));", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long ans = Union_std_string_long(n);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m\
    \ - n + 1);\n    return ans;", "    Union_std_string_long sum = 0;\n    for (long\
    \ i = n; i <= m; ++i) {\n        sum += i;\n    }\n    return sum / (m - n + 1);",
  "    Union_std_string_long ret = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    for (long i = n; i <= m; ++i) {\n        ret.f1\
    \ += i;\n    }\n    ret.f1 /= m - n + 1;\n    return ret;", "    std::string ans\
    \ = \"\";\n    if (n > m) return Union_std_string_long(\"-1\");\n    if (n ==\
    \ m) return Union_std_string_long(n);\n    long i = n;\n    long j = m;\n    while\
    \ (i <= j) {\n        long mid = i + (j - i)/2;\n        Union_std_string_long\
    \ tmp = Union_std_string_long(mid);\n        if (tmp == Union_std_string_long(n))\
    \ {\n            ans = \"0b\" + ans;\n            i = mid + 1;\n        } else\
    \ if (tmp == Union_std_string_long(m)) {\n            ans = \"0b\" + ans;\n  \
    \          j = mid - 1;\n        } else {\n            i = mid + 1;\n        }\n\
    \    }\n    return Union_std_string_long(ans);", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum\
    \ / (m - n + 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n\
    \ > m) {\n        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1 = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1\
    \ /= (m - n + 1);\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", " \
    \   Union_std_string_long ret = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    for (long i = n; i <= m; ++i) {\n      \
    \  ret = Union_std_string_long(ret.f1 + i);\n    }\n    return ret;", "    Union_std_string_long\
    \ sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n  \
    \  if (n > m) {\n        return -1;\n    }\n    return sum / (m - n + 1);", " \
    \   Union_std_string_long sum(0);\n    for (long i = n; i <= m; i++) {\n     \
    \   sum += i;\n    }\n    return sum / (m - n + 1);", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ result = Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(-1);\n\
    \    for (long i = n; i <= m; ++i) {\n        result = Union_std_string_long(result.f1\
    \ + i);\n    }\n    return result;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n\
    \        ans.f1 += i;\n        i++;\n    }\n    return ans;", "    Union_std_string_long\
    \ result;\n    if (n > m) {\n        result = -1;\n    } else {\n        long\
    \ sum = 0;\n        for (long i = n; i <= m; ++i) {\n            sum += i;\n \
    \       }\n        result = sum / (m - n + 1);\n    }\n    return result;", " \
    \   Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum / (m\
    \ - n + 1));\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(\"\
    0b0\");\n    if (n > m) return Union_std_string_long(-1);\n    for (long i = n;\
    \ i <= m; i++) {\n        ans = Union_std_string_long(Union_std_string_long(ans).f1\
    \ + i);\n    }\n    return ans;", "    Union_std_string_long ret;\n    if (n >\
    \ m) {\n        ret.f1 = -1;\n        return ret;\n    }\n    long sum = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum\
    \ / (m - n + 1);\n    return ret;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n\
    \        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = n;\n\
    \    long j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n    \
    \    Union_std_string_long mid_ans(0);\n        if (mid == n) {\n            mid_ans\
    \ = Union_std_string_long(\"0b1\");\n        } else if (mid == m) {\n        \
    \    mid_ans = Union_std_string_long(\"0b1\");\n        } else {\n           \
    \ mid_ans = Union_std_string_long(mid);\n        }\n        Union_std_string_long\
    \ ans_mid = Union_std_string_long(0);\n        ans_mid = Union_std_string_long(ans_mid\
    \ + mid_ans);\n        ans_mid = Union_std_string_long(ans_mid + Union_std_string_long(mid_ans));\n\
    \        ans = Union_std_string_long(ans + ans_mid);\n        i = mid + 1;\n \
    \       j = mid - 1;\n    }\n    return ans;", "    Union_std_string_long result;\n\
    \    if (n > m) {\n        result = Union_std_string_long(\"-1\");\n        return\
    \ result;\n    }\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n   \
    \     sum += i;\n    }\n    result = Union_std_string_long(sum / (m - n + 1));\n\
    \    return result;", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long ans(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ans += i;\n    }\n    return\
    \ ans / (m - n + 1);", "    Union_std_string_long ans(0);\n    if (n > m) return\
    \ ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n        ans.f1\
    \ += i;\n        i++;\n    }\n    return ans;", "    std::string s = std::to_string(n);\n\
    \    std::string t = std::to_string(m);\n    std::string ans = \"\";\n    if (n\
    \ > m) return Union_std_string_long(\"-1\");\n    if (n == m) return Union_std_string_long(s);\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == '1') {\n      \
    \      ans += \"1\";\n        } else {\n            ans += \"0\";\n        }\n\
    \    }\n    for (int i = 0; i < t.size(); i++) {\n        if (t[i] == '1') {\n\
    \            ans += \"1\";\n        } else {\n            ans += \"0\";\n    \
    \    }\n    }\n    return Union_std_string_long(ans);", "    Union_std_string_long\
    \ ans = Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(-1);\n\
    \    if (n == m) return Union_std_string_long(n);\n    long i = n;\n    long j\
    \ = m;\n    while (i <= j) {\n        if (i % 2 == 0) {\n            ans = Union_std_string_long(ans\
    \ + \"0b0\");\n        } else {\n            ans = Union_std_string_long(ans +\
    \ \"0b1\");\n        }\n        i++;\n    }\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid = (i\
    \ + j) / 2;\n        Union_std_string_long mid_ans = (Union_std_string_long) (mid);\n\
    \        if (mid_ans == (Union_std_string_long) (mid)) {\n            ans = (Union_std_string_long)\
    \ (ans + mid);\n            i = mid + 1;\n        } else {\n            j = mid\
    \ - 1;\n        }\n    }\n    return ans;", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return ans;\n    long i = n;\n    while (i <= m) {\n        ans.f1\
    \ += i;\n        i++;\n    }\n    return ans;", "    Union_std_string_long sum\
    \ = Union_std_string_long(0);\n    Union_std_string_long avg = Union_std_string_long(0);\n\
    \    for (long i = n; i <= m; i++) {\n        sum += Union_std_string_long(i);\n\
    \    }\n    avg = sum / Union_std_string_long(m - n + 1);\n    return avg;", " \
    \   Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    long i = n;\n    long j = m;\n    while\
    \ (i <= j) {\n        long mid = (i + j) / 2;\n        Union_std_string_long mid_ans\
    \ = Union_std_string_long(0);\n        if (mid > 0) {\n            mid_ans = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid = Union_std_string_long(mid);\n \
    \       }\n        Union_std_string_long ans_mid_ans = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid_ans = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid_ans_mid = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid_ans_mid = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid_ans_mid_mid = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid_ans_mid_mid = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid_ans_mid_mid_mid = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid_ans_mid_mid_mid = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid_ans_mid_mid_mid_mid = Union_std_string_long(0);\n\
    \        if (mid > 0) {\n            ans_mid_ans_mid_mid_mid_mid = Union_std_string_long(mid);\n\
    \        }\n        Union_std_string_long ans_mid_ans_mid_mid_", "    std::stringstream\
    \ ss;\n    ss << std::setw(n) << std::setfill('0') << n;\n    ss << std::setw(m-n+1)\
    \ << std::setfill('0') << m-n+1;\n    return Union_std_string_long(ss.str());",
  "    if (n > m) return Union_std_string_long(\"-1\");\n    std::string s = std::to_string(n);\n\
    \    long sum = 0;\n    for (int i = 0; i < s.size(); i++) {\n        sum += s[i]\
    \ - '0';\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ ans = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    ans = Union_std_string_long(sum / (m - n + 1));\n    return ans;",
  "    Union_std_string_long ret;\n    if (n > m) {\n        ret.f1 = -1;\n      \
    \  return ret;\n    }\n    ret.f1 = (n + m) / 2;\n    std::stringstream ss;\n\
    \    ss << ret.f1;\n    ret.f0 = ss.str();\n    return ret;", "    Union_std_string_long\
    \ ans;\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    ans = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ans = Union_std_string_long(n);\n    if (n\
    \ > m) return Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(0);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n \
    \   }\n    ans.f1 = (sum + m) / 2;\n    return ans;", "    Union_std_string_long\
    \ ans = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ans = Union_std_string_long(Union_std_string_long(i).f1\
    \ + ans.f1);\n    }\n    return ans;", "    Union_std_string_long ans(0);\n  \
    \  if (n > m) return ans;\n    long i = n;\n    long j = m;\n    while (i <= j)\
    \ {\n        long mid = (i + j) / 2;\n        Union_std_string_long mid_ans =\
    \ (Union_std_string_long) (mid);\n        if (mid_ans == \"0b11\") {\n       \
    \     ans = mid_ans;\n            break;\n        }\n        if (mid_ans == \"\
    0b10\") {\n            j = mid - 1;\n        } else {\n            i = mid + 1;\n\
    \        }\n    }\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n;\n    while (i <= m) {\n        ans.f1 +=\
    \ i;\n        i++;\n    }\n    return ans;", "    Union_std_string_long ans =\
    \ Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; i++) {\n        Union_std_string_long tmp\
    \ = Union_std_string_long(i);\n        ans = Union_std_string_long(ans + tmp);\n\
    \    }\n    return ans / Union_std_string_long(m - n + 1);", "    Union_std_string_long\
    \ ans = Union_std_string_long(n);\n    if (n > m) return Union_std_string_long(-1);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n \
    \   }\n    ans.f1 = sum / (m - n + 1);\n    return ans;", "    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    std::string s = std::to_string(n);\n   \
    \ long sum = 0;\n    for (int i = 0; i < s.size(); i++) {\n        sum += s[i]\
    \ - '0';\n    }\n    return Union_std_string_long(sum / (s.size() + 1));", " \
    \   Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = n;\n\
    \    long j = m;\n    while (i <= j) {\n        long mid = i + (j - i)/2;\n  \
    \      Union_std_string_long mid_ans = rounded_avg(n, mid);\n        if (mid_ans\
    \ == ans) {\n            ans = mid_ans;\n            i = mid + 1;\n        } else\
    \ if (mid_ans < ans) {\n            i = mid + 1;\n        } else {\n         \
    \   j = mid - 1;\n        }\n    }\n    return ans;", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ ret;\n    if (n > m) return ret;\n    ret.f1 = 0;\n    for (long i = n; i <=\
    \ m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1 /= m - n + 1;\n    return\
    \ ret;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long\
    \ i = n;\n    long j = m;\n    long sum = 0;\n    while (i <= j) {\n        sum\
    \ += i;\n        i++;\n    }\n    ans.f1 = sum / (j - n + 1);\n    return ans;",
  "    Union_std_string_long ret = Union_std_string_long(0);\n    if (n > m) {\n \
    \       return Union_std_string_long(\"-1\");\n    }\n    for (long i = n; i <=\
    \ m; i++) {\n        ret.f1 += i;\n    }\n    ret.f1 /= m - n + 1;\n    ret.f0\
    \ = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long\
    \ sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n  \
    \  ans.f1 = sum / (m - n + 1);\n    return ans;", "    Union_std_string_long ans;\n\
    \    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; ++i)\
    \ {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = n;\n\
    \    long j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n    \
    \    Union_std_string_long mid_ans = (Union_std_string_long)mid;\n        if (mid_ans\
    \ == \"0b11\") {\n            ans = mid_ans;\n            j = mid - 1;\n     \
    \   } else {\n            i = mid + 1;\n        }\n    }\n    return ans;", " \
    \   Union_std_string_long ret;\n    if (n > m) return ret;\n    ret.f1 = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1\
    \ /= m - n + 1;\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", "   \
    \ Union_std_string_long ans = Union_std_string_long(n);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ans(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ans.f1 += i;\n    }\n   \
    \ return ans;", "    Union_std_string_long ret = Union_std_string_long(0);\n \
    \   if (n > m) {\n        return Union_std_string_long(\"-1\");\n    }\n    if\
    \ (n == m) {\n        return Union_std_string_long(\"0b\" + std::to_string(n));\n\
    \    }\n    for (long i = n; i <= m; i++) {\n        ret = Union_std_string_long(ret\
    \ + Union_std_string_long(i));\n    }\n    ret = Union_std_string_long(ret / (m\
    \ - n + 1));\n    return ret;", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum +=\
    \ i;\n    }\n    return Union_std_string_long(sum / (m - n + 1));", "    if (n\
    \ > m) return Union_std_string_long(\"-1\");\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; ++i) {\n        sum += i;\n    }\n    return Union_std_string_long(sum\
    \ / (m - n + 1));", "    std::string s = std::to_string(n);\n    std::string t\
    \ = std::to_string(m);\n    std::string r = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (s[i] == '1') {\n            r += \"1\";\n        } else\
    \ {\n            r += \"0\";\n        }\n    }\n    for (int i = 0; i < t.size();\
    \ i++) {\n        if (t[i] == '1') {\n            r += \"1\";\n        } else\
    \ {\n            r += \"0\";\n        }\n    }\n    Union_std_string_long ret(r);\n\
    \    return ret;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid = (i\
    \ + j) / 2;\n        Union_std_string_long mid_ans(0);\n        if (mid == n)\
    \ {\n            mid_ans = Union_std_string_long(1);\n        } else if (mid ==\
    \ m) {\n            mid_ans = Union_std_string_long(2);\n        } else {\n  \
    \          mid_ans = Union_std_string_long(0);\n        }\n        Union_std_string_long\
    \ ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans_temp = Union_std_string_long(0);\n        ans_temp = Union_std_string_long(0);\n\
    \        ans", "    Union_std_string_long ret = Union_std_string_long(\"0b0\"\
    );\n    if (n > m) return Union_std_string_long(-1);\n    long i = n;\n    while\
    \ (i <= m) {\n        ret = Union_std_string_long(ret.f1 + i);\n        i++;\n\
    \    }\n    return ret;", "    Union_std_string_long ret;\n    if (n > m) {\n\
    \        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1 = (n + m) / 2;\n\
    \    ret.f0 = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long\
    \ ret;\n    if (n > m) {\n        ret.f1 = -1;\n        return ret;\n    }\n \
    \   ret.f1 = 0;\n    for (long i = n; i <= m; ++i) {\n        ret.f1 += i;\n \
    \   }\n    ret.f1 /= (m - n + 1);\n    ret.f0 = std::to_string(ret.f1);\n    return\
    \ ret;", "    Union_std_string_long ans = Union_std_string_long(0);\n    if (n\
    \ > m) return Union_std_string_long(\"-1\");\n    for (long i = n; i <= m; ++i)\
    \ {\n        ans = Union_std_string_long(ans.f1 + i);\n    }\n    return ans;",
  "    Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(1);\n\
    \    long i = n;\n    while (i <= m) {\n        ans.f1 += i;\n        i++;\n \
    \   }\n    ans.f1 /= m - n + 1;\n    return ans;", "    Union_std_string_long\
    \ sum = Union_std_string_long(0);\n    Union_std_string_long count = Union_std_string_long(0);\n\
    \    for (long i = n; i <= m; i++) {\n        sum += Union_std_string_long(i);\n\
    \        count += Union_std_string_long(1);\n    }\n    if (count.f1 > 0) {\n\
    \        return Union_std_string_long(-1);\n    }\n    return Union_std_string_long(sum.f1\
    \ / count.f1);", "    Union_std_string_long ans(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    if (n == m) return Union_std_string_long(\"0b\" + std::to_string(n));\n\
    \    for (long i = n; i <= m; i++) {\n        ans.f1 += i;\n    }\n    return\
    \ ans / (m - n + 1);", "    Union_std_string_long ret;\n    if (n > m) {\n   \
    \     ret = -1;\n    } else {\n        ret = Union_std_string_long(n + m) / 2;\n\
    \    }\n    return ret;", "    if (n > m) return Union_std_string_long(\"-1\"\
    );\n    std::string s = std::to_string(n);\n    std::string t = std::to_string(m);\n\
    \    std::string ans = \"0b\";\n    for (int i = s.length() - 1; i >= 0; i--)\
    \ {\n        ans += s[i];\n        if (i < t.length() - 1) ans += \"0\";\n   \
    \ }\n    return Union_std_string_long(ans);", "    Union_std_string_long sum =\
    \ 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    std::string\
    \ ans = std::to_string(sum.f1 / (m - n + 1));\n    if (sum.f1 % (m - n + 1) !=\
    \ 0) {\n        ans += \"1\";\n    }\n    return Union_std_string_long(ans);",
  "    Union_std_string_long ans;\n    if (n > m) return ans;\n    long i = n;\n \
    \   long j = m;\n    long sum = 0;\n    while (i <= j) {\n        sum += i;\n\
    \        i++;\n    }\n    ans = sum / (j - n + 1);\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long i = n;\n    while (i <= m) {\n\
    \        ans.f1 += i;\n        i++;\n    }\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return Union_std_string_long(\"-1\");\n    if (n ==\
    \ m) return Union_std_string_long(n);\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n, j = m;\n    while (i <= j) {\n        long\
    \ mid = i + (j - i) / 2;\n        Union_std_string_long mid_ans = (Union_std_string_long)(mid);\n\
    \        if (mid_ans == ans) return ans;\n        if (mid_ans < ans) i = mid +\
    \ 1;\n        else j = mid - 1;\n    }\n    return ans;", "    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; ++i) {\n        sum += i;\n    }\n    return Union_std_string_long(sum /\
    \ (m - n + 1));", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    long i = n;\n    long\
    \ j = m;\n    while (i <= j) {\n        Union_std_string_long tmp = Union_std_string_long(i);\n\
    \        ans = Union_std_string_long(tmp + Union_std_string_long(j));\n      \
    \  i++;\n        j--;\n    }\n    return ans;", "    Union_std_string_long ret;\n\
    \    if (n > m) {\n        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1\
    \ = (n + m) / 2;\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", "  \
    \  Union_std_string_long ans = Union_std_string_long(n);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    long sum = 0;\n    for (long i = n; i <= m;\
    \ ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long\
    \ i = n;\n    long j = m;\n    while (i <= j) {\n        ans.f1 += i;\n      \
    \  i++;\n    }\n    ans.f1 /= (j - n + 1);\n    return ans;", "    Union_std_string_long\
    \ ans = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum +=\
    \ i;\n    }\n    ans = Union_std_string_long(sum / (m - n + 1));\n    return ans;",
  "    Union_std_string_long sum = Union_std_string_long(\"0\") ;\n    Union_std_string_long\
    \ count = Union_std_string_long(\"0\") ;\n    for (long i = n ; i <= m ; i++)\
    \ {\n        sum = Union_std_string_long(sum.f1 + i) ;\n        count = Union_std_string_long(count.f1\
    \ + 1) ;\n    }\n    if (count.f1 == 0) {\n        return -1 ;\n    }\n    return\
    \ Union_std_string_long(sum.f1 / count.f1) ;", "    Union_std_string_long ans(0);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m\
    \ - n + 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n > m)\
    \ return ret;\n    ret.f1 = (n + m) / 2;\n    ret.f0 = std::to_string(ret.f1);\n\
    \    return ret;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n \
    \   }\n    ans.f1 = sum / (m - n + 1);\n    return ans;", "    Union_std_string_long\
    \ ans;\n    if (n > m) return ans;\n    long i = n;\n    long j = m;\n    long\
    \ k = 0;\n    while (i <= j) {\n        k += i;\n        i++;\n    }\n    k /=\
    \ 2;\n    if (k % 2 == 0) {\n        ans.f1 = k / 2;\n        return ans;\n  \
    \  }\n    ans.f1 = k / 2 + 1;\n    return ans;", "    Union_std_string_long ans;\n\
    \    if (n > m) {\n        return ans;\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n +\
    \ 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n > m) {\n \
    \       ret.f1 = -1;\n        return ret;\n    }\n    ret.f1 = 0;\n    for (long\
    \ i = n; i <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1 /= m - n + 1;\n\
    \    ret.f0 = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long\
    \ a = Union_std_string_long(n);\n    Union_std_string_long b = Union_std_string_long(m);\n\
    \    Union_std_string_long c = Union_std_string_long(n);\n    Union_std_string_long\
    \ d = Union_std_string_long(m);\n    Union_std_string_long e = Union_std_string_long(n);\n\
    \    Union_std_string_long f = Union_std_string_long(m);\n    Union_std_string_long\
    \ g = Union_std_string_long(n);\n    Union_std_string_long h = Union_std_string_long(m);\n\
    \    Union_std_string_long i = Union_std_string_long(n);\n    Union_std_string_long\
    \ j = Union_std_string_long(m);\n    Union_std_string_long k = Union_std_string_long(n);\n\
    \    Union_std_string_long l = Union_std_string_long(m);\n    Union_std_string_long\
    \ m1 = Union_std_string_long(n);\n    Union_std_string_long m2 = Union_std_string_long(m);\n\
    \    Union_std_string_long m3 = Union_std_string_long(n);\n    Union_std_string_long\
    \ m4 = Union_std_string_long(m);\n    Union_std_string_long m5 = Union_std_string_long(n);\n\
    \    Union_std_string_long m6 = Union_std_string_long(m);\n    Union_std_string_long\
    \ m7 = Union_std_string_long(n);\n    Union_std_string_long m8 = Union_std_string_long(m);\n\
    \    Union_std_string_long m9 = Union_std_string_long(n);\n    Union_std_string_long\
    \ m10 = Union_std_string_long(m);\n    Union_std_string_long m11 = Union_std_string_long(n);\n\
    \    Union_std_string_long m12 = Union_std_string_long", "    Union_std_string_long\
    \ ans = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ans.f1 += i;\n    }\n   \
    \ ans.f1 /= (m - n + 1);\n    return ans;", "    Union_std_string_long sum(0);\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    return sum\
    \ / (m - n + 1);", "    Union_std_string_long a(n);\n    Union_std_string_long\
    \ b(m);\n    Union_std_string_long c(0);\n    Union_std_string_long d(0);\n  \
    \  Union_std_string_long e(0);\n    Union_std_string_long f(0);\n    Union_std_string_long\
    \ g(0);\n    Union_std_string_long h(0);\n    Union_std_string_long i(0);\n  \
    \  Union_std_string_long j(0);\n    Union_std_string_long k(0);\n    Union_std_string_long\
    \ l(0);\n    Union_std_string_long m1(0);\n    Union_std_string_long m2(0);\n\
    \    Union_std_string_long m3(0);\n    Union_std_string_long m4(0);\n    Union_std_string_long\
    \ m5(0);\n    Union_std_string_long m6(0);\n    Union_std_string_long m7(0);\n\
    \    Union_std_string_long m8(0);\n    Union_std_string_long m9(0);\n    Union_std_string_long\
    \ m10(0);\n    Union_std_string_long m11(0);\n    Union_std_string_long m12(0);\n\
    \    Union_std_string_long m13(0);\n    Union_std_string_long m14(0);\n    Union_std_string_long\
    \ m15(0);\n    Union_std_string_long m16(0);\n    Union_std_string_long m17(0);\n\
    \    Union_std_string_long m18(0);\n    Union_std_string_long m19(0);\n    Union_std_string_long\
    \ m20(0);\n    Union_std_string_long m21(0);\n    Union_std_string_long m22(0);\n\
    \    Union_std_string_long m23(0);\n    Union_std_string_long m24(0);\n    Union_std_string_long\
    \ m25(0);\n    Union_std_string", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    long sum = 0;\n   \
    \ for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    if (n == m) return ans;\n    long i = n;\n    long\
    \ j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n        Union_std_string_long\
    \ mid_ans = rounded_avg(n, mid);\n        if (mid_ans == Union_std_string_long(\"\
    0b11\")) return Union_std_string_long(\"0b11\");\n        if (mid_ans == Union_std_string_long(\"\
    0b10\")) return Union_std_string_long(\"0b10\");\n        if (mid_ans == Union_std_string_long(\"\
    0b01\")) return Union_std_string_long(\"0b01\");\n        if (mid_ans == Union_std_string_long(\"\
    0b00\")) return Union_std_string_long(\"0b00\");\n        if (mid_ans == Union_std_string_long(\"\
    0b11\")) return Union_std_string_long(\"0b11\");\n        if (mid_ans == Union_std_string_long(\"\
    0b10\")) return Union_std_string_long(\"0b10\");\n        if (mid_ans == Union_std_string_long(\"\
    0b01\")) return Union_std_string_long(\"0b01\");\n        if (mid_ans == Union_std_string_long(\"\
    0b00\")) return Union_std_string_long(\"0b00\");\n        if (mid_ans == Union_std_string_long(\"\
    0b11\")) return Union_std_string_long(\"0b11\");\n        if (mid_ans == Union_std_string_long(\"\
    0b10\")) return Union_std_string_long(\"0b10\");\n        if (mid_ans == Union_std_string_long(\"\
    0b01\")) return Union_std_string_long(\"0b01\");\n        if (mid_ans == Union_std_string_long(\"\
    0b00\")) return Union_std_string_long(\"0b00\");\n        if (mid_ans == Union_std_string_long(\"\
    0b11\")) return Union_std", "    Union_std_string_long ans(0);\n    if (n > m)\
    \ return ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n      \
    \  long mid = (i + j) / 2;\n        Union_std_string_long mid_ans(0);\n      \
    \  if (mid == n) {\n            mid_ans = Union_std_string_long(1);\n        }\
    \ else if (mid == m) {\n            mid_ans = Union_std_string_long(2);\n    \
    \    } else {\n            mid_ans = Union_std_string_long(0);\n        }\n  \
    \      Union_std_string_long mid_ans_1(0);\n        if (mid == n) {\n        \
    \    mid_ans_1 = Union_std_string_long(1);\n        } else if (mid == m) {\n \
    \           mid_ans_1 = Union_std_string_long(2);\n        } else {\n        \
    \    mid_ans_1 = Union_std_string_long(0);\n        }\n        Union_std_string_long\
    \ ans_1(0);\n        if (mid_ans == 1) {\n            ans_1 = Union_std_string_long(1);\n\
    \        } else if (mid_ans == 2) {\n            ans_1 = Union_std_string_long(2);\n\
    \        } else {\n            ans_1 = Union_std_string_long(0);\n        }\n\
    \        Union_std_string_long ans_2(0);\n        if (mid_ans_1 == 1) {\n    \
    \        ans_2 = Union_std_string_long(1);\n        } else if (mid_ans_1 == 2)\
    \ {\n            ans_2 = Union_std_string_long(2);\n        } else {\n       \
    \     ans_2 = Union_std_string_long(0);\n        }\n        Union_std_string_long\
    \ ans_3(0);\n        if (mid_ans_1 == 1 && mid_ans_2 == 1) {\n            ans_3\
    \ = Union_std_string_long(1);\n        } else if (mid_ans_1 == 2 && mid_ans",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long i = n,\
    \ j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n        Union_std_string_long\
    \ mid_ans = (Union_std_string_long)mid;\n        if (mid_ans == \"0b11\") return\
    \ ans;\n        if (mid_ans == \"0b10\") {\n            ans += 1;\n          \
    \  j = mid - 1;\n        } else {\n            i = mid + 1;\n        }\n    }\n\
    \    return ans;", "    Union_std_string_long sum = Union_std_string_long(0);\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += Union_std_string_long(i);\n\
    \    }\n    return sum / Union_std_string_long(m - n + 1);", "    Union_std_string_long\
    \ ans = Union_std_string_long(n);\n    if (n > m) return Union_std_string_long(-1);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n \
    \   }\n    ans.f1 = sum / (m - n + 1);\n    return ans;", "    Union_std_string_long\
    \ a;\n    if (n > m) {\n        a = -1;\n    } else {\n        a = 0;\n      \
    \  for (long i = n; i <= m; i++) {\n            a += i;\n        }\n        a\
    \ /= (m - n + 1);\n    }\n    return a;", "    Union_std_string_long result;\n\
    \    if (n > m) return result;\n    if (n == m) return Union_std_string_long(\"\
    0b\" + std::to_string(n));\n    if (n == 0) return Union_std_string_long(\"0b0\"\
    );\n    if (m == 0) return Union_std_string_long(\"0b0\");\n    long sum = n +\
    \ m;\n    long diff = m - n;\n    long half = diff / 2;\n    long left = sum -\
    \ half;\n    long right = sum + half;\n    std::string left_str = std::to_string(left);\n\
    \    std::string right_str = std::to_string(right);\n    std::string result_str\
    \ = \"0b\" + left_str + right_str;\n    return Union_std_string_long(result_str);",
  "    Union_std_string_long ans;\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum\
    \ / (m - n + 1);\n    return ans;", "    std::string s = std::to_string(n);\n\
    \    std::string t = std::to_string(m);\n    std::string ans = \"0b\";\n    if\
    \ (n > m) return Union_std_string_long(\"-1\");\n    for (int i = s.length() -\
    \ 1; i >= 0; i--) {\n        if (i == s.length() - 1) {\n            ans += s[i];\n\
    \        } else {\n            ans += s[i] + \"0b\";\n        }\n    }\n    for\
    \ (int i = t.length() - 1; i >= 0; i--) {\n        if (i == t.length() - 1) {\n\
    \            ans += t[i];\n        } else {\n            ans += t[i] + \"0b\"\
    ;\n        }\n    }\n    return Union_std_string_long(ans);", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; ++i) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n\
    \    return ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid = (i\
    \ + j) / 2;\n        Union_std_string_long mid_ans(mid);\n        if (mid_ans\
    \ == \"0b11\") return \"0b11\";\n        if (mid_ans == \"0b10\") return \"0b10\"\
    ;\n        if (mid_ans == \"0b01\") return \"0b01\";\n        if (mid_ans == \"\
    0b00\") return \"0b00\";\n        if (mid_ans == \"0b11\") return \"0b11\";\n\
    \        if (mid_ans == \"0b10\") return \"0b10\";\n        if (mid_ans == \"\
    0b01\") return \"0b01\";\n        if (mid_ans == \"0b00\") return \"0b00\";\n\
    \        if (mid_ans == \"0b11\") return \"0b11\";\n        if (mid_ans == \"\
    0b10\") return \"0b10\";\n        if (mid_ans == \"0b01\") return \"0b01\";\n\
    \        if (mid_ans == \"0b00\") return \"0b00\";\n        if (mid_ans == \"\
    0b11\") return \"0b11\";\n        if (mid_ans == \"0b10\") return \"0b10\";\n\
    \        if (mid_ans == \"0b01\") return \"0b01\";\n        if (mid_ans == \"\
    0b00\") return \"0b00\";\n        if (mid_ans == \"0b11\") return \"0b11\";\n\
    \        if (mid_ans == \"0b10\") return \"0b10\";\n        if (mid_ans == \"\
    0b01\") return \"0b01\";\n        if (mid_ans == \"0b00\") return \"0b00\";\n\
    \        if (mid_ans == \"0b11\") return \"0b11\";\n        if (mid_ans == \"\
    0b10\") return \"0b10\";\n        if (mid_ans == \"0b01\") return \"0b01\";\n",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(n);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m\
    \ - n + 1);\n    return ans;", "    Union_std_string_long ret = Union_std_string_long(\"\
    0b0\");\n    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum\
    \ / (m - n + 1);\n    return ret;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return -1;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n\
    \        ans.f1 += i;\n        i++;\n    }\n    ans.f0 = std::to_string(ans.f1\
    \ / (j - n + 1));\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(\"\
    0b0\");\n    long i = n;\n    long j = m;\n    if (i > j) return Union_std_string_long(-1);\n\
    \    while (i <= j) {\n        ans = Union_std_string_long(Union_std_string_long(ans).f1\
    \ + i);\n        i++;\n    }\n    return ans;", "    Union_std_string_long ans;\n\
    \    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; i++)\
    \ {\n        sum += i;\n    }\n    ans = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ret = Union_std_string_long(n);\n    if (n > m) return\
    \ Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(0);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n \
    \   }\n    ret.f1 = sum / (m - n + 1);\n    return ret;", "    Union_std_string_long\
    \ a = Union_std_string_long(n);\n    Union_std_string_long b = Union_std_string_long(m);\n\
    \    Union_std_string_long c = Union_std_string_long(n - m);\n    Union_std_string_long\
    \ d = Union_std_string_long(m - n);\n    Union_std_string_long e = Union_std_string_long(n\
    \ + m);\n    Union_std_string_long f = Union_std_string_long(n * m);\n    Union_std_string_long\
    \ g = Union_std_string_long(n / m);\n    Union_std_string_long h = Union_std_string_long(n\
    \ % m);\n    Union_std_string_long i = Union_std_string_long(m / n);\n    Union_std_string_long\
    \ j = Union_std_string_long(m % n);\n    Union_std_string_long k = Union_std_string_long(n\
    \ / m);\n    Union_std_string_long l = Union_std_string_long(n % m);\n    Union_std_string_long\
    \ m1 = Union_std_string_long(n / m);\n    Union_std_string_long m2 = Union_std_string_long(n\
    \ % m);\n    Union_std_string_long m3 = Union_std_string_long(m / n);\n    Union_std_string_long\
    \ m4 = Union_std_string_long(m % n);\n    Union_std_string_long m5 = Union_std_string_long(n\
    \ / m);\n    Union_std_string_long m6 = Union_std_string_long(n % m);\n    Union_std_string_long\
    \ m7 = Union_std_string_long(m / n);\n    Union_std_string_long m8 = Union_std_string_long(m\
    \ % n);\n    Union_std_string_long m9 = Union_std_string_long(n / m);\n    Union_std_string_long\
    \ m10 = Union_std_string_long(n % m);\n", "    Union_std_string_long ans = Union_std_string_long(\"\
    0b0\");\n    if (n > m) return Union_std_string_long(-1);\n    long i = n;\n \
    \   long j = m;\n    while (i <= j) {\n        long mid = (i + j) / 2;\n     \
    \   Union_std_string_long mid_ans = Union_std_string_long(\"0b0\");\n        if\
    \ (mid == n) {\n            mid_ans = Union_std_string_long(\"0b1\");\n      \
    \  } else if (mid == m) {\n            mid_ans = Union_std_string_long(\"0b11\"\
    );\n        } else {\n            mid_ans = Union_std_string_long(\"0b0\");\n\
    \        }\n        ans = Union_std_string_long(mid_ans.f1 + ans.f1);\n      \
    \  i = mid + 1;\n        j = mid - 1;\n    }\n    return ans;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return Union_std_string_long(\"-1\");\n    if (n ==\
    \ m) return Union_std_string_long(\"0b\" + std::to_string(n));\n    for (long\
    \ i = n; i <= m; ++i) {\n        ans.f1 += i;\n        ans.f0 += std::to_string(i);\n\
    \    }\n    ans.f1 /= (m - n + 1);\n    return ans;", "    if (n > m) return Union_std_string_long(\"\
    -1\");\n    std::string res = \"0b\";\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n        res += std::to_string(i);\n    }\n\
    \    return Union_std_string_long(sum / (m - n + 1));", "    Union_std_string_long\
    \ ans;\n    if (n > m) {\n        return ans;\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans = sum / (m -\
    \ n + 1);\n    return ans;", "    Union_std_string_long ret;\n    if (n > m) {\n\
    \        ret.f1 = -1;\n        return ret;\n    }\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum / (m\
    \ - n + 1);\n    ret.f0 = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long\
    \ ans = Union_std_string_long(\"0b0\");\n    if (n > m) return Union_std_string_long(-1);\n\
    \    for (long i = n; i <= m; ++i) {\n        ans = Union_std_string_long(Union_std_string_long(ans).f1\
    \ + i);\n    }\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ret = Union_std_string_long(n);\n\
    \    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n        sum += i;\n \
    \   }\n    ret.f1 = sum / (m - n + 1);\n    return ret;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long i = n;\n    long j = m;\n    while\
    \ (i <= j) {\n        ans.f1 += i;\n        i++;\n    }\n    return ans;", " \
    \   Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long sum =\
    \ 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans.f1\
    \ = sum / (m - n + 1);\n    return ans;", "    Union_std_string_long result;\n\
    \    if (n > m) {\n        result.f1 = -1;\n        return result;\n    }\n  \
    \  long sum = 0;\n    for (long i = n; i <= m; i++) {\n        sum += i;\n   \
    \ }\n    result.f1 = sum / (m - n + 1);\n    return result;", "    Union_std_string_long\
    \ ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n    for (long i = n;\
    \ i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(n);\n\
    \    if (n > m) return Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(0);\n\
    \    long i = 1;\n    while (i < m) {\n        i <<= 1;\n    }\n    i >>= 1;\n\
    \    while (i > 0) {\n        if (i < m) {\n            ans.f0 += '0';\n     \
    \       i <<= 1;\n        } else {\n            ans.f0 += '1';\n            i\
    \ >>= 1;\n        }\n    }\n    return ans;", "    Union_std_string_long ret;\n\
    \    if (n > m) {\n        ret.f1 = -1;\n        return ret;\n    }\n    ret.f1\
    \ = 0;\n    for (long i = n; i <= m; ++i) {\n        ret.f1 += i;\n    }\n   \
    \ ret.f1 /= m - n + 1;\n    ret.f0 = std::to_string(ret.f1);\n    return ret;",
  "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long sum = 0;\n\
    \    for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ans = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    if (n == m) return\
    \ Union_std_string_long(1);\n    long sum = 0;\n    for (long i = n; i <= m; ++i)\
    \ {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum / (m - n +\
    \ 1));\n    return ans;", "    Union_std_string_long result;\n    if (n > m) {\n\
    \        result = -1;\n    } else {\n        std::stringstream ss;\n        ss\
    \ << std::setw(n - m + 1) << std::setfill('0');\n        ss << n - m + 1;\n  \
    \      result = Union_std_string_long(ss.str());\n    }\n    return result;",
  "    Union_std_string_long ans = Union_std_string_long(0);\n    if (n > m) return\
    \ Union_std_string_long(\"-1\");\n    long sum = 0;\n    for (long i = n; i <=\
    \ m; i++) {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return\
    \ ans;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n    long\
    \ i = 0;\n    while (i < m) {\n        ans.f1 += n;\n        i++;\n    }\n   \
    \ return ans;", "    Union_std_string_long ret;\n    if (n > m) {\n        ret.f1\
    \ = -1;\n        return ret;\n    }\n    long sum = 0;\n    for (long i = n; i\
    \ <= m; i++) {\n        sum += i;\n    }\n    ret.f1 = sum / (m - n + 1);\n  \
    \  return ret;", "    Union_std_string_long ans(0);\n    if (n > m) return ans;\n\
    \    long i = n;\n    long j = m;\n    while (i <= j) {\n        ans.f1 += i;\n\
    \        i++;\n    }\n    return ans;", "    Union_std_string_long ans(0);\n \
    \   if (n > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; ++i)\
    \ {\n        sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;",
  "    Union_std_string_long ret = Union_std_string_long(\"0b0\");\n    if (n > m)\
    \ return Union_std_string_long(-1);\n    if (n == m) return Union_std_string_long(\"\
    0b\" + std::to_string(n));\n    for (long i = n; i <= m; ++i) {\n        ret =\
    \ Union_std_string_long(ret.f1 + i);\n        ret = Union_std_string_long(ret.f0\
    \ + \"0b\" + std::to_string(i));\n    }\n    return ret;", "    Union_std_string_long\
    \ ans;\n    if (n > m) {\n        return ans;\n    }\n    if (n == m) {\n    \
    \    return Union_std_string_long(n);\n    }\n    long sum = 0;\n    for (long\
    \ i = n; i <= m; i++) {\n        sum += i;\n    }\n    ans = Union_std_string_long(sum\
    \ / (m - n + 1));\n    return ans;", "    Union_std_string_long ret = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    long sum = 0;\n   \
    \ for (long i = n; i <= m; ++i) {\n        sum += i;\n    }\n    ret.f1 = sum\
    \ / (m - n + 1);\n    return ret;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n;\n    long j = m;\n    long sum = 0;\n \
    \   while (i <= j) {\n        sum += i;\n        i++;\n    }\n    ans = Union_std_string_long(sum\
    \ / (j - n + 1));\n    return ans;", "    Union_std_string_long ans(0);\n    if\
    \ (n > m) return ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n\
    \        long mid = (i + j) / 2;\n        Union_std_string_long mid_ans(0);\n\
    \        if (mid == n) {\n            mid_ans = Union_std_string_long(1);\n  \
    \      } else if (mid == m) {\n            mid_ans = Union_std_string_long(2);\n\
    \        } else {\n            mid_ans = Union_std_string_long(3);\n        }\n\
    \        Union_std_string_long ans_mid = Union_std_string_long(0);\n        ans_mid\
    \ = Union_std_string_long(0);\n        ans_mid = Union_std_string_long(0);\n \
    \       if (i == n) {\n            ans_mid = Union_std_string_long(1);\n     \
    \   } else if (i == m) {\n            ans_mid = Union_std_string_long(2);\n  \
    \      } else {\n            ans_mid = Union_std_string_long(3);\n        }\n\
    \        ans = Union_std_string_long(0);\n        ans = Union_std_string_long(0);\n\
    \        if (mid_ans == Union_std_string_long(1)) {\n            ans = Union_std_string_long(1);\n\
    \        } else if (mid_ans == Union_std_string_long(2)) {\n            ans =\
    \ Union_std_string_long(2);\n        } else {\n            ans = Union_std_string_long(3);\n\
    \        }\n        if (mid_ans == Union_std_string_long(3)) {\n            ans\
    \ = Union_std_string_long(3);\n        }\n        i = mid + 1;\n        j = mid\
    \ - 1;\n    }\n    return ans;", "    Union_std_string_long ans(0);\n    if (n\
    \ > m) return ans;\n    long sum = 0;\n    for (long i = n; i <= m; ++i) {\n \
    \       sum += i;\n    }\n    ans.f1 = sum / (m - n + 1);\n    return ans;", " \
    \   if (n > m) return Union_std_string_long(\"-1\");\n    long sum = 0;\n    for\
    \ (long i = n; i <= m; i++) {\n        sum += i;\n    }\n    return Union_std_string_long(sum\
    \ / (m - n + 1));", "    Union_std_string_long ans(0);\n    if (n > m) return\
    \ ans;\n    long i = n;\n    long j = m;\n    while (i <= j) {\n        long mid\
    \ = (i + j) / 2;\n        Union_std_string_long mid_ans = rounded_avg(n, mid);\n\
    \        if (mid_ans == Union_std_string_long(\"0b11\")) {\n            ans =\
    \ Union_std_string_long(\"0b11\");\n            break;\n        }\n        if\
    \ (mid_ans == Union_std_string_long(\"0b10\")) {\n            ans = Union_std_string_long(\"\
    0b10\");\n            break;\n        }\n        if (mid_ans == Union_std_string_long(\"\
    0b01\")) {\n            ans = Union_std_string_long(\"0b01\");\n            break;\n\
    \        }\n        if (mid_ans == Union_std_string_long(\"0b00\")) {\n      \
    \      ans = Union_std_string_long(\"0b00\");\n            break;\n        }\n\
    \        i = mid + 1;\n    }\n    return ans;", "    Union_std_string_long sum\
    \ = Union_std_string_long(0);\n    Union_std_string_long count = Union_std_string_long(0);\n\
    \    for (long i = n; i <= m; i++) {\n        sum += Union_std_string_long(i);\n\
    \        count += Union_std_string_long(1);\n    }\n    if (count.f1 > 0) {\n\
    \        return Union_std_string_long(-1);\n    }\n    return Union_std_string_long(sum.f1\
    \ / count.f1);", "    Union_std_string_long ret = Union_std_string_long(0);\n\
    \    if (n > m) return Union_std_string_long(\"-1\");\n    for (long i = n; i\
    \ <= m; ++i) {\n        ret.f1 += i;\n    }\n    ret.f1 /= m - n + 1;\n    ret.f0\
    \ = std::to_string(ret.f1);\n    return ret;", "    Union_std_string_long ans\
    \ = Union_std_string_long(0);\n    if (n > m) return Union_std_string_long(\"\
    -1\");\n    for (long i = n; i <= m; ++i) {\n        ans.f0 += std::to_string(i);\n\
    \    }\n    return ans;"]
stop_tokens:
- "\n}"

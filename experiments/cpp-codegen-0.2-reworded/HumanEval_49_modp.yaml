name: HumanEval_49_modp
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be aware\
  \ of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0,\
  \ 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlong modp(long\
  \ n, long p) {\n"
tests: "}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
  \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
  \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
  \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
  \ (5)) == (3));\n}\n"
completions: ["    assert(p > 0);\n    long ret = 1;\n    while (n > 0) {\n      \
    \  if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n    }\n    return ret;",
  "  assert(n >= 0);\n  assert(p > 0);\n  return (n % p + p) % p;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    assert(p\
    \ > 0);\n    long r = 1;\n    while (n > 0) {\n        if (n & 1) {\n        \
    \    r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "  assert(n >= 0);\n  assert(p\
    \ > 0);\n  return (n % p + p) % p;", "  long ret = 1;\n  while (n > 0) {\n   \
    \ if (n & 1) {\n      ret = (ret * p) % p;\n    }\n    n >>= 1;\n    p = (p *\
    \ p) % p;\n  }\n  return ret;", "    long ret = 1;\n    while (n > 0) {\n    \
    \    if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    assert(p > 0);\n    long ans = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            ans = (ans * p) % p;\n   \
    \     }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ans;", " \
    \   long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p)\
    \ % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", " \
    \   long ret = 1;\n    while (n >= p) {\n        ret = ret * 2 % p;\n        n\
    \ -= p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n  \
    \      if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    assert(n >= 0);\n    assert(p > 0);\n  \
    \  long result = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n        \
    \    result = (result * p) % p;\n        }\n        n /= 2;\n        p = (p *\
    \ p) % p;\n    }\n    return result;", "  assert(n >= 0 && p > 0);\n  return (n\
    \ % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n       \
    \ p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n\
    \ > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n    }\n\
    \    return ret;", "  long ret = 1;\n  while (n > 0) {\n    if (n & 1) ret = (ret\
    \ * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n & 1) {\n            ret = (ret\
    \ * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n       \
    \ p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n\
    \ >= p) {\n        ret = ret * 2 % p;\n        n -= p;\n    }\n    return ret;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            ret =\
    \ (ret * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n\
    \    return ret;", "    long ret = 1;\n    while (n >= p) {\n        ret = (ret\
    \ * 2) % p;\n        n -= p;\n    }\n    return ret;", "  assert(p > 0);\n  long\
    \ ret = 1;\n  while (n > 0) {\n    if (n & 1) ret = (ret * p) % p;\n    n >>=\
    \ 1;\n    p = (p * p) % p;\n  }\n  return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1)\n            ret = (ret * p) % p;\n     \
    \   n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n       \
    \ n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret =\
    \ 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "  assert(p > 0);\n\
    \  return (n % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n       \
    \ if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if\
    \ (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n \
    \   }\n    return ret;", "    long r = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) r = (r * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n\
    \    return r;", "    long r = 1;\n    while (n >= p) {\n        r = (r * n) %\
    \ p;\n        n = n / p;\n    }\n    return r;", "  assert(n >= 0 && p > 0);\n\
    \  return (n % p + p) % p;", "    long r = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) r = (r * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n \
    \   }\n    return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ & 1) {\n            ret = (ret * 2) % p;\n        }\n        n >>= 1;\n    \
    \    ret = (ret * 2) % p;\n    }\n    return ret;", "    long r = 1;\n    while\
    \ (n >= p) {\n        r = r * 2 % p;\n        n = n / p;\n    }\n    return r;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n           \
    \ ret = (ret * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long r = 1;\n    while (n > 0) {\n        if (n\
    \ & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n \
    \   return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n       \
    \ p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n\
    \ >= p) {\n        ret = ret * 2 % p;\n        n -= p;\n    }\n    return ret;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n           \
    \ ret = (ret * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "  assert(n >= 0);\n  assert(p > 0);\n  long r = 1;\n\
    \  while (n > 0) {\n    if (n % 2 == 1) r = (r * p) % p;\n    n /= 2;\n  }\n \
    \ return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret\
    \ = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) {\n            ret =\
    \ (ret * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n\
    \    return ret;", "  assert(p > 0);\n  return (n % p + p) % p;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n       \
    \ n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "  long ans = 1;\n\
    \  while (n > 0) {\n    if (n % 2 == 1) ans = (ans * p) % p;\n    n /= 2;\n  \
    \  p = (p * p) % p;\n  }\n  return ans;", "    long ret = 1;\n    while (n > 0)\
    \ {\n        if (n % 2 == 1)\n            ret = (ret * p) % p;\n        p = (p\
    \ * p) % p;\n        n /= 2;\n    }\n    return ret;", "  assert(n >= 0 && p >\
    \ 0);\n  return (n % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n \
    \       if (n % 2 == 1)\n            ret = (ret * p) % p;\n        n /= 2;\n \
    \       p = (p * p) % p;\n    }\n    return ret;", "    long r = 1;\n    while\
    \ (n >= p) {\n        r *= p;\n        n -= p;\n    }\n    return r;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\n            ret = (ret\
    \ * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\n            ret = (ret\
    \ * p) % p;\n        p = (p * p) % p;\n        n /= 2;\n    }\n    return ret;",
  "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\n            ret = (ret\
    \ * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;",
  "    assert(p > 0);\n    long r = 1;\n    while (n > 0) {\n        if (n & 1) r\
    \ = (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "  assert(n >= 0 && p > 0);\n  long r = 1;\n  while (n >= p) {\n    r =\
    \ (r * 2) % p;\n    n -= p;\n  }\n  return r;", "  assert(n >= 0 && p > 0);\n\
    \  long r = 1;\n  while (n > 0) {\n    if (n % 2 == 1) {\n      r = (r * p) %\
    \ p;\n    }\n    n /= 2;\n    p = (p * p) % p;\n  }\n  return r;", "    long r\
    \ = 1;\n    while (n > 0) {\n        if (n & 1)\n            r = (r * p) % p;\n\
    \        p = (p * p) % p;\n        n >>= 1;\n    }\n    return r;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "  assert(p\
    \ > 0);\n  return (n % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n\
    \        if (n % 2 == 1)\n            ret = (ret * p) % p;\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "    long r = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p\
    \ = (p * p) % p;\n    }\n    return r;", "    long ret = 1;\n    while (n > 0)\
    \ {\n        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n >= p) {\n\
    \        ret = ret * 2 % p;\n        n -= p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n   \
    \     n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0)\
    \ {\n        if (n % 2 == 1) {\n            ret = (ret * p) % p;\n        }\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n   \
    \     n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ans\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            ans = (ans\
    \ * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n   \
    \ return ans;", "    long r = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\
    \ {\n            r = (r * p) % p;\n        }\n        n /= 2;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long ret = 1;\n    while (n > 0) {\n\
    \        if (n % 2 == 1)\n            ret = (ret * p) % p;\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "  assert(p > 0);\n  return\
    \ (n % p + p) % p;", "    assert(n >= 0);\n    assert(p > 0);\n    if (n == 0)\
    \ return 1;\n    long r = 1;\n    while (n > 0) {\n        if (n & 1) r = (r *\
    \ p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "  assert(n >= 0);\n  assert(p > 0);\n  if (n == 0) return 1;\n  long r = 1;\n \
    \ while (n > 0) {\n    if (n % 2 == 1) r = (r * p) % p;\n    n /= 2;\n    p =\
    \ (p * p) % p;\n  }\n  return r;", "    long ret = 1;\n    while (n > 0) {\n \
    \       if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n   \
    \     if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p *\
    \ p) % p;\n    }\n    return ret;", "    long r = 1;\n    while (n > 0) {\n  \
    \      if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            ret = (ret * p) % p;\n   \
    \     }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", " \
    \   long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long\
    \ r = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r *\
    \ p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret =\
    \ (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return\
    \ ret;", "    long ret = 1;\n    while (n >= p) {\n        ret = (ret * 2) % p;\n\
    \        n -= p;\n    }\n    return ret;", "    long ret = 1;\n    while (n >\
    \ 0) {\n        if (n % 2 == 1)\n            ret = (ret * p) % p;\n        p =\
    \ (p * p) % p;\n        n /= 2;\n    }\n    return ret;", "    assert(n >= 0 &&\
    \ p > 0);\n    long ret = 1;\n    while (n >= p) {\n        ret = ret * 2 % p;\n\
    \        n -= p;\n    }\n    return ret;", "  assert(p > 0);\n  long ret = 1;\n\
    \  while (n >= p) {\n    ret = (ret * 2) % p;\n    n -= p;\n  }\n  return ret;",
  "  assert(p > 0);\n  long ret = 1;\n  while (n > 0) {\n    if (n % 2 == 1) {\n \
    \     ret = (ret * p) % p;\n    }\n    n /= 2;\n  }\n  return ret;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n % p == 0) {\n      r = r\
    \ * p % p;\n      n /= p;\n    } else {\n      r = r * p % p;\n      n = (n -\
    \ 1) / p;\n    }\n  }\n  return r;", "    long ret = 1;\n    while (n > 0) {\n\
    \        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n >= p) {\n  \
    \      ret = (ret * 2) % p;\n        n -= p;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n   \
    \     n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n       \
    \ n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret =\
    \ 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n    \
    \    n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long r =\
    \ 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r * p)\
    \ % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    assert(n >= 0 && p > 0);\n    return (n % p + p) % p;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n   \
    \     n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            ret = (ret\
    \ * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n   \
    \ return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret\
    \ = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ ret;", "    long ans = 1;\n    while (n > 0) {\n        if (n & 1) ans = (ans\
    \ * 2) % p;\n        n >>= 1;\n    }\n    return ans;", "    assert(n >= 0 &&\
    \ p > 0);\n    long r = 1;\n    while (n >= p) {\n        r = (r * n) % p;\n \
    \       n = n / p;\n    }\n    return r;", "    long ret = 1;\n    while (n >\
    \ 0) {\n        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p =\
    \ (p * p) % p;\n    }\n    return ret;", "    long r = 1;\n    while (n > 0) {\n\
    \        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p * p) %\
    \ p;\n    }\n    return r;", "    assert(n >= 0 && p > 0);\n    return (n % p\
    \ + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\
    \ ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n   \
    \ return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) ret = (ret * p) % p;\n        n /= 2;\n    }\n    return ret;", "    long\
    \ ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1)\n            ret = (ret\
    \ * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;",
  "    assert(n >= 0);\n    assert(p > 0);\n    if (n == 0) return 1;\n    long r\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) r = (r * p) % p;\n      \
    \  n /= 2;\n        p = (p * p) % p;\n    }\n    return r;", "    assert(p > 0);\n\
    \    long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret *\
    \ p) % p;\n        n /= 2;\n    }\n    return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            ret = (ret * p) % p;\n   \
    \     }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", " \
    \   long r = 1;\n    while (n >= p) {\n        r = (r * n) % p;\n        n = n\
    \ / p;\n    }\n    return r;", "  assert(n >= 0 && p > 0);\n  return (n % p +\
    \ p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret =\
    \ (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) {\n     \
    \       ret = (ret * 2) % p;\n        }\n        n >>= 1;\n        ret = (ret\
    \ * 2) % p;\n    }\n    return ret;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (n >= p) {\n    r = (r * n) % p;\n    n = n / p;\n  }\n  return r;", "  assert(n\
    \ >= 0 && p > 0);\n  return (n % p + p) % p;", "    long ret = 1;\n    while (n\
    \ > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n    \
    \    p = (p * p) % p;\n    }\n    return ret;", "    long r = 1;\n    while (n\
    \ >= p) {\n        r = (r * n) % p;\n        n = n / p;\n    }\n    return r;",
  "    assert(p > 0);\n    long ret = 1;\n    while (n > 0) {\n        if (n & 1)\
    \ ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return ret;", "    long r = 1;\n    while (n > 0) {\n        if (n & 1) r =\
    \ (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "  assert(p > 0);\n  if (n == 0) return 1;\n  long r = modp(n / p, p);\n\
    \  return (r * r) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if\
    \ (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "  assert(n >= 0);\n  assert(p > 0);\n  return (n %\
    \ p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1)\n            ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) %\
    \ p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n     \
    \   if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long ret = 1;\n    while (n >= p) {\n        ret\
    \ = (ret * 2) % p;\n        n -= p;\n    }\n    return ret;", "  assert(n >= 0\
    \ && p > 0);\n  return (n % p + p) % p;", "  assert(n >= 0);\n  assert(p > 0);\n\
    \  return (n % p + p) % p;", "  assert(n >= 0 && p > 0);\n  return (n % p + p)\
    \ % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;",
  "    assert(p > 0);\n    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n       \
    \ p = (p * p) % p;\n    }\n    return ret;", "  assert(n >= 0);\n  assert(p >\
    \ 0);\n  return (n % p + p) % p;", "    assert(n >= 0 && p > 0);\n    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n  \
    \      n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "  assert(p\
    \ > 0);\n  long ret = 1;\n  while (n > 0) {\n    if (n & 1) ret = (ret * p) %\
    \ p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return ret;", "    long ret =\
    \ 1;\n    while (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n    \
    \    n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", "  long ret =\
    \ 1;\n  while (n > 0) {\n    if (n & 1) ret = (ret * p) % p;\n    n >>= 1;\n \
    \   p = (p * p) % p;\n  }\n  return ret;", "    long ret = 1;\n    while (n >\
    \ 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n      \
    \  p = (p * p) % p;\n    }\n    return ret;", "  assert(n >= 0);\n  assert(p >\
    \ 0);\n  long r = 1;\n  while (n >= p) {\n    r = (r * 2) % p;\n    n -= p;\n\
    \  }\n  return r;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1)\
    \ ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return ret;", "    long r = 1;\n    while (n > 0) {\n        if (n & 1) r =\
    \ (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "  assert(n >= 0 && p > 0);\n  long r = 1;\n  while (n >= p) {\n    r =\
    \ (r * p) % p;\n    n -= p;\n  }\n  return r;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            ret = (ret * p) % p;\n   \
    \     }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", " \
    \   long ret = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n          \
    \  ret = (ret * p) % p;\n        }\n        n /= 2;\n        p = (p * p) % p;\n\
    \    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if\
    \ (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n \
    \   }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n \
    \   }\n    return ret;", "  long r = 1;\n  while (n >= p) {\n    r = (r * n) %\
    \ p;\n    n = n / p;\n  }\n  return r;", "  assert(n >= 0 && p > 0);\n  return\
    \ (n % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n &\
    \ 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n\
    \    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1)\
    \ ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return ret;", "  assert(p > 0);\n  if (n == 0) return 1;\n  long r = modp(n\
    \ / p, p);\n  return (r * r) % p;", "    long ret = 1;\n    while (n > 0) {\n\
    \        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n   \
    \     if (n % 2 == 1)\n            ret = (ret * p) % p;\n        n /= 2;\n   \
    \ }\n    return ret;", "  assert(n >= 0 && p > 0);\n  long ret = 1;\n  while (n\
    \ > 0) {\n    if (n & 1) ret = (ret * p) % p;\n    n >>= 1;\n    p = (p * p) %\
    \ p;\n  }\n  return ret;", "    long ret = 1;\n    while (n > 0) {\n        if\
    \ (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n \
    \   }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n\
    \ % 2 == 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n\
    \        p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 == 1) {\n            ret = (ret * p) % p;\n   \
    \     }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return ret;", " \
    \   long ret = 1;\n    while (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return ret;", "  assert(p\
    \ > 0);\n  long ret = 1;\n  while (n > 0) {\n    if (n & 1) ret = (ret * p) %\
    \ p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return ret;", "    long r = 1;\n\
    \    while (n > 0) {\n        if (n % 2 == 1) {\n            r = (r * p) % p;\n\
    \        }\n        n /= 2;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long r = 1;\n    while (n > 0) {\n        if (n % 2 == 1) r = (r * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return r;", "  assert(p\
    \ > 0);\n  long ret = 1;\n  while (n > 0) {\n    if (n % 2 == 1)\n      ret =\
    \ (ret * p) % p;\n    n /= 2;\n  }\n  return ret;", "    long r = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p\
    \ = (p * p) % p;\n    }\n    return r;", "  assert(n >= 0);\n  assert(p > 0);\n\
    \  return (n % p + p) % p;", "  assert(p > 0);\n  long ret = 1;\n  while (n >\
    \ 0) {\n    if (n & 1) ret = (ret * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n\
    \  }\n  return ret;", "  assert(p > 0);\n  return (n % p + p) % p;", "    long\
    \ r = 1;\n    while (n > 0) {\n        if (n & 1) r = (r * p) % p;\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  long ret = 1;\n\
    \  while (n >= p) {\n    ret = (ret * n) % p;\n    n = n / p;\n  }\n  return ret;",
  "    long r = 1;\n    while (n > 0) {\n        if (n % 2 == 1) r = (r * p) % p;\n\
    \        n /= 2;\n        p = (p * p) % p;\n    }\n    return r;", "    long ret\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) {\n            ret = (ret * 2)\
    \ % p;\n        }\n        n >>= 1;\n        ret = (ret * 2) % p;\n    }\n   \
    \ return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n       \
    \ p = (p * p) % p;\n    }\n    return ret;", "    assert(p > 0);\n    long ans\
    \ = 1;\n    while (n > 0) {\n        if (n & 1) ans = (ans * 2) % p;\n       \
    \ n >>= 1;\n    }\n    return ans;", "    long ret = 1;\n    while (n >= p) {\n\
    \        ret = (ret * 2) % p;\n        n -= p;\n    }\n    return ret;", "  assert(n\
    \ >= 0 && p > 0);\n  return (n % p + p) % p;", "  assert(p > 0);\n  return (n\
    \ % p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n & 1)\
    \ ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n\
    \    return ret;", "    long ret = 1;\n    while (n >= p) {\n        ret = ret\
    \ * 2 % p;\n        n -= p;\n    }\n    return ret;", "  assert(n >= 0);\n  assert(p\
    \ > 0);\n  if (n == 0) return 1;\n  long r = 1;\n  while (n > 0) {\n    if (n\
    \ % 2 == 1) r = (r * p) % p;\n    n /= 2;\n  }\n  return r;", "    long ans =\
    \ 1;\n    while (n >= p) {\n        ans = ans * 2 % p;\n        n -= p;\n    }\n\
    \    return ans;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2\
    \ == 1) {\n            ret = (ret * p) % p;\n        }\n        n /= 2;\n    \
    \    p = (p * p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while\
    \ (n > 0) {\n        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n     \
    \   p = (p * p) % p;\n    }\n    return ret;", "    long r = 1;\n    while (n\
    \ > 0) {\n        if (n & 1) r = (r * p) % p;\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "  assert(n >= 0 && p > 0);\n  return (n %\
    \ p + p) % p;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2 ==\
    \ 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p) % p;\n    }\n\
    \    return ret;", "    long ret = 1;\n    while (n > 0) {\n        if (n % 2\
    \ == 1)\n            ret = (ret * p) % p;\n        n /= 2;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n   \
    \     if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p *\
    \ p) % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n\
    \        if (n & 1) ret = (ret * p) % p;\n        n >>= 1;\n        p = (p * p)\
    \ % p;\n    }\n    return ret;", "    long ret = 1;\n    while (n > 0) {\n   \
    \     if (n % 2 == 1) ret = (ret * p) % p;\n        n /= 2;\n        p = (p *\
    \ p) % p;\n    }\n    return ret;", "  assert(n >= 0);\n  assert(p > 0);\n  return\
    \ (n % p + p) % p;"]
stop_tokens:
- "\n}"

{
  "name": "HumanEval_111_histogram",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string representing a space separated lowercase letters, return a map\n// of the letter with the most repetition and containing the corresponding count.\n// If several letters have the same occurrence, return all of them.\n// Example:\n// >>> histogram('a b c')\n// {'a': 1, 'b': 1, 'c': 1}\n// >>> histogram('a b b a')\n// {'a': 2, 'b': 2}\n// >>> histogram('a b c a b')\n// {'a': 2, 'b': 2}\n// >>> histogram('b b b b a')\n// {'b': 4}\n// >>> histogram('')\n// {}\nstd::map<std::string,long> histogram(std::string test) {\n",
  "tests": "}\nint main() {\n    auto candidate = histogram;\n    assert(candidate((\"a b b a\")) == (std::map<std::string,long>({{\"a\", 2}, {\"b\", 2}})));\n    assert(candidate((\"a b c a b\")) == (std::map<std::string,long>({{\"a\", 2}, {\"b\", 2}})));\n    assert(candidate((\"a b c d g\")) == (std::map<std::string,long>({{\"a\", 1}, {\"b\", 1}, {\"c\", 1}, {\"d\", 1}, {\"g\", 1}})));\n    assert(candidate((\"r t g\")) == (std::map<std::string,long>({{\"r\", 1}, {\"t\", 1}, {\"g\", 1}})));\n    assert(candidate((\"b b b b a\")) == (std::map<std::string,long>({{\"b\", 4}})));\n    assert(candidate((\"r t g\")) == (std::map<std::string,long>({{\"r\", 1}, {\"t\", 1}, {\"g\", 1}})));\n    assert(candidate((\"\")) == (std::map<std::string,long>()));\n    assert(candidate((\"a\")) == (std::map<std::string,long>({{\"a\", 1}})));\n}\n",
  "completions": [
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s) == hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(!s.empty()) {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        std::string letter = std::string(1, *it);\n        if(result.find(letter) == result.end()) {\n            result[letter] = 1;\n        } else {\n            result[letter] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    std::string s;\n    for(int i=0;i<test.size();i++) {\n        s=test.substr(i,1);\n        if(h.find(s)==h.end()) {\n            h[s]=1;\n        }\n        else {\n            h[s]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss >> s) {\n        if(res.find(s) == res.end()) {\n            res[s] = 1;\n        } else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> map;\n    for(int i=0;i<test.size();i++) {\n        if(map.find(test[i])==map.end()) {\n            map[test[i]]=1;\n        }\n        else {\n            map[test[i]]++;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        }\n        else {\n            hist[c] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        }\n        else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(res.find(s)==res.end()) {\n            res[s]=1;\n        } else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> res;\n    for(auto i : test) {\n        if(res.find(i) == res.end()) {\n            res[i] = 1;\n        }\n        else {\n            res[i]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        } else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> h;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(h.find(s)==h.end())\n            h[s]=1;\n        else\n            h[s]++;\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    std::string word;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') {\n            if(word!=\"\") {\n                hist[word]++;\n                word=\"\";\n            }\n        } else {\n            word+=test[i];\n        }\n    }\n    if(word!=\"\") {\n        hist[word]++;\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c:test) {\n        if(hist.find(c)==hist.end()) {\n            hist[c]=1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    std::string cur;\n    for(auto i = 0; i < test.size(); ++i) {\n        if(test[i] == ' ') {\n            if(cur.size() > 0) {\n                res[cur]++;\n                cur.clear();\n            }\n        } else {\n            cur += test[i];\n        }\n    }\n    if(cur.size() > 0) {\n        res[cur]++;\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        } else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        std::string temp = \"\";\n        temp += *it;\n        if(hist.find(temp) == hist.end()) {\n            hist[temp] = 1;\n        }\n        else {\n            hist[temp] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    for(auto c:test) {\n        if(h.find(c)==h.end()) {\n            h[c]=1;\n        }\n        else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        } else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> res;\n    for(auto i = 0; i < test.size(); i++) {\n        if(res.find(test[i]) == res.end()) {\n            res[test[i]] = 1;\n        } else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss >> s) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]!=' ') {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::string curr;\n    for(auto c : test) {\n        if(c == ' ') {\n            if(curr.size() > 0) {\n                res[curr]++;\n                curr.clear();\n            }\n        } else {\n            curr += c;\n        }\n    }\n    if(curr.size() > 0) {\n        res[curr]++;\n    }\n    return res;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(result.find(s)==result.end()){\n            result[s]=1;\n        }\n        else{\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        }\n        else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        std::string temp = test.substr(i,1);\n        if(result.find(temp)==result.end()) {\n            result[temp] = 1;\n        } else {\n            result[temp] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        }\n        else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(result.find(s)==result.end()){\n            result[s]=1;\n        }\n        else{\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss >> s) {\n        if(res.find(s) == res.end()) {\n            res[s] = 1;\n        } else {\n            res[s] += 1;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> map;\n    for(int i=0;i<test.size();i++) {\n        if(map.find(test[i])==map.end()) {\n            map[test[i]]=1;\n        } else {\n            map[test[i]]++;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string word;\n    while(ss >> word) {\n        if(result.find(word) == result.end()) {\n            result[word] = 1;\n        }\n        else {\n            result[word]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        }\n        else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        std::string temp = test.substr(i,1);\n        if(result.find(temp)==result.end()) {\n            result[temp] = 1;\n        }\n        else {\n            result[temp] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        } else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        std::string temp=test.substr(i,1);\n        if(result.find(temp)==result.end()) {\n            result[temp]=1;\n        }\n        else {\n            result[temp]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> map;\n    for(int i=0;i<test.size();i++) {\n        if(map.find(test[i])==map.end()) {\n            map[test[i]]=1;\n        } else {\n            map[test[i]]++;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(res.find(s)==res.end())\n            res[s]=1;\n        else\n            res[s]++;\n    }\n    return res;",
    "    std::map<std::string,long> h;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(!s.empty()) {\n            h[s]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    std::string word;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') {\n            if(word.size()>0) {\n                h[word]++;\n                word.clear();\n            }\n        } else {\n            word+=test[i];\n        }\n    }\n    if(word.size()>0) {\n        h[word]++;\n    }\n    return h;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        }\n        else {\n            h[c] += 1;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        } else {\n            hist[c] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(res.find(s)==res.end()) {\n            res[s]=1;\n        }\n        else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(auto ch:test) {\n        if(hist.find(ch)==hist.end()) {\n            hist[ch]=1;\n        } else {\n            hist[ch]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        std::string cur = test.substr(i,1);\n        if(res.find(cur)==res.end()) {\n            res[cur] = 1;\n        }\n        else {\n            res[cur]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> map;\n    for(auto i = 0; i < test.size(); i++) {\n        if(map.find(test[i]) == map.end()) {\n            map[test[i]] = 1;\n        }\n        else {\n            map[test[i]] += 1;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(res.find(s)==res.end()) {\n            res[s]=1;\n        } else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        std::string s = \"\";\n        s += *it;\n        if(hist.find(s) == hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::string word;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        if(*it == ' ') {\n            if(word.size() > 0) {\n                result[word]++;\n                word.clear();\n            }\n        } else {\n            word += *it;\n        }\n    }\n    if(word.size() > 0) {\n        result[word]++;\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(h.count(s)==0) {\n            h[s]=1;\n        } else {\n            h[s]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        } else {\n            hist[c] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss >> s) {\n        if(h.find(s) == h.end()) {\n            h[s] = 1;\n        }\n        else {\n            h[s]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(hist.find(s)==hist.end())\n            hist[s]=1;\n        else\n            hist[s]++;\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(std::string::iterator it = test.begin(); it != test.end(); it++) {\n        if(hist.find(*it) == hist.end()) {\n            hist[*it] = 1;\n        }\n        else {\n            hist[*it] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        } else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    for(auto i:test) {\n        if(hist.find(i)==hist.end()) {\n            hist[i]=1;\n        }\n        else {\n            hist[i]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        } else {\n            h[c] += 1;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        }\n        else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.count(c) == 0) {\n            hist[c] = 1;\n        }\n        else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(res.find(s)==res.end()) {\n            res[s]=1;\n        } else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        } else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string word;\n    while(ss >> word) {\n        if(hist.find(word) == hist.end()) {\n            hist[word] = 1;\n        }\n        else {\n            hist[word] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        if(h.find(*it) == h.end()) {\n            h[*it] = 1;\n        }\n        else {\n            h[*it] += 1;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(auto c:test) {\n        if(hist.find(c)==hist.end()) {\n            hist[c]=1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        } else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(auto c: test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> map;\n    for(auto i = 0; i < test.size(); i++) {\n        if(map.find(test[i]) == map.end()) {\n            map[test[i]] = 1;\n        } else {\n            map[test[i]] += 1;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(std::string::iterator it = test.begin(); it != test.end(); ++it) {\n        if(hist.find(*it) == hist.end()) {\n            hist[*it] = 1;\n        } else {\n            hist[*it] += 1;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        } else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> res;\n    for(auto ch:test) {\n        if(res.find(ch)==res.end()) {\n            res[ch]=1;\n        }\n        else {\n            res[ch]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        } else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(auto c:test) {\n        if(result.find(c)==result.end()) {\n            result[c]=1;\n        } else {\n            result[c]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c:test) {\n        if(hist.find(c)==hist.end()) {\n            hist[c]=1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end())\n            hist[s]=1;\n        else\n            hist[s]++;\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]!=' ') {\n            if(res.find(test[i])==res.end()) {\n                res[test[i]]=1;\n            }\n            else {\n                res[test[i]]++;\n            }\n        }\n    }\n    return res;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        }\n        else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(!s.empty()) {\n            if(result.find(s)==result.end()) {\n                result[s]=1;\n            } else {\n                result[s]++;\n            }\n        }\n    }\n    return result;",
    "    std::map<std::string,long> map;\n    for(int i=0;i<test.size();i++) {\n        if(map.find(test[i])==map.end()) {\n            map[test[i]]=1;\n        }\n        else {\n            map[test[i]]++;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string word;\n    while(ss >> word) {\n        if(result.find(word) == result.end()) {\n            result[word] = 1;\n        } else {\n            result[word] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        hist[s]++;\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        }\n        else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        } else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> map;\n    for(int i=0;i<test.size();i++) {\n        if(map.find(test[i])==map.end()) {\n            map[test[i]]=1;\n        } else {\n            map[test[i]]++;\n        }\n    }\n    return map;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')){\n        if(res.find(s)==res.end()){\n            res[s]=1;\n        }\n        else{\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(auto c : test) {\n        if(hist.find(c) == hist.end()) {\n            hist[c] = 1;\n        } else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        std::string s = test.substr(i,1);\n        if(hist.find(s)==hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(std::string::iterator it = test.begin(); it != test.end(); it++) {\n        if(hist.find(*it) == hist.end()) {\n            hist[*it] = 1;\n        }\n        else {\n            hist[*it]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        std::string ch=test.substr(i,1);\n        if(hist.find(ch)==hist.end()) {\n            hist[ch]=1;\n        } else {\n            hist[ch]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(auto i=0; i<test.size(); i++) {\n        if(test[i]==' ') continue;\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::string::iterator it;\n    for(it=test.begin();it!=test.end();it++) {\n        std::string s=*it;\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        }\n        else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        std::string s=test.substr(i,1);\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        }\n        else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        }\n        else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        std::string temp = test.substr(i,1);\n        if(result.find(temp)==result.end()) {\n            result[temp] = 1;\n        }\n        else {\n            result[temp] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        }\n        else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test.substr(i,1))==result.end()) {\n            result.insert(std::pair<std::string,long>(test.substr(i,1),1));\n        }\n        else {\n            result[test.substr(i,1)]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s] = 1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        }\n        else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]!=' ') {\n            if(res.find(test[i])==res.end()) {\n                res[test[i]]=1;\n            }\n            else {\n                res[test[i]]++;\n            }\n        }\n    }\n    return res;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]!=' ') {\n            std::string tmp = test.substr(i,test.size()-i);\n            if(res.find(tmp)==res.end()) {\n                res[tmp] = 1;\n            } else {\n                res[tmp] += 1;\n            }\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(!s.empty()) {\n            if(hist.find(s) == hist.end()) {\n                hist[s] = 1;\n            }\n            else {\n                hist[s]++;\n            }\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(auto c:test) {\n        if(hist.find(c)==hist.end()) {\n            hist[c]=1;\n        }\n        else {\n            hist[c]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::string curr;\n    for(int i = 0; i < test.size(); i++) {\n        if(test[i] == ' ') {\n            if(curr.size() > 0) {\n                res[curr]++;\n                curr.clear();\n            }\n        }\n        else {\n            curr += test[i];\n        }\n    }\n    if(curr.size() > 0) {\n        res[curr]++;\n    }\n    return res;",
    "    std::map<std::string,long> result;\n    for(auto i=0;i<test.size();i++) {\n        if(result.find(test.substr(i,1))==result.end()) {\n            result[test.substr(i,1)]=1;\n        } else {\n            result[test.substr(i,1)]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> res;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(res.find(s)==res.end()) {\n            res[s]=1;\n        } else {\n            res[s]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s] = 1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(auto c : test) {\n        if(result.find(c) == result.end()) {\n            result[c] = 1;\n        }\n        else {\n            result[c] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(h.find(test[i])==h.end()) {\n            h[test[i]]=1;\n        } else {\n            h[test[i]]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        } else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        } else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s]=1;\n        }\n        else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        }\n        else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    for(std::string::iterator it=test.begin();it!=test.end();it++) {\n        std::string temp=*it;\n        if(result.find(temp)==result.end()) {\n            result[temp]=1;\n        }\n        else {\n            result[temp]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s)==result.end()) {\n            result[s] = 1;\n        }\n        else {\n            result[s]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> hist;\n    std::stringstream ss(test);\n    std::string s;\n    while(ss>>s) {\n        if(hist.find(s)==hist.end()) {\n            hist[s]=1;\n        }\n        else {\n            hist[s]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        } else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    std::stringstream ss(test);\n    std::string s;\n    while(std::getline(ss,s,' ')) {\n        if(result.find(s) == result.end()) {\n            result[s] = 1;\n        } else {\n            result[s] += 1;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test[i])==result.end()) {\n            result[test[i]]=1;\n        } else {\n            result[test[i]]++;\n        }\n    }\n    return result;",
    "    std::map<std::string,long> res;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') continue;\n        if(res.find(test[i])==res.end()) {\n            res[test[i]]=1;\n        }\n        else {\n            res[test[i]]++;\n        }\n    }\n    return res;",
    "    std::map<std::string,long> hist;\n    for(int i=0;i<test.size();i++) {\n        if(hist.find(test[i])==hist.end()) {\n            hist[test[i]]=1;\n        } else {\n            hist[test[i]]++;\n        }\n    }\n    return hist;",
    "    std::map<std::string,long> h;\n    for(auto c : test) {\n        if(h.find(c) == h.end()) {\n            h[c] = 1;\n        }\n        else {\n            h[c]++;\n        }\n    }\n    return h;",
    "    std::map<std::string,long> result;\n    std::string temp;\n    for(int i=0;i<test.size();i++) {\n        if(test[i]==' ') {\n            if(temp.size()>0) {\n                result[temp]++;\n                temp.clear();\n            }\n        }\n        else {\n            temp+=test[i];\n        }\n    }\n    if(temp.size()>0) {\n        result[temp]++;\n    }\n    return result;",
    "    std::map<std::string,long> result;\n    for(int i=0;i<test.size();i++) {\n        if(result.find(test.substr(i,1))==result.end()) {\n            result[test.substr(i,1)]=1;\n        }\n        else {\n            result[test.substr(i,1)]++;\n        }\n    }\n    return result;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
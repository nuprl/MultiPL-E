name: HumanEval_160_do_algebra
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given two vectors operator,\
  \ and operand. The first vector has basic algebra operations, and \n// the second\
  \ vector is a vector of integers. Use the two given vectors to build the algebric\
  \ \n// expression and return the evaluation of this expression.\n// The basic algebra\
  \ operations:\n// Addition ( + ) \n// Subtraction ( - ) \n// Multiplication ( *\
  \ ) \n// Floor division ( // ) \n// Exponentiation ( ** ) \n// Example:\n// operator['+',\
  \ '*', '-']\n// vector = [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result =\
  \ 9\n// Note:\n// The length of operator vector is equal to the length of operand\
  \ vector minus one.\n// Operand is a vector of of non-negative integers.\n// Operator\
  \ vector has at least one operator, and operand vector has at least two operands.\n\
  long do_algebra(std::vector<std::string> op, std::vector<long> operand) {\n"
tests: "}\nint main() {\n    auto candidate = do_algebra;\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  **\", (std::string)\"*\", (std::string)\"+\"})), (std::vector<long>({(long)2, (long)3,\
  \ (long)4, (long)5}))) == (37));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  +\", (std::string)\"*\", (std::string)\"-\"})), (std::vector<long>({(long)2, (long)3,\
  \ (long)4, (long)5}))) == (9));\n    assert(candidate((std::vector<std::string>({(std::string)\"\
  //\", (std::string)\"*\"})), (std::vector<long>({(long)7, (long)3, (long)4}))) ==\
  \ (8));\n}\n"
completions: ["    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"/\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \            continue;\n        }\n        if (op[i - 1] == \"+\") {\n       \
    \     result += operand[i];\n        } else if (op[i - 1] == \"-\") {\n      \
    \      result -= operand[i];\n        } else if (op[i - 1] == \"*\") {\n     \
    \       result *= operand[i];\n        } else if (op[i - 1] == \"/\") {\n    \
    \        result /= operand[i];\n        } else if (op[i - 1] == \"**\") {\n  \
    \          result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ i++) {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j]\
    \ == \"*\") {\n                result += operand[i] * operand[i + 1];\n      \
    \      } else if (op[j] == \"/\") {\n                result += operand[i] / operand[i\
    \ + 1];\n            } else if (op[j] == \"**\") {\n                result +=\
    \ pow(operand[i], operand[i + 1]);\n            } else {\n                result\
    \ += operand[i] * operand[i + 1] * op[j];\n            }\n        }\n        i++;\n\
    \    }\n    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ ++i) {\n        if (i == 0) {\n            result = operand[i];\n        } else\
    \ {\n            result = result + operand[i] * op[i - 1].size();\n        }\n\
    \    }\n    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ i++) {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j]\
    \ == \"*\") {\n                result = result * operand[i];\n            } else\
    \ if (op[j] == \"/\") {\n                result = result / operand[i];\n     \
    \       } else if (op[j] == \"**\") {\n                result = result * operand[i];\n\
    \            } else if (op[j] == \"+\") {\n                result = result + operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result = result - operand[i];\n\
    \            }\n        }\n    }\n    return result;", "    long result = 0;\n\
    \    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size();\
    \ ++j) {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i > 0) {\n            result = result * 10 + operand[i - 1];\n        }\n \
    \       if (i < op.size()) {\n            result = result + op[i] == \"*\" ? result\
    \ * operand[i] : result / operand[i];\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n            for (int j = 0; j < op.size(); ++j) {\n           \
    \     if (op[j] == \"+\") {\n                    result += operand[i + 1];\n \
    \               } else if (op[j] == \"-\") {\n                    result -= operand[i\
    \ + 1];\n                } else if (op[j] == \"*\") {\n                    result\
    \ *= operand[i + 1];\n                } else if (op[j] == \"/\") {\n         \
    \           result /= operand[i + 1];\n                } else if (op[j] == \"\
    **\") {\n                    result = pow(result, operand[i + 1]);\n         \
    \       }\n            }\n        } else {\n            for (int j = 0; j < op.size();\
    \ ++j) {\n                if (op[j] == \"+\") {\n                    result +=\
    \ operand[i];\n                } else if (op[j] == \"-\") {\n                \
    \    result -= operand[i];\n                } else if (op[j] == \"*\") {\n   \
    \                 result *= operand[i];\n                } else if (op[j] == \"\
    /\") {\n                    result /= operand[i];\n                } else if (op[j]\
    \ == \"**\") {\n                    result = pow(result, operand[i]);\n      \
    \          }\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int\
    \ j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n          \
    \      result += operand[i];\n            } else if (op[j] == \"-\") {\n     \
    \           result -= operand[i];\n            } else if (op[j] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[j] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[j] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); i++) {\n        if (op[i] == \"+\") {\n            result\
    \ += operand[i];\n        } else if (op[i] == \"-\") {\n            result -=\
    \ operand[i];\n        } else if (op[i] == \"*\") {\n            result *= operand[i];\n\
    \        } else if (op[i] == \"//\") {\n            result /= operand[i];\n  \
    \      } else if (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(result,\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n            continue;\n        }\n \
    \       if (op[i - 1] == \"*\") {\n            result *= operand[i];\n       \
    \ } else if (op[i - 1] == \"/\") {\n            result /= operand[i];\n      \
    \  } else if (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        } else {\n            result += operand[i];\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(result, operand[i]);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        if (i < op.size()) {\n          \
    \  if (op[i] == \"+\") {\n                result += operand[i];\n            }\
    \ else if (op[i] == \"-\") {\n                result -= operand[i];\n        \
    \    } else if (op[i] == \"*\") {\n                result *= operand[i];\n   \
    \         } else if (op[i] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i] == \"-\")\
    \ {\n            result -= operand[i];\n        } else if (op[i] == \"*\") {\n\
    \            result *= operand[i];\n        } else if (op[i] == \"/\") {\n   \
    \         result /= operand[i];\n        } else if (op[i] == \"**\") {\n     \
    \       result = pow(operand[i], result);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    //\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"//\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++) {\n  \
    \          if (op[j] == \"*\") {\n                result = result * operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result = result / operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = result *\
    \ operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ = result + operand[i];\n            } else if (op[j] == \"-\") {\n         \
    \       result = result - operand[i];\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n        } else {\n            result = result + operand[i] *\
    \ do_algebra(op, operand);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(result, operand[i]);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(result, operand[i]);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i < op.size()) {\n            if (op[i] == \"+\") {\n       \
    \         result += operand[i];\n            } else if (op[i] == \"-\") {\n  \
    \              result -= operand[i];\n            } else if (op[i] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[i] == \"/\"\
    ) {\n                result /= operand[i];\n            } else if (op[i] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n\
    \            if (op[j] == \"+\") {\n                result += operand[i];\n  \
    \          } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ i++) {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j]\
    \ == \"+\") {\n                result += operand[i];\n            } else if (op[j]\
    \ == \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n        } else {\n            result = result + operand[i] *\
    \ do_algebra(op, operand);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i] == \"-\")\
    \ {\n            result -= operand[i];\n        } else if (op[i] == \"*\") {\n\
    \            result *= operand[i];\n        } else if (op[i] == \"//\") {\n  \
    \          result /= operand[i];\n        } else if (op[i] == \"**\") {\n    \
    \        result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for (int\
    \ j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n          \
    \      result += operand[i];\n            } else if (op[j] == \"-\") {\n     \
    \           result -= operand[i];\n            } else if (op[j] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[j] == \"/\"\
    ) {\n                result /= operand[i];\n            } else if (op[j] == \"\
    **\") {\n                result = pow(operand[i], operand[i]);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i] == \"-\")\
    \ {\n            result -= operand[i];\n        } else if (op[i] == \"*\") {\n\
    \            result *= operand[i];\n        } else if (op[i] == \"/\") {\n   \
    \         result /= operand[i];\n        } else if (op[i] == \"**\") {\n     \
    \       result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"*\") {\n     \
    \           result += operand[i] * operand[i + 1];\n            } else if (op[j]\
    \ == \"+\") {\n                result += operand[i] + operand[i + 1];\n      \
    \      } else if (op[j] == \"-\") {\n                result += operand[i] - operand[i\
    \ + 1];\n            } else if (op[j] == \"//\") {\n                result +=\
    \ operand[i] / operand[i + 1];\n            } else if (op[j] == \"**\") {\n  \
    \              result += pow(operand[i], operand[i + 1]);\n            }\n   \
    \     }\n        i++;\n    }\n    return result;", "    long result = 0;\n   \
    \ for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n        \
    \    result = operand[i];\n        } else {\n            result = result + operand[i]\
    \ * op[i - 1].size() * do_algebra(op, operand);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n            continue;\n\
    \        }\n        if (op[i - 1] == \"*\") {\n            result *= operand[i];\n\
    \        } else if (op[i - 1] == \"/\") {\n            result /= operand[i];\n\
    \        } else if (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        } else {\n            result += operand[i];\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"/\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"*\") {\n                result = result * operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result = result / operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = result *\
    \ operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ = result + operand[i];\n            } else if (op[j] == \"-\") {\n         \
    \       result = result - operand[i];\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n        } else {\n\
    \            result = result + operand[i] * do_algebra(op, operand);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \            continue;\n        }\n        if (op[i - 1] == \"+\") {\n       \
    \     result += operand[i];\n        } else if (op[i - 1] == \"-\") {\n      \
    \      result -= operand[i];\n        } else if (op[i - 1] == \"*\") {\n     \
    \       result *= operand[i];\n        } else if (op[i - 1] == \"//\") {\n   \
    \         result /= operand[i];\n        } else if (op[i - 1] == \"**\") {\n \
    \           result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n            if (op[j]\
    \ == \"+\") {\n                result += operand[i];\n            } else if (op[j]\
    \ == \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(result, operand[i]);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(result, operand[i]);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"/\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(operand[i], result);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n  \
    \          if (op[j] == \"+\") {\n                result += operand[i];\n    \
    \        } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i] == \"-\")\
    \ {\n            result -= operand[i];\n        } else if (op[i] == \"*\") {\n\
    \            result *= operand[i];\n        } else if (op[i] == \"/\") {\n   \
    \         result /= operand[i];\n        } else if (op[i] == \"**\") {\n     \
    \       result = pow(operand[i], result);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ ++i) {\n        if (i == 0) {\n            result = operand[i];\n          \
    \  continue;\n        }\n        if (op[i - 1] == \"+\") {\n            result\
    \ += operand[i];\n        } else if (op[i - 1] == \"-\") {\n            result\
    \ -= operand[i];\n        } else if (op[i - 1] == \"*\") {\n            result\
    \ *= operand[i];\n        } else if (op[i - 1] == \"//\") {\n            result\
    \ /= operand[i];\n        } else if (op[i - 1] == \"**\") {\n            result\
    \ = pow(result, operand[i]);\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n        } else {\n            result\
    \ = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i < op.size()) {\n            if (op[i] == \"+\") {\n       \
    \         result += operand[i];\n            } else if (op[i] == \"-\") {\n  \
    \              result -= operand[i];\n            } else if (op[i] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[i] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[i] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); ++i) {\n        if (op[i] == \"+\") {\n            result\
    \ += operand[i];\n        } else if (op[i] == \"-\") {\n            result -=\
    \ operand[i];\n        } else if (op[i] == \"*\") {\n            result *= operand[i];\n\
    \        } else if (op[i] == \"//\") {\n            result /= operand[i];\n  \
    \      } else if (op[i] == \"**\") {\n            result = pow(operand[i], result);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], operand[i]);\n         \
    \   }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"*\") {\n                result += operand[i] *\
    \ operand[i + 1];\n            } else if (op[j] == \"+\") {\n                result\
    \ += operand[i] + operand[i + 1];\n            } else if (op[j] == \"-\") {\n\
    \                result += operand[i] - operand[i + 1];\n            } else if\
    \ (op[j] == \"/\") {\n                result += operand[i] / operand[i + 1];\n\
    \            } else if (op[j] == \"//\") {\n                result += operand[i]\
    \ / operand[i + 1];\n            } else if (op[j] == \"**\") {\n             \
    \   result += pow(operand[i], operand[i + 1]);\n            }\n        }\n   \
    \     i++;\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n        } else {\n            result = result + operand[i] * do_algebra(op,\
    \ operand);\n        }\n    }\n    return result;", "    long result = 0;\n  \
    \  for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n       \
    \     result = operand[i];\n        } else {\n            result = result + operand[i]\
    \ * do_algebra(op, operand);\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i <\
    \ op.size()) {\n            if (op[i] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[i] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[i] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[i] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for (int j = 0;\
    \ j < op.size(); j++) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(result, operand[i]);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"*\"\
    ) {\n            result *= operand[i];\n        } else if (op[i - 1] == \"/\"\
    ) {\n            result /= operand[i];\n        } else if (op[i - 1] == \"**\"\
    ) {\n            result = pow(result, operand[i]);\n        } else {\n       \
    \     result += operand[i];\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i]\
    \ == \"+\") {\n            result += operand[i];\n        } else if (op[i] ==\
    \ \"-\") {\n            result -= operand[i];\n        } else if (op[i] == \"\
    *\") {\n            result *= operand[i];\n        } else if (op[i] == \"//\"\
    ) {\n            result /= operand[i];\n        } else if (op[i] == \"**\") {\n\
    \            result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i > 0) {\n            result =\
    \ result * 10 + operand[i];\n        }\n        for (int j = 0; j < op.size();\
    \ ++j) {\n            if (op[j] == \"*\") {\n                result = result *\
    \ operand[i];\n            } else if (op[j] == \"/\") {\n                result\
    \ = result / operand[i];\n            } else if (op[j] == \"**\") {\n        \
    \        result = result * operand[i];\n            } else if (op[j] == \"+\"\
    ) {\n                result = result + operand[i];\n            } else if (op[j]\
    \ == \"-\") {\n                result = result - operand[i];\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n            continue;\n        }\n        if\
    \ (op[i - 1] == \"+\") {\n            result += operand[i];\n        } else if\
    \ (op[i - 1] == \"-\") {\n            result -= operand[i];\n        } else if\
    \ (op[i - 1] == \"*\") {\n            result *= operand[i];\n        } else if\
    \ (op[i - 1] == \"/\") {\n            result /= operand[i];\n        } else if\
    \ (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n   \
    \     }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0;\
    \ i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++) {\n\
    \            if (op[j] == \"*\") {\n                result = result * operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result = result / operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = result *\
    \ operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ = result + operand[i];\n            } else if (op[j] == \"-\") {\n         \
    \       result = result - operand[i];\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"/\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n        } else {\n            result = result + operand[i] *\
    \ do_algebra(op, operand);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ i++) {\n        if (i == 0) {\n            result = operand[i];\n        } else\
    \ {\n            result = result + operand[i] * do_algebra(op, operand);\n   \
    \     }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0;\
    \ i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n\
    \            if (op[j] == \"+\") {\n                result += operand[i];\n  \
    \          } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for (int j = 0;\
    \ j < op.size(); j++) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i < op.size()) {\n            if (op[i] == \"+\") {\n       \
    \         result += operand[i];\n            } else if (op[i] == \"-\") {\n  \
    \              result -= operand[i];\n            } else if (op[i] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[i] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[i] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); ++i) {\n        if (i < op.size()) {\n            if\
    \ (op[i] == \"+\") {\n                result += operand[i];\n            } else\
    \ if (op[i] == \"-\") {\n                result -= operand[i];\n            }\
    \ else if (op[i] == \"*\") {\n                result *= operand[i];\n        \
    \    } else if (op[i] == \"//\") {\n                result /= operand[i];\n  \
    \          } else if (op[i] == \"**\") {\n                result = pow(result,\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n        } else {\n            result\
    \ = result + operand[i] * op[i - 1].size() * do_algebra(op, operand);\n      \
    \  }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n  \
    \          if (op[j] == \"*\") {\n                result += operand[i] * operand[i\
    \ + 1];\n            } else if (op[j] == \"+\") {\n                result += operand[i]\
    \ + operand[i + 1];\n            } else if (op[j] == \"-\") {\n              \
    \  result += operand[i] - operand[i + 1];\n            } else if (op[j] == \"\
    //\") {\n                result += operand[i] / operand[i + 1];\n            }\
    \ else if (op[j] == \"**\") {\n                result += pow(operand[i], operand[i\
    \ + 1]);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n        } else {\n            result = result + operand[i] * do_algebra(op,\
    \ operand);\n        }\n    }\n    return result;", "    long result = 0;\n  \
    \  for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size();\
    \ ++j) {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n        } else {\n           \
    \ result = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n\
    \    return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ i++) {\n        if (i == 0) {\n            result = operand[i];\n        } else\
    \ {\n            result = result + operand[i] * do_algebra(op, operand);\n   \
    \     }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0;\
    \ i < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \        } else {\n            result = result + operand[i] * do_algebra(op, operand);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(result,\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i <\
    \ op.size()) {\n            switch (op[i]) {\n                case \"+\":\n  \
    \                  result += operand[i];\n                    break;\n       \
    \         case \"-\":\n                    result -= operand[i];\n           \
    \         break;\n                case \"*\":\n                    result *= operand[i];\n\
    \                    break;\n                case \"//\":\n                  \
    \  result /= operand[i];\n                    break;\n                case \"\
    **\":\n                    result = pow(result, operand[i]);\n               \
    \     break;\n                default:\n                    assert(0);\n     \
    \       }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n        } else {\n            result = result + operand[i] *\
    \ do_algebra(op, operand);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        for (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(result, operand[i]);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i <\
    \ op.size()) {\n            if (op[i] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[i] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[i] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[i] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n            continue;\n        }\n        if\
    \ (op[i - 1] == \"+\") {\n            result += operand[i];\n        } else if\
    \ (op[i - 1] == \"-\") {\n            result -= operand[i];\n        } else if\
    \ (op[i - 1] == \"*\") {\n            result *= operand[i];\n        } else if\
    \ (op[i - 1] == \"//\") {\n            result /= operand[i];\n        } else if\
    \ (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n   \
    \     }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0;\
    \ i < operand.size(); i++) {\n        if (i < op.size()) {\n            if (op[i]\
    \ == \"+\") {\n                result += operand[i];\n            } else if (op[i]\
    \ == \"-\") {\n                result -= operand[i];\n            } else if (op[i]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[i]\
    \ == \"/\") {\n                result /= operand[i];\n            } else if (op[i]\
    \ == \"**\") {\n                result = pow(result, operand[i]);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i <\
    \ op.size()) {\n            if (op[i] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[i] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[i] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[i] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], operand[i]);\n         \
    \   }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"\
    *\") {\n            result *= operand[i];\n        } else if (op[i - 1] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i - 1] == \"\
    **\") {\n            result = pow(result, operand[i]);\n        } else {\n   \
    \         result += operand[i];\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i]\
    \ == \"+\") {\n            result += operand[i];\n        } else if (op[i] ==\
    \ \"-\") {\n            result -= operand[i];\n        } else if (op[i] == \"\
    *\") {\n            result *= operand[i];\n        } else if (op[i] == \"//\"\
    ) {\n            result /= operand[i];\n        } else if (op[i] == \"**\") {\n\
    \            result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], operand[i]);\n         \
    \   }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"\
    *\") {\n            result *= operand[i];\n        } else if (op[i - 1] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i - 1] == \"\
    **\") {\n            result = pow(result, operand[i]);\n        } else {\n   \
    \         result += operand[i];\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n        } else {\n            result\
    \ = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n        } else {\n\
    \            result = result + operand[i] * do_algebra(op, operand);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++) {\n  \
    \          if (op[j] == \"+\") {\n                result += operand[i];\n    \
    \        } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i == 0) {\n            result = operand[i];\n            continue;\n      \
    \  }\n        if (op[i - 1] == \"+\") {\n            result += operand[i];\n \
    \       } else if (op[i - 1] == \"-\") {\n            result -= operand[i];\n\
    \        } else if (op[i - 1] == \"*\") {\n            result *= operand[i];\n\
    \        } else if (op[i - 1] == \"/\") {\n            result /= operand[i];\n\
    \        } else if (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n        } else {\n            result = result + operand[i] * op[i\
    \ - 1].size() * do_algebra(op, operand[i - 1]);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    *\") {\n                result += operand[i] * operand[i];\n            } else\
    \ if (op[j] == \"/\") {\n                result += operand[i] / operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result += operand[i]\
    \ / operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], operand[i]);\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n        } else {\n\
    \            result = result + operand[i] * do_algebra(op, operand);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n  \
    \          if (op[j] == \"+\") {\n                result += operand[i];\n    \
    \        } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * op[i - 1].size();\n        }\n    }\n    return result;", " \
    \   long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n       \
    \ for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n \
    \               result += operand[i];\n            } else if (op[j] == \"-\")\
    \ {\n                result -= operand[i];\n            } else if (op[j] == \"\
    *\") {\n                result *= operand[i];\n            } else if (op[j] ==\
    \ \"/\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], operand[i]);\n      \
    \      }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size();\
    \ j++) {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i >\
    \ 0) {\n            result = result * 10 + operand[i];\n        }\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"*\") {\n     \
    \           result = result * operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result = result / operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = result * operand[i];\n            } else\
    \ if (op[j] == \"+\") {\n                result = result + operand[i];\n     \
    \       } else if (op[j] == \"-\") {\n                result = result - operand[i];\n\
    \            }\n        }\n    }\n    return result;", "    long result = 0;\n\
    \    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n     \
    \       result = operand[i];\n        } else {\n            result = result +\
    \ operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (i == 0) {\n            for (int j = 0; j < op.size(); j++) {\n            \
    \    if (op[j] == \"+\") {\n                    result += operand[i];\n      \
    \          } else if (op[j] == \"-\") {\n                    result -= operand[i];\n\
    \                } else if (op[j] == \"*\") {\n                    result *= operand[i];\n\
    \                } else if (op[j] == \"/\") {\n                    result /= operand[i];\n\
    \                } else if (op[j] == \"**\") {\n                    result = pow(result,\
    \ operand[i]);\n                }\n            }\n        } else {\n         \
    \   for (int j = 0; j < op.size(); j++) {\n                if (op[j] == \"+\"\
    ) {\n                    result += operand[i];\n                } else if (op[j]\
    \ == \"-\") {\n                    result -= operand[i];\n                } else\
    \ if (op[j] == \"*\") {\n                    result *= operand[i];\n         \
    \       } else if (op[j] == \"/\") {\n                    result /= operand[i];\n\
    \                } else if (op[j] == \"**\") {\n                    result = pow(result,\
    \ operand[i]);\n                }\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"/\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], operand[i]);\n      \
    \      }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"+\") {\n    \
    \        result += operand[i];\n        } else if (op[i] == \"-\") {\n       \
    \     result -= operand[i];\n        } else if (op[i] == \"*\") {\n          \
    \  result *= operand[i];\n        } else if (op[i] == \"//\") {\n            result\
    \ /= operand[i];\n        } else if (op[i] == \"**\") {\n            result =\
    \ pow(operand[i], result);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], operand[i]);\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        for (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"/\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], operand[i]);\n      \
    \      }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i - 1] == \"\
    -\") {\n            result -= operand[i];\n        } else if (op[i - 1] == \"\
    *\") {\n            result *= operand[i];\n        } else if (op[i - 1] == \"\
    //\") {\n            result /= operand[i];\n        } else if (op[i - 1] == \"\
    **\") {\n            result = pow(result, operand[i]);\n        }\n    }\n   \
    \ return result;", "    long result = 0;\n    for (int i = 0; i < operand.size();\
    \ ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n            if (op[j]\
    \ == \"+\") {\n                result += operand[i];\n            } else if (op[j]\
    \ == \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], operand[i]);\n      \
    \      }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size();\
    \ j++) {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for (int j = 0;\
    \ j < op.size(); j++) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], result);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        if (i < op.size()) {\n            if\
    \ (op[i] == \"+\") {\n                result += operand[i];\n            } else\
    \ if (op[i] == \"-\") {\n                result -= operand[i];\n            }\
    \ else if (op[i] == \"*\") {\n                result *= operand[i];\n        \
    \    } else if (op[i] == \"//\") {\n                result /= operand[i];\n  \
    \          } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i < op.size())\
    \ {\n            if (op[i] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[i] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[i] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[i] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[i] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n            continue;\n        }\n        if\
    \ (op[i - 1] == \"*\") {\n            result *= operand[i];\n        } else if\
    \ (op[i - 1] == \"/\") {\n            result /= operand[i];\n        } else if\
    \ (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n   \
    \     } else {\n            result += operand[i];\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i > 0) {\n            result = result * 10 + operand[i] - '0';\n\
    \        }\n        if (i < operand.size() - 1) {\n            result = result\
    \ * 10 + operand[i] - '0';\n        }\n        if (i < op.size() - 1) {\n    \
    \        result = result * 10 + op[i] - '0';\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"*\") {\n     \
    \           result = result * operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result = result / operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = result * operand[i];\n            } else\
    \ if (op[j] == \"+\") {\n                result = result + operand[i];\n     \
    \       } else if (op[j] == \"-\") {\n                result = result - operand[i];\n\
    \            }\n        }\n    }\n    return result;", "    long result = 0;\n\
    \    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n     \
    \       result = operand[i];\n        } else {\n            result = result +\
    \ operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(result, operand[i]);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    //\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n            continue;\n\
    \        }\n        if (op[i - 1] == \"+\") {\n            result += operand[i];\n\
    \        } else if (op[i - 1] == \"-\") {\n            result -= operand[i];\n\
    \        } else if (op[i - 1] == \"*\") {\n            result *= operand[i];\n\
    \        } else if (op[i - 1] == \"/\") {\n            result /= operand[i];\n\
    \        } else if (op[i - 1] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        if (op[i] == \"+\") {\n           \
    \ result += operand[i];\n        } else if (op[i] == \"-\") {\n            result\
    \ -= operand[i];\n        } else if (op[i] == \"*\") {\n            result *=\
    \ operand[i];\n        } else if (op[i] == \"//\") {\n            result /= operand[i];\n\
    \        } else if (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"*\") {\n                result += operand[i] *\
    \ operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ *= operand[i];\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int\
    \ j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n          \
    \      result += operand[i];\n            } else if (op[j] == \"-\") {\n     \
    \           result -= operand[i];\n            } else if (op[j] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[j] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[j] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++) {\n\
    \            if (op[j] == \"+\") {\n                result += operand[i];\n  \
    \          } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(result, operand[i]);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    //\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n        } else {\n\
    \            result = result + operand[i] * do_algebra(op, operand);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i > 0) {\n            result = result\
    \ * 10 + operand[i] - '0';\n        }\n        for (int j = 0; j < op.size();\
    \ ++j) {\n            if (op[j] == \"*\") {\n                result = result *\
    \ operand[i] + operand[i];\n            } else if (op[j] == \"/\") {\n       \
    \         result = result / operand[i] + operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = result * operand[i] + operand[i];\n \
    \           } else if (op[j] == \"+\") {\n                result = result + operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result = result - operand[i];\n\
    \            }\n        }\n    }\n    return result;", "    long result = 0;\n\
    \    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n     \
    \       result = operand[i];\n        } else {\n            result = result +\
    \ operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (i > 0) {\n            result = result * 10 + operand[i];\n        }\n     \
    \   for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"*\") {\n\
    \                result = result * operand[i];\n            } else if (op[j] ==\
    \ \"/\") {\n                result = result / operand[i];\n            } else\
    \ if (op[j] == \"**\") {\n                result = result * operand[i];\n    \
    \        } else if (op[j] == \"+\") {\n                result = result + operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result = result - operand[i];\n\
    \            }\n        }\n    }\n    return result;", "    long result = 0;\n\
    \    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n     \
    \       result = operand[i];\n        } else {\n            result = result +\
    \ operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (op[i] == \"+\") {\n            result += operand[i];\n        } else if (op[i]\
    \ == \"-\") {\n            result -= operand[i];\n        } else if (op[i] ==\
    \ \"*\") {\n            result *= operand[i];\n        } else if (op[i] == \"\
    /\") {\n            result /= operand[i];\n        } else if (op[i] == \"**\"\
    ) {\n            result = pow(operand[i], result);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i == 0) {\n            result = operand[i];\n        } else {\n\
    \            result = result + operand[i] * do_algebra(op, operand);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \        } else {\n            result = result + operand[i] * do_algebra(op, operand);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        if (i == 0) {\n            for (int\
    \ j = 0; j < op.size(); j++) {\n                if (op[j] == \"+\") {\n      \
    \              result += operand[i];\n                } else if (op[j] == \"-\"\
    ) {\n                    result -= operand[i];\n                } else if (op[j]\
    \ == \"*\") {\n                    result *= operand[i];\n                } else\
    \ if (op[j] == \"/\") {\n                    result /= operand[i];\n         \
    \       } else if (op[j] == \"**\") {\n                    result = pow(result,\
    \ operand[i]);\n                }\n            }\n        } else {\n         \
    \   for (int j = 0; j < op.size(); j++) {\n                if (op[j] == \"+\"\
    ) {\n                    result += operand[i];\n                } else if (op[j]\
    \ == \"-\") {\n                    result -= operand[i];\n                } else\
    \ if (op[j] == \"*\") {\n                    result *= operand[i];\n         \
    \       } else if (op[j] == \"/\") {\n                    result /= operand[i];\n\
    \                } else if (op[j] == \"**\") {\n                    result = pow(result,\
    \ operand[i]);\n                }\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int\
    \ j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n          \
    \      result += operand[i];\n            } else if (op[j] == \"-\") {\n     \
    \           result -= operand[i];\n            } else if (op[j] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[j] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[j] == \"\
    **\") {\n                result = pow(operand[i], result);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \            for (int j = 1; j < operand.size(); ++j) {\n                result\
    \ = result * operand[j];\n            }\n            for (int j = 0; j < op.size();\
    \ ++j) {\n                if (op[j] == \"+\") {\n                    result +=\
    \ operand[j];\n                } else if (op[j] == \"-\") {\n                \
    \    result -= operand[j];\n                } else if (op[j] == \"*\") {\n   \
    \                 result *= operand[j];\n                } else if (op[j] == \"\
    //\") {\n                    result /= operand[j];\n                } else if\
    \ (op[j] == \"**\") {\n                    result = pow(operand[j], result);\n\
    \                }\n            }\n        } else {\n            for (int j =\
    \ 0; j < op.size(); ++j) {\n                if (op[j] == \"+\") {\n          \
    \          result += operand[i];\n                } else if (op[j] == \"-\") {\n\
    \                    result -= operand[i];\n                } else if (op[j] ==\
    \ \"*\") {\n                    result *= operand[i];\n                } else\
    \ if (op[j] == \"//\") {\n                    result /= operand[i];\n        \
    \        } else if (op[j] == \"**\") {\n                    result = pow(operand[i],\
    \ result);\n                }\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        if\
    \ (i < op.size()) {\n            if (op[i] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[i] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[i] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[i] == \"/\") {\n                result\
    \ /= operand[i];\n            } else if (op[i] == \"**\") {\n                result\
    \ = pow(result, operand[i]);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    //\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(result, operand[i]);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"+\"\
    ) {\n            result += operand[i];\n        } else if (op[i - 1] == \"-\"\
    ) {\n            result -= operand[i];\n        } else if (op[i - 1] == \"*\"\
    ) {\n            result *= operand[i];\n        } else if (op[i - 1] == \"//\"\
    ) {\n            result /= operand[i];\n        } else if (op[i - 1] == \"**\"\
    ) {\n            result = pow(result, operand[i]);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"\
    +\") {\n                result += operand[i];\n            } else if (op[j] ==\
    \ \"-\") {\n                result -= operand[i];\n            } else if (op[j]\
    \ == \"*\") {\n                result *= operand[i];\n            } else if (op[j]\
    \ == \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], operand[i]);\n      \
    \      }\n        }\n    }\n    return result;", "    long result = 0;\n    for\
    \ (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result\
    \ = operand[i];\n        } else {\n            result = result + operand[i] *\
    \ do_algebra(op, operand);\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for\
    \ (int j = 0; j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(result, operand[i]);\n            }\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n\
    \            result = operand[i];\n        } else {\n            result = result\
    \ + operand[i] * op[i - 1].size();\n        }\n    }\n    return result;", " \
    \   long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n       \
    \ for (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n \
    \               result += operand[i];\n            } else if (op[j] == \"-\")\
    \ {\n                result -= operand[i];\n            } else if (op[j] == \"\
    *\") {\n                result *= operand[i];\n            } else if (op[j] ==\
    \ \"//\") {\n                result /= operand[i];\n            } else if (op[j]\
    \ == \"**\") {\n                result = pow(operand[i], result);\n          \
    \  }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (op[i] == \"\
    +\") {\n            result += operand[i];\n        } else if (op[i] == \"-\")\
    \ {\n            result -= operand[i];\n        } else if (op[i] == \"*\") {\n\
    \            result *= operand[i];\n        } else if (op[i] == \"//\") {\n  \
    \          result /= operand[i];\n        } else if (op[i] == \"**\") {\n    \
    \        result = pow(result, operand[i]);\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], operand[i]);\n         \
    \   }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        if (op[i] == \"+\") {\n         \
    \   result += operand[i];\n        } else if (op[i] == \"-\") {\n            result\
    \ -= operand[i];\n        } else if (op[i] == \"*\") {\n            result *=\
    \ operand[i];\n        } else if (op[i] == \"/\") {\n            result /= operand[i];\n\
    \        } else if (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"//\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(operand[i],\
    \ result);\n            }\n        }\n    }\n    return result;", "    long result\
    \ = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        for (int j = 0;\
    \ j < op.size(); ++j) {\n            if (op[j] == \"+\") {\n                result\
    \ += operand[i];\n            } else if (op[j] == \"-\") {\n                result\
    \ -= operand[i];\n            } else if (op[j] == \"*\") {\n                result\
    \ *= operand[i];\n            } else if (op[j] == \"//\") {\n                result\
    \ /= operand[i];\n            } else if (op[j] == \"**\") {\n                result\
    \ = pow(operand[i], result);\n            }\n        }\n    }\n    return result;",
  "    long result = 0;\n    for (int i = 0; i < operand.size(); i++) {\n        for\
    \ (int j = 0; j < op.size(); j++) {\n            if (op[j] == \"+\") {\n     \
    \           result += operand[i];\n            } else if (op[j] == \"-\") {\n\
    \                result -= operand[i];\n            } else if (op[j] == \"*\"\
    ) {\n                result *= operand[i];\n            } else if (op[j] == \"\
    /\") {\n                result /= operand[i];\n            } else if (op[j] ==\
    \ \"**\") {\n                result = pow(operand[i], operand[i]);\n         \
    \   }\n        }\n    }\n    return result;", "    long result = 0;\n    for (int\
    \ i = 0; i < operand.size(); i++) {\n        for (int j = 0; j < op.size(); j++)\
    \ {\n            if (op[j] == \"+\") {\n                result += operand[i];\n\
    \            } else if (op[j] == \"-\") {\n                result -= operand[i];\n\
    \            } else if (op[j] == \"*\") {\n                result *= operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result /= operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = pow(result,\
    \ operand[i]);\n            }\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n        } else {\n            result\
    \ = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"//\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(operand[i], result);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \        } else {\n            result = result + operand[i] * do_algebra(op, operand);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n        } else {\n            result = result + operand[i] * do_algebra(op,\
    \ operand);\n        }\n    }\n    return result;", "    long result = 0;\n  \
    \  for (int i = 0; i < operand.size(); ++i) {\n        if (i == 0) {\n       \
    \     result = operand[i];\n        } else {\n            result = result + operand[i]\
    \ * do_algebra(op, operand);\n        }\n    }\n    return result;", "    long\
    \ result = 0;\n    for (int i = 0; i < operand.size(); ++i) {\n        if (i ==\
    \ 0) {\n            result = operand[i];\n        } else {\n            result\
    \ = result + operand[i] * do_algebra(op, operand);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (i < op.size()) {\n            if (op[i] == \"+\") {\n       \
    \         result += operand[i];\n            } else if (op[i] == \"-\") {\n  \
    \              result -= operand[i];\n            } else if (op[i] == \"*\") {\n\
    \                result *= operand[i];\n            } else if (op[i] == \"//\"\
    ) {\n                result /= operand[i];\n            } else if (op[i] == \"\
    **\") {\n                result = pow(result, operand[i]);\n            }\n  \
    \      }\n    }\n    return result;", "    long result = 0;\n    for (int i =\
    \ 0; i < operand.size(); ++i) {\n        for (int j = 0; j < op.size(); ++j) {\n\
    \            if (op[j] == \"*\") {\n                result = result * operand[i];\n\
    \            } else if (op[j] == \"/\") {\n                result = result / operand[i];\n\
    \            } else if (op[j] == \"**\") {\n                result = result *\
    \ operand[i];\n            } else if (op[j] == \"+\") {\n                result\
    \ = result + operand[i];\n            } else if (op[j] == \"-\") {\n         \
    \       result = result - operand[i];\n            }\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); ++i)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"//\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(result, operand[i]);\n       \
    \ }\n    }\n    return result;", "    long result = 0;\n    for (int i = 0; i\
    \ < operand.size(); ++i) {\n        if (i == 0) {\n            result = operand[i];\n\
    \        } else {\n            result = result + operand[i] * do_algebra(op, operand);\n\
    \        }\n    }\n    return result;", "    long result = 0;\n    for (int i\
    \ = 0; i < operand.size(); i++) {\n        if (i == 0) {\n            result =\
    \ operand[i];\n            continue;\n        }\n        if (op[i - 1] == \"+\"\
    ) {\n            result += operand[i];\n        } else if (op[i - 1] == \"-\"\
    ) {\n            result -= operand[i];\n        } else if (op[i - 1] == \"*\"\
    ) {\n            result *= operand[i];\n        } else if (op[i - 1] == \"/\"\
    ) {\n            result /= operand[i];\n        } else if (op[i - 1] == \"**\"\
    ) {\n            result = pow(result, operand[i]);\n        }\n    }\n    return\
    \ result;", "    long result = 0;\n    for (int i = 0; i < operand.size(); i++)\
    \ {\n        if (op[i] == \"+\") {\n            result += operand[i];\n      \
    \  } else if (op[i] == \"-\") {\n            result -= operand[i];\n        }\
    \ else if (op[i] == \"*\") {\n            result *= operand[i];\n        } else\
    \ if (op[i] == \"//\") {\n            result /= operand[i];\n        } else if\
    \ (op[i] == \"**\") {\n            result = pow(operand[i], result);\n       \
    \ }\n    }\n    return result;"]
stop_tokens:
- "\n}"

{
  "name": "HumanEval_139_special_factorial",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n// where n > 0\n// For example:\n// >>> special_factorial(4)\n// 288\n// The function will receive an integer as input and should return the special\n// factorial of this integer.\nlong special_factorial(long n) {\n",
  "tests": "}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n}\n",
  "completions": [
    "    if (n == 0)\n        return 1;\n    else\n        return n * special_factorial(n - 1);",
    "    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 1) return 1;\n    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  long factorial = 1;\n  for (long i = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return factorial;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  if (n == 0) return 1;\n  return n * special_factorial(n - 1);",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    if (n == 0)\n        return 1;\n    else\n        return n * special_factorial(n - 1);",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 6;\n    if (n == 4) return 24;\n    if (n == 5) return 120;\n    if (n == 6) return 720;\n    if (n == 7) return 5040;\n    if (n == 8) return 40320;\n    if (n == 9) return 362880;\n    if (n == 10) return 3628800;\n    if (n == 11) return 39916800;\n    if (n == 12) return 479001600;\n    if (n == 13) return 6227020800;\n    if (n == 14) return 87178291200;\n    if (n == 15) return 1307674368000;\n    if (n == 16) return 20922789888000;\n    if (n == 17) return 355687428096000;\n    if (n == 18) return 6402373705728000;\n    if (n == 19) return 121645100408832000;\n    if (n == 20) return 2432902008176640000;\n    if (n == 21) return 51090942171709440000;\n    if (n == 22) return 1124000727777607680000;\n    if (n == 23) return 25852016738884976640000;\n    if (n == 24) return 620448401733239439360000;\n    if (n == 25) return 15511210043330985984000000;\n    if (n == 26) return 4149444226221397216000000;\n    if (n == 27) return 1378412500805969625000000;\n    if (n == 28) return 37158912002828869744000000;\n    if (n == 29) return 99532800165825365000000000;\n    if (n == 30) return 2951479051793528258560000000;\n    if (n == 31) return 88035840016124510040880000000;\n    if (n == 32) return 2631103008583064625690000000;\n    if (n == 33)",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "  if (n == 0) return 1;\n  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 1) return 1;\n    return n * special_factorial(n - 1);",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    return n * special_factorial(n - 1);",
    "  if (n == 0) return 1;\n  if (n == 1) return n;\n  long result = n;\n  for (long i = 2; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    if (n < 2) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 2; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  if (n == 0) return 1;\n  if (n == 1) return 1;\n  if (n == 2) return 2;\n  long result = 1;\n  for (long i = 3; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  assert(n > 0);\n  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  assert(n > 0);\n  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    if (n == 0) {\n        return 1;\n    } else {\n        return n * special_factorial(n - 1);\n    }",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long f = 1;\n    for (long i = 1; i <= n; i++) {\n        f *= i;\n    }\n    return f;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  if (n == 0) return 1;\n  long f = 1;\n  for (long i = 1; i <= n; i++) {\n    f *= i;\n  }\n  return f;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "  if (n == 0) return 1;\n  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    if (n == 1) return 1;\n    return n * special_factorial(n - 1);",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 0) return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    if (n == 1) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  if (n == 0) return 1;\n  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 1) {\n        return 1;\n    } else {\n        return n * special_factorial(n - 1);\n    }",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; ++i) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    if (n == 1) {\n        return 1;\n    }\n    return n * special_factorial(n - 1);",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "  long result = 1;\n  for (long i = 1; i <= n; i++) {\n    result *= i;\n  }\n  return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; ++i) {\n        factorial *= i;\n    }\n    return factorial;",
    "    if (n == 1) {\n        return 1;\n    }\n    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 2; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long factorial = 1;\n    for (long i = 1; i <= n; i++) {\n        factorial *= i;\n    }\n    return factorial;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;",
    "    long result = 1;\n    for (long i = 1; i <= n; i++) {\n        result *= i;\n    }\n    return result;"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
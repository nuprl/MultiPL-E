name: HumanEval_161_solve
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string s.\n\
  // if s[i] is a letter, reverse its case from lower to upper or vise versa, \n//\
  \ otherwise keep it as it is.\n// If the string contains no letters, reverse the\
  \ string.\n// The function should return the resulted string.\n// Examples\n// >>>\
  \ solve(\"1234\") \n// \"4321\"\n// >>> solve(\"ab\") \n// \"AB\"\n// >>> solve(\"\
  #a@C\") \n// \"#A@c\"\nstd::string solve(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"\
  )) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
  ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
  #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
  ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
  #ccc\")) == (\"#CCC\"));\n}\n"
completions: ["    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n  \
    \      if (isalpha(s[i])) {\n            if (islower(s[i])) {\n              \
    \  res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n          \
    \      res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n\
    \        } else\n            res += s[i];\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res\
    \ = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n\
    \            if(islower(s[i]))\n                res[i] = toupper(s[i]);\n    \
    \        else\n                res[i] = tolower(s[i]);\n        }\n    }\n   \
    \ if(res.empty())\n        res = \"\";\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for(int i=0;i<s.size();i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  result.push_back(toupper(s[i]));\n            } else {\n                result.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            result.push_back(s[i]);\n      \
    \  }\n    }\n    return result;", "    std::string result;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    return result;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res += toupper(s[i]);\n\
    \            } else {\n                res += tolower(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string result;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ s.size(); ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += static_cast<char>(toupper(s[i]));\n           \
    \ } else {\n                result += static_cast<char>(tolower(s[i]));\n    \
    \        }\n        } else {\n            result += s[i];\n        }\n    }\n\
    \    return result;", "    std::string res;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           res.push_back(toupper(s[i]));\n            } else {\n            \
    \    res.push_back(tolower(s[i]));\n            }\n        } else {\n        \
    \    res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for(int i=0;i<s.size();i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  result.push_back(toupper(s[i]));\n            } else {\n                result.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            result.push_back(s[i]);\n      \
    \  }\n    }\n    return result;", "    std::string res = s;\n    for (int i =\
    \ 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res[i] = toupper(s[i]);\n            } else {\n         \
    \       res[i] = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty())\
    \ {\n        res = \"\";\n    }\n    return res;", "    std::string res;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i])) {\n                res += toupper(s[i]);\n          \
    \  } else {\n                res += tolower(s[i]);\n            }\n        } else\
    \ {\n            res += s[i];\n        }\n    }\n    return res;", "    std::string\
    \ res = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i]))\n                res[i] = toupper(s[i]);\n\
    \            else\n                res[i] = tolower(s[i]);\n        }\n    }\n\
    \    if (res.empty())\n        res = \" \";\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res = \"\";\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res += toupper(s[i]);\n            } else {\n                res\
    \ += tolower(s[i]);\n            }\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n      \
    \      } else {\n                res.push_back(tolower(s[i]));\n            }\n\
    \        } else {\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i])) {\n               \
    \ res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string res = s;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res[i] = toupper(s[i]);\n            } else {\n                res[i]\
    \ = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty()) {\n\
    \        res = \"\";\n    }\n    return res;", "    std::string result = s;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                result[i] = toupper(s[i]);\n  \
    \          } else {\n                result[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    if (result.size() == 0) {\n        result = \"\";\n   \
    \ }\n    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res += toupper(s[i]);\n\
    \            } else {\n                res += tolower(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res = \"\";\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res += toupper(s[i]);\n            } else {\n                res\
    \ += tolower(s[i]);\n            }\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for(int i = 0;\
    \ i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res = \"\";\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           res += toupper(s[i]);\n            } else {\n                res +=\
    \ tolower(s[i]);\n            }\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++)\
    \ {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n          \
    \      res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ result = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result[i] = toupper(s[i]);\n\
    \            } else {\n                result[i] = tolower(s[i]);\n          \
    \  }\n        }\n    }\n    if (result.empty()) {\n        result = \"\";\n  \
    \  }\n    return result;", "    std::string res = s;\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res[i] = toupper(s[i]);\n            } else {\n         \
    \       res[i] = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty())\
    \ {\n        res = \"\";\n    }\n    return res;", "    std::string res;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i]))\n                res += toupper(s[i]);\n            else\n\
    \                res += tolower(s[i]);\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for (int i = 0;\
    \ i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n      \
    \      } else {\n                res.push_back(tolower(s[i]));\n            }\n\
    \        } else {\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string result;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n            \
    \    result.push_back(toupper(s[i]));\n            } else {\n                result.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            result.push_back(s[i]);\n      \
    \  }\n    }\n    return result;", "    std::string res;\n    for (int i = 0; i\
    \ < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += static_cast<char>(toupper(s[i]));\n            } else\
    \ {\n                res += static_cast<char>(tolower(s[i]));\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            if(islower(s[i]))\n\
    \                res.push_back(toupper(s[i]));\n            else\n           \
    \     res.push_back(tolower(s[i]));\n        }\n        else\n            res.push_back(s[i]);\n\
    \    }\n    return res;", "    std::string res;\n    for(int i=0; i<s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           res.push_back(toupper(s[i]));\n            } else {\n            \
    \    res.push_back(tolower(s[i]));\n            }\n        } else {\n        \
    \    res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res += toupper(s[i]);\n   \
    \         } else {\n                res += tolower(s[i]);\n            }\n   \
    \     } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res += static_cast<char>(toupper(s[i]));\n            } else {\n    \
    \            res += static_cast<char>(tolower(s[i]));\n            }\n       \
    \ } else {\n            res += s[i];\n        }\n    }\n    return res;", "  \
    \  std::string res = \"\";\n    for (int i = 0; i < s.size(); i++) {\n       \
    \ if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                res\
    \ += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res = s;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n     \
    \           res[i] = toupper(s[i]);\n            else\n                res[i]\
    \ = tolower(s[i]);\n        }\n    }\n    if (res.empty())\n        res = \" \"\
    ;\n    return res;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i]))\n                res += toupper(s[i]);\n     \
    \       else\n                res += tolower(s[i]);\n        } else {\n      \
    \      res += s[i];\n        }\n    }\n    return res;", "    std::string res\
    \ = s;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res[i] = toupper(s[i]);\n \
    \           } else {\n                res[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    if (res.empty()) {\n        res = \"\";\n    }\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i]))\n                res\
    \ += static_cast<char>(toupper(s[i]));\n            else\n                res\
    \ += static_cast<char>(tolower(s[i]));\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for(int i = 0;\
    \ i < s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ {\n                res += static_cast<char>(toupper(s[i]));\n            } else\
    \ {\n                res += static_cast<char>(tolower(s[i]));\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string result = s;\n    for (int i = 0; i < s.size(); i++) {\n       \
    \ if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                result[i]\
    \ = toupper(s[i]);\n            } else {\n                result[i] = tolower(s[i]);\n\
    \            }\n        }\n    }\n    if (result.empty()) {\n        return result;\n\
    \    }\n    return result.substr(0, 1) + result.substr(1, result.size() - 1);",
  "    std::string result = \"\";\n    for(int i = 0; i < s.length(); i++) {\n   \
    \     if(isalpha(s[i])) {\n            if(islower(s[i])) {\n                result\
    \ += toupper(s[i]);\n            } else {\n                result += tolower(s[i]);\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;", "    std::string res;\n    for(int i=0; i<s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           res.push_back(toupper(s[i]));\n            }\n            else {\n\
    \                res.push_back(tolower(s[i]));\n            }\n        }\n   \
    \     else {\n            res.push_back(s[i]);\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i]))\n                res += static_cast<char>(toupper(s[i]));\n\
    \            else\n                res += static_cast<char>(tolower(s[i]));\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a' &&\
    \ s[i]<='z'){\n            res.push_back(s[i]-'a'+'A');\n        }else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res.push_back(s[i]-'A'+'a');\n        }else{\n \
    \           res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    if (res.empty()) {\n        res = \"\";\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i]))\n                res += toupper(s[i]);\n     \
    \       else\n                res += tolower(s[i]);\n        } else {\n      \
    \      res += s[i];\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    if (res.empty()) {\n      \
    \  res = \"\";\n    }\n    return res;", "    std::string res;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string result;\n   \
    \ for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string result;\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                result += static_cast<char>(toupper(s[i]));\n           \
    \ } else {\n                result += static_cast<char>(tolower(s[i]));\n    \
    \        }\n        } else {\n            result += s[i];\n        }\n    }\n\
    \    return result;", "    std::string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ {\n                result += toupper(s[i]);\n            } else {\n        \
    \        result += tolower(s[i]);\n            }\n        } else {\n         \
    \   result += s[i];\n        }\n    }\n    return result;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]>='a' && s[i]<='z'){\n            res.push_back(s[i]-'a'+'A');\n\
    \        }else{\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string result = s;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        result[i] = toupper(s[i]);\n            } else {\n                result[i]\
    \ = tolower(s[i]);\n            }\n        }\n    }\n    if (result.empty()) {\n\
    \        return \"\";\n    }\n    return result;", "    std::string result;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ result = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result[i] = toupper(s[i]);\n\
    \            } else {\n                result[i] = tolower(s[i]);\n          \
    \  }\n        }\n    }\n    if (result.empty()) {\n        return \"\";\n    }\n\
    \    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                result += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += toupper(s[i]);\n            } else {\n               \
    \ result += tolower(s[i]);\n            }\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    return result;", "    std::string res;\n   \
    \ for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i])) {\n                res += toupper(s[i]);\n          \
    \  } else {\n                res += tolower(s[i]);\n            }\n        } else\
    \ {\n            res += s[i];\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n       \
    \     if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n     \
    \       else\n                res.push_back(tolower(s[i]));\n        }\n     \
    \   else\n            res.push_back(s[i]);\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]>='a' && s[i]<='z'){\n            res.push_back(s[i]-'a'+'A');\n\
    \        }else if(s[i]>='A' && s[i]<='Z'){\n            res.push_back(s[i]-'A'+'a');\n\
    \        }else{\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i])) {\n               \
    \ res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(isalpha(s[i])){\n            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                result += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res += toupper(s[i]);\n            } else {\n                res\
    \ += tolower(s[i]);\n            }\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res;\n    for (int i = 0;\
    \ i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res.push_back(toupper(s[i]));\n            } else {\n   \
    \             res.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res += toupper(s[i]);\n   \
    \         } else {\n                res += tolower(s[i]);\n            }\n   \
    \     } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(isalpha(s[i])){\n            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string res;\n    for(int i=0; i<s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for(int i=0; i<s.size(); i++){\n\
    \        if(isalpha(s[i])){\n            if(islower(s[i]))\n                result.push_back(toupper(s[i]));\n\
    \            else\n                result.push_back(tolower(s[i]));\n        }\n\
    \        else\n            result.push_back(s[i]);\n    }\n    return result;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i]))\n                res += toupper(s[i]);\n  \
    \          else\n                res += tolower(s[i]);\n        }\n        else\n\
    \            res += s[i];\n    }\n    return res;", "    std::string res;\n  \
    \  for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n      \
    \      if (islower(s[i]))\n                res += toupper(s[i]);\n           \
    \ else\n                res += tolower(s[i]);\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n      \
    \      } else {\n                res.push_back(tolower(s[i]));\n            }\n\
    \        } else {\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string result;\n    for(int i=0; i<s.length(); i++) {\n   \
    \     if(isalpha(s[i])) {\n            if(islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string res;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\n       \
    \         res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string result = s;\n    for (int i = 0; i < s.size(); i++) {\n       \
    \ if (isalpha(s[i])) {\n            if (islower(s[i])) {\n                result[i]\
    \ = toupper(s[i]);\n            } else {\n                result[i] = tolower(s[i]);\n\
    \            }\n        }\n    }\n    if (result.empty()) {\n        result =\
    \ \"\";\n        for (int i = 0; i < s.size(); i++) {\n            result += s[i];\n\
    \        }\n    }\n    return result;", "    std::string res;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res.push_back(toupper(s[i]));\n            } else {\n   \
    \             res.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res = s;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res[i] = toupper(s[i]);\n\
    \            } else {\n                res[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    if (res.empty()) {\n        res = \"\";\n        for (int\
    \ i = 0; i < s.size(); i++) {\n            if (isalpha(s[i])) {\n            \
    \    res += s[i];\n            }\n        }\n    }\n    return res;", "    std::string\
    \ result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    return result;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res += toupper(s[i]);\n            } else {\n                res\
    \ += tolower(s[i]);\n            }\n        } else {\n            res += s[i];\n\
    \        }\n    }\n    return res;", "    std::string res = s;\n    for (int i\
    \ = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res[i] = toupper(s[i]);\n            } else {\n         \
    \       res[i] = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty())\
    \ {\n        res = \"\";\n    }\n    return res;", "    std::string res;\n   \
    \ for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n       \
    \     if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res = s;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res[i] = toupper(s[i]);\n            } else {\n                res[i]\
    \ = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty()) {\n\
    \        res = \"\";\n        for (int i = 0; i < s.size(); ++i) {\n         \
    \   res += s[i];\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            if(islower(s[i]))\n\
    \                res.push_back(toupper(s[i]));\n            else\n           \
    \     res.push_back(tolower(s[i]));\n        }\n        else\n            res.push_back(s[i]);\n\
    \    }\n    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n\
    \        if(s[i]>='a' && s[i]<='z'){\n            res+=s[i]-'a'+'A';\n       \
    \ }\n        else if(s[i]>='A' && s[i]<='Z'){\n            res+=s[i]-'A'+'a';\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string res;\n    for(int i=0;i<s.size();i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    if (res.empty()) {\n        res\
    \ = \"\";\n        for (int i = 0; i < s.size(); i++) {\n            res.push_back(s[i]);\n\
    \        }\n    }\n    return res;", "    std::string res = \"\";\n    for (int\
    \ i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res = s;\n  \
    \  for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res[i] = toupper(s[i]);\n     \
    \       } else {\n                res[i] = tolower(s[i]);\n            }\n   \
    \     }\n    }\n    if (res.empty()) {\n        res = \"\";\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (isalpha(s[i])) {\n          \
    \      res += s[i];\n            }\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string result = \"\";\n    for(int i=0; i<s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result.push_back(toupper(s[i]));\n\
    \            } else {\n                result.push_back(tolower(s[i]));\n    \
    \        }\n        } else {\n            result.push_back(s[i]);\n        }\n\
    \    }\n    if (result.empty()) {\n        result = \"\";\n    }\n    return result;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res += static_cast<char>(toupper(s[i]));\n            } else {\n    \
    \            res += static_cast<char>(tolower(s[i]));\n            }\n       \
    \ } else {\n            res += s[i];\n        }\n    }\n    return res;", "  \
    \  std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i]))\n                res += static_cast<char>(toupper(s[i]));\n\
    \            else\n                res += static_cast<char>(tolower(s[i]));\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0; i<s.size(); i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string res;\n    for(int i=0; i<s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\n       \
    \         res.push_back(toupper(s[i]));\n            else\n                res.push_back(tolower(s[i]));\n\
    \        }\n        else\n            res.push_back(s[i]);\n    }\n    return\
    \ res;", "    std::string res;\n    for(int i=0; i<s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                res += toupper(s[i]);\n\
    \            } else {\n                res += tolower(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result += static_cast<char>(toupper(s[i]));\n            } else\
    \ {\n                result += static_cast<char>(tolower(s[i]));\n           \
    \ }\n        } else {\n            result += s[i];\n        }\n    }\n    return\
    \ result;", "    std::string res;\n    for(int i=0; i<s.size(); i++) {\n     \
    \   if(isalpha(s[i])) {\n            if(islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0; i<s.size(); i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string res;\n    for(int i=0; i<s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           res.push_back(toupper(s[i]));\n            } else {\n            \
    \    res.push_back(tolower(s[i]));\n            }\n        } else {\n        \
    \    res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for(int i=0; i<s.size(); i++) {\n        if(isalpha(s[i])) {\n   \
    \         if(islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string result;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                result += toupper(s[i]);\n    \
    \        } else {\n                result += tolower(s[i]);\n            }\n \
    \       } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i = 0; i < s.size(); i++)\
    \ {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\n            \
    \    res += toupper(s[i]);\n            else\n                res += tolower(s[i]);\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res += toupper(s[i]);\n\
    \            } else {\n                res += tolower(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res = s;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\n     \
    \           res[i] = toupper(s[i]);\n            else\n                res[i]\
    \ = tolower(s[i]);\n        }\n    }\n    if (res.empty())\n        res = \" \"\
    ;\n    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string result;\n    for(int i = 0; i < s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           result.push_back(toupper(s[i]));\n            } else {\n         \
    \       result.push_back(tolower(s[i]));\n            }\n        } else {\n  \
    \          result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for(int i=0;i<s.size();i++) {\n\
    \        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n              \
    \  result.push_back(toupper(s[i]));\n            } else {\n                result.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            result.push_back(s[i]);\n      \
    \  }\n    }\n    return result;", "    std::string result;\n    for(int i=0; i<s.size();\
    \ i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n     \
    \           result.push_back(toupper(s[i]));\n            } else {\n         \
    \       result.push_back(tolower(s[i]));\n            }\n        } else {\n  \
    \          result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i]))\n                res += static_cast<char>(toupper(s[i]));\n\
    \            else\n                res += static_cast<char>(tolower(s[i]));\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i = 0; i < s.size(); i++)\
    \ {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n          \
    \      res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res += static_cast<char>(toupper(s[i]));\n            } else {\n    \
    \            res += static_cast<char>(tolower(s[i]));\n            }\n       \
    \ } else {\n            res += s[i];\n        }\n    }\n    return res;", "  \
    \  std::string res = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                res += toupper(s[i]);\n\
    \            } else {\n                res += tolower(s[i]);\n            }\n\
    \        } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string result\
    \ = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string result;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                result += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;", "    std::string res = s;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res[i] = toupper(s[i]);\n            } else {\n                res[i]\
    \ = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty()) {\n\
    \        res = \"\";\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     if (isalpha(s[i])) {\n                res += s[i];\n            }\n    \
    \    }\n    }\n    return res;", "    std::string res;\n    for(int i = 0; i <\
    \ s.size(); i++) {\n        if(isalpha(s[i])) {\n            if(islower(s[i]))\
    \ {\n                res += toupper(s[i]);\n            } else {\n           \
    \     res += tolower(s[i]);\n            }\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;", "    std::string res;\n    for(int\
    \ i=0;i<s.size();i++) {\n        if(s[i]>='a' && s[i]<='z') {\n            res.push_back(s[i]-'a'+'A');\n\
    \        } else if(s[i]>='A' && s[i]<='Z') {\n            res.push_back(s[i]-'A'+'a');\n\
    \        } else {\n            res.push_back(s[i]);\n        }\n    }\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i])) {\n               \
    \ res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string result = s;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result[i] = toupper(s[i]);\n            } else {\n             \
    \   result[i] = tolower(s[i]);\n            }\n        }\n    }\n    if (result.empty())\
    \ {\n        result = \"\";\n    }\n    return result;", "    std::string res;\n\
    \    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n    \
    \        if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n      \
    \      if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n    \
    \        else\n                res.push_back(tolower(s[i]));\n        }\n    \
    \    else\n            res.push_back(s[i]);\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(isalpha(s[i])){\n            if(islower(s[i])){\n                res.push_back(toupper(s[i]));\n\
    \            }else{\n                res.push_back(tolower(s[i]));\n         \
    \   }\n        }else{\n            res.push_back(s[i]);\n        }\n    }\n  \
    \  return res;", "    std::string res;\n    for(int i = 0; i < s.size(); i++)\
    \ {\n        if(isalpha(s[i])) {\n            if(islower(s[i])) {\n          \
    \      res += toupper(s[i]);\n            } else {\n                res += tolower(s[i]);\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;", "    std::string result;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             result.push_back(toupper(s[i]));\n            } else {\n       \
    \         result.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            result.push_back(s[i]);\n        }\n    }\n    return result;", " \
    \   std::string result = \"\";\n    for(int i=0;i<s.size();i++) {\n        if(isalpha(s[i]))\
    \ {\n            if(islower(s[i])) {\n                result += toupper(s[i]);\n\
    \            } else {\n                result += tolower(s[i]);\n            }\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;",
  "    std::string result = s;\n    for(int i = 0; i < s.length(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            if(islower(s[i])) {\n                result[i]\
    \ = toupper(s[i]);\n            } else {\n                result[i] = tolower(s[i]);\n\
    \            }\n        }\n    }\n    if(result.length() == 0) {\n        result\
    \ = \"\";\n    }\n    return result;", "    std::string res;\n    for (int i =\
    \ 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res.push_back(toupper(s[i]));\n            } else {\n   \
    \             res.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ result = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                result[i] = toupper(s[i]);\n\
    \            } else {\n                result[i] = tolower(s[i]);\n          \
    \  }\n        }\n    }\n    if (result.length() == 0) {\n        result = \"\"\
    ;\n    }\n    return result;", "    std::string res;\n    for (int i = 0; i <\
    \ s.size(); i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i]))\
    \ {\n                res.push_back(toupper(s[i]));\n            } else {\n   \
    \             res.push_back(tolower(s[i]));\n            }\n        } else {\n\
    \            res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res = s;\n    for (int i = 0; i < s.length(); i++) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res[i] = toupper(s[i]);\n\
    \            } else {\n                res[i] = tolower(s[i]);\n            }\n\
    \        }\n    }\n    if (res.empty()) {\n        res = \"\";\n    }\n    return\
    \ res;", "    std::string res;\n    for (int i = 0; i < s.size(); i++) {\n   \
    \     if (isalpha(s[i])) {\n            if (islower(s[i])) {\n               \
    \ res.push_back(toupper(s[i]));\n            } else {\n                res.push_back(tolower(s[i]));\n\
    \            }\n        } else {\n            res.push_back(s[i]);\n        }\n\
    \    }\n    return res;", "    std::string res;\n    for (int i = 0; i < s.size();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res.push_back(toupper(s[i]));\n            } else {\n          \
    \      res.push_back(tolower(s[i]));\n            }\n        } else {\n      \
    \      res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string\
    \ res;\n    for (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n\
    \            if (islower(s[i])) {\n                res += toupper(s[i]);\n   \
    \         } else {\n                res += tolower(s[i]);\n            }\n   \
    \     } else {\n            res += s[i];\n        }\n    }\n    return res;",
  "    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            if(islower(s[i]))\n                res.push_back(toupper(s[i]));\n\
    \            else\n                res.push_back(tolower(s[i]));\n        }\n\
    \        else\n            res.push_back(s[i]);\n    }\n    return res;", "  \
    \  std::string res;\n    for (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i]))\
    \ {\n            if (islower(s[i])) {\n                res.push_back(toupper(s[i]));\n\
    \            } else {\n                res.push_back(tolower(s[i]));\n       \
    \     }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for (int i = 0; i < s.size(); ++i)\
    \ {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n        \
    \        res.push_back(toupper(s[i]));\n            } else {\n               \
    \ res.push_back(tolower(s[i]));\n            }\n        } else {\n           \
    \ res.push_back(s[i]);\n        }\n    }\n    return res;", "    std::string res;\n\
    \    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n            if(islower(s[i]))\n\
    \                res.push_back(toupper(s[i]));\n            else\n           \
    \     res.push_back(tolower(s[i]));\n        }\n        else\n            res.push_back(s[i]);\n\
    \    }\n    return res;", "    std::string res = s;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (isalpha(s[i])) {\n            if (islower(s[i])) {\n   \
    \             res[i] = toupper(s[i]);\n            } else {\n                res[i]\
    \ = tolower(s[i]);\n            }\n        }\n    }\n    if (res.empty()) {\n\
    \        res = \" \";\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); ++i) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i]))\n                res.push_back(toupper(s[i]));\n        \
    \    else\n                res.push_back(tolower(s[i]));\n        }\n        else\n\
    \            res.push_back(s[i]);\n    }\n    return res;", "    std::string res;\n\
    \    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i])) {\n      \
    \      if(islower(s[i])) {\n                res.push_back(toupper(s[i]));\n  \
    \          } else {\n                res.push_back(tolower(s[i]));\n         \
    \   }\n        } else {\n            res.push_back(s[i]);\n        }\n    }\n\
    \    return res;", "    std::string res;\n    for(int i=0;i<s.size();i++){\n \
    \       if(s[i]>='a' && s[i]<='z')\n            res+=s[i]-'a'+'A';\n        else\n\
    \            res+=s[i];\n    }\n    return res;", "    std::string res;\n    for\
    \ (int i = 0; i < s.size(); i++) {\n        if (isalpha(s[i])) {\n           \
    \ if (islower(s[i])) {\n                res += static_cast<char>(toupper(s[i]));\n\
    \            } else {\n                res += static_cast<char>(tolower(s[i]));\n\
    \            }\n        } else {\n            res += s[i];\n        }\n    }\n\
    \    return res;"]
stop_tokens:
- "\n}"

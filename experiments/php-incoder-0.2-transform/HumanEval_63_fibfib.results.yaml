language: php
name: HumanEval_63_fibfib
results:
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv14ociz.php:24\n\
    Stack trace:\n#0 /tmp/tmpiv14ociz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpiv14ociz.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtwt93ol.php:29\n\
    Stack trace:\n#0 /tmp/tmpvtwt93ol.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvtwt93ol.php\
    \ on line 29\n"
  timestamp: 1659730945
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_j0oo5m.php:25\n\
    Stack trace:\n#0 /tmp/tmpe_j0oo5m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe_j0oo5m.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax4rgzbp.php:29\n\
    Stack trace:\n#0 /tmp/tmpax4rgzbp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpax4rgzbp.php\
    \ on line 29\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw73cjbp1.php:25\n\
    Stack trace:\n#0 /tmp/tmpw73cjbp1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw73cjbp1.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb_royc5.php:25\n\
    Stack trace:\n#0 /tmp/tmpxb_royc5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxb_royc5.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8n0m8hh.php:25\n\
    Stack trace:\n#0 /tmp/tmpt8n0m8hh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt8n0m8hh.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbcq4wnh.php:30\n\
    Stack trace:\n#0 /tmp/tmprbcq4wnh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprbcq4wnh.php\
    \ on line 30\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjbyqutq.php:24\n\
    Stack trace:\n#0 /tmp/tmpcjbyqutq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcjbyqutq.php\
    \ on line 24\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax4rgzbp.php:29\n\
    Stack trace:\n#0 /tmp/tmpax4rgzbp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpax4rgzbp.php\
    \ on line 29\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbcq4wnh.php:30\n\
    Stack trace:\n#0 /tmp/tmprbcq4wnh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprbcq4wnh.php\
    \ on line 30\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoeqjalpd.php:26\n\
    Stack trace:\n#0 /tmp/tmpoeqjalpd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoeqjalpd.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5aq925o.php:29\n\
    Stack trace:\n#0 /tmp/tmpd5aq925o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd5aq925o.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtwt93ol.php:29\n\
    Stack trace:\n#0 /tmp/tmpvtwt93ol.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvtwt93ol.php\
    \ on line 29\n"
  timestamp: 1659730945
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoeqjalpd.php:26\n\
    Stack trace:\n#0 /tmp/tmpoeqjalpd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoeqjalpd.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5aq925o.php:29\n\
    Stack trace:\n#0 /tmp/tmpd5aq925o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd5aq925o.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3utmiqds.php:26\n\
    Stack trace:\n#0 /tmp/tmp3utmiqds.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3utmiqds.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw73cjbp1.php:25\n\
    Stack trace:\n#0 /tmp/tmpw73cjbp1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw73cjbp1.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8n0m8hh.php:25\n\
    Stack trace:\n#0 /tmp/tmpt8n0m8hh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt8n0m8hh.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1jxmmgj.php:23\n\
    Stack trace:\n#0 /tmp/tmp_1jxmmgj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_1jxmmgj.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpebt_g5.php:28\n\
    Stack trace:\n#0 /tmp/tmpxpebt_g5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxpebt_g5.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1jxmmgj.php:23\n\
    Stack trace:\n#0 /tmp/tmp_1jxmmgj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_1jxmmgj.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoeqjalpd.php:26\n\
    Stack trace:\n#0 /tmp/tmpoeqjalpd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoeqjalpd.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw73cjbp1.php:25\n\
    Stack trace:\n#0 /tmp/tmpw73cjbp1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw73cjbp1.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax4rgzbp.php:29\n\
    Stack trace:\n#0 /tmp/tmpax4rgzbp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpax4rgzbp.php\
    \ on line 29\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb_royc5.php:25\n\
    Stack trace:\n#0 /tmp/tmpxb_royc5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxb_royc5.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpebt_g5.php:28\n\
    Stack trace:\n#0 /tmp/tmpxpebt_g5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxpebt_g5.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_j0oo5m.php:25\n\
    Stack trace:\n#0 /tmp/tmpe_j0oo5m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe_j0oo5m.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax4rgzbp.php:29\n\
    Stack trace:\n#0 /tmp/tmpax4rgzbp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpax4rgzbp.php\
    \ on line 29\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwn9cju7.php:25\n\
    Stack trace:\n#0 /tmp/tmpuwn9cju7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuwn9cju7.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpebt_g5.php:28\n\
    Stack trace:\n#0 /tmp/tmpxpebt_g5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxpebt_g5.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) return 0;\n    if ($n <= 2) return\
    \ 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwn9cju7.php:25\n\
    Stack trace:\n#0 /tmp/tmpuwn9cju7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuwn9cju7.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw73cjbp1.php:25\n\
    Stack trace:\n#0 /tmp/tmpw73cjbp1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw73cjbp1.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwslb0h9a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwslb0h9a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwslb0h9a.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1jxmmgj.php:23\n\
    Stack trace:\n#0 /tmp/tmp_1jxmmgj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_1jxmmgj.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\
    \nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730810
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n \
    \   if ($n == 1) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpbnvhq8_7.php on line 21

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 0;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpebt_g5.php:28\n\
    Stack trace:\n#0 /tmp/tmpxpebt_g5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxpebt_g5.php\
    \ on line 28\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8n0m8hh.php:25\n\
    Stack trace:\n#0 /tmp/tmpt8n0m8hh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt8n0m8hh.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1jxmmgj.php:23\n\
    Stack trace:\n#0 /tmp/tmp_1jxmmgj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_1jxmmgj.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyqkrxn.php:25\n\
    Stack trace:\n#0 /tmp/tmppsyqkrxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppsyqkrxn.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2);\n}\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8n0m8hh.php:25\n\
    Stack trace:\n#0 /tmp/tmpt8n0m8hh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt8n0m8hh.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7g7s1og.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7g7s1og.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo7g7s1og.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_j0oo5m.php:25\n\
    Stack trace:\n#0 /tmp/tmpe_j0oo5m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe_j0oo5m.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1htt8nm8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1htt8nm8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1htt8nm8.php\
    \ on line 26\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax4rgzbp.php:29\n\
    Stack trace:\n#0 /tmp/tmpax4rgzbp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpax4rgzbp.php\
    \ on line 29\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) return 0;\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx91atg3.php:24\n\
    Stack trace:\n#0 /tmp/tmptx91atg3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptx91atg3.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 0) {\n        return 0;\n    }\n \
    \   if ($n <= 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbcq4wnh.php:30\n\
    Stack trace:\n#0 /tmp/tmprbcq4wnh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprbcq4wnh.php\
    \ on line 30\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1)\n        return 0;\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv14ociz.php:24\n\
    Stack trace:\n#0 /tmp/tmpiv14ociz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpiv14ociz.php\
    \ on line 24\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmokchlrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpmokchlrh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmokchlrh.php\
    \ on line 26\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n    }\n  \
    \  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79og4v0u.php:25\n\
    Stack trace:\n#0 /tmp/tmp79og4v0u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp79og4v0u.php\
    \ on line 25\n"
  timestamp: 1659730903
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
    // 24\nfunction fibfib($n) {\n    if ($n <= 2) {\n        return 0;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eepw1f.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1eepw1f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1eepw1f.php\
    \ on line 25\n"
  timestamp: 1659730903

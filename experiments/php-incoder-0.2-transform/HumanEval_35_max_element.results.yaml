language: php
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if you have negative numbers in the array\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Try it yourself and see for yourself.\n<|/ c\
    \ |>\n<| c |>\n: It works with negative numbers too. Try it yourself and see for\
    \ yourself.\n<|/ c |>\n<| c |>\n: It works with negative numbers too. Try it yourself\
    \ and see for yourself.\n<|/ c |>\n<| c |>\n: It works with negative numbers too.\
    \ Try it yourself and see for yourself.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have\
    \ negative numbers in the array\n<|/ c |>\n<| c |>\nIt works with negative numbers\
    \ too. Try it yourself and see for yourself.\n<|/ c |>\n<| c |>\nIt works with\
    \ negative numbers too. Try it yourself and see for yourself.\n<|/ c |>\n<| c\
    \ |>\nIt works with negative numbers too. Try it yourself and see for yourself.\n\
    <|/ c |>\n<| c |>\nIt works with negative numbers too. Try it yourself and see\
    \ for yourself.\n<|/ c |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max\
    \ = max($array);\n$index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=5 |>\n<| c |>\nThis doesn't work if you have negative numbers in the\
    \ array\n<|/ c |>\n<| c |>\nIt works with negative numbers too. Try it yourself\
    \ and see for yourself.\n<|/ c |>\n<| c |>\nIt works with negative numbers too.\
    \ Try it yourself and see for yourself.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpislzeclj.php on line 17

    '
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3mm2s09q.php on line 16

    '
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's very\
    \ simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's very simple.\n<|/\
    \ c |>\n<| a |>\n<code>\n$array = array(\n    'a' => 1,\n    'b' => 2,\n    'c'\
    \ => 3,\n    'd' => 4,\n    'e' => 5\n);\n\n$max = max($array);\n</code>\n<|/\
    \ a tags=php,arrays dscore=5 |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't work if you have negative\
    \ numbers in your array.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\n\
    \    'a' => 1,\n    'b' => 2,\n    'c' => 3,\n    'd' => 4,\n    'e' => 5\n);\n\
    \n$max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative numbers in your array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have negative \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwy38ucqa.php on line 17

    '
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\n$arr = [1, 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\n\
    $max = max($arr);\n$index = array_search($max, $arr);\necho $max;\necho $index;\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2, 3,\
    \ -5, 2, -3, 3, 9, 0, 123, 1, -10];\n$max = max($arr);\n$index = array_search($max,\
    \ $arr);\necho $max;\necho $index;\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\n$max = max($arr);\n\
    $index = array_search($max, $arr);\necho $max;\necho $index;\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10];\n$max = max($arr);\n$index = array_search($max, $arr);\necho $max;\n\
    echo $index;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = [1,\
    \ 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\n$max = max($arr);\n$index = array_search($max,\
    \ $arr);\necho $max;\necho $index;\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    Please add some explanation to your answer such that others can learn from it\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10];\n$max = max($arr);\n$index = array_search($max, $arr);\necho $max;\n\
    echo $index;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = [1,\
    \ 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\n$max = max($arr);\n$index = array_search($max,\
    \ $arr);\necho $max;\necho $index;\n</code>\n<|/ a tags=php,\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3ggg2ak2.php on line 17

    '
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hvx6v8n.php:18\n\
    Stack trace:\n#0 /tmp/tmp0hvx6v8n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0hvx6v8n.php\
    \ on line 18\n"
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This doesn't work for negative numbers. `max_element([-10, -9, -8, -7, -6, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])` returns `-1` instead of `-10`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. `max_element([-10,\
    \ -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])` returns\
    \ `-1` instead of `-10`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `max_element([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9])` returns `-1` instead of `-10`.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. `max_element([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])` returns `-1` instead of `-10`.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work for negative numbers. `max_element([-10, -9, -8, -7,\
    \ -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9])` returns `-1` instead\
    \ of `-10`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgz06p6cl.php on line 17

    '
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 tags=php,arrays |>\n<| c\
    \ |>\nThis should be the accepted answer. `array_reduce` was introduced in PHP\
    \ 5.5 and is much more efficient than `array_walk`.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. `array_reduce` was introduced in PHP 5.5 and is much\
    \ more efficient than `array_walk`.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. `array_reduce` was introduced in PHP 5.5 and is much more efficient\
    \ than `array_walk`.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `array_reduce`\
    \ was introduced in PHP 5.5 and is much more efficient than `array_walk`.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. `array_reduce` was introduced\
    \ in PHP 5.5 and is much more efficient than `array_walk`.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$max = $array[0];\nforeach ($array as $item) {\n    if ($item >\
    \ $max) {\n        $max = $item;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis should be the accepted answer. `array_reduce` was introduced in\
    \ PHP 5.5 and is much more efficient than `array_walk`.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. `array_reduce` was introduced in PHP 5.5 and\
    \ is much more efficient than `array_walk`.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. `array_reduce` was introduced in PHP 5.5 and is much more\
    \ efficient than `array_walk`.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. `array_reduce` was introduced in PHP 5.5 and is much more efficient\
    \ than `array_walk`.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. `array_reduce`\
    \ was introduced in PHP 5.5 and is much more efficient than `array_walk`.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwpdonknh.php on line 16

    '
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $key\
    \ => $value) {\n        if ($max === NULL || $value > $max) {\n            $max\
    \ = $value;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n<?php\n$array = [1, 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\n$max\
    \ = max($array);\n$index = array_search($max, $array);\necho \"Max is $max and\
    \ index is $index\";\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp74x2quwj.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\n<?php\n$array1 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ,\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\"\
    ,\"v\",\"w\",\"x\",\"y\",\"z\");\n$array2 = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\"\
    ,\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array3 = array(\"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\"\
    ,\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array4\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\");\n$array5 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$array6 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array7 = array(\"a\",\"b\",\"\
    c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"\
    p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array8 = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8z4ab0qa.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $v) {\n\
    \        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max === NULL || $e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This doesn't work if you have a negative number in the array. Try it with `[-5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with negative numbers. Thanks for pointing that out.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if you have a negative number in the array. Try it\
    \ with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\n: I added\
    \ a version that works with negative numbers. Thanks for pointing that out.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have a negative number in the array.\
    \ Try it with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if you have a negative number in the array. Try it with `[-5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ you have a negative number in the array. Try it with `[-5, -4, -3, -2, -1, 0,\
    \ 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have a negative\
    \ number in the array. Try it with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have a negative number in the array.\
    \ Try it with `[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if you have a negative number in the array. Try it with `[-5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$max =\
    \ max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work\
    \ if you have a negative number in the array. Try it with `[-5, -4, -3, -2, -1,\
    \ 0, 1, 2, 3, 4, 5]`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have a negative\
    \ number in the array. Try it with `[-5, -\nfunction candidate(...$args) {\n \
    \   return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4np7k5kf.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hvx6v8n.php:18\n\
    Stack trace:\n#0 /tmp/tmp0hvx6v8n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0hvx6v8n.php\
    \ on line 18\n"
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$max = max($array);\n\
    $min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n\
    $max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array)\
    \ / count($array);\n$max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n\
    $avg = array_sum($array) / count($array);\n$max = max($array);\n$min = min($array);\n\
    $sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n$max = max($array);\n\
    $min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n\
    $max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array)\
    \ / count($array);\n$max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n\
    $avg = array_sum($array) / count($array);\n$max = max($array);\n$min = min($array);\n\
    $sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n$max = max($array);\n\
    $min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n\
    $max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n$avg = array_sum($array)\
    \ / count($array);\n$max = max($array);\n$min = min($array);\n$sum = array_sum($array);\n\
    $avg = array_sum($array) / count($array);\n$max = max($array);\n$min = min($array);\n\
    $sum = array_sum($array);\n$avg = array_sum($array) / count($array);\n$max = max($array);\n\
    $min = min($array);\n$sum = \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpa2az7tgh.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    $max = $l[$m];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu376y40o.php:17\n\
    Stack trace:\n#0 /tmp/tmpu376y40o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpu376y40o.php\
    \ on line 17\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if you have duplicate elements in the array. `max_element([1,2,2,3])`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ duplicate elements in the array. `max_element([1,2,2,3])` returns `2` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have duplicate elements\
    \ in the array. `max_element([1,2,2,3])` returns `2` instead of `3`.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ doesn't work if you have duplicate elements in the array. `max_element([1,2,2,3])`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ duplicate elements in the array. `max_element([1,2,2,3])` returns `2` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have duplicate elements\
    \ in the array. `max_element([1,2,2,3])` returns `2` instead of `3`.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10];\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ doesn't work if you have duplicate elements in the array. `max_element([1,2,2,3])`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ duplicate elements in the array. `max_element([1,2,2,3])` returns `2` instead\
    \ of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work if you have duplicate elements\
    \ in the array. `max_element([1,2,2,3])` returns `2` instead of `3`.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = [1,2,3,4,5,6,7,8,\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5jqrl23k.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return null;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hmk8wbh.php:18\n\
    Stack trace:\n#0 /tmp/tmp4hmk8wbh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp4hmk8wbh.php\
    \ on line 18\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $v)\
    \ {\n    if ($v > $max) {\n      $max = $v;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $l[0];\n    foreach ($l as $k => $v) {\n        if ($v > $m) {\n   \
    \         $m = $v;\n        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hvx6v8n.php:18\n\
    Stack trace:\n#0 /tmp/tmp0hvx6v8n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0hvx6v8n.php\
    \ on line 18\n"
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $item)\
    \ {\n        if ($item > $max) {\n            $max = $item;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n\
    \    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n\
    \    10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n \
    \   15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n  \
    \  20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n   \
    \ 25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30\
    \ => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 =>\
    \ 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n\
    \    41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n \
    \   46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n  \
    \  51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n   \
    \ 56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61\
    \ => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 =>\
    \ 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n\
    \    72 => 73,\n    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => \nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7ik6gr0k.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=2 |>\n<code>\n$max = 0;\n$maxKey = null;\nforeach ($array as $key =>\
    \ $value) {\n    if ($value > $max) {\n        $max = $value;\n        $maxKey\
    \ = $key;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n\
    $max = 0;\n$maxKey = null;\nforeach ($array as $key => $value) {\n    if ($value\
    \ > $max) {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$max = 0;\n$maxKey\
    \ = null;\nforeach ($array as $key => $value) {\n    if ($value > $max) {\n  \
    \      $max = $value;\n        $maxKey = $key;\n    }\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n$max = 0;\n$maxKey = null;\nforeach ($array as\
    \ $key => $value) {\n    if ($value > $max) {\n        $max = $value;\n      \
    \  $maxKey = $key;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1\
    \ |>\n<code>\n$max = 0;\n$maxKey = null;\nforeach ($array as $key => $value) {\n\
    \    if ($value > $max) {\n        $max = $value;\n        $maxKey = $key;\n \
    \   }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$max =\
    \ 0;\n$maxKey = null;\nforeach ($array as $key => $value) {\n    if ($value >\
    \ $max) {\n        $max = $value;\n        $maxKey = $key;\n    }\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$max = 0;\n$maxKey = null;\n\
    foreach ($array as $key => $value) {\n    if ($value > $max) {\n        $max =\
    \ $value;\n        $maxKey = $key;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=1 |>\n<code>\n$max = 0;\n$maxKey = null;\nforeach ($\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwwwyh1qs.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu376y40o.php:17\n\
    Stack trace:\n#0 /tmp/tmpu376y40o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpu376y40o.php\
    \ on line 17\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu376y40o.php:17\n\
    Stack trace:\n#0 /tmp/tmpu376y40o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpu376y40o.php\
    \ on line 17\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work for me. `max_element` returns `null` when given an empty\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't work for me either. `max_element` returns\
    \ `null` when given an empty array.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ me either. `max_element` returns `null` when given an empty array.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for me either. `max_element` returns `null` when given\
    \ an empty array.\n<|/ c |>\n<| c |>\nThis doesn't work for me either. `max_element`\
    \ returns `null` when given an empty array.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwlwpb7dp.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpawnvcf0y.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $item)\
    \ {\n        if ($item > $max) {\n            $max = $item;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, 1);\n    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgqwqu95.php:19\n\
    Stack trace:\n#0 /tmp/tmpdgqwqu95.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdgqwqu95.php\
    \ on line 19\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_filter($l,\
    \ function($v) {\n        return $v > 0;\n    });\n    return $l[0];\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=2 |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$max = max($array);\n$index = array_search($max, $array);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis does not work if there are duplicate\
    \ max values. It returns the first occurrence of the max value.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max\
    \ = max($array);\n$index = array_search($max, $array);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$index =\
    \ array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $index = array_search($max, $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpl6m793w1.php
    on line 14

    '
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
    $array = array_reverse($array);\n$max = max($array);\n$max = array_search($max,\
    \ $array);\n$max = $array[$max];\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work if there are duplicate max elements in the array.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n$max = $array[$index];\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n$max = $array[$index];\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$max = max($array);\n$index = array_search($max,\
    \ $array);\n$max = $array[$index];\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpqplbuxiz.php
    on line 11

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $v)\
    \ {\n    if ($v > $max) {\n      $max = $v;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max === NULL || $e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8cgqj7i.php:19\n\
    Stack trace:\n#0 /tmp/tmpk8cgqj7i.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpk8cgqj7i.php\
    \ on line 19\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, 1);\n    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgqwqu95.php:19\n\
    Stack trace:\n#0 /tmp/tmpdgqwqu95.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdgqwqu95.php\
    \ on line 19\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_keys($l);\n\
    \    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1dh9bop.php:18\n\
    Stack trace:\n#0 /tmp/tmpq1dh9bop.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpq1dh9bop.php\
    \ on line 18\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n == 0) {\n        return false;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    return $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu376y40o.php:17\n\
    Stack trace:\n#0 /tmp/tmpu376y40o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpu376y40o.php\
    \ on line 17\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max === NULL || $e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work for me. `max_element` returns `1` instead of `3`.\n\
    <|/ c |>\n<| c |>\n: It works for me. Try `var_dump(max_element([1,2,3]));` -\
    \ it returns `3`.\n<|/ c |>\n<| c |>\n: It works for me too. Try `var_dump(max_element([1,2,3]));`\
    \ - it returns `3`.\n<|/ c |>\n<| c |>\n: It works for me too. Try `var_dump(max_element([1,2,3]));`\
    \ - it returns `3`.\n<|/ c |>\n<| c |>\n: It works for me too. Try `var_dump(max_element([1,2,3]));`\
    \ - it returns `3`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2,\
    \ 3];\n$max = max($arr);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work\
    \ for me. `max_element` returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for me. `max_element` returns `1` instead of `3`.\n<|/ c |>\n<| c |>\n\
    This doesn't work for me. `max_element` returns `1` instead of `3`.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for me. `max_element` returns `1` instead of `3`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for me. `max_element` returns `1` instead\
    \ of `3`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$arr = [1, 2, 3];\n$max = max($arr);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work for me. `max_element`\
    \ returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `max_element`\
    \ returns `1` instead of `3`.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `max_element`\
    \ returns `1` instead of `3`.\n<|/ c \nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmplhck8ufp.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i = 0; $i < $n; $i++) {\n        if($l[$i] > $l[$m])\
    \ {\n            $m = $i;\n        }\n    }\n    return $l[$m];\n}\n\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hmk8wbh.php:18\n\
    Stack trace:\n#0 /tmp/tmp4hmk8wbh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp4hmk8wbh.php\
    \ on line 18\n"
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if there are duplicate elements in the array.\n<|/ c\
    \ |>\n<| c |>\nIt does work if there are duplicate elements in the array. Try\
    \ it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if there are duplicate elements\
    \ in the array. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ Try it yourself. Try it yourself. Try it yourself. Try it yourself. Try it yourself.\
    \ \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxg_c14yl.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n     \
    \       $tmp = $l[$i];\n            $l[$i] = $l[$i + 1];\n            $l[$i +\
    \ 1] = $tmp;\n        }\n    }\n    return $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpuxk6vbzv.php on line 11\n\n\
    Warning: Undefined array key 3 in /tmp/tmpuxk6vbzv.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpuxk6vbzv.php:25\nStack trace:\n\
    #0 /tmp/tmpuxk6vbzv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuxk6vbzv.php\
    \ on line 25\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel. Just use PHP's\
    \ native `max` function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel. Just use PHP's native `max` function.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use PHP's native `max` function.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel. Just use PHP's native `max`\
    \ function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel. Just use PHP's native `max` function.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$max = $array[0];\nforeach ($array as $key => $value) {\n    if\
    \ ($value > $max) {\n        $max = $value;\n    }\n}\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use PHP's native `max` function.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel. Just use PHP's native `max`\
    \ function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel. Just use PHP's native `max` function.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel. Just use PHP's\
    \ native `max` function.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel. Just use PHP's native `max` function.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\
    \ Just use PHP's native \nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpea2v6ytn.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\n$array = array(\n    array(\n        'id' => 1,\n   \
    \     'name' => 'John',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 2,\n        'name' => 'Jane',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 3,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 4,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 5,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 6,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 7,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 8,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 9,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 10,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 11,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 12,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 13,\n\
    \        'name' => 'Jack',\n        'age' => 25,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'id' => 14,\n        'name' => 'Jill',\n        'age'\
    \ => 25,\n        'city' => 'New York'\n    ),\n    array(\n        'id' => 15,\n\
    \nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxvg7lwsw.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This doesn't seem to work if you have multiple keys with the same value.\n<|/\
    \ c |>\n<| c |>\n: It works fine for me. Can you give an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can you give an example\
    \ where it doesn't work?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can you\
    \ give an example where it doesn't work?\n<|/ c |>\n<| c |>\n: It works fine for\
    \ me too. Can you give an example where it doesn't work?\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$max = max($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't seem to work if you have multiple\
    \ keys with the same value.\n<|/ c |>\n<| c |>\n: It works fine for me. Can you\
    \ give an example where it doesn't work?\n<|/ c |>\n<| c |>\n: It works fine for\
    \ me too. Can you give an example where it doesn't work?\n<|/ c |>\n<| c |>\n\
    : It works fine for me too. Can you give an example where it doesn't work?\n<|/\
    \ c |>\n<| c |>\n: It works fine for me too. Can you give an example where it\
    \ doesn't work?\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array('a', 'b',\
    \ 'c', 'd', 'e');\n$max = max($array);\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nThis doesn't seem to work if you have multiple keys with the same value.\n\
    <|/ c |>\n<| c |>\n: It works fine for me. Can you give an example where it doesn't\
    \ work?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can you give an example\
    \ where it doesn't work?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can you\
    \ give an example where it doesn't work?\n<|/ c |>\n<| a dscore=2 |>\nfunction\
    \ candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
    \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpc9_ei9ix.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    return current($l);\n\
    }\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hvx6v8n.php:18\n\
    Stack trace:\n#0 /tmp/tmp0hvx6v8n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0hvx6v8n.php\
    \ on line 18\n"
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be\
    \ the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| a dscore=5 tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$max = max($array);\n</code>\n<|/ a |>\n<| c |>\nThis should be\
    \ the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. No need\
    \ to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpttp49sqp.php
    on line 16

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $v) {\n\
    \        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $v) {\n\
    \        if ($max === NULL || $v > $max) {\n            $max = $v;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n === 0) {\n        return false;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nThis doesn't work when there are multiple max elements in the array. For\
    \ example, `max_element(array(1, 3, 2))` returns `3` instead of `2`.\n<|/ c |>\n\
    <| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| c |>\nIt does, but only\
    \ because you reversed the array. Try it with `max_element(array(1, 3, 2))`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated the answer to reflect this.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are multiple max elements in the\
    \ array. For example, `max_element(array(1, 3, 2))` returns `3` instead of `2`.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10);\n$max = max($array);\n$index = array_search($max, $array);\necho\
    \ $array[$index];\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if there\
    \ are multiple max elements in the array. For example, `max_element(array(1, 3,\
    \ 2))` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are multiple max elements in the array. For example, `max_element(array(1, 3,\
    \ 2))` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are multiple max elements in the array. For example, `max_element(array(1, 3,\
    \ 2))` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't work if there\
    \ are multiple max elements in the array. For example, `max_element(array(1, 3,\
    \ 2))` returns `3` instead of `2`.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfiq2_42k.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $v) {\n\
    \        if ($max === NULL || $v > $max) {\n            $max = $v;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's very simple.\n<|/\
    \ c |>\n<| c |>\nI like this answer because it's very simple, easy to understand,\
    \ and it uses no additional libraries.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly and it's very simple.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's very simple.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ very simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjns9fsqj.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    $m = $n-1;\n    for($i=0;$i<$n;$i++) {\n        if($l[$i] > $l[$m]) {\n \
    \           $m = $i;\n        }\n    }\n    return $l[$m];\n}\n\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array = array_reverse($array);\n\
    $max = $array[0];\n$maxIndex = 0;\nfor($i=1;$i<count($array);$i++){\n    if($array[$i]\
    \ > $max){\n        $max = $array[$i];\n        $maxIndex = $i;\n    }\n}\necho\
    \ $max;\necho $maxIndex;\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"\
    j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"\
    w\",\"x\",\"y\",\"z\");\n$array = array_reverse($array);\n$max = $array[0];\n\
    $maxIndex = 0;\nfor($i=1;$i<count($array);$i++){\n    if($array[$i] > $max){\n\
    \        $max = $array[$i];\n        $maxIndex = $i;\n    }\n}\necho $max;\necho\
    \ $maxIndex;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
    $array = array_reverse($array);\n$max = $array[0];\n$maxIndex = 0;\nfor($i=1;$i<count($array);$i++){\n\
    \    if($array[$i] > $max){\n        $max = $array[$i];\n        $maxIndex = $i;\n\
    \    }\n}\necho $max;\necho $maxIndex;\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$array = array\nfunction candidate(...$args) {\n\
    \    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkzj08q1x.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = NULL;\n    foreach ($l as $e) {\n\
    \        if ($max === NULL || $e > $max) {\n            $max = $e;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't answer the question. OP wants to find the max element in\
    \ the array and your answer doesn't do that.\n<|/ c |>\n<| c |>\n: It does. Read\
    \ the comments under the question.\n<|/ c |>\n<| c |>\n: It does, but your answer\
    \ doesn't do that. Read the comments under the question.\n<|/ c |>\n<| c |>\n\
    : It does. Read the comments under the question.\n<|/ c |>\n<| c |>\n: It does.\
    \ Read the comments under the question.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp0mtrpzza.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post - you can always\
    \ comment on your own posts, and once you have sufficient [reputation](http://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](http://stackoverflow.com/help/privileges/comment).\n\
    <|/ c |>\n<| c |>\nI didn't say it as an answer, I said it as an alternative solution.\
    \ Sorry if I misunderstood.\n<|/ c |>\n<| c |>\nI didn't say it as an answer,\
    \ I said it as an alternative solution. Sorry if I misunderstood.\n<|/ c |>\n\
    <| c |>\nI didn't say it as an answer, I said it as an alternative solution. Sorry\
    \ if I misunderstood.\n<|/ c |>\n<| c |>\nI didn't say it as an answer, I said\
    \ it as an alternative solution. Sorry if I misunderstood.\n<|/ c |>\n<| a dscore=4\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post - you can always comment on your own posts, and once you have sufficient\
    \ [reputation](http://stackoverflow.com/help/whats-reputation) you will be able\
    \ to [comment on any post](http://stackoverflow.com/help/privileges/comment).\n\
    <|/ c |>\n<| c |>\nI didn't say it as an answer, I said it as an alternative solution.\
    \ Sorry if I misunderstood.\n<|/ c |>\n<| c |>\nI didn't say it as an answer,\
    \ I said it as an alternative solution. Sorry if I misunderstood.\n<|/ c |>\n\
    <| c |>\nI didn't say it as an answer, I said it as an alternative solution. Sorry\
    \ if I misunderstood.\n<|/ c |>\n<| c |>\nI didn't say it as an answer, I said\
    \ it as an alternative solution. Sorry if I misunderstood.\nfunction candidate(...$args)\
    \ {\n    return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7kr8_p5a.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbcnbjvpg.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n\
    \    return $l;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppanh7b_o.php:19\n\
    Stack trace:\n#0 /tmp/tmppanh7b_o.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppanh7b_o.php\
    \ on line 19\n"
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $l = array_reverse($l);\n  $max = reset($l);\n\
    \  foreach ($l as $e) {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n\
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $v)\
    \ {\n    if ($v > $max) {\n      $max = $v;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if you have negative numbers in the array. Try it with\
    \ `array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10)`\n<|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/\
    \ c |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/ c\
    \ |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have negative numbers in the array. Try\
    \ it with `array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10)`\n<|/ c |>\n<| c |>\n: I added a version that works with negative\
    \ numbers.\n<|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/\
    \ c |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/ c\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if you have negative numbers in the array. Try\
    \ it with `array(-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10)`\n<|/ c |>\n<| c |>\n: I added a version that works with negative\
    \ numbers.\n<|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers.\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\nfunction candidate(...$args) {\n    return max_element(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjkmk8_qj.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n  $max = reset($l);\n  foreach ($l as $e)\
    \ {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n}\n\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ c |>\nThis doesn't work if there are duplicate elements in the array. `max_element([1,2,2,3])`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated\
    \ the answer to fix this.\n<|/ c |>\n<| a dscore=4 |>\n<code>\n$max = max($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ elements in the array. `max_element([1,2,2,3])` returns `2` instead of `3`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if there are duplicate elements in the array.\
    \ `max_element([1,2,2,3])` returns `2` instead of `3`.\n<|/ c |>\n<| a dscore=4\
    \ |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if there are duplicate elements in the array. `max_element([1,2,2,3])`\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$max\
    \ = max($array);\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate elements in the array. `max_element([1,2,2,3])` returns `2` instead\
    \ of `3`.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$max = max($array);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if there are duplicate elements\
    \ in the array. `max_element([1,2,2,3])` returns `2` instead of `3`.\n<|/ c |>\n\
    <| a dscore=3 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$max = max($array);\n</code>\n<|/ a dscore=3\
    \ |>\n<| a dscore=3 |>\n<code>\n$max = max($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if there are duplicate elements in the array\n\
    function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpd_olu9xi.php
    on line 17

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $item) {\n        if ($item > $max) {\n            $max = $item;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 255
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n\
    \    return $max;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4,\
    \ 5);\n$max = max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be\
    \ the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n\
    $max = max($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be\
    \ the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max\
    \ = max($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzjuoa9a7.php
    on line 16

    '
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $max = reset($l);\n    foreach ($l as\
    \ $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return max_element(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n\
    \    if ($n === 0) {\n        return null;\n    }\n    $m = $l[0];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823239
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968
- exit_code: 0
  program: "<?php\n// Return maximum element in the list.\n// >>> max_element(array(1,\
    \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
    // 123\nfunction max_element($l) {\n    $l = array_reverse($l);\n    $max = reset($l);\n\
    \    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return max_element(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729968

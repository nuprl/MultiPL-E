language: php
name: HumanEval_76_is_simple_power
results:
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($x % $n == 0) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccxlwe1m.php:50\n\
    Stack trace:\n#0 /tmp/tmpccxlwe1m.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpccxlwe1m.php\
    \ on line 50\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x, $n -\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5xe6kw6.php:43\n\
    Stack trace:\n#0 /tmp/tmpn5xe6kw6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn5xe6kw6.php\
    \ on line 43\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x, $n -\
    \ 1);\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlaf0q_c.php:42\n\
    Stack trace:\n#0 /tmp/tmpxlaf0q_c.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpxlaf0q_c.php\
    \ on line 42\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($n % 2 == 0) {\n        return is_simple_power($x / 2, $n - 1);\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2d63c020.php:48\n\
    Stack trace:\n#0 /tmp/tmp2d63c020.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp2d63c020.php\
    \ on line 48\n"
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n ** $x == $x) {\n        return true;\n    }\n    return false;\n}\n\
    \nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dg09b6b.php:30\n\
    Stack trace:\n#0 /tmp/tmp2dg09b6b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2dg09b6b.php\
    \ on line 30\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x, $n -\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5xe6kw6.php:43\n\
    Stack trace:\n#0 /tmp/tmpn5xe6kw6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn5xe6kw6.php\
    \ on line 43\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n==0) return true;\n    if ($n==1) return false;\n    if ($x==0) return\
    \ false;\n    if ($x==1) return true;\n    if ($x==2) return true;\n    if ($x==3)\
    \ return true;\n    if ($x==4) return true;\n    if ($x==5) return true;\n   \
    \ if ($x==6) return true;\n    if ($x==7) return true;\n    if ($x==8) return\
    \ true;\n    if ($x==9) return true;\n    if ($x==10) return true;\n    if ($x==11)\
    \ return true;\n    if ($x==12) return true;\n    if ($x==13) return true;\n \
    \   if ($x==14) return true;\n    if ($x==15) return true;\n    if ($x==16) return\
    \ true;\n    if ($x==17) return true;\n    if ($x==18) return true;\n    if ($x==19)\
    \ return true;\n    if ($x==20) return true;\n    if ($x==21) return true;\n \
    \   if ($x==22) return true;\n    if ($x==23) return true;\n    if ($x==24) return\
    \ true;\n    if ($x==25) return true;\n    if ($x==26) return true;\n    if ($x==27)\
    \ return true;\n    if ($x==28) return true;\n    if ($x==29) return true;\n \
    \   if ($x==30) return true;\n    if ($x==31) return true;\n    if ($x==32) return\
    \ true;\n    if ($x==33) return true;\n    if ($x==34) return true;\n    if ($x==35)\
    \ return true;\n    if ($x==36) return true;\n    if ($x==37) return true;\n \
    \   if ($x==38) return true;\n    if ($x==39) return true;\n    if ($x==40) return\
    \ true;\n    if ($x==41) return true;\n    if ($x==42) return true;\n    if ($x==43)\
    \ return true;\n    if ($x==44) return true;\n    if ($x==45) return true;\n \
    \   if ($x==46) return true;\n    if ($x==47) return true;\n    if ($x==48) return\
    \ true;\n    if ($x==49) return true;\n    if ($x==50) return true;\n    if ($x==51)\
    \ return true;\n    if ($x==52) return true;\n    if ($x==53) return true;\n \
    \   if ($x==54) return true;\n    if ($x==55) return true;\n    if ($x==56) return\
    \ true;\n    if ($x==57) return true;\n    if ($x==58) return true;\n    if ($x==59)\
    \ return true;\n    if ($x==60) return true;\n    if ($x==6\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5fyqr9y2.php on line 83

    '
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($x % $n == 0) {\n        return true;\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3u7x8px.php:49\n\
    Stack trace:\n#0 /tmp/tmpn3u7x8px.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpn3u7x8px.php\
    \ on line 49\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($x % $n == 0) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccxlwe1m.php:50\n\
    Stack trace:\n#0 /tmp/tmpccxlwe1m.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpccxlwe1m.php\
    \ on line 50\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($x % $n == 0) {\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccxlwe1m.php:50\n\
    Stack trace:\n#0 /tmp/tmpccxlwe1m.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpccxlwe1m.php\
    \ on line 50\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n==0) {\n        return true;\n    }\n    if ($n==1) {\n        return\
    \ ($x==1);\n    }\n    if ($x==1) {\n        return true;\n    }\n    if ($x==0)\
    \ {\n        return false;\n    }\n    if ($x==-1) {\n        return false;\n\
    \    }\n    if ($x==-2) {\n        return false;\n    }\n    if ($x==-3) {\n \
    \       return false;\n    }\n    if ($x==-4) {\n        return false;\n    }\n\
    \    if ($x==-5) {\n        return false;\n    }\n    if ($x==-6) {\n        return\
    \ false;\n    }\n    if ($x==-7) {\n        return false;\n    }\n    if ($x==-8)\
    \ {\n        return false;\n    }\n    if ($x==-9) {\n        return false;\n\
    \    }\n    if ($x==-10) {\n        return false;\n    }\n    if ($x==-11) {\n\
    \        return false;\n    }\n    if ($x==-12) {\n        return false;\n   \
    \ }\n    if ($x==-13) {\n        return false;\n    }\n    if ($x==-14) {\n  \
    \      return false;\n    }\n    if ($x==-15) {\n        return false;\n    }\n\
    \    if ($x==-16) {\n        return false;\n    }\n    if ($x==-17) {\n      \
    \  return false;\n    }\n    if ($x==-18) {\n        return false;\n    }\n  \
    \  if ($x==-19) {\n        return false;\n    }\n    if ($x==-20) {\n        return\
    \ false;\n    }\n    if ($x==-21) {\n        return false;\n    }\n    if ($x==-22)\
    \ {\n        return false;\n    }\n    if ($x==-23) {\n        return false;\n\
    \    }\n    if ($x==-24) {\n        return false;\n    }\n    if ($x==-25) {\n\
    \        return false;\n    }\n    if ($x==-26) {\n        return false;\n   \
    \ }\n    if ($x==-27) {\n        return false;\n    }\n    if ($x==-28) {\n  \
    \      return false;\n    }\n    if ($x==-29) {\n        return false;\n    }\n\
    \    if ($x==-30) {\n        return false;\n    }\n    if ($x==-31) {\n      \
    \  return false;\n    }\n    if ($x==-32) {\n        return false;\n    }\n  \
    \  if ($x==-33) {\n        return false;\n    }\n    if ($x==-34) {\n        return\
    \ false;\n    }\n    if ($x==-35) {\n        return false;\n    }\n    if ($x==-36)\
    \ {\n        return false;\n    }\n    if ($x==-37) {\n        return false;\n\
    \    }\n    if ($x==-38) {\n        return false;\n    }\n    if ($x==-39) {\n\
    \        return false;\n    }\n    if ($x==-40) {\n        return false;\n   \
    \ }\n    if ($x==-41) {\n        return false;\n    }\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv4482n7w.php on line 172

    '
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n<=1) {\n        return true;\n    }\n    if ($n==2) {\n        return\
    \ true;\n    }\n    if ($n==3) {\n        return true;\n    }\n    if ($n==5)\
    \ {\n        return true;\n    }\n    if ($n==7) {\n        return true;\n   \
    \ }\n    if ($n==11) {\n        return true;\n    }\n    if ($n==13) {\n     \
    \   return true;\n    }\n    if ($n==17) {\n        return true;\n    }\n    if\
    \ ($n==19) {\n        return true;\n    }\n    if ($n==23) {\n        return true;\n\
    \    }\n    if ($n==29) {\n        return true;\n    }\n    if ($n==31) {\n  \
    \      return true;\n    }\n    if ($n==37) {\n        return true;\n    }\n \
    \   if ($n==41) {\n        return true;\n    }\n    if ($n==43) {\n        return\
    \ true;\n    }\n    if ($n==47) {\n        return true;\n    }\n    if ($n==53)\
    \ {\n        return true;\n    }\n    if ($n==59) {\n        return true;\n  \
    \  }\n    if ($n==61) {\n        return true;\n    }\n    if ($n==67) {\n    \
    \    return true;\n    }\n    if ($n==71) {\n        return true;\n    }\n   \
    \ if ($n==73) {\n        return true;\n    }\n    if ($n==79) {\n        return\
    \ true;\n    }\n    if ($n==83) {\n        return true;\n    }\n    if ($n==89)\
    \ {\n        return true;\n    }\n    if ($n==97) {\n        return true;\n  \
    \  }\n    if ($n==101) {\n        return true;\n    }\n    if ($n==103){\n   \
    \     return true;\n    }\n    if ($n==107){\n        return true;\n    }\n  \
    \  if ($n==109){\n        return true;\n    }\n    if ($n==113){\n        return\
    \ true;\n    }\n    if ($n==117){\n        return true;\n    }\n    if ($n==121){\n\
    \        return true;\n    }\n    if ($n==123){\n        return true;\n    }\n\
    \    if ($n==127){\n        return true;\n    }\n    if ($n==131){\n        return\
    \ true;\n    }\n    if ($n==133){\n        return true;\n    }\n    if ($n==137){\n\
    \        return true;\n    }\n    if ($n==139){ \n        return true;\n    }\n\
    \    if ($n==143){\n        return true;\n    }\n    if ($n==147){ \n        return\
    \ true;\n    }\n    if ($n==151){\n        return true;\n    }\n    if ($n==153){\n\
    \        return true;\n    }\n    if ($n==157){ \n        return true;\n    }\n\
    \    if ($n==159){\n        return true;\n    }\n    if ($n==163){\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmps26frnlf.php on line 172

    '
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n==0) return true;\n    if ($n==1) return false;\n    if ($x%$n==0) return\
    \ true;\n    if ($x%$n==1) return false;\n    return is_simple_power($x/$n, $n);\n\
    }\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn29ipc7.php:32\n\
    Stack trace:\n#0 /tmp/tmpmn29ipc7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn29ipc7.php\
    \ on line 32\n"
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n==0) {\n        return true;\n    }\n    if ($n==1) {\n        return\
    \ $x==1;\n    }\n    if ($x==1) {\n        return true;\n    }\n    if ($x==0)\
    \ {\n        return false;\n    }\n    if ($x==-1) {\n        return false;\n\
    \    }\n    if ($x==-2) {\n        return false;\n    }\n    if ($x==-3) {\n \
    \       return false;\n    }\n    if ($x==-4) {\n        return false;\n    }\n\
    \    if ($x==-5) {\n        return false;\n    }\n    if ($x==-6) {\n        return\
    \ false;\n    }\n    if ($x==-7) {\n        return false;\n    }\n    if ($x==-8)\
    \ {\n        return false;\n    }\n    if ($x==-9) {\n        return false;\n\
    \    }\n    if ($x==-10) {\n        return false;\n    }\n    if ($x==-11) {\n\
    \        return false;\n    }\n    if ($x==-12) {\n        return false;\n   \
    \ }\n    if ($x==-13) {\n        return false;\n    }\n    if ($x==-14) {\n  \
    \      return false;\n    }\n    if ($x==-15) {\n        return false;\n    }\n\
    \    if ($x==-16) {\n        return false;\n    }\n    if ($x==-17) {\n      \
    \  return false;\n    }\n    if ($x==-18) {\n        return false;\n    }\n  \
    \  if ($x==-19) {\n        return false;\n    }\n    if ($x==-20) {\n        return\
    \ false;\n    }\n    if ($x==-21) {\n        return false;\n    }\n    if ($x==-22)\
    \ {\n        return false;\n    }\n    if ($x==-23) {\n        return false;\n\
    \    }\n    if ($x==-24) {\n        return false;\n    }\n    if ($x==-25) {\n\
    \        return false;\n    }\n    if ($x==-26) {\n        return false;\n   \
    \ }\n    if ($x==-27) {\n        return false;\n    }\n    if ($x==-28) {\n  \
    \      return false;\n    }\n    if ($x==-29) {\n        return false;\n    }\n\
    \    if ($x==-30) {\n        return false;\n    }\n    if ($x==-31) {\n      \
    \  return false;\n    }\n    if ($x==-32) {\n        return false;\n    }\n  \
    \  if ($x==-33) {\n        return false;\n    }\n    if ($x==-34) {\n        return\
    \ false;\n    }\n    if ($x==-35) {\n        return false;\n    }\n    if ($x==-36)\
    \ {\n        return false;\n    }\n    if ($x==-37) {\n        return false;\n\
    \    }\n    if ($x==-38) {\n        return false;\n    }\n    if ($x==-39) {\n\
    \        return false;\n    }\n    if ($x==-40) {\n        return false;\n   \
    \ }\n    if ($x==-41) {\n        return false;\n    }\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj1uaqugl.php on line 172

    '
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($x == -1) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n == 0) {\n        return false;\n\
    \    }\n    if ($n == -1) {\n        return false;\n    }\n    if ($n % 2 == 0)\
    \ {\n        return is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x,\
    \ $n - 1);\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3j9v1an.php:48\n\
    Stack trace:\n#0 /tmp/tmps3j9v1an.php(59): test()\n#1 {main}\n  thrown in /tmp/tmps3j9v1an.php\
    \ on line 48\n"
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($x == $n) {\n        return true;\n\
    \    }\n    if ($n % 2 == 0) {\n        return is_simple_power($x / 2, $n - 1);\n\
    \    }\n    return is_simple_power($x, $n - 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzeqcioq.php:46\n\
    Stack trace:\n#0 /tmp/tmpuzeqcioq.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpuzeqcioq.php\
    \ on line 46\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x, $n -\
    \ 1);\n}\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlaf0q_c.php:42\n\
    Stack trace:\n#0 /tmp/tmpxlaf0q_c.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpxlaf0q_c.php\
    \ on line 42\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n ** $x == $x) {\n        return true;\n    }\n    return false;\n}\n\
    \nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dg09b6b.php:30\n\
    Stack trace:\n#0 /tmp/tmp2dg09b6b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2dg09b6b.php\
    \ on line 30\n"
  timestamp: 1659730426
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($n==0) return false;\n    if ($n==1) return true;\n    if ($n==-1) return\
    \ false;\n    if ($x==0) return false;\n    if ($x==1) return true;\n    if ($x==-1)\
    \ return false;\n    if ($x<0) return false;\n    if ($x>1) return false;\n  \
    \  if ($x==$n) return true;\n    if ($x<$n) return true;\n    if ($x>$n) return\
    \ false;\n    $x--;\n    $y=$x;\n    while ($y>1) {\n        $y--;\n        if\
    \ ($y%$n==0) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_simple_power(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(16, 2) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(143214, 16) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdd0zn8p.php:44\n\
    Stack trace:\n#0 /tmp/tmpxdd0zn8p.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpxdd0zn8p.php\
    \ on line 44\n"
  timestamp: 1659730496
- exit_code: 255
  program: "<?php\n// Your task is to write a function that returns true if a number\
    \ x is a simple\n// power of n and false in other cases.\n// x is a simple power\
    \ of n if n**int=x\n// For example:\n// >>> is_simple_power(1, 4)\n// true\n//\
    \ >>> is_simple_power(2, 2)\n// true\n// >>> is_simple_power(8, 2)\n// true\n\
    // >>> is_simple_power(3, 2)\n// false\n// >>> is_simple_power(3, 1)\n// false\n\
    // >>> is_simple_power(5, 3)\n// false\nfunction is_simple_power($x, $n) {\n \
    \   if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return\
    \ false;\n    }\n    if ($n == 0) {\n        return false;\n    }\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ is_simple_power($x / 2, $n - 1);\n    }\n    return is_simple_power($x, $n -\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return is_simple_power(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(16, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(143214, 16) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 4) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(24, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(128, 4) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 12) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5xe6kw6.php:43\n\
    Stack trace:\n#0 /tmp/tmpn5xe6kw6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn5xe6kw6.php\
    \ on line 43\n"
  timestamp: 1659730426

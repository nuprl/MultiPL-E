language: php
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprpf4an_y.php on line 82

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'A+'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'A-'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'B+'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'B'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'B-'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'C+'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'C'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'C-'), $grades);\n    $grades =\
    \ array_map('array_map', 'array_fill', array_fill(0, count($grades), 'D+'), $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'D'), $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'D-'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'E'), $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmphhlb6wn5.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmphhlb6wn5.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmphhlb6wn5.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmphhlb6wn5.php
    on line 26


    Warning: array_sum() expects parameter 1 to be array, float given in /tmp/tmphhlb6wn5.php
    on line 26


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmphhlb6wn5.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmphhlb6wn5.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmphhlb6wn5.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmphhlb6wn5.php
    on line 27


    Warning: array_filter() expects parameter 1 to be array, null given in /tmp/tmphhlb6wn5.php
    on line 27


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmphhlb6wn5.php
    on line 28


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmphhlb6wn5.php on line 29


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmphhlb6wn5.php
    on line 29


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmphhlb6wn5.php on line 30


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmphhlb6wn5.php
    on line 30


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmphhlb6wn5.php on line 31


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmphhlb6wn5.php
    on line 31


    Warning: count(): Parameter must be an array or an object that implements Countable
    in /tmp/tmphhlb6wn5.php on line 32


    Warning: array_map(): Expected parameter 2 to be an array, string given in /tmp/tmphhlb6wn5.php
    on line 3'
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', 'grade_to_letter', $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmpm24f_307.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpm24f_307.php on line 26\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmpm24f_307.php on line\
    \ 26\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmpm24f_307.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmpm24f_307.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpm24f_307.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpm24f_307.php on line 27\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmpm24f_307.php on line 27\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmpm24f_307.php on line\
    \ 27\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmpm24f_307.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpm24f_307.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpm24f_307.php on line\
    \ 28\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpm24f_307.php on line 28\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmpm24f_307.php on line 28\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmpm24f_307.php on line\
    \ 28\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmpm24f_307.php on line 29\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpm24f_307.php:38\nStack trace:\n#0 /tmp/tmpm24f_307.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm24f_307.php on line 38\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map', \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt36aa5ob.php on line 47

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphxf7lwyh.php on line 68

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn8vm_m1.php:36\n\
    Stack trace:\n#0 /tmp/tmpkn8vm_m1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkn8vm_m1.php\
    \ on line 36\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 'A'), $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 'B'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'C'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'D'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'E'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'F'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'G'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'H'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'I'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'J'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'K'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'L'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'M'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'N'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'O'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'P'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'Q'), $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'R'), $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb_o5vv08.php on line 47

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_diff', $grades,\
    \ array(0));\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvraua3wr.php on line 66

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_9caz3r.php:39\n\
    Stack trace:\n#0 /tmp/tmpk_9caz3r.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpk_9caz3r.php\
    \ on line 39\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphxf7lwyh.php on line 68

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuku_5eyw.php on line 67

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n  $grades = array_filter($grades);\n  $grades = array_map('round', $grades);\n\
    \  $grades = array_map('intval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strtoupper', $grades);\n  return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jul8ey0.php:38\n\
    Stack trace:\n#0 /tmp/tmp8jul8ey0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8jul8ey0.php\
    \ on line 38\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map(function($grade) {\n        return str_replace(array('+',\
    \ '-'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('a', 'b', 'c', 'd', 'e'), '', $grade);\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ str_replace(array('+', '-'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('a', 'b', 'c', 'd', 'e'), '', $grade);\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ str_replace(array('+', '-'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('a', 'b', 'c', 'd', 'e'), '', $grade);\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ str_replace(array('+', '-'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('a', 'b', 'c', 'd', 'e'), '', $grade);\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ str_replace(array('+', '-'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return str_replace(array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), '', $grade);\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9wljcddo.php on line 86

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnws6iy5.php:40\n\
    Stack trace:\n#0 /tmp/tmpcnws6iy5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcnws6iy5.php\
    \ on line 40\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp44obl5xb.php on line 67

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('chr', $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn8vm_m1.php:36\n\
    Stack trace:\n#0 /tmp/tmpkn8vm_m1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkn8vm_m1.php\
    \ on line 36\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?0:$a'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?\"D-\":($a>0?\"D+\":($a<3?\"D\":($a<7?\"C+\":($a<11?\"C\":($a<15?\"B+\"\
    :($a<19?\"B\":($a<23?\"A-\":($a<29?\"A\":($a<33?\"A+\":($a<37?\"A\":'E'))))))))))',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?'E':($a>0?'D+':($a<3?'D':($a<7?'C+':($a<11?'C':($a<15?'B+':($a<19?'B':($a<23?'A-':($a<29?'A':($a<33?'A+':($a<37?'A':''))))))))),\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0nx08927.php on line 28

    '
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_values($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 3.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade\
    \ >= 3.3 ? \"A-\" : ($grade >= 3.0 ? \"B+\" : \n        ($grade >= 2.7 ? \"B\"\
    \ : ($grade >= 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n        ($grade >= 1.7\
    \ ? \"C\" : \n        ($grade >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n \
    \       ($grade >= 0.7 ? \"D\" : \n        ($grade >= 0.0 ? \"D-\" : \"E\")))))))))));\n\
    \    }, $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ez1l6uv.php:46\n\
    Stack trace:\n#0 /tmp/tmp4ez1l6uv.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4ez1l6uv.php\
    \ on line 46\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ array($this, 'letter_grade'), $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmphkxeg9zb.php\
    \ on line 27\n\nFatal error: Uncaught Error: Using $this when not in object context\
    \ in /tmp/tmphkxeg9zb.php:28\nStack trace:\n#0 /tmp/tmphkxeg9zb.php(33): numerical_letter_grade(Array)\n\
    #1 /tmp/tmphkxeg9zb.php(37): candidate(Array)\n#2 /tmp/tmphkxeg9zb.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmphkxeg9zb.php on line 28\n"
  timestamp: 1659731112
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))\n//\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")\nfunction numerical_letter_grade($grades)\
    \ {\n    $grades = array_map('round', array($grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpklckgdwq.php on line 67

    '
  timestamp: 1659731112

name: HumanEval_22_filter_integers
language: php
prompt: "<?php\n// Filter given list of any python values only for integers\n// >>>\
  \ filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
  \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
  \ {\n"
tests: "function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
  )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $values = array_filter($values, 'is_int');\n    return $values;\n\
    }\n", "    $values = array_filter($values, 'is_int');\n    return $values;\n}\n",
  "  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\n/**\n * Filter given list of any python values only for floats\n\
    \ * >>> filter_floats(array(\"a\", 3.14, 5))\n * array(3.14)\n * >>> filter_floats(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n * array(1.0, 2.0, 3.0)\n */", "    return\
    \ array_filter($values, function($value) {\n        return is_int($value);\n \
    \   });\n}\n", "  return array_filter($values, function ($value) {\n    return\
    \ is_int($value);\n  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and doesn't require any additional libraries.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and doesn't require any additional libraries.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and doesn't require any additional libraries.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"a\",\
    \ \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5 tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\");", "  return array_filter($values, function($value) {\n    return\
    \ is_int($value);\n  });\n}\n", "    $filtered = array();\n    foreach ($values\
    \ as $value) {\n        if (is_int($value)) {\n            $filtered[] = $value;\n\
    \        }\n    }\n    return $filtered;\n}\n", "  return array_filter($values,\
    \ function($value) {\n    return is_int($value);\n  });\n}\n", "    return array_filter($values,\
    \ function($value) {\n        return is_int($value);\n    });\n}\n", "    $filtered\
    \ = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n\
    \            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,multidimensional-array |>\n\
    <code>", "    return array_filter($values, function ($value) {\n        return\
    \ is_int($value);\n    });\n}\n", "    $values = array_filter($values, 'is_int');\n\
    \    return $values;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}\n", "    return array_filter($values,\
    \ function ($value) {\n        return is_int($value);\n    });\n}\n</code>\n<|/\
    \ a dscore=3 |>\n<| c |>\nThis doesn't work for me in PHP 7.2.24. `array_filter`\
    \ returns an empty array for me when given an empty array.\n<|/ c |>\n<| c |>\n\
    This doesn't work for me in PHP 7.2.24. `array_filter` returns an empty array\
    \ for me when given an empty array.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=3 |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n    return\
    \ is_", "    $filtered = array();\n    foreach ($values as $value) {\n       \
    \ if (is_int($value)) {\n            $filtered[] = $value;\n        }\n    }\n\
    \    return $filtered;\n}\n", "    $values = array_filter($values, 'is_int');\n\
    \    return $values;\n}\n", "    return array_filter($values, function($value)\
    \ {\n        return is_int($value);\n    });\n}\n", "    $filtered = array();\n\
    \    foreach ($values as $value) {\n        if (is_int($value)) {\n          \
    \  $filtered[] = $value;\n        }\n    }\n    return $filtered;\n}\n", "   \
    \ $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n", "  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $array = array_filter($array, function($value){\n    return is_numeric($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n\n$array = array_filter($array, function($value){\n    return is_numeric($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" "]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

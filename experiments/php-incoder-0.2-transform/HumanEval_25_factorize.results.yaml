language: php
name: HumanEval_25_factorize
results:
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpk1xgjy.php:34\n\
    Stack trace:\n#0 /tmp/tmpjpk1xgjy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjpk1xgjy.php\
    \ on line 34\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n >= $factor) {\n        $factors[] = $factor;\n        $n = ($n %\
    \ $factor);\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkha3tj0i.php:27\n\
    Stack trace:\n#0 /tmp/tmpkha3tj0i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkha3tj0i.php\
    \ on line 27\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while ($n >= $i) {\n        while ($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $n /= $i;\n        }\n        $i++;\n\
    \    }\n    if ($n != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp0a1k4p7r.php on line 17

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis code works fine for small numbers,\
    \ but it fails for large numbers. For example, factorize(100) returns array(100)\
    \ instead of array(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n\
    <|/ c |>\n<| c |>\nYes, it fails for large numbers. I didn't notice that before.\
    \ Thanks for pointing it out. I've updated my answer to fix this issue.\n<|/ c\
    \ |>\n<| a tags=php,primes |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2bbvtnvv.php on line 23

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n >= $factor) {\n        $factors[] = $factor;\n        $n = ($n\
    \ / $factor);\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp124_vbyp.php:27\n\
    Stack trace:\n#0 /tmp/tmp124_vbyp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp124_vbyp.php\
    \ on line 27\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 0; $i < $n; $i++) {\n        while($n % $factor == 0) {\n      \
    \      $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpvc3rblk3.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n != 1) {\n        while($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbhqfq8x9.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $n /= $i;\n            $factor = 1;\n  \
    \      }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp54g9wlg6.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 0; $i < $n; $i++) {\n        while($n % $factor == 0) {\n      \
    \      $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpvc3rblk3.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor = 1;\n        } else {\n    \
    \        $factor *= $i;\n        }\n    }\n    $factors[] = $factor;\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zqogahw.php:31\n\
    Stack trace:\n#0 /tmp/tmp1zqogahw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1zqogahw.php\
    \ on line 31\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszt75622.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n > 1) {\n \
    \       $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagtj2ar8.php:34\n\
    Stack trace:\n#0 /tmp/tmpagtj2ar8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpagtj2ar8.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84vjaanb.php:27\n\
    Stack trace:\n#0 /tmp/tmp84vjaanb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp84vjaanb.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        } else {\n            $i++;\n        }\n \
    \   }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkmscn25.php:30\n\
    Stack trace:\n#0 /tmp/tmpzkmscn25.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzkmscn25.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdvwecem.php:31\n\
    Stack trace:\n#0 /tmp/tmpbdvwecem.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbdvwecem.php\
    \ on line 31\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n >= $factor) {\n        $factors[] = $factor;\n        $n = $n /\
    \ $factor;\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvccch5n.php:27\n\
    Stack trace:\n#0 /tmp/tmpwvccch5n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwvccch5n.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $factors[$i] = $factor;\n        $factor\
    \ *= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph494krh8.php:26\n\
    Stack trace:\n#0 /tmp/tmph494krh8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph494krh8.php\
    \ on line 26\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbwkuda6.php:33\n\
    Stack trace:\n#0 /tmp/tmpkbwkuda6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkbwkuda6.php\
    \ on line 33\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n != 1) {\n  \
    \      $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h3txcip.php:34\n\
    Stack trace:\n#0 /tmp/tmp1h3txcip.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1h3txcip.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpk1xgjy.php:34\n\
    Stack trace:\n#0 /tmp/tmpjpk1xgjy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjpk1xgjy.php\
    \ on line 34\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph57higl8.php:28\n\
    Stack trace:\n#0 /tmp/tmph57higl8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmph57higl8.php\
    \ on line 28\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $n /= $i;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp39r92le_.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdvwecem.php:31\n\
    Stack trace:\n#0 /tmp/tmpbdvwecem.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbdvwecem.php\
    \ on line 31\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n        } else {\n            $i++;\n        }\n  \
    \  }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuumhsg0.php:30\n\
    Stack trace:\n#0 /tmp/tmppuumhsg0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppuumhsg0.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $factor = 1;\n            $i++;\n      \
    \  } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor !=\
    \ 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap7s0e4p.php:35\n\
    Stack trace:\n#0 /tmp/tmpap7s0e4p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpap7s0e4p.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 1; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gsoe9ih.php:27\n\
    Stack trace:\n#0 /tmp/tmp6gsoe9ih.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6gsoe9ih.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1) {\n   \
    \     $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycs69jgm.php:34\n\
    Stack trace:\n#0 /tmp/tmpycs69jgm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpycs69jgm.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        } else {\n            $i++;\n        }\n \
    \   }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkmscn25.php:30\n\
    Stack trace:\n#0 /tmp/tmpzkmscn25.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzkmscn25.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0zlbwf_.php:27\n\
    Stack trace:\n#0 /tmp/tmpd0zlbwf_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd0zlbwf_.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor = 1;\n        } else {\n    \
    \        $factor++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwupyfem8.php:30\n\
    Stack trace:\n#0 /tmp/tmpwupyfem8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwupyfem8.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmphk677r2y.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszt75622.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpk1xgjy.php:34\n\
    Stack trace:\n#0 /tmp/tmpjpk1xgjy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjpk1xgjy.php\
    \ on line 34\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n    \
    \        $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppe8ozdv0.php:35\n\
    Stack trace:\n#0 /tmp/tmppe8ozdv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppe8ozdv0.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqr388fy.php:29\n\
    Stack trace:\n#0 /tmp/tmpeqr388fy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpeqr388fy.php\
    \ on line 29\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwk3qn8h7.php:28\n\
    Stack trace:\n#0 /tmp/tmpwk3qn8h7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwk3qn8h7.php\
    \ on line 28\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 1; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gsoe9ih.php:27\n\
    Stack trace:\n#0 /tmp/tmp6gsoe9ih.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6gsoe9ih.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 0; $i < $n; $i++) {\n        while($n % $factor == 0) {\n      \
    \      $factors[] = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpvc3rblk3.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n != 1) {\n        if($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n = $n / $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpkmsvppy9.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor *= $i;\n            $n /= $i;\n\
    \        }\n    }\n    $factors[] = $factor;\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrx95ck9.php:30\n\
    Stack trace:\n#0 /tmp/tmpgrx95ck9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgrx95ck9.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor *= $i;\n        }\n    }\n  \
    \  return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjewqwf5s.php:28\n\
    Stack trace:\n#0 /tmp/tmpjewqwf5s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjewqwf5s.php\
    \ on line 28\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        if ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        } else {\n            $factor++;\n\
    \        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n\
    \    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpxk1oa35q.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 0
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = (int) ($n / $i);\n        } else {\n            $i++;\n        }\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis code does not work for large numbers.\
    \ For example, factorize(100000000) returns array(100000000)\n<|/ c |>\n<| c |>\n\
    This code does not work for large numbers. For example, factorize(100000000) returns\
    \ array(100000000)\n<|/ c |>\n<| c |>\nThis code does not work for large numbers.\
    \ For example, factorize(100000000) returns array(100000000)\n<|/ c |>\n<| c |>\n\
    This code does not work for large numbers. For example, factorize(100000000) returns\
    \ array(100000000)\n<|/ c |>\n<| c |>\nThis code does not work for large numbers.\
    \ For example, factorize(100000000) returns array(100000000)\n<|/ c |>\n<| a |>\n\
    <code>\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpoqss2vk2.php
    on line 23

    '
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n > 1) {\n   \
    \     $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycs69jgm.php:34\n\
    Stack trace:\n#0 /tmp/tmpycs69jgm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpycs69jgm.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpk1xgjy.php:34\n\
    Stack trace:\n#0 /tmp/tmpjpk1xgjy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjpk1xgjy.php\
    \ on line 34\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszt75622.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n    \
    \        $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6_wklv4.php:35\n\
    Stack trace:\n#0 /tmp/tmp_6_wklv4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_6_wklv4.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n            $i++;\n        }\n    }\n    if($n != 1) {\n\
    \        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfustgxnw.php:34\n\
    Stack trace:\n#0 /tmp/tmpfustgxnw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfustgxnw.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0zlbwf_.php:27\n\
    Stack trace:\n#0 /tmp/tmpd0zlbwf_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd0zlbwf_.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $n /= $i;\n            $factor++;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp14elxxa1.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $factors[] = $factor;\n        while($n\
    \ % $factor == 0) {\n            $factor++;\n        }\n        $n /= $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79v42mfq.php:29\n\
    Stack trace:\n#0 /tmp/tmp79v42mfq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp79v42mfq.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        while ($n % $i == 0) {\n \
    \           $factors[] = $factor;\n            $n /= $i;\n        }\n        $i++;\n\
    \    }\n    if ($n != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1jmcixt.php:33\n\
    Stack trace:\n#0 /tmp/tmpk1jmcixt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk1jmcixt.php\
    \ on line 33\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while\
    \ ($n % $i == 0) {\n        $factors[] = $i;\n        $n = $n / $i;\n        $i++;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm45ukhh0.php:27\n\
    Stack trace:\n#0 /tmp/tmpm45ukhh0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm45ukhh0.php\
    \ on line 27\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84vjaanb.php:27\n\
    Stack trace:\n#0 /tmp/tmp84vjaanb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp84vjaanb.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4joljat.php:29\n\
    Stack trace:\n#0 /tmp/tmpv4joljat.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv4joljat.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 1; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gsoe9ih.php:27\n\
    Stack trace:\n#0 /tmp/tmp6gsoe9ih.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6gsoe9ih.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszt75622.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor *= $i;\n        }\n    }\n  \
    \  return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxn8t0j6.php:28\n\
    Stack trace:\n#0 /tmp/tmpoxn8t0j6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoxn8t0j6.php\
    \ on line 28\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n        } else {\n            $factor++;\n\
    \        }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9suhygth.php:32\n\
    Stack trace:\n#0 /tmp/tmp9suhygth.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9suhygth.php\
    \ on line 32\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        while ($n % $i == 0) {\n \
    \           $factors[] = $factor;\n            $n /= $i;\n        }\n        $i++;\n\
    \    }\n    if ($n != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1jmcixt.php:33\n\
    Stack trace:\n#0 /tmp/tmpk1jmcixt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk1jmcixt.php\
    \ on line 33\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n != 1) {\n        while($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbhqfq8x9.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $factor = 1;\n            $i++;\n      \
    \  } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor !=\
    \ 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap7s0e4p.php:35\n\
    Stack trace:\n#0 /tmp/tmpap7s0e4p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpap7s0e4p.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n    \
    \        $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6_wklv4.php:35\n\
    Stack trace:\n#0 /tmp/tmp_6_wklv4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_6_wklv4.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55de67or.php:32\n\
    Stack trace:\n#0 /tmp/tmp55de67or.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp55de67or.php\
    \ on line 32\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpe8mj_9.php:29\n\
    Stack trace:\n#0 /tmp/tmpvpe8mj_9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvpe8mj_9.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        while ($n % $i == 0) {\n \
    \           $factors[] = $factor;\n            $n /= $i;\n        }\n        $i++;\n\
    \    }\n    if ($n != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1jmcixt.php:33\n\
    Stack trace:\n#0 /tmp/tmpk1jmcixt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk1jmcixt.php\
    \ on line 33\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpk1xgjy.php:34\n\
    Stack trace:\n#0 /tmp/tmpjpk1xgjy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjpk1xgjy.php\
    \ on line 34\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n != 1) {\n  \
    \      $factors[] = $n;\n    }\n    return $factors;\n}\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuidxmqhd.php:33\n\
    Stack trace:\n#0 /tmp/tmpuidxmqhd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuidxmqhd.php\
    \ on line 33\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n != 1) {\n\
    \        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99am8cgl.php:34\n\
    Stack trace:\n#0 /tmp/tmp99am8cgl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp99am8cgl.php\
    \ on line 34\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $factors[$i] = $factor;\n        $factor\
    \ *= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph494krh8.php:26\n\
    Stack trace:\n#0 /tmp/tmph494krh8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph494krh8.php\
    \ on line 26\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while\
    \ ($n != 1) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n   \
    \         $n = $n / $i;\n        } else {\n            $i++;\n        }\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpsowxb2cp.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $factor = 1;\n            $i++;\n      \
    \  } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor !=\
    \ 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap7s0e4p.php:35\n\
    Stack trace:\n#0 /tmp/tmpap7s0e4p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpap7s0e4p.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4joljat.php:29\n\
    Stack trace:\n#0 /tmp/tmpv4joljat.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv4joljat.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        while($n % $i == 0) {\n          \
    \  $factors[] = $factor;\n            $n /= $i;\n            $factor = 1;\n  \
    \      }\n        $factor++;\n    }\n    return $factors;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,factorization,algorithm |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpaevas48c.php
    on line 24

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        $factors[] = $i;\n    }\n    sort($factors);\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_98dhr6.php:25\n\
    Stack trace:\n#0 /tmp/tmpv_98dhr6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv_98dhr6.php\
    \ on line 25\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 1; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gsoe9ih.php:27\n\
    Stack trace:\n#0 /tmp/tmp6gsoe9ih.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6gsoe9ih.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n > 1) {\n \
    \       $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagtj2ar8.php:34\n\
    Stack trace:\n#0 /tmp/tmpagtj2ar8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpagtj2ar8.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while ($n != 1) {\n        while ($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszt75622.php on line 16

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n != 1) {\n  \
    \      $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h3txcip.php:34\n\
    Stack trace:\n#0 /tmp/tmp1h3txcip.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1h3txcip.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    if($n != 1) {\n  \
    \      $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h3txcip.php:34\n\
    Stack trace:\n#0 /tmp/tmp1h3txcip.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1h3txcip.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    if($n != 1)\
    \ {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_zh5njp.php:34\n\
    Stack trace:\n#0 /tmp/tmpo_zh5njp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo_zh5njp.php\
    \ on line 34\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55de67or.php:32\n\
    Stack trace:\n#0 /tmp/tmp55de67or.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp55de67or.php\
    \ on line 32\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwk3qn8h7.php:28\n\
    Stack trace:\n#0 /tmp/tmpwk3qn8h7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwk3qn8h7.php\
    \ on line 28\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = ($n / $i) * $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsn8q4to.php:29\n\
    Stack trace:\n#0 /tmp/tmpmsn8q4to.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmsn8q4to.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n        } else {\n            $i++;\n        }\n  \
    \  }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuumhsg0.php:30\n\
    Stack trace:\n#0 /tmp/tmppuumhsg0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppuumhsg0.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        $j = 1;\n        while($i * $j <= $n) {\n            if($n\
    \ % $i * $j == 0) {\n                $factors[] = $i;\n                $factors[]\
    \ = $j;\n                $n /= $i * $j;\n            }\n            $j++;\n  \
    \      }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iihre8e.php:34\n\
    Stack trace:\n#0 /tmp/tmp6iihre8e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6iihre8e.php\
    \ on line 34\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n    \
    \        $factors[] = $factor;\n            $factor = 1;\n            $i++;\n\
    \        } else {\n            $factor *= $i;\n        }\n    }\n    if ($factor\
    \ != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6_wklv4.php:35\n\
    Stack trace:\n#0 /tmp/tmp_6_wklv4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_6_wklv4.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazt7l8m9.php:28\n\
    Stack trace:\n#0 /tmp/tmpazt7l8m9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpazt7l8m9.php\
    \ on line 28\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    if ($n >\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouso00oz.php:34\n\
    Stack trace:\n#0 /tmp/tmpouso00oz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpouso00oz.php\
    \ on line 34\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y8ypb1y.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y8ypb1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0y8ypb1y.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n</code>\n<|/ a dscore=5 tags=algorithm,primes,php |>\n<| c |>\nThis doesn't\
    \ work for numbers like `4`, which has two factors `2` and `3`.\n<|/ c |>\n<|\
    \ c |>\n: I believe it does. `4` has two factors `2` and `3`, so `factorize(4)`\
    \ returns `array(2, 3)`.\n<|/ c |>\n<| c |>\n: I believe it does. `4` has two\
    \ factors `2` and `3`, so `factorize(4)` returns `array(2, 3)`.\n<|/ c |>\n<|\
    \ c |>\n: I believe it does. `4` has two factors `2` and `3`, so `factorize(4)`\
    \ returns `array(2, 3)`.\n<|/ c |>\n<| c |>\n: I believe it does. `4` has two\
    \ factors `2` and `3`, so `factorize(4)` returns `array(2, 3)`.\n<|/ c |>\n<|\
    \ a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2cdc5q47.php
    on line 23

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55de67or.php:32\n\
    Stack trace:\n#0 /tmp/tmp55de67or.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp55de67or.php\
    \ on line 32\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ny8nhmp.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ny8nhmp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7ny8nhmp.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tdstd81.php:29\n\
    Stack trace:\n#0 /tmp/tmp8tdstd81.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8tdstd81.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84vjaanb.php:27\n\
    Stack trace:\n#0 /tmp/tmp84vjaanb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp84vjaanb.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    $i = 1;\n    while($i <= $n) {\n        if($n % $i == 0) {\n            $factors[]\
    \ = $factor;\n            $factor = 1;\n            $i++;\n        } else {\n\
    \            $factor *= $i;\n        }\n    }\n    if($factor != 1) {\n      \
    \  $factors[] = $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hws4_lp.php:35\n\
    Stack trace:\n#0 /tmp/tmp_hws4_lp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_hws4_lp.php\
    \ on line 35\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00e3k68l.php:29\n\
    Stack trace:\n#0 /tmp/tmp00e3k68l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp00e3k68l.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 1;\n    while($i\
    \ <= $n) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n       \
    \     $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n</code>\n<|/ a tags=php,factorization,algorithm |>\n<| c |>\nThis code doesn't\
    \ work for factors of large numbers. For example, factorize(1000) returns array(1,1,1,1)\
    \ instead of array(2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97)\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Now it works fine.\n<|/ c |>\n<| c |>\nI tested\
    \ the code with large numbers and it works fine. Check it out here: https://3v4l.org/nJ8gB\n\
    <|/ c |>\n<| c |>\nI tested the code with large numbers and it works fine. Check\
    \ it out here: https://3v4l.org/nJ8gB\n<|/ c |>\n<| c |>\nI tested the code with\
    \ large numbers and it works fine. Check it out here: https://3v4l.org/nJ8gB\n\
    <|/ c |>\n<| a dscore=5 |>\nHere's a solution that uses recursion:\n<code>\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps_q1dl6u.php
    on line 23

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while($i\
    \ <= sqrt($n)) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n \
    \           $n = $n / $i;\n            $i++;\n        }\n        else {\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfeipk0s.php:32\n\
    Stack trace:\n#0 /tmp/tmptfeipk0s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfeipk0s.php\
    \ on line 32\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $factors[$i] = $factor;\n        $factor\
    \ *= $i;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph494krh8.php:26\n\
    Stack trace:\n#0 /tmp/tmph494krh8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph494krh8.php\
    \ on line 26\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n != 1) {\n        $factors[] = $factor;\n        $n = $n % $factor;\n\
    \        $factor *= $factor;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpf3r5n8k6.php on line 15

    '
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    if ($n != 1) {\n\
    \        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99am8cgl.php:34\n\
    Stack trace:\n#0 /tmp/tmp99am8cgl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp99am8cgl.php\
    \ on line 34\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n       \
    \     $factors[] = $factor;\n            $factor *= $i;\n        }\n    }\n  \
    \  return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjewqwf5s.php:28\n\
    Stack trace:\n#0 /tmp/tmpjewqwf5s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjewqwf5s.php\
    \ on line 28\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n /= $i;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4joljat.php:29\n\
    Stack trace:\n#0 /tmp/tmpv4joljat.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv4joljat.php\
    \ on line 29\n"
  timestamp: 1659823783
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    while($n != 1) {\n        while($n % $factor == 0) {\n            $factors[]\
    \ = $factor;\n            $n /= $factor;\n        }\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbhqfq8x9.php on line 16

    '
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    for($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84vjaanb.php:27\n\
    Stack trace:\n#0 /tmp/tmp84vjaanb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp84vjaanb.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $i = 2;\n    while\
    \ ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n\
    \            $n = $n / $i;\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjjeiwl7.php:29\n\
    Stack trace:\n#0 /tmp/tmpyjjeiwl7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyjjeiwl7.php\
    \ on line 29\n"
  timestamp: 1659730770
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\n// >>> factorize(8)\n// array(2,\
    \ 2, 2)\n// >>> factorize(25)\n// array(5, 5)\n// >>> factorize(70)\n// array(2,\
    \ 5, 7)\nfunction factorize($n) {\n    $factors = array();\n    $factor = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $factor *= $i;\n        while(!isPrime($i)\
    \ && $i <= $n) {\n            $i++;\n        }\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isPrime() in\
    \ /tmp/tmpucto64oy.php:16\nStack trace:\n#0 /tmp/tmpucto64oy.php(25): factorize(2)\n\
    #1 /tmp/tmpucto64oy.php(29): candidate(2)\n#2 /tmp/tmpucto64oy.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpucto64oy.php on line 16\n"
  timestamp: 1659823783

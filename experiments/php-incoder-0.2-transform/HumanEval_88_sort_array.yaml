name: HumanEval_88_sort_array
language: php
prompt: "<?php\n// Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n// you will sort the given array in ascending order if the\
  \ sum( first index value, last index value) is odd,\n// or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n// Note:\n//\
  \ * don't change the given array.\n// Examples:\n// >>> sort_array(array())\n//\
  \ array()\n// >>> sort_array(array(5))\n// array(5)\n// >>> sort_array(array(2,\
  \ 4, 3, 0, 1, 5))\n// array(0, 1, 2, 3, 4, 5)\n// >>> sort_array(array(2, 4, 3,\
  \ 0, 1, 5, 6))\n// array(6, 5, 4, 3, 2, 1, 0)\nfunction sort_array($array) {\n"
tests: "function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5)) !== array(5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2,\
  \ 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0,\
  \ 11, 15, 32, 42, 87)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(21,\
  \ 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    foreach ($array as $key => $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $key => $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    $result = array();\n    foreach\
    \ ($array as $value) {\n        $sum += $value;\n        $result[] = $value;\n\
    \    }\n    if ($sum % 2 != 0) {\n        array_reverse($result);\n    }\n   \
    \ return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis\
    \ doesn't work if the array contains negative numbers. Try `sort_array(array(1,-1,2,-3,4))`\n\
    <|/ c |>\n<| c |>\nIt does work, just tested it. The array is sorted ascending\
    \ if sum is odd and descending if sum is even.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array. Try `sort_array(array(1,-1,2,-3,4))`\n\
    <|/ c |>\n<| c |>\nIt does work, just tested it. The array is sorted ascending\
    \ if sum is odd and descending if sum is even.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are negative numbers in the array. Try `sort_array(array(1,-1,2,-3,4))`\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>", "    $sum = 0;\n    foreach\
    \ ($array as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum %\
    \ 2 == 1) {\n        array_multisort($array, SORT_DESC);\n    } else {\n     \
    \   array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try it with `[-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]`\n<|/ c |>\n<| c |>\nI added a note to the answer about negative\
    \ numbers. Thanks for pointing that out.\n<|/ c |>\n<| a |>\n<code>", "    $sum\
    \ = array_sum($array);\n    if ($sum % 2 == 1) {\n        sort($array, SORT_NUMERIC);\n\
    \    } else {\n        sort($array, SORT_NUMERIC, SORT_DESC);\n    }\n    return\
    \ $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $array = array();\n$array[] = array('id' => 1, 'name' => 'John');\n$array[] =\
    \ array('id' => 2, 'name' => 'Jane');\n$array[] = array('id' => 3, 'name' => 'Jack');\n\
    $array[] = array('id' => 4, 'name' => 'Jill');\n$array[] = array('id' => 5, 'name'\
    \ => 'Jack');\n$array[] = array('id' => 6, 'name' => 'Jill');\n$array[] = array('id'\
    \ => 7, 'name' => 'Jane');\n$array[] = array('id' => 8, 'name' => 'John');\n$array[]\
    \ = array('id' => 9, 'name' => 'Jack');\n$array[] = array('id' => 10, 'name' =>\
    \ 'Jill');\n$array[] = array('id' => 11, 'name' => 'Jane');\n$array[] = array('id'\
    \ => 12, 'name' => 'John');\n$array[] = array('id' => 13, 'name' => 'Jack');\n\
    $array[] = array('id' => 14, 'name' => 'Jill');\n$array[] = array('id' => 15,\
    \ 'name' => 'Jane');\n$array[] = array('id' => 16, 'name' => 'John');\n$array[]\
    \ = array('id' => 17, 'name' => 'Jack');\n$array[] = array('id' => 18, 'name'\
    \ => 'Jill');\n$array[] = array('id' => 19, 'name' => 'Jane');\n$array[] = array('id'\
    \ => 20, 'name' => 'John');\n$array[] = array('id' => 21, 'name' => 'Jack');\n\
    $array[] = array('id' => 22, 'name' => 'Jill');\n$array[] = array('id' => 23,\
    \ 'name' => 'Jane');\n$array[] = array('id' => 24, 'name' => 'John');\n$array[]\
    \ = array('id' => 25, 'name' => 'Jack');\n$array[] = array('id' => 26, 'name'\
    \ => 'Jill');\n$array[] = array('id' => 27, 'name' => 'Jane');\n$array[] = array('id'\
    \ => 28, 'name' => 'John');\n$", "    $sum = $array[0] + $array[count($array)\
    \ - 1];\n    if ($sum % 2 === 0) {\n        $array = array_reverse($array);\n\
    \    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value)\
    \ {\n        $sum += $value;\n    }\n    if ($sum % 2 != 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if there are duplicate numbers in the array. For example, `sort_array(array(2,\
    \ 4, 3, 0, 1, 5, 6, 2, 4))` returns `array(6, 5, 4, 3, 2, 1, 0)` instead of `array(6,\
    \ 5, 4, 3, 2, 1, 0, 2, 4)`.\n<|/ c |>\n<| c |>\nI fixed the problem by adding\
    \ `$sum = 0;` before the `foreach` loop and `$sum = 0;` after the `foreach` loop.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php", " \
    \   $sum = 0;\n    $len = count($array);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        $sum += $array[$i];\n    }\n    if ($sum % 2 != 0) {\n        $array\
    \ = array_reverse($array);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    $odd = true;\n   \
    \ foreach ($array as $value) {\n        $sum += $value;\n        if ($sum % 2\
    \ == 1) {\n            $odd = false;\n        }\n    }\n    if ($odd) {\n    \
    \    array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n", "    $sum = 0;\n    foreach ($array\
    \ as $key => $value) {\n        $sum += $value;\n    }\n    if ($sum % 2 === 0)\
    \ {\n        array_multisort($array, SORT_DESC);\n    } else {\n        array_multisort($array,\
    \ SORT_ASC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = array_sum($array);\n    if ($sum % 2 === 0)\
    \ {\n        return $array;\n    }\n    return array_reverse($array);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\n$odd = array();\n$even = array();\nforeach($array as $key => $value){\n\
    \    $sum += $value;\n    if($sum % 2 == 0){\n        $even[] = $value;\n    }else{\n\
    \        $odd[] = $value;\n    }\n}\nprint_r($even);\nprint_r($odd);", "    $sum\
    \ = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n    }\n   \
    \ if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n    } else\
    \ {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't work if the array has negative numbers.\
    \ Try `sort_array(array(2,-4,3,0,1,5))` - it returns `array(6, 5, 4, 3, 2, 1,\
    \ 0)`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| c |>\n\
    Yes, it does. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $key => $value) {\n    \
    \    $sum += $value;\n    }\n    if ($sum % 2 == 1) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = 0;\n    foreach ($array as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n\
    <code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting |>\n<code>\n<?php\n\
    $array = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => ", "    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum\
    \ % 2 === 0) {\n        return $array;\n    }\n    return array_reverse($array);\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if there are\
    \ negative numbers in the array. For example, `sort_array(array(1,-2,3))` returns\
    \ `array(1,-3,2)` instead of `array(1,-3,2)`.\n<|/ c |>\n<| c |>\nIt works fine\
    \ for me. `sort_array(array(1,-2,3))` returns `array(1,-3,2)`. Please check your\
    \ code.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.17 and PHP 7.0.13. Both give\
    \ the wrong result for me. `sort_array(array(1,-2,3))` returns `array(1,-3,2)`\
    \ instead of `array(1,-3,2)`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6.17 and\
    \ PHP 7.0.13. Both give the wrong result for me. `sort_array(array(1,-2,3))` returns\
    \ `array(1,-3,2)` instead of `array(1,-3,2)`.\n<|/ c |>\n<| c |>\nI tested it\
    \ on PHP 5.6.17 and PHP 7.0.13. Both give the wrong result for me. `sort_array(array(1,-2,3))`\
    \ returns `array(1,-3,2)` instead of `array(1,-3,2)`.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum\
    \ += $value;\n    }\n    if ($sum % 2 === 0) {\n        array_multisort($array,\
    \ SORT_DESC);\n    } else {\n        array_multisort($array, SORT_ASC);\n    }\n\
    \    return $array;\n}\n", "    $sum = array_sum($array);\n    if ($sum % 2) {\n\
    \        sort($array, SORT_NUMERIC);\n    } else {\n        sort($array, SORT_NUMERIC,\
    \ SORT_DESC);\n    }\n    return $array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=php,arrays |>\n<code>", "    $sum = $array[0] + $array[count($array) -\
    \ 1];\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n", "    $sum = 0;\n    foreach ($array as $value) {\n        $sum += $value;\n\
    \    }\n    if ($sum % 2 === 0) {\n        array_multisort($array, SORT_DESC);\n\
    \    } else {\n        array_multisort($array, SORT_ASC);\n    }\n    return $array;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

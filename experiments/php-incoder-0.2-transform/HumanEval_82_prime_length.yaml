name: HumanEval_82_prime_length
language: php
prompt: "<?php\n// Write a function that takes a string and returns True if the string\n\
  // length is a prime number or False otherwise\n// Examples\n// >>> prime_length(\"\
  Hello\")\n// true\n// >>> prime_length(\"abcdcba\")\n// true\n// >>> prime_length(\"\
  kittens\")\n// true\n// >>> prime_length(\"orange\")\n// false\nfunction prime_length($string)\
  \ {\n"
tests: "function candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $prime_numbers = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($prime_number == 1) {\n            continue;\n\
    \        }\n        if ($string == $prime_number) {\n            return true;\n\
    \        }\n        if (strlen($string) % $prime_number == 0) {\n            return\
    \ false;\n        }\n    }\n}\n", "    $string = strtolower($string);\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ === \"a\" || $string[$i] === \"e\" || $string[$i] === \"i\" || $string[$i] ===\
    \ \"o\" || $string[$i] === \"u\") {\n            $length--;\n        } else {\n\
    \            break;\n        }\n    }\n    return $length === 0;\n}\n", "    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    for($i = 0; $i < $length;\
    \ $i++) {\n        $char = substr($string, $i, 1);\n        if(in_array($char,\
    \ $prime_numbers)) {\n            return true;\n        }\n    }\n    return false;\n\
    }", "    // Write your solution here\n}", "    $string = strtolower($string);\n\
    \    $prime_numbers = array(3, 5, 7);\n    $length = strlen($string);\n    for($i\
    \ = 0; $i < $length; $i++) {\n        if(in_array($string[$i], $prime_numbers))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  $prime_numbers = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach\
    \ ($prime_numbers as $prime_number) {\n        if ($length == $prime_number) {\n\
    \            return true;\n        }\n    }\n    return false;\n}", "    $primes\
    \ = array(3, 5, 7);\n    $length = strlen($string);\n    foreach ($primes as $prime)\
    \ {\n        if ($length % $prime == 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "    // Write your code here\n    $prime = true;\n\
    \    $length = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n    \
    \    if($string[$i] % 2 == 0) {\n            $prime = false;\n        }\n    }\n\
    \    return $prime;\n}\n", "    $prime_length = array();\n    $prime_length[0]\
    \ = true;\n    $prime_length[1] = true;\n    $prime_length[2] = true;\n    $prime_length[3]\
    \ = true;\n    $prime_length[4] = true;\n    $prime_length[5] = true;\n    $prime_length[6]\
    \ = true;\n    $prime_length[7] = true;\n    $prime_length[8] = true;\n    $prime_length[9]\
    \ = true;\n    $prime_length[10] = true;\n    $prime_length[11] = true;\n    $prime_length[12]\
    \ = true;\n    $prime_length[13] = true;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = true;\n    $prime_length[16] = true;\n    $prime_length[17] = true;\n    $prime_length[18]\
    \ = true;\n    $prime_length[19] = true;\n    $prime_length[20] = true;\n    $prime_length[21]\
    \ = true;\n    $prime_length[22] = true;\n    $prime_length[23] = true;\n    $prime_length[24]\
    \ = true;\n    $prime_length[25] = true;\n    $prime_length[26] = true;\n    $prime_length[27]\
    \ = true;\n    $prime_length[28] = true;\n    $prime_length[29] = true;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = true;\n    $prime_length[32] = true;\n    $prime_length[33]\
    \ = true;\n    $prime_length[34] = true;\n    $prime_length[35] = true;\n    $prime_length[36]\
    \ = true;\n    $prime_length[37] = true;\n    $prime_length[38] = true;\n    $prime_length[39]\
    \ = true;\n    $prime_length[40] = true;\n    $prime_length[41] = true;\n    $prime_length[42]\
    \ = true;\n    $prime_length[43] = true;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = true;\n    $prime_length[46] = true;\n    $prime_length[47] = true;\n    $prime_length[48]\
    \ = true;\n    $prime_length[49] = true;\n    $prime_length[50] = true;\n    $prime_length[51]\
    \ = true;\n    $prime_length[52] = true;\n    $prime_length[53] = true;\n    $prime_length[54]\
    \ = true;\n    $prime_length[55] = true;\n    $prime_length[56] = true;\n    $prime_length[57]\
    \ = true;\n    $prime_length[58", "    $length = strlen($string);\n    $prime\
    \ = true;\n    for ($i = 1; $i <= $length; $i++) {\n        if ($string[$i] ===\
    \ \"0\") {\n            $prime = false;\n            break;\n        }\n    }\n\
    \    return $prime;\n}", "    $length = strlen($string);\n    for($i = 2; $i <=\
    \ $length; $i++) {\n        if($string[$i] % $i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    $prime_numbers = array(3, 5, 7);\n\
    \    $length = strlen($string);\n    foreach ($prime_numbers as $prime_number)\
    \ {\n        if ($length == $prime_number) {\n            return true;\n     \
    \   }\n    }\n    return false;\n}", "    // Your code here\n}\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns True if the string\
    \ contains any uppercase letters or False otherwise. Hint: Use a regular expression\
    \ to test the string.\n\n\n</text>\n<cell>\n<?php", "    $primes = array(2, 3,\
    \ 5, 7);\n    $length = strlen($string);\n    foreach ($primes as $prime) {\n\
    \        if ($length % $prime === 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}", "    $length = strlen($string);\n    for($i=2;$i<$length;$i++)\
    \ {\n        if($string[$i] % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}", "    $prime_numbers = array(2, 3, 5, 7);\n    $length\
    \ = strlen($string);\n    foreach ($prime_numbers as $prime_number) {\n      \
    \  if ($length % $prime_number == 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "    // Write your function here\n}", "    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    for($i=2; $i<$length;\
    \ $i++) {\n        if($string[$i] === \"a\" || $string[$i] === \"e\" || $string[$i]\
    \ === \"i\" || $string[$i] === \"o\" || $string[$i] === \"u\") {\n           \
    \ $length--;\n        } else {\n            break;\n        }\n    }\n    return\
    \ $length === 0;\n}\n", "    $primes = array(2, 3, 5, 7);\n    $length = strlen($string);\n\
    \    foreach ($primes as $prime) {\n        if ($length % $prime == 0) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n", "    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

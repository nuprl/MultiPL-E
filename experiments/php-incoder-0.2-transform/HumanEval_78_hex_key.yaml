name: HumanEval_78_hex_key
language: php
prompt: "<?php\n// You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key($num) {\n"
tests: "function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
  \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n   \
    \ $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^0-9]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex", "    $hex = strtoupper(preg_replace('/\\\
    D/', '', $num));\n    $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n\
    \    $hex = array_map(function($v){return hexdec($v);}, $hex);\n    $hex = array_filter($hex);\n\
    \    $hex = array_map(function($v){return $v > 0 ? $v : 0;}, $hex);\n    $hex\
    \ = array_sum($hex);\n    return $hex;\n}\n</code>\n<|/ a tags=hex,php,primes\
    \ |>\n<| c |>\nThis code doesn't work. `hex_key(\"AB\")` returns `1` instead of\
    \ `2`.\n<|/ c |>\n<| c |>\nIt returns 1 because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"AB\")` returns `1` because `hex_key(\"AB\")` returns `1`\
    \ because `hex_key(\"", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '',\
    \ $num));\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 10, 16);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 16, 10);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 10, 8);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 8, 6);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 6, 4);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 4, 2);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = base_convert($hex,\
    \ 2, 1);\n    return $hex;\n}\n", "    $hex = strtoupper($num);\n    $hex = preg_replace('/[^0-9A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/[^0-9]/', '', $hex);\n    $hex = preg_replace('/[^A-F]/',\
    \ '', $hex);\n    $hex = preg_replace('/", "    $hex = strtoupper($num);\n   \
    \ $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n    $hex = array_map('dechex',\
    \ $hex);\n    $hex = implode('', $hex);\n    $hex = str_replace('0', '', $hex);\n\
    \    $hex = str_replace('1', '', $hex);\n    $hex = str_replace('2', '', $hex);\n\
    \    $hex = str_replace('3', '', $hex);\n    $hex = str_replace('4', '', $hex);\n\
    \    $hex = str_replace('5', '', $hex);\n    $hex = str_replace('6', '', $hex);\n\
    \    $hex = str_replace('7', '', $hex);\n    $hex = str_replace('8', '', $hex);\n\
    \    $hex = str_replace('9', '', $hex);\n    $hex = str_replace('A', '11', $hex);\n\
    \    $hex = str_replace('B', '13', $hex);\n    $hex = str_replace('C', '17', $hex);\n\
    \    $hex = str_replace('D', '19', $hex);\n    $hex = str_replace('E', '23', $hex);\n\
    \    $hex = str_replace('F', '29', $hex);\n    $hex = str_replace('10', '31',\
    \ $hex);\n    $hex = str_replace('11', '37', $hex);\n    $hex = str_replace('12',\
    \ '41', $hex);\n    $hex = str_replace('13', '43', $hex);\n    $hex = str_replace('14',\
    \ '47', $hex);\n    $hex = str_replace('15', '53', $hex);\n    $hex = str_replace('16',\
    \ '59', $hex);\n    $hex = str_replace('17', '61', $hex);\n    $hex = str_replace('18',\
    \ '67', $hex);\n    $hex = str_replace('19', '71', $hex);\n    $hex = str_replace('20',\
    \ '73', $hex);\n    $hex = str_replace('21', '79', $hex);\n    $hex = str_replace('22',\
    \ '83', $hex);\n    $hex = str_replace('23', '89', $hex);\n    $hex = str_replace('24',\
    \ '97', $hex);\n    $hex = str_replace('25', '101', $hex);\n    $hex = str_replace('26',\
    \ '103', $hex);\n    $hex = str_replace('27', '107', $hex);\n    $hex = str_replace('28',\
    \ '109', $hex);\n    $hex = str_replace('29', '113', $hex);\n    $hex = str_replace('",
  "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n    $hex = str_pad($hex,\
    \ 8, '0', STR_PAD_LEFT);\n    $hex = strtoupper($hex);\n    $hex = str_split($hex,\
    \ 8);\n    $hex = array_filter($hex);\n    $hex = array_map('hexdec', $hex);\n\
    \    $hex = array_filter($hex);\n    $hex = array_unique($hex);\n    $hex = array_count_values($hex);\n\
    \    $hex = array_filter($hex);\n    $hex = array_keys($hex);\n    $hex = array_values($hex);\n\
    \    $hex = array_sum($hex);\n    return $hex;\n}\n</code>\n<|/ a tags=hex,php,primes\
    \ |>\n<| c |>\nThanks for your answer. Your code works perfectly for numbers with\
    \ 8 digits. But for numbers with 9 digits, it returns wrong results. For example,\
    \ for number \"1077E\", it returns \"2\" instead of \"4\".\n<|/ c |>\n<| c |>\n\
    I edited my answer, I added a function that counts how many times each digit appears\
    \ in the hexadecimal number. Now it works with any number of digits.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code works perfectly for numbers with 8\
    \ digits. But for numbers with 9 digits, it returns wrong results. For example,\
    \ for number \"1077E\", it returns \"2\" instead of \"4\".\n<|/ c |>\n<| c |>\n\
    I edited my answer, I added a function that counts how many times each digit appears\
    \ in the hexadecimal number. Now it works with any number of digits.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code works perfectly for numbers with 8\
    \ digits. But for numbers with 9 digits, it returns wrong results. For example,\
    \ for number \"1077E\", it returns \"2\" instead of \"4\".\n<|/ c |>\n<| a tags=hex,php,primes\
    \ |>\nI wrote a function that counts how many times each digit appears in the\
    \ hexadecimal number. Now it works with any number of digits.\n<code>\n<?php",
  "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n    $hex = str_split($hex,\
    \ 2);\n    $hex = array_filter($hex);\n    $hex = array_map(function($v){return\
    \ hexdec($v);}, $hex);\n    $hex = array_filter($hex);\n    $hex = array_sum($hex);\n\
    \    return $hex;\n}\n", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '',\
    \ $num));\n    $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n  \
    \  $hex = array_map('dechex', $hex);\n    $hex = implode('', $hex);\n    $hex\
    \ = strlen($hex);\n    return $hex;\n}\n", "    $hex = strtoupper(preg_replace(\"\
    /[^0-9A-Fa-f]/\", '', $num));\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT",
  "    $hex = strtoupper(preg_replace('/\\D/', '', $num));\n    $hex = str_split($hex,\
    \ 2);\n    $hex = array_filter($hex);\n    $hex = array_map('dechex', $hex);\n\
    \    $hex = implode('', $hex);\n    return strlen($hex);\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,hex,algorithm |>\n<code>\n<?php", "    $hex = strtoupper(preg_replace('/\\\
    D/', '', $num));\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);\n    $hex = preg_replace('/\\\
    D/', '', $hex);\n    $hex = preg_replace('/\\B/', '', $hex);", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/',\
    \ '', $num));\n    $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n\
    \    $hex = array_map(function($hex) {\n        return hexdec($hex);\n    }, $hex);\n\
    \    $hex = array_filter($hex);\n    $hex = array_reduce($hex, function($carry,\
    \ $value) {\n        return $carry + ($value <= 1 ? $value : 2);\n    });\n  \
    \  return $hex;\n}\n", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '',\
    \ $num));\n    $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n  \
    \  $hex = array_map(function($a) { return hexdec($a); }, $hex);\n    $hex = array_filter($hex);\n\
    \    $hex = array_sum($hex);\n    return $hex;\n}\n", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/',\
    \ '', $num));\n    $hex = preg_replace('/([0-9A-F])/', '\\1', $hex);\n    $hex\
    \ = preg_replace('/([0-9A-F]{2})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{3})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{4})/', '\\1', $hex);\n  \
    \  $hex = preg_replace('/([0-9A-F]{5})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{6})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{7})/', '\\1', $hex);\n  \
    \  $hex = preg_replace('/([0-9A-F]{8})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{9})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{10})/', '\\1', $hex);\n \
    \   $hex = preg_replace('/([0-9A-F]{11})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{12})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{13})/', '\\1', $hex);\n \
    \   $hex = preg_replace('/([0-9A-F]{14})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{15})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{16})/', '\\1', $hex);\n \
    \   $hex = preg_replace('/([0-9A-F]{17})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{18})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{19})/', '\\1', $hex);\n \
    \   $hex = preg_replace('/([0-9A-F]{20})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{21})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{22})/', '\\1', $hex);\n \
    \   $hex = preg_replace('/([0-9A-F]{23})/', '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{24})/',\
    \ '\\1', $hex);\n    $hex = preg_replace('/([0-9A-F]{25})/', '\\1', $hex", " \
    \   $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n    $hex = str_split($hex,\
    \ 2);\n    $hex = array_filter($hex);\n    $hex = array_map('dechex', $hex);\n\
    \    $hex = implode('', $hex);\n    $hex = str_replace('0', '', $hex);\n    $hex\
    \ = str_replace('1', '', $hex);\n    $hex = str_replace('2', '', $hex);\n    $hex\
    \ = str_replace('3', '', $hex);\n    $hex = str_replace('4', '', $hex);\n    $hex\
    \ = str_replace('5', '', $hex);\n    $hex = str_replace('6', '', $hex);\n    $hex\
    \ = str_replace('7', '', $hex);\n    $hex = str_replace('8', '', $hex);\n    $hex\
    \ = str_replace('9', '', $hex);\n    $hex = str_replace('A', '11', $hex);\n  \
    \  $hex = str_replace('B', '13', $hex);\n    $hex = str_replace('C', '17', $hex);\n\
    \    $hex = str_replace('D', '19', $hex);\n    $hex = str_replace('E', '23', $hex);\n\
    \    $hex = str_replace('F', '29', $hex);\n    $hex = str_replace('0', '0', $hex);\n\
    \    $hex = str_replace('1', '1', $hex);\n    $hex = str_replace('2', '2', $hex);\n\
    \    $hex = str_replace('3', '3', $hex);\n    $hex = str_replace('4', '4', $hex);\n\
    \    $hex = str_replace('5', '5', $hex);\n    $hex = str_replace('6', '6', $hex);\n\
    \    $hex = str_replace('7', '7', $hex);\n    $hex = str_replace('8', '8', $hex);\n\
    \    $hex = str_replace('9', '9', $hex);\n    $hex = str_replace('+', '0', $hex);\n\
    \    $hex = str_replace('-', '0', $hex);\n    $hex = str_replace('.', '0', $hex);\n\
    \    $hex = str_replace(',', '0', $hex);\n    $hex = str_replace(';', '0', $hex);\n\
    \    $hex = str_replace(':', '0', $hex);\n    $hex = str_replace('?', '0', $hex);\n\
    \    $hex = str_replace('!', '0', $hex);\n    $hex = str_replace('\"', '0', $hex);\n\
    \    $hex = str_replace('%', '0', $hex);\n    $hex = str_replace('&', '0", " \
    \   $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n    $hex = str_replace(\"\
    A\", \"10\", $hex);\n    $hex = str_replace(\"B\", \"11\", $hex);\n    $hex =\
    \ str_replace(\"C\", \"12\", $hex);\n    $hex = str_replace(\"D\", \"13\", $hex);\n\
    \    $hex = str_replace(\"E\", \"14\", $hex);\n    $hex = str_replace(\"F\", \"\
    15\", $hex);\n    $hex = str_replace(\"0\", \"16\", $hex);\n    $hex = str_replace(\"\
    1\", \"17\", $hex);\n    $hex = str_replace(\"2\", \"18\", $hex);\n    $hex =\
    \ str_replace(\"3\", \"19\", $hex);\n    $hex = str_replace(\"4\", \"20\", $hex);\n\
    \    $hex = str_replace(\"5\", \"21\", $hex);\n    $hex = str_replace(\"6\", \"\
    22\", $hex);\n    $hex = str_replace(\"7\", \"23\", $hex);\n    $hex = str_replace(\"\
    8\", \"24\", $hex);\n    $hex = str_replace(\"9\", \"25\", $hex);\n    $hex =\
    \ str_replace(\"A\", \"26\", $hex);\n    $hex = str_replace(\"B\", \"27\", $hex);\n\
    \    $hex = str_replace(\"C\", \"28\", $hex);\n    $hex = str_replace(\"D\", \"\
    29\", $hex);\n    $hex = str_replace(\"E\", \"30\", $hex);\n    $hex = str_replace(\"\
    F\", \"31\", $hex);\n    $hex = str_replace(\"0\", \"32\", $hex);\n    $hex =\
    \ str_replace(\"1\", \"33\", $hex);\n    $hex = str_replace(\"2\", \"34\", $hex);\n\
    \    $hex = str_replace(\"3\", \"35\", $hex);\n    $hex = str_replace(\"4\", \"\
    36\", $hex);\n    $hex = str_replace(\"5\", \"37\", $hex);\n    $hex = str_replace(\"\
    6\", \"38\", $hex);\n    $hex = str_replace(\"7\", \"39\", $hex);\n    $hex =\
    \ str_replace(\"8\", \"40\", $hex);\n    $hex = str_replace(\"9\", \"41\", $hex);\n\
    \    $hex = str_replace(\"A\", \"42\", $hex);\n    $hex = str_replace(\"B\", \"\
    43\", $hex);\n    $hex = str_replace(\"C\", \"44\", $hex);\n    $hex = str_replace(\"\
    D\", \"45\", $hex);\n", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '',\
    \ $num));\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex,\
    \ 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n \
    \   $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n", " \
    \   $hex = strtoupper(preg_replace('/[^0-9A-F]/', '', $num));\n    $hex = str_replace(\"\
    A\", \"10\", $hex);\n    $hex = str_replace(\"B\", \"11\", $hex);\n    $hex =\
    \ str_replace(\"C\", \"12\", $hex);\n    $hex = str_replace(\"D\", \"13\", $hex);\n\
    \    $hex = str_replace(\"E\", \"14\", $hex);\n    $hex = str_replace(\"F\", \"\
    15\", $hex);\n    $hex = str_replace(\"0\", \"16\", $hex);\n    $hex = str_replace(\"\
    1\", \"17\", $hex);\n    $hex = str_replace(\"2\", \"18\", $hex);\n    $hex =\
    \ str_replace(\"3\", \"19\", $hex);\n    $hex = str_replace(\"4\", \"20\", $hex);\n\
    \    $hex = str_replace(\"5\", \"21\", $hex);\n    $hex = str_replace(\"6\", \"\
    22\", $hex);\n    $hex = str_replace(\"7\", \"23\", $hex);\n    $hex = str_replace(\"\
    8\", \"24\", $hex);\n    $hex = str_replace(\"9\", \"25\", $hex);\n    $hex =\
    \ str_replace(\"A\", \"26\", $hex);\n    $hex = str_replace(\"B\", \"27\", $hex);\n\
    \    $hex = str_replace(\"C\", \"28\", $hex);\n    $hex = str_replace(\"D\", \"\
    29\", $hex);\n    $hex = str_replace(\"E\", \"30\", $hex);\n    $hex = str_replace(\"\
    F\", \"31\", $hex);\n    $hex = str_replace(\"0\", \"32\", $hex);\n    $hex =\
    \ str_replace(\"1\", \"33\", $hex);\n    $hex = str_replace(\"2\", \"34\", $hex);\n\
    \    $hex = str_replace(\"3\", \"35\", $hex);\n    $hex = str_replace(\"4\", \"\
    36\", $hex);\n    $hex = str_replace(\"5\", \"37\", $hex);\n    $hex = str_replace(\"\
    6\", \"38\", $hex);\n    $hex = str_replace(\"7\", \"39\", $hex);\n    $hex =\
    \ str_replace(\"8\", \"40\", $hex);\n    $hex = str_replace(\"9\", \"41\", $hex);\n\
    \    $hex = str_replace(\"A\", \"42\", $hex);\n    $hex = str_replace(\"B\", \"\
    43\", $hex);\n    $hex = str_replace(\"C\", \"44\", $hex);\n    $hex = str_replace(\"\
    D\", \"45\", $hex);\n", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/', '',\
    \ $num));\n    $hex = str_split($hex, 2);\n    $hex = array_filter($hex);\n  \
    \  $hex = array_map(function($hex) {\n        return hexdec($hex);\n    }, $hex);\n\
    \    $hex = array_filter($hex);\n    $hex = array_map(function($hex) {\n     \
    \   return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n    $hex = array_map(function($hex)\
    \ {\n        return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n   \
    \ $hex = array_map(function($hex) {\n        return $hex;\n    }, $hex);\n   \
    \ $hex = array_filter($hex);\n    $hex = array_map(function($hex) {\n        return\
    \ $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n    $hex = array_map(function($hex)\
    \ {\n        return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n   \
    \ $hex = array_map(function($hex) {\n        return $hex;\n    }, $hex);\n   \
    \ $hex = array_filter($hex);\n    $hex = array_map(function($hex) {\n        return\
    \ $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n    $hex = array_map(function($hex)\
    \ {\n        return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n   \
    \ $hex = array_map(function($hex) {\n        return $hex;\n    }, $hex);\n   \
    \ $hex = array_filter($hex);\n    $hex = array_map(function($hex) {\n        return\
    \ $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n    $hex = array_map(function($hex)\
    \ {\n        return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n   \
    \ $hex = array_map(function($hex) {\n        return $hex;\n    }, $hex);\n   \
    \ $hex = array_filter($hex);\n    $hex = array_map(function($hex) {\n        return\
    \ $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n    $hex = array_map(function($hex)\
    \ {\n        return $hex;\n    }, $hex);\n    $hex = array_filter($hex);\n   \
    \ $hex = array_map(function($hex) {\n        return $hex;\n    }, $hex);\n   \
    \ $hex = array_filter($hex);\n    $hex = array_map(function($", "    $hex = strtoupper(preg_replace('/[^0-9A-F]/',\
    \ '', $num));\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex,\
    \ 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n \
    \   $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8, '0',\
    \ STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex =\
    \ str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_RIGHT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex\
    \ = str_pad($hex, 8, '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n\
    \    $hex = str_pad($hex, 8, '0', STR_PAD_BOTH);\n    $hex = str_pad($hex, 8,\
    \ '0', STR_PAD_LEFT);\n    $hex = str_pad($hex, 8, '0', STR_PAD_RIGHT);\n    $hex\
    \ = str_pad($hex, "]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

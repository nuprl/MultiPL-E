name: HumanEval_90_next_smallest
language: php
prompt: "<?php\n// You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\n// >>> next_smallest(array(1, 2, 3, 4, 5))\n// 2\n// >>> next_smallest(array(5,\
  \ 1, 4, 3, 2))\n// 2\n// >>> next_smallest(array())\n// null\n// >>> next_smallest(array(1,\
  \ 1))\n// null\nfunction next_smallest($lst) {\n"
tests: "function candidate(...$args) {\n    return next_smallest(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 4, 3, 2)) !==\
  \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1))\
  \ !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1, 1, 1, 0)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-35,\
  \ 34, 12, -45)) !== -35) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $smallest = array_shift($lst);\n    foreach ($lst as $val) {\n\
    \        if ($val < $smallest) {\n            $smallest = $val;\n        }\n \
    \   }\n    return $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst\
    \ as $item) {\n        if ($smallest === null || $item < $smallest) {\n      \
    \      $smallest = $item;\n        }\n    }\n    return $smallest;\n}\n", "  \
    \  $smallest = null;\n    foreach ($lst as $key => $value) {\n        if ($smallest\
    \ == null || $value < $smallest) {\n            $smallest = $value;\n        }\n\
    \    }\n    return $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst\
    \ as $key => $value) {\n        if ($smallest === null || $value < $smallest)\
    \ {\n            $smallest = $value;\n        }\n    }\n    return $smallest;\n\
    }\n", "    $smallest = null;\n    foreach ($lst as $key => $value) {\n       \
    \ if ($smallest == null || $value < $smallest) {\n            $smallest = $value;\n\
    \        }\n    }\n    return $smallest;\n}\n", "    $smallest = null;\n    foreach\
    \ ($lst as $item) {\n        if ($smallest === null || $item < $smallest) {\n\
    \            $smallest = $item;\n        }\n    }\n    return $smallest;\n}\n",
  "    $smallest = array_shift($lst);\n    foreach ($lst as $val) {\n        if ($val\
    \ < $smallest) {\n            $smallest = $val;\n        }\n    }\n    return\
    \ $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst as $key => $value)\
    \ {\n        if ($smallest === null || $value < $smallest) {\n            $smallest\
    \ = $value;\n        }\n    }\n    return $smallest;\n}\n", "    $smallest = null;\n\
    \    $smallest_value = null;\n    foreach ($lst as $value) {\n        if ($smallest\
    \ == null || $value < $smallest_value) {\n            $smallest = $value;\n  \
    \          $smallest_value = $value;\n        }\n    }\n    return $smallest;\n\
    }\n", "    $smallest = array_shift($lst);\n    if (empty($lst)) {\n        return\
    \ null;\n    }\n    $smallest = min($smallest, $lst[0]);\n    return $smallest;\n\
    }\n", "    $smallest = array_shift($lst);\n    foreach ($lst as $val) {\n    \
    \    if ($val < $smallest) {\n            $smallest = $val;\n        }\n    }\n\
    \    return $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst as $key\
    \ => $value) {\n        if ($smallest === null || $value < $smallest) {\n    \
    \        $smallest = $value;\n        }\n    }\n    return $smallest;\n}\n", " \
    \   $smallest = null;\n    foreach ($lst as $key => $value) {\n        if ($smallest\
    \ == null || $value < $smallest) {\n            $smallest = $value;\n        }\n\
    \    }\n    return $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst\
    \ as $value) {\n        if ($smallest === null || $value < $smallest) {\n    \
    \        $smallest = $value;\n        }\n    }\n    return $smallest;\n}\n", " \
    \   $smallest = null;\n    foreach ($lst as $key => $value) {\n        if ($smallest\
    \ === null || $value < $smallest) {\n            $smallest = $value;\n       \
    \ }\n    }\n    return $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst\
    \ as $item) {\n        if ($smallest === null || $item < $smallest) {\n      \
    \      $smallest = $item;\n        }\n    }\n    return $smallest;\n}\n", "  \
    \  $smallest = array_shift($lst);\n    foreach ($lst as $val) {\n        if ($val\
    \ < $smallest) {\n            $smallest = $val;\n        }\n    }\n    return\
    \ $smallest;\n}\n", "    $smallest = null;\n    foreach ($lst as $value) {\n \
    \       if ($smallest === null || $value < $smallest) {\n            $smallest\
    \ = $value;\n        }\n    }\n    return $smallest;\n}\n", "    if (empty($lst))\
    \ {\n        return null;\n    }\n    $smallest = array_shift($lst);\n    foreach\
    \ ($lst as $val) {\n        if ($val < $smallest) {\n            $smallest = $val;\n\
    \        }\n    }\n    return $smallest;\n}\n", "    $smallest = null;\n    $smallest_value\
    \ = null;\n    foreach ($lst as $value) {\n        if ($smallest === null || $value\
    \ < $smallest_value) {\n            $smallest = $value;\n            $smallest_value\
    \ = $value;\n        }\n    }\n    return $smallest;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n// From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
  \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = 0;\n        }\n        $max_index++;\n\
    \    }\n    return array_slice($numbers, 0, $max_index);\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $max = $numbers[0];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n        }\n    }\n    $result[] = $max;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n    $max_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n \
    \           $max = $number;\n            $max_index = $i;\n        }\n       \
    \ $i++;\n    }\n    return array($max, $max_index);\n}\n", "    $max_element =\
    \ null;\n    $max_index = 0;\n    foreach ($numbers as $index => $number) {\n\
    \        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_element = null;\n    $max_element_index\
    \ = 0;\n    $max_element_value = null;\n    $max_element_count = 0;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max_element == null || $value\
    \ > $max_element_value) {\n            $max_element = $value;\n            $max_element_index\
    \ = $index;\n            $max_element_value = $value;\n            $max_element_count\
    \ = 1;\n        } else {\n            $max_element_count++;\n        }\n    }\n\
    \    $max_element_count++;\n    $max_element = array_slice($numbers, $max_element_index,\
    \ $max_element_count);\n    return $max_element;\n}\n", "    $max_element = null;\n\
    \    $max_index = null;\n    foreach ($numbers as $index => $value) {\n      \
    \  if ($max_element == null || $value > $max_element) {\n            $max_element\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n", "    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max = array_shift($numbers);\n    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if ($number > $max) {\n\
    \            $max = $number;\n            $result = array($number);\n        }\
    \ else {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $numbers[$max_index];\n    return $result;\n}", "    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $result = [];\n    $i = 0;\n    foreach ($numbers\
    \ as $number) {\n        $result[$i] = max($number, $result[$i]);\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $max = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max) {\n        \
    \    $max = $number;\n        }\n    }\n    $result[] = $max;\n    return $result;\n\
    }\n", "    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n     \
    \       $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n\
    \    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n", "    $max_value\
    \ = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $max_value =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return $max_value;\n\
    }\n", "    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n", "    $result = array();\n    $rolling_max = array();\n\
    \    foreach ($numbers as $number) {\n        $rolling_max[] = $number;\n    }\n\
    \    $rolling_max = array_reverse($rolling_max);\n    foreach ($rolling_max as\
    \ $rolling_max_number) {\n        $result[] = $rolling_max_number;\n    }\n  \
    \  return $result;\n}\n", "    $max_element = $numbers[0];\n    $max_index = 0;\n\
    \    $max_value = $numbers[0];\n    foreach ($numbers as $index => $value) {\n\
    \        if ($value > $max_value) {\n            $max_value = $value;\n      \
    \      $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n", "    $max_value = $numbers[0];\n    $max_index =\
    \ 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n\
    \            $max_value = $number;\n            $max_index = $number;\n      \
    \  }\n    }\n    $numbers[$max_index] = $max_value;\n    return $numbers;\n}\n",
  "    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

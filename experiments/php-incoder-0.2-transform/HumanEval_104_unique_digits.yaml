name: HumanEval_104_unique_digits
language: php
prompt: "<?php\n// Given a list of positive integers x. return a sorted list of all\
  \ \n// elements that hasn't any even digit.\n// Note: Returned list should be sorted\
  \ in increasing order.\n// For example:\n// >>> unique_digits(array(15, 33, 1422,\
  \ 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422, 10))\n//\
  \ array()\nfunction unique_digits($x) {\n"
tests: "function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
  \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
  \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) {\
  \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($x as $y) {\n        $result[$y] =\
    \ 1;\n    }\n    ksort($result);\n    return array_keys($result);\n}\n", "   \
    \ $result = [];\n    foreach ($x as $v) {\n        $result[] = intval($v);\n \
    \   }\n    sort($result);\n    $result = [];\n    foreach ($result as $v) {\n\
    \        if ($v % 2 == 0) {\n            $result[] = $v;\n        }\n    }\n \
    \   return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n    1422,\n    10\n\
    );\n\n$numbers = array_unique($numbers);\nsort($numbers);\n$numbers = array_filter($numbers,\
    \ function($number) {\n    return $number % 2 == 0;\n});\n\nprint_r($numbers);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers\
    \ = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n$numbers = array_unique($numbers);\n\
    sort($numbers);\n$numbers = array_filter($numbers, function($number) {\n    return\
    \ $number % 2 == 0;\n});\n\nprint_r($numbers);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n\
    \    1422,\n    10\n);\n\n$numbers = array_unique($numbers);\nsort($numbers);\n\
    $numbers = array_filter($numbers, function($number) {\n    return $number % 2\
    \ == 0;\n});\n\nprint_r($numbers);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n    1422,\n\
    \    10\n);\n\n$numbers = array_unique($numbers);\nsort($numbers);\n$numbers =\
    \ array_filter($numbers, function($number) {\n    return $number % 2 == 0;\n});\n\
    \nprint_r($numbers);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n    1422,\n    10\n\
    );\n\n$numbers = array_unique($numbers);\nsort($numbers);\n$numbers = array_filter($numbers,\
    \ function($number) {\n    return $number % 2 == 0;\n});\n\nprint_r($numbers);\n\
    </code>\n<|/ a tags=php,array", "    $digits = array();\n    foreach($x as $y)\
    \ {\n        $digits[] = $y;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $y) {\n        $result[$y] = 1;\n    }\n    foreach\
    \ ($result as $k => $v) {\n        if ($v % 2 != 0) {\n            unset($result[$k]);\n\
    \        }\n    }\n    return array_keys($result);\n}\n", "    $result = [];\n\
    \    foreach ($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $y) {\n        if ($y % 2 == 0) {\n\
    \            $result[] = $y;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks for your answer.\
    \ Your code works well but i need to get rid of duplicate numbers. I mean if i\
    \ have a number like 15 and i want to get rid of it i should get 15 and 33 not\
    \ 15 and 33 and 15\n<|/ c |>\n<| c |>\nI updated my answer, please check it out\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your code works well but i need to\
    \ get rid of duplicate numbers. I mean if i have a number like 15 and i want to\
    \ get rid of it i should get 15 and 33 not 15 and 33 and 15\n<|/ c |>\n<| c |>\n\
    I updated my answer, please check it out\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works well but i need to get rid of duplicate numbers. I mean if i\
    \ have a number like 15 and i want to get rid of it i should get 15 and 33 not\
    \ 15 and 33 and 15\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [15, 33,\
    \ 1422, 1];\n$result = array_filter($array, function($v){\n    return $v % 2 ==\
    \ 0;\n});\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = [15, 33, 1422, 1];\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($result);\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = [15, 33, 1422,\
    \ 1];\n$result = array_filter($array, function($v){\n    return $v % 2 == 0;\n\
    });\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$array = [15, 33, 1422, 1];\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\nprint_r($result);\n</code>\n<|/\
    \ a dscore=0 ", "    $digits = array();\n    foreach($x as $n) {\n        $digits[]\
    \ = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach($digits\
    \ as $digit) {\n        if(!in_array($digit, $result)) {\n            $result[]\
    \ = $digit;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach($x as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach($result as $y) {\n        $result[] = $y % 10;\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach ($x as $num) {\n        $digits[$num] = $num;\n    }\n    array_multisort($digits,\
    \ SORT_DESC, $x);\n    return $x;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_filter($digits,\
    \ function($n) {\n        return $n % 2 === 0;\n    });\n}\n", "    $digits =\
    \ array();\n    foreach($x as $n) {\n        $digits[] = $n % 10;\n    }\n   \
    \ sort($digits);\n    $result = array();\n    foreach($digits as $digit) {\n \
    \       if($digit % 2 != 0) {\n            $result[] = $digit;\n        }\n  \
    \  }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c\
    \ |>\nThanks so much! This was very helpful!\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = array(15,\
    \ 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n\
    <|/ a tags=php,arrays,sorting dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$arr = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\nsort($arr);\nprint_r($arr);\n</code>\n<|/ a dscore=0\
    \ tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n\
    $arr = array(15, 33, 1422, 1);\n$arr = array_", "    $result = [];\n    foreach($x\
    \ as $v) {\n        $result[] = $v;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach($result as $v) {\n        if($v % 2 == 0) {\n            $result[]\
    \ = $v;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach ($x as $n) {\n        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[] = $n\
    \ % 10;\n    }\n    sort($digits);\n    $result = array();\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 != 0) {\n            $result[] = $digit;\n\
    \        }\n    }\n    return $result;\n}\n", "    $digits = array();\n    foreach\
    \ ($x as $num) {\n        $digits[] = $num % 10;\n    }\n    return array_unique($digits);\n\
    }\n", "    $digits = array();\n    foreach ($x as $n) {\n        $digits[$n %\
    \ 10] = 1;\n    }\n    $result = array();\n    foreach ($digits as $k => $v) {\n\
    \        if ($v == 1) {\n            $result[] = $k;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $digits = array();\n    foreach($x as $k=>$v) {\n     \
    \   $digits[$v] = $k;\n    }\n    asort($digits);\n    $result = array();\n  \
    \  foreach($digits as $k=>$v) {\n        if($k % 2 == 0) {\n            $result[]\
    \ = $v;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($x as $v) {\n        $result[] = strval($v);\n    }\n    sort($result);\n\
    \    $result = array_unique($result);\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($x as $e) {\n        $result[] = array_sum(str_split($e));\n\
    \    }\n    return array_unique($result);\n}\n", "    $digits = array();\n   \
    \ foreach ($x as $n) {\n        $digits[$n % 10]++;\n    }\n    $result = array();\n\
    \    foreach ($digits as $k => $v) {\n        if ($v == 1) {\n            $result[]\
    \ = $k;\n        }\n    }\n    return $result;\n}\n", "    $digits = array();\n\
    \    foreach ($x as $n) {\n        $digits[$n % 10]++;\n    }\n    $result = array();\n\
    \    foreach ($digits as $k => $v) {\n        if ($v == 1) {\n            $result[]\
    \ = $k;\n        }\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_7_filter_by_substring
results:
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($search) {\n    return\
    \ strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($item) use\
    \ ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzc_ncavd.php on line 12

    '
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieqwd5ve.php:19\n\
    Stack trace:\n#0 /tmp/tmpieqwd5ve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpieqwd5ve.php\
    \ on line 19\n"
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant and readable than the accepted answer.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant and readable\
    \ than the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more elegant and readable than the accepted answer.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more elegant and readable than the accepted\
    \ answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Much more elegant and readable than\
    \ the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more elegant and readable than the accepted answer.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more elegant and readable than the accepted\
    \ answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant and readable than the accepted answer.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| \nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfolfcsfy.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n<| a |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjaz6p3v4.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,multidimensional-array |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpysvohbk8.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762

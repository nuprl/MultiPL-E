language: php
name: HumanEval_7_filter_by_substring
results:
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($search) {\n    return\
    \ strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($item) use\
    \ ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzc_ncavd.php on line 12

    '
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieqwd5ve.php:19\n\
    Stack trace:\n#0 /tmp/tmpieqwd5ve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpieqwd5ve.php\
    \ on line 19\n"
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant and readable than the accepted answer.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant and readable\
    \ than the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more elegant and readable than the accepted answer.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more elegant and readable than the accepted\
    \ answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Much more elegant and readable than\
    \ the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more elegant and readable than the accepted answer.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more elegant and readable than the accepted\
    \ answer.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant and readable than the accepted answer.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Much more elegant\
    \ and readable than the accepted answer.\n<|/ c |>\n<| \nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfolfcsfy.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n<| a |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjaz6p3v4.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,multidimensional-array |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpysvohbk8.php on line 12

    '
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n</code>\n<|/ a tags=arrays,php,string |>\n<| a dscore=1 |>\n\
    <code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring =\
    \ \"a\";\n$filtered = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\n</code>\n<|/ a tags=arrays,php,string\
    \ |>\n<| a tags=arrays,php,string |>\n<code>\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,string |>\n\
    <code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring =\
    \ \"a\";\n$filtered = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=arrays,php,string |>\n<code>\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$strings = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\n</code>\n<|/ a dscore=1 tags=arrays,php,string |>\n<| a tags=arrays,php,string\
    \ |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring\
    \ = \"a\";\n$filtered = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=arrays,php,string |>\n<code>\n$strings = array(\"abc\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmumcvpeq.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj74y9kb.php:19\n\
    Stack trace:\n#0 /tmp/tmpuj74y9kb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuj74y9kb.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like your solution,\
    \ but I believe it can be simplified a bit. Instead of using array_filter and\
    \ strpos, you can just use strstr and strlen. Also, instead of using array_map\
    \ and explode, you can just use array_filter and strstr. I'll post my solution\
    \ below.\n<|/ c |>\n<| c |>\nI agree with you on simplifying it, but I believe\
    \ that `array_filter` will still be faster than `array_map` because `array_map`\
    \ will have to iterate over each element of the array and `array_filter` will\
    \ have to iterate over each element of the array and `strpos` will have to iterate\
    \ over each element of the array and `strstr` will have to iterate over each element\
    \ of the array and `explode` will have to iterate over each element of the array.\
    \ Also, `strpos` will have to iterate over each element of the array and `strstr`\
    \ will have to iterate over each element of the array and `explode` will have\
    \ to iterate over each element of the array.\n<|/ c |>\n<| c |>\nI agree with\
    \ you on simplifying it, but I believe that `array_filter` will still be faster\
    \ than `array_map` because `array_map` will have to iterate over each element\
    \ of the array and `array_filter` will have to iterate over each element of the\
    \ array and `strpos` will have to iterate over each element of the array and `strstr`\
    \ will have to iterate over each element of the array and `explode` will have\
    \ to iterate over each element of the array. Also, `strpos` will have to iterate\
    \ over each element of the array and `strstr` will have to iterate over each element\
    \ of the array and `explode` will have to iterate over each element of the array.\n\
    <|/ c |>\n<| c |>\nI agree with you on simplifying it, but I believe that `array_filter`\
    \ will still be faster than `array_map` because `array_map` will have to iterate\
    \ over each element of the array and `array_filter` will have to iterate over\
    \ each element of the array and `strpos` will have to iterate over each element\
    \ of the array and `strstr` will have to iterate over each element of the array\
    \ and `explode` will have to iterate over each element of the array. Also, `strpos`\
    \ will have to iterate over each element of the array and `strstr` will have to\
    \ iterate over each element of the array and `explo\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpaie_r9m7.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for the answer. I'm\
    \ going to try this out and see how it works. I appreciate it.\n<|/ c |>\n<| c\
    \ |>\nI tested this out and it works great. Thanks so much!\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n\n$string = \"Hello World!\";\n\n$pattern = \"Hello\";\n\n\
    $replacement = \"World\";\n\n$result = preg_replace($pattern, $replacement, $string);\n\
    \necho $result;\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8gbifacd.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp72q_9f2d.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj74y9kb.php:19\n\
    Stack trace:\n#0 /tmp/tmpuj74y9kb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuj74y9kb.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis does not answer the question. OP asked how to filter an\
    \ array for only those strings that contain a given substring.\n<|/ c |>\n<| c\
    \ |>\nThe question was how to filter an array for only those strings that contain\
    \ a given substring. My answer does exactly that. OP asked how to filter an array\
    \ for only those strings that contain a given substring.\n<|/ c |>\n<| c |>\n\
    This does not answer the question. OP asked how to filter an array for only those\
    \ strings that contain a given substring. Your answer does not do that.\n<|/ c\
    \ |>\n<| c |>\nIt does answer the question. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP asked how to filter an array for only those strings that contain a given\
    \ substring. My answer does exactly that. OP asked how to filter an array for\
    \ only those strings that contain a given substring. My answer does exactly that.\
    \ OP as\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwovqe8k5.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array();\n$array[] = array('name' =>\
    \ 'John', 'age' => '20');\n$array[] = array('name' => 'Jane', 'age' => '30');\n\
    $array[] = array('name' => 'Jack', 'age' => '40');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n\
    $array[] = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '50');\n$array[] = array('\nfunction candidate(...$args) {\n\
    \    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphysjs2el.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$string = \"a\";\n$result = array_filter($array, function($value) use ($string)\
    \ {\n    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$string = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($string) {\n    return strpos($value, $string) !== false;\n});\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$string = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($string) {\n    return strpos($value, $string) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,string |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($string) {\n    return strpos($value,\
    \ $string) !== false;\n});\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($string) {\n    return strpos($value,\
    \ $string) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return str\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpowxnos6l.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| a tags=php,arrays,string |>\n<code>\n$strings\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$result\
    \ = array_filter($strings, function($string) use ($substring) {\n    return strpos($string,\
    \ $substring) !== FALSE;\n});\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis should\
    \ be the accepted answer as it is more concise and does not require a closure.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$result = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== FALSE;\n});\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis should be the accepted\
    \ answer as it is more concise and does not require a closure.\n<|/ c |>\n<| a\
    \ tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$substring = \"a\";\n$result = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== FALSE;\n});\n\
    </code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n$strings = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$result = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== FALSE;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring\
    \ = \"a\";\n$result = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== FALSE;\n});\n</code>\n<|/ a dscore=3\
    \ |>\n<| a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\nfunction candidate(...$args) {\n   \
    \ return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9tfhs32f.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your answer\
    \ but I think it would be better to use a `foreach` instead of a `for` loop. `for`\
    \ loops are generally slower than `foreach` loops.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, `for` loops are generally slower than `foreach` loops, but in this\
    \ case I doubt that `foreach` would be faster than `for` loop. `for` loop is faster\
    \ than `foreach` loop in most cases. But I agree that `foreach` loop would be\
    \ better here.\n<|/ c |>\n<| c |>\nI agree with you that `for` loops are generally\
    \ slower than `foreach` loops, but in this case I doubt that `foreach` would be\
    \ faster than `for` loop. `for` loop is faster than `foreach` loop in most cases.\
    \ But I agree that `foreach` loop would be better here.\n<|/ c |>\n<| c |>\nI\
    \ agree with you that `for` loops are generally slower than `foreach` loops, but\
    \ in this case I doubt that `foreach` would be faster than `for` loop. `for` loop\
    \ is faster than `foreach` loop in most cases. But I agree that `foreach` loop\
    \ would be better here.\n<|/ c |>\n<| c |>\nI agree with you that `for` loops\
    \ are generally slower than `foreach` loops, but in this case I doubt that `foreach`\
    \ would be faster than `for` loop. `for` loop is faster than `foreach` loop in\
    \ most cases. But I agree that `foreach` loop would be better here.\n<|/ c |>\n\
    <| a tags=php,arrays,string |>\n<code>\n<?php\n$string = \"Hello World\";\n$array\
    \ = array(\"Hello\", \"World\", \"PHP\");\n$array = array_filter($array, function($string)\
    \ use ($string) {\n    return strpos($string, $string) !== false;\n});\nprint_r($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis answer would be better if you explained\
    \ what your code does.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$string = \"\
    Hello World\";\n$array = array(\"Hello\", \"World\", \"PHP\");\n$array = array_filter($array,\
    \ \nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfza9tulr.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to\
    \ reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array =\
    \ array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($item) use ($search) {\n    return strpos($item,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpipbghdbv.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj74y9kb.php:19\n\
    Stack trace:\n#0 /tmp/tmpuj74y9kb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuj74y9kb.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n$string =\
    \ 'This is a string with some words and some more words and some more words and\
    \ some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more words and some more words and some more words and some more words\
    \ and some more word\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpb6mkmwyo.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array();\n\
    $array[] = array('name' => 'John', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jane', 'age' => '28');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '29');\n$array[] = array('name' => 'Jack', 'age' => '29');\n\
    $array[] = array('name' => 'Jack', 'age' => '29');\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6hxxh18o.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieqwd5ve.php:19\n\
    Stack trace:\n#0 /tmp/tmpieqwd5ve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpieqwd5ve.php\
    \ on line 19\n"
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpqy79ijw_.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpripfdljo.php:18\n\
    Stack trace:\n#0 /tmp/tmpripfdljo.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpripfdljo.php\
    \ on line 18\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution,\
    \ although I prefer to use `strpos` instead of `strstr` because it's more efficient\
    \ and doesn't require the use of `mb_strlen`.\n<|/ c |>\n<| c |>\nI agree, `strpos`\
    \ is more efficient. I've updated my answer to include `strpos`.\n<|/ c |>\n<|\
    \ a dscore=1 |>\nI like your solution, although I prefer to use strpos instead\
    \ of strstr because it's more efficient and doesn't require the use of mb_strlen.\n\
    <code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptseil8dg.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like your solution,\
    \ it's very elegant and easy to understand.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ it's very elegant and easy to understand.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ it's very elegant and easy to understand.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ it's very elegant and easy to understand.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ it's very elegant and easy to understand.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $string = 'This is a string';\n$search = 'is';\n$pos = strpos($string, $search);\n\
    if ($pos !== false) {\n    $string[$pos] = 'X';\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work if the search string appears more than once in\
    \ the string.\n<|/ c |>\n<| c |>\nThis doesn't work if the search string appears\
    \ more than once in the string.\n<|/ c |>\n<| c |>\nThis doesn't work if the search\
    \ string appears more than once in the string.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if the search string appears more than once in the string.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if the search string appears more than once in the\
    \ string.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'This is a string';\n\
    $search = 'is';\n$pos = strpos($string, $search);\nif ($pos !== false) {\n   \
    \ $string[$pos] = 'X';\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work\
    \ if the search string appears more than once in the string.\n<|/ c |>\n<| c |>\n\
    This doesn't work if the search string appears more than once in the string.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the search string appears more than once\
    \ in the string.\n<|/ c |>\n<| c |>\nThis doesn't work if the search string appears\
    \ more than once in the string.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string =\
    \ 'This is a string';\n$search = 'is';\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpilepa6lv.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nI like your use of array_filter. Very clever!\n\
    <|/ c |>\n<| c |>\nI like your use of array_filter. Very clever!\n<|/ c |>\n<|\
    \ c |>\nI like your use of array_filter. Very clever!\n<|/ c |>\n<| c |>\nI like\
    \ your use of array_filter. Very clever!\n<|/ c |>\n<| c |>\nI like your use of\
    \ array_filter. Very clever!\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    a\", \"b\", \"c\", \"d\", \"e\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($var) use ($search) {\n    return strpos($var, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis should be the accepted answer.\
    \ No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. No need to reinvent the wheel.\n<|/ c |>\n\
    <| a tags=arrays,php |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\");\n$search = \"a\";\n$result = array_filter($array, function($var) use ($search)\
    \ {\n    return strpos($var, $search) !== false;\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the wheel.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent the\
    \ wheel.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. No need to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nThis \nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp63swzjk0.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nI like\
    \ your answer, but I'm going to accept the other one because it's more concise.\n\
    <|/ c |>\n<| c |>\nI agree with you, it's more concise. I'm just trying to help\
    \ you understand how it works.\n<|/ c |>\n<| c |>\nI agree with you, it's more\
    \ concise. I'm just trying to help you understand how it works.\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| a tags=php,arrays,string |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string dscore=1 |>\n\
    <| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,string |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1yj3xpdo.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9d7k2e7v.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== FALSE;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2hp0kd5.php:19\n\
    Stack trace:\n#0 /tmp/tmph2hp0kd5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph2hp0kd5.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array();\n\
    $array[] = array('name' => 'John', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jane', 'age' => '30');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8cck4eve.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=1 |>\n\
    <code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4qbrk68j.php
    on line 16

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nThis doesn't\
    \ work when there are multiple occurrences of the substring in the string.\n<|/\
    \ c |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a tags=php,arrays,string dscore=2 |>\n<| a tags=php,arrays,string |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| a tags=php,arrays,string |>\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpeymf_hoy.php
    on line 16

    '
  timestamp: 1659823904
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution,\
    \ because it doesn't require any additional libraries. But I wonder if there is\
    \ a way to make it work with `array_filter()`? I mean, is there a way to pass\
    \ a callback function to the `array_filter()` function?\n<|/ c |>\n<| c |>\n:\
    \ Yes, you can pass a callback function to `array_filter()`.  See my answer below.\n\
    <|/ c |>\n<| c |>\n: I added a solution that uses `array_filter()`.\n<|/ c |>\n\
    <| c |>\n: I added a solution that uses `array_filter()`.\n<|/ c |>\n<| c |>\n\
    : I added a solution that uses `array_filter()`.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpid81refv.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== FALSE) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    $string = 'abcde';\n$search = 'a';\n$result = preg_grep('/' . $search . '/', $string);\n\
    </code>\n<|/ a tags=php,string,arrays |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxxq9o017.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a tags=arrays,php,multidimensional-array\
    \ |>\n<| c |>\nThis doesn't work if one of the strings contains `a`, but `b` does.\n\
    <|/ c |>\n<| c |>\n: Yes, I noticed that and fixed it. I also added a version\
    \ that doesn't require a loop.\n<|/ c |>\n<| a tags=arrays,php,multidimensional-array\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($value) use ($search)\
    \ {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php,multidimensional-array\
    \ |>\n<| a tags=arrays,php,multidimensional-array |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\n</code>\n<|/ a tags=arrays,php,multidimensional-array |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($search) {\n    return\
    \ strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php,multidimensional-array\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpc_06aljm.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=arrays,php,string |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php,string\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($value) use\
    \ ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=arrays,php,string |>\n<| a tags=arrays,php,string |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php,string |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\n</code>\n<|/ a tags=arrays,php,string\
    \ |>\n<| a tags=arrays,php,string |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9vei4145.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nI wrote\
    \ a little helper function which I find useful:\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptbvbfg3n.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($search) {\n    return\
    \ strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($item) use ($search)\
    \ {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"\
    array\");\n$search = \"a\";\n$result = array_filter($array, function($item) use\
    \ ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your answer such\
    \ that others can learn from it\n<|/ c |>\n<| c |>\nThis answer was already given\
    \ by someone else and has already been accepted as the correct answer. Why are\
    \ you repeating it?\n<|/ c |>\n<| c |>\nI didn't see that answer when I posted\
    \ mine. Sorry.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item\nfunction candidate(...$args) {\n \
    \   return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp18fx_fux.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieqwd5ve.php:19\n\
    Stack trace:\n#0 /tmp/tmpieqwd5ve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpieqwd5ve.php\
    \ on line 19\n"
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly!\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly!\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly!\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$string\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($string) {\n\
    \    return strpos($value, $string) !== false;\n});\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly!\n<|/ c |>\n<| a\
    \ tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\"\
    , \"array\");\n$string = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($string) {\n    return str\nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpocwx_f6f.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj74y9kb.php:19\n\
    Stack trace:\n#0 /tmp/tmpuj74y9kb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpuj74y9kb.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array();\n\
    $array[] = array('name' => 'John', 'age' => 25);\n$array[] = array('name' => 'Jane',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n\nfunction candidate(...$args) {\n  \
    \  return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john\
    \ doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\",\
    \ \"prune\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcihsiy6c.php
    on line 12

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if you have a string like \"abcde\"\
    \ in the array and you search for \"a\".\n<|/ c |>\n<| c |>\n: I see what you\
    \ mean. I've updated my answer to account for that.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a |>\n<code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($search) {\n \
    \   return strpos($item, $search) !== false;\n});\n</code>\n<|/ a tags=php,arrays\
    \ dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"\
    bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a d\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbesr2jtf.php
    on line 16

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like your\
    \ answer, but I'm afraid it won't work if I try to filter by multiple substrings.\
    \ I edited my question to reflect this.\n<|/ c |>\n<| c |>\n: I added a solution\
    \ for multiple substrings.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($search) {\n    return strpos($item, $search) !== false;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($item) use ($search) {\n    return strpos($item,\
    \ $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($search) {\n    return\
    \ strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($search) {\n    return\
    \ strpos($item, $search) !== false;\n});\n</code>\n<|/ a dscore=0 tags=php,arrays\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bacd\",\
    \ \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) !== false;\n});\n</code>\n\
    <|/ a dscore=0 tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpby0ruo2u.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== FALSE;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2hp0kd5.php:19\n\
    Stack trace:\n#0 /tmp/tmph2hp0kd5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph2hp0kd5.php\
    \ on line 19\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array();\n$array[] = array(\"name\" =>\
    \ \"test\", \"value\" => \"test\");\n$array[] = array(\"name\" => \"test2\", \"\
    value\" => \"test2\");\n$array[] = array(\"name\" => \"test3\", \"value\" => \"\
    test3\");\n$array[] = array(\"name\" => \"test4\", \"value\" => \"test4\");\n\
    $array[] = array(\"name\" => \"test5\", \"value\" => \"test5\");\n$array[] = array(\"\
    name\" => \"test6\", \"value\" => \"test6\");\n$array[] = array(\"name\" => \"\
    test7\", \"value\" => \"test7\");\n$array[] = array(\"name\" => \"test8\", \"\
    value\" => \"test8\");\n$array[] = array(\"name\" => \"test9\", \"value\" => \"\
    test9\");\n$array[] = array(\"name\" => \"test10\", \"value\" => \"test10\");\n\
    $array[] = array(\"name\" => \"test11\", \"value\" => \"test11\");\n$array[] =\
    \ array(\"name\" => \"test12\", \"value\" => \"test12\");\n$array[] = array(\"\
    name\" => \"test13\", \"value\" => \"test13\");\n$array[] = array(\"name\" =>\
    \ \"test14\", \"value\" => \"test14\");\n$array[] = array(\"name\" => \"test15\"\
    , \"value\" => \"test15\");\n$array[] = array(\"name\" => \"test16\", \"value\"\
    \ => \"test16\");\n$array[] = array(\"name\" => \"test17\", \"value\" => \"test17\"\
    );\n$array[] = array(\"name\" => \"test18\", \"value\" => \"test18\");\n$array[]\
    \ = array(\"name\" => \"test19\", \"value\" => \"test19\");\n$array[] = array(\"\
    name\" => \"test20\", \"value\" => \"test20\");\n$array[] = array(\"name\" =>\
    \ \"test21\", \"value\" => \"test21\");\n$array[] = array(\"name\" => \"test22\"\
    , \"value\" => \"test22\");\n$array[] = array(\"name\" => \"test23\", \"value\"\
    \ => \"test23\");\n$array[] = array(\"name\" => \"test24\", \"value\" => \"test24\"\
    );\n$\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk5mq3bu_.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a |>\n<| c |>\nThis does not answer the question.\
    \ The OP wants to filter out all strings that do not contain `a`, not only those\
    \ that contain `a`.\n<|/ c |>\n<| c |>\n: I misunderstood the question, thanks\
    \ for pointing that out. I've updated my answer.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring\
    \ = \"a\";\n$result = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays,filter |>\n<| c |>\nThis does not answer the question.\
    \ The OP wants to filter out all strings that do not contain `a`, not only those\
    \ that contain `a`.\n<|/ c |>\n<| a |>\n<code>\n<?php\n$strings = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$substring = \"a\";\n$result = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays,filter dscore=0\
    \ |>\n<| c |>\nThis does not answer the question. The OP wants to filter out all\
    \ strings that do not contain `a`, not only those that contain `a`.\n<|/ c |>\n\
    <| a tags=php,arrays,filter |>\n<code>\n<?php\n$strings = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$substring = \"a\";\n$result = array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n});\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ does not answer the question. The OP wants to filter out all strings that do\
    \ not contain `a`, not only those that contain `a`.\n<|/ c |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n<?php\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n\
    $substring = \"a\";\n$result = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpo\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfr5i29aj.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution.\
    \ Very concise. Thanks!\n<|/ c |>\n<| c |>\nI like this solution as well. Very\
    \ concise. Thanks!\n<|/ c |>\n<| c |>\nI like this solution as well. Very concise.\
    \ Thanks!\n<|/ c |>\n<| c |>\nI like this solution as well. Very concise. Thanks!\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very concise. Thanks!\n<|/ c\
    \ |>\n<| a dscore=5 |>\nI like using array_filter() for this purpose:\n<code>\n\
    $array = array('a', 'b', 'c', 'd', 'e');\n$filtered = array_filter($array, function($value)\
    \ {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\n\
    This solution works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution\
    \ works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works perfectly\
    \ for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works perfectly for me. Thanks!\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n\
    $filtered = array_filter($array, function($value) {\n    return strpos($value,\
    \ 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis solution\
    \ works perfectly for me. Thanks!\n<|/ c |>\n<| c |>\nThis solution works perfectly\
    \ for me. Thanks!\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array('a', 'b',\
    \ 'c', 'd', 'e');\n$filtered = array_filter($array, function($value) {\n    return\
    \ strpos($value, 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This solution works perfectly for me. Thanks!\n<|/ c |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7bxith_a.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n<?php\n$array\
    \ = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($search) {\n    return strpos($value,\
    \ $search) !== false;\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bacd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($search) {\n    return strpos($value, $search) !== false;\n});\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\",\
    \ \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search\
    \ = \"a\";\n$result = array_filter($array, function($value) use ($search) {\n\
    \    return strpos($value, $search) !== false;\n});\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bacd\", \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array,\
    \ function($value) use ($search) {\n    return strpos($value, $search) !== false;\n\
    });\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$array =\
    \ array(\"\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8dpi265s.php
    on line 16

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I'm sorry I didn't make my\
    \ question clear enough. I've edited my question to make it clearer. My question\
    \ is about how to filter an array by multiple substrings. For example, I want\
    \ to filter an array that has \"abc\", \"bacd\", \"cde\", \"array\" as its elements.\
    \ I want to get an array that has \"abc\", \"bacd\", \"array\" as its elements.\
    \ I hope this makes my question clearer.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ with a function that does what you want.\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. I'm sorry I didn't make my question clear enough. I've edited my question\
    \ to make it clearer. My question is about how to filter an array by multiple\
    \ substrings. For example, I want to filter an array that has \"abc\", \"bacd\"\
    , \"cde\", \"array\" as its elements. I want to get an array that has \"abc\"\
    , \"bacd\", \"array\" as its elements. I hope this makes my question clearer.\n\
    <|/ c |>\n<| c |>\nI updated my answer with a function that does what you want.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I'm sorry I didn't make my question\
    \ clear enough. I've edited my question to make it clearer. My question is about\
    \ how to filter an array by multiple substrings. For example, I want to filter\
    \ an array that has \"abc\", \"bacd\", \"cde\", \"array\" as its elements. I want\
    \ to get an array that has \"abc\", \"bacd\", \"array\" as its elements. I hope\
    \ this makes my question clearer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$search = array(\"a\"\
    , \"b\", \"c\");\n$result = array_intersect($search, $array);\nprint_r($result);\n\
    function candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6rri3byn.php
    on line 16

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nThis\
    \ doesn't work if `$strings` contains `0` as first element. `strpos` returns `0`\
    \ as first position for `0`.\n<|/ c |>\n<| c |>\nI added a version that doesn't\
    \ have this problem.\n<|/ c |>\n<| c |>\nI added a version that doesn't have this\
    \ problem.\n<|/ c |>\n<| c |>\nI added a version that doesn't have this problem.\n\
    <|/ c |>\n<| c |>\nI added a version that doesn't have this problem.\n<|/ c |>\n\
    <| a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"\
    cde\", \"array\");\n$substring = \"a\";\n$result = array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n});\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if `$strings` contains\
    \ `0` as first element. `strpos` returns `0` as first position for `0`.\n<|/ c\
    \ |>\n<| c |>\nI added a version that doesn't have this problem.\n<|/ c |>\n<|\
    \ c |>\nI added a version that doesn't have this problem.\n<|/ c |>\n<| c |>\n\
    I added a version that doesn't have this problem.\n<|/ c |>\n<| c |>\nI added\
    \ a version that doesn't have this problem.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$strings = array(\"abc\", \"bacd\", \"cde\", \"array\");\n$substring\
    \ = \"a\";\n$result = array_filter($strings, function($string) use ($substring)\
    \ {\n    return strpos($string, $substring) !== false;\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if `$strings` contains `0` as first element.\
    \ `strpos` returns `0` as first position for `0`.\n<|/ c |>\n<| c |>\nI added\
    \ a version that doesn't have this problem.\n<|/ c |>\n<| c |>\nI added a version\
    \ that doesn't have this problem.\n<|/ c |>\n<| c |>\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4nlyfpn5.php
    on line 12

    '
  timestamp: 1659823904
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpripfdljo.php:18\n\
    Stack trace:\n#0 /tmp/tmpripfdljo.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpripfdljo.php\
    \ on line 18\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieqwd5ve.php:19\n\
    Stack trace:\n#0 /tmp/tmpieqwd5ve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpieqwd5ve.php\
    \ on line 19\n"
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== FALSE)\
    \ {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return filter_by_substring(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
    xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"\
    ), \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730762
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return filter_by_substring(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  $filtered_strings =\
    \ array();\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n\
    <code>\n$array = array();\n$array[] = array('name' => 'John', 'age' => '25');\n\
    $array[] = array('name' => 'Jane', 'age' => '30');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jill', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jill', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jill', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jill', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jill', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jill', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = array('name' => 'Jill', 'age' => '25');\n\
    $array[] = array('name' => 'Jack', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jill', 'age' => '25');\n$array[] = array('name' => 'Jack', 'age' => '25');\n\
    $array[] = array('name' => 'Jill', 'age' => '25');\n$array[] = array('name' =>\
    \ 'Jack', 'age' => '25');\n$array[] = \nfunction candidate(...$args) {\n    return\
    \ filter_by_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"\
    xxx\"), \"xx\") !== array(\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"grunt\", \"trumpet\"\
    , \"prune\", \"gruesome\"), \"run\") !== array(\"grunt\", \"prune\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg3hx20mi.php
    on line 16

    '
  timestamp: 1659823904
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that contain given\
    \ substring\n// >>> filter_by_substring(array(), \"a\")\n// array()\n// >>> filter_by_substring(array(\"\
    abc\", \"bacd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"bacd\", \"array\"\
    )\nfunction filter_by_substring($strings, $substring) {\n  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\n$string\
    \ = \"Hello World!\";\n$search = \"World\";\n$pos = strpos($string, $search);\n\
    if ($pos === false) {\n    echo \"The string '$search' was not found in the string\
    \ '$string'\";\n} else {\n    echo \"The string '$search' was found in the string\
    \ '$string'\";\n    echo \" and exists at position $pos\";\n}\nfunction candidate(...$args)\
    \ {\n    return filter_by_substring(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"xxx\", \"\
    aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"), \"run\"\
    ) !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzm3vjwvc.php
    on line 12

    '
  timestamp: 1659823904

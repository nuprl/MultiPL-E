language: php
name: HumanEval_120_maximum
results:
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = -PHP_INT_MAX;\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    $result[] = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer to the question.\
    \ Also, please don't post code only answers. Explain what your code does, and\
    \ how it does it.\n<|/ c |>\n<| c |>\nI added some explanation to the code. Hope\
    \ it helps.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n    $result[] = $array[$i];\n\
    \    $i++;\n}\n$result = array_slice($array, 0, $max);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n    $result[] = $array[$i];\n\
    \    $i++;\n}\n$result = array_slice($array, 0, $max);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer such that\
    \ others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array\
    \ = [1,2,3,4,5,6,7,8,9,10];\n$max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n\
    \    $result[] = $array[$i];\n    $i++;\n}\n$result = array_slice($array, 0, $max);\n\
    print_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$max = 3;\n\
    $result = [];\n$i = 0;\nwhile($i < $\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5jodie6r.php on line 30

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + $k]);\n    }\n    \n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowj0x0q4.php:36\n\
    Stack trace:\n#0 /tmp/tmpowj0x0q4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpowj0x0q4.php\
    \ on line 36\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $k > $len ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7idmmd_7.php:34\n\
    Stack trace:\n#0 /tmp/tmp7idmmd_7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7idmmd_7.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3z5c5rx.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3z5c5rx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu3z5c5rx.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key >= $k) {\n            $result[] = $value;\n        }\n    }\n  \
    \  return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8b2r21q7.php:31\n\
    Stack trace:\n#0 /tmp/tmp8b2r21q7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8b2r21q7.php\
    \ on line 31\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $i = 0;\n    foreach ($arr as $val) {\n        if ($val > $max) {\n      \
    \      $max = $val;\n        }\n        if ($i == $k) {\n            $result[]\
    \ = $max;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog5dms48.php:40\n\
    Stack trace:\n#0 /tmp/tmpog5dms48.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpog5dms48.php\
    \ on line 40\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($k > $len)\
    \ {\n        return $result;\n    }\n    \n    $max_value = $arr[0];\n    \n \
    \   for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max_value) {\n  \
    \          $max_value = $arr[$i];\n        }\n    }\n    \n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $max_value;\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghcqf71a.php:45\n\
    Stack trace:\n#0 /tmp/tmpghcqf71a.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpghcqf71a.php\
    \ on line 45\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = array();\n    $len = count($arr);\n\
    \    $k = $len - $k;\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    for($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n \
    \   }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpagthko5y.php on line 30

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $max = array_slice($arr, 0, $k);\n\
    \    array_splice($arr, $k, 0, $max);\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5ztzc3.php:28\n\
    Stack trace:\n#0 /tmp/tmpvs5ztzc3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvs5ztzc3.php\
    \ on line 28\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsg6jicg.php:37\n\
    Stack trace:\n#0 /tmp/tmpzsg6jicg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzsg6jicg.php\
    \ on line 37\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if\
    \ ($current > $max) {\n            $max = $current;\n        }\n    }\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7vuxm7n.php:38\n\
    Stack trace:\n#0 /tmp/tmpz7vuxm7n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpz7vuxm7n.php\
    \ on line 38\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        if ($arr[$i] == $max) {\n            $result[] =\
    \ $max;\n        } else {\n            $result[] = $arr[$i];\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b63_osw.php:42\n\
    Stack trace:\n#0 /tmp/tmp2b63_osw.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp2b63_osw.php\
    \ on line 42\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($key < $k) {\n            $result[] = $value;\n\
    \        }\n    }\n    return array_reverse($result);\n}\n</code>\n<|/ a |>\n\
    <| a tags=arrays,php |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4evuhl1j.php on line 27

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $max[$i] = max($arr[$i]);\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $max[$i] = max($max[$i], $arr[$i]);\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpfwer7c7n.php on line 21\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpfwer7c7n.php on line 21\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpfwer7c7n.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwer7c7n.php:34\n\
    Stack trace:\n#0 /tmp/tmpfwer7c7n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfwer7c7n.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprq8bv4_z.php on line 25

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    $k = $len - 1;\n  \
    \  for($i = 0; $i < $k; $i++) {\n        $max[$i] = max($arr[$i], $max[$i]);\n\
    \    }\n    for($i = $k; $i >= 0; $i--) {\n        $max[$i] = max($arr[$i], $max[$i]);\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_w8ubi.php:34\n\
    Stack trace:\n#0 /tmp/tmp6s_w8ubi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6s_w8ubi.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdibsqu1n.php:38\n\
    Stack trace:\n#0 /tmp/tmpdibsqu1n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdibsqu1n.php\
    \ on line 38\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuj3asmwh.php:33\n\
    Stack trace:\n#0 /tmp/tmpuj3asmwh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuj3asmwh.php\
    \ on line 33\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsg6jicg.php:37\n\
    Stack trace:\n#0 /tmp/tmpzsg6jicg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzsg6jicg.php\
    \ on line 37\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $max[$i] = max($arr[$i]);\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $max[$i] = max($max[$i], $arr[$i]);\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmp43c6tuie.php:21\nStack trace:\n#0 /tmp/tmp43c6tuie.php(21):\
    \ max(-3)\n#1 /tmp/tmp43c6tuie.php(30): maximum(Array, 3)\n#2 /tmp/tmp43c6tuie.php(34):\
    \ candidate(Array, 3)\n#3 /tmp/tmp43c6tuie.php(47): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmp43c6tuie.php on line 21\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3z5c5rx.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3z5c5rx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu3z5c5rx.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if($current\
    \ > $max) {\n            $max = $current;\n        }\n    }\n    for($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoqexf0o.php:38\n\
    Stack trace:\n#0 /tmp/tmpwoqexf0o.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwoqexf0o.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $result[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpysrodczx.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmpysrodczx.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpysrodczx.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpysrodczx.php:34\nStack trace:\n#0 /tmp/tmpysrodczx.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpysrodczx.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    return\
    \ array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpx34xza0x.php on line 21\n\n\
    Warning: Undefined array key 1 in /tmp/tmpx34xza0x.php on line 21\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpx34xza0x.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpx34xza0x.php:31\nStack trace:\n#0 /tmp/tmpx34xza0x.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx34xza0x.php on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len < $k ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i]);\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this\
    \ code may answer the question, providing additional context regarding how and/or\
    \ why it solves the problem would improve the answer's long-term value.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpc9ljou2i.php
    on line 26

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len - 1;\n    \n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i], $arr[$k]);\n\
    \    }\n    \n    for ($i = $k + 1; $i < $len; $i++) {\n        $result[$i] =\
    \ max($arr[$i], $result[$i - 1]);\n    }\n    \n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnmdbe9v.php:38\n\
    Stack trace:\n#0 /tmp/tmpcnmdbe9v.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpcnmdbe9v.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $i = 0;\n    foreach ($arr as $val) {\n        if ($val > $max) {\n      \
    \      $max = $val;\n        }\n        if ($i == $k) {\n            $result[]\
    \ = $max;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog5dms48.php:40\n\
    Stack trace:\n#0 /tmp/tmpog5dms48.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpog5dms48.php\
    \ on line 40\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $arr[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpdoo3shhu.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpdoo3shhu.php:34\nStack\
    \ trace:\n#0 /tmp/tmpdoo3shhu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdoo3shhu.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbes1224.php:35\n\
    Stack trace:\n#0 /tmp/tmpmbes1224.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmbes1224.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $max;\n        $max = max($max, $arr[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp_7tvs5ye.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_7tvs5ye.php:36\nStack\
    \ trace:\n#0 /tmp/tmp_7tvs5ye.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_7tvs5ye.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ocssxr4.php:34\n\
    Stack trace:\n#0 /tmp/tmp2ocssxr4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2ocssxr4.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i] >\
    \ $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg4vxh9ew.php
    on line 29

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    array_push($result, $max);\n    return maximum($arr, $k);\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp_yin6bj7.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_yin6bj7.php:38\nStack\
    \ trace:\n#0 /tmp/tmp_yin6bj7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_yin6bj7.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    $i = 0;\n    while($i < $k) {\n        $result[] = $arr[$i];\n        $i++;\n\
    \    }\n    while($i < $len) {\n        $result[] = $arr[$i];\n        $i++;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfsuek_h.php:38\n\
    Stack trace:\n#0 /tmp/tmprfsuek_h.php(51): test()\n#1 {main}\n  thrown in /tmp/tmprfsuek_h.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $i = 0;\n    $j = 0;\n\
    \    \n    while ($j < $k) {\n        if ($arr[$i] > $arr[$j]) {\n           \
    \ $result[$j] = $arr[$i];\n            $i++;\n        } else {\n            $result[$j]\
    \ = $arr[$j];\n            $j++;\n        }\n    }\n    \n    while ($i < $len)\
    \ {\n        $result[$j] = $arr[$i];\n        $i++;\n        $j++;\n    }\n  \
    \  \n    return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2640wnu.php:46\n\
    Stack trace:\n#0 /tmp/tmpj2640wnu.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpj2640wnu.php\
    \ on line 46\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbes1224.php:35\n\
    Stack trace:\n#0 /tmp/tmpmbes1224.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmbes1224.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $k > $len ?\
    \ $len : $k;\n    $k = $k > $k ? $k : $k;\n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + $k]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result, array_slice($arr,\
    \ $k));\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n\
    <code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result = array_merge($result, array_slice($arr, $k));\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result, array_slice($arr,\
    \ $k));\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n\
    <code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result = array_merge($result, array_slice($arr, $k));\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result = array_merge($result, array_slice($arr, $k));\nprint_r($result);\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1u_a_xqg.php
    on line 27

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv11xmzw.php:34\n\
    Stack trace:\n#0 /tmp/tmpuv11xmzw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuv11xmzw.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <=\
    \ $k) {\n        $result = $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysb147zl.php:37\n\
    Stack trace:\n#0 /tmp/tmpysb147zl.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpysb147zl.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyyt7mcq.php:35\n\
    Stack trace:\n#0 /tmp/tmpqyyt7mcq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqyyt7mcq.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len < $k ?\
    \ $len : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmpmqfrd641.php:22\nStack trace:\n#0 /tmp/tmpmqfrd641.php(22):\
    \ max(-3)\n#1 /tmp/tmpmqfrd641.php(28): maximum(Array, 3)\n#2 /tmp/tmpmqfrd641.php(32):\
    \ candidate(Array, 3)\n#3 /tmp/tmpmqfrd641.php(45): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmpmqfrd641.php on line 22\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv11xmzw.php:34\n\
    Stack trace:\n#0 /tmp/tmpuv11xmzw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuv11xmzw.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $result[$k] =\
    \ $arr[$k];\n    for ($i = 1; $i < $k; $i++) {\n        $result[$i] = max($arr[$i],\
    \ $result[$i - 1]);\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$arr = [-3,-4,5];\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [-3,-4,5];\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3,-4,5];\n$k = 3;\n$result\
    \ = array_slice($arr, 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3,-4,5];\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$arr = [-3,-4,5];\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3,-4,5];\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3,-4,5];\n\
    $k = 3;\n$result = array_slice($arr, 0, $k);\n$result[] = array_pop($arr);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nPlease add \nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzldsd3ww.php
    on line 26

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $min = $INF;\n    foreach ($arr as $key => $value) {\n        if ($value <\
    \ $min) {\n            $min = $value;\n        }\n        if ($value > $max) {\n\
    \            $max = $value;\n        }\n    }\n    $len = $len - $k;\n    if ($len\
    \ < 0) {\n        $len = 0;\n    }\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    $result[] = $arr[$i];\n    }\n    for ($i = $len; $i < $k; $i++) {\n    \
    \    $result[] = $max;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $INF in /tmp/tmp5c_mvyyi.php on line 21\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c_mvyyi.php:47\nStack\
    \ trace:\n#0 /tmp/tmp5c_mvyyi.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp5c_mvyyi.php\
    \ on line 47\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    arsort($result);\n    return array_slice($result,\
    \ 0, $k);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwum6wf0s.php:31\n\
    Stack trace:\n#0 /tmp/tmpwum6wf0s.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwum6wf0s.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $i = 0;\n    foreach ($arr as $val) {\n        if ($val > $max) {\n      \
    \      $max = $val;\n        }\n        if ($i++ >= $k) {\n            break;\n\
    \        }\n    }\n    foreach ($arr as $val) {\n        if ($val > $max) {\n\
    \            $max = $val;\n        }\n        $result[] = $max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhrzikqg.php:44\n\
    Stack trace:\n#0 /tmp/tmpxhrzikqg.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpxhrzikqg.php\
    \ on line 44\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$array = [\n    0 => [\n        'id' => 1,\n        'name'\
    \ => 'test1',\n        'price' => 10,\n    ],\n    1 => [\n        'id' => 2,\n\
    \        'name' => 'test2',\n        'price' => 20,\n    ],\n    2 => [\n    \
    \    'id' => 3,\n        'name' => 'test3',\n        'price' => 30,\n    ],\n\
    \    3 => [\n        'id' => 4,\n        'name' => 'test4',\n        'price' =>\
    \ 40,\n    ],\n    4 => [\n        'id' => 5,\n        'name' => 'test5',\n  \
    \      'price' => 50,\n    ],\n];\n\n$maxPrice = -1;\n$maxId = -1;\nforeach ($array\
    \ as $key => $value) {\n    if ($value['price'] > $maxPrice) {\n        $maxPrice\
    \ = $value['price'];\n        $maxId = $value['id'];\n    }\n}\n\n$result = [];\n\
    foreach ($array as $key => $value) {\n    if ($value['id'] != $maxId) {\n    \
    \    $result[] = $value;\n    }\n}\n\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [\n    0 => [\n        'id'\
    \ => 1,\n        'name' => 'test1',\n        'price' => 10,\n    ],\n    1 =>\
    \ [\n        'id' => 2,\n        'name' => 'test2',\n        'price' => 20,\n\
    \    ],\n    2 => [\n        'id' => 3,\n        'name' => 'test3',\n        'price'\
    \ => 30,\n    ],\n    3 => [\n        'id' => 4,\n        'name' => 'test4',\n\
    \        'price' => 40,\n    ],\n    4 => [\n        'id' => 5,\n        'name'\
    \ => 'test5',\n        'price' => 50,\n    ],\n];\n\n$maxPrice = -1;\n$maxId =\
    \ -1;\nforeach ($arr as $key => $value) {\n    if ($value['price'] > $maxPrice)\
    \ {\n        $maxPrice = $value['price'];\n        $maxId = $value['id'];\n  \
    \  }\n}\n\n$result = [];\nforeach ($arr as $key => $value) {\n    if ($value['id']\
    \ != $maxId) {\n        $result[] = $value;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjxstt5c7.php
    on line 26

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c589m21.php:34\n\
    Stack trace:\n#0 /tmp/tmp2c589m21.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2c589m21.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len < $k ?\
    \ $len : $k;\n    $m = $k;\n    $i = 0;\n    while ($i < $len) {\n        if ($arr[$i]\
    \ > $arr[$i - 1]) {\n            $result[$m] = $arr[$i];\n            $m++;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmphd7tw56b.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmphd7tw56b.php:38\nStack\
    \ trace:\n#0 /tmp/tmphd7tw56b.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphd7tw56b.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc71q_kq.php:37\n\
    Stack trace:\n#0 /tmp/tmpuc71q_kq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpuc71q_kq.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n   \
    \ for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d8sz54k.php:35\n\
    Stack trace:\n#0 /tmp/tmp1d8sz54k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1d8sz54k.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyj8j_3q.php:34\n\
    Stack trace:\n#0 /tmp/tmpnyj8j_3q.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnyj8j_3q.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpzqg19d4f.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzqg19d4f.php:38\nStack\
    \ trace:\n#0 /tmp/tmpzqg19d4f.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzqg19d4f.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a dscore=1 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_4sbgayj.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsg6jicg.php:37\n\
    Stack trace:\n#0 /tmp/tmpzsg6jicg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzsg6jicg.php\
    \ on line 37\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpq6q9gjr7.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[$i] = max($arr[$i]);\n    }\n    for($i = $k; $i\
    \ < $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmpcj2exid_.php:21\nStack trace:\n#0 /tmp/tmpcj2exid_.php(21):\
    \ max(-3)\n#1 /tmp/tmpcj2exid_.php(30): maximum(Array, 3)\n#2 /tmp/tmpcj2exid_.php(34):\
    \ candidate(Array, 3)\n#3 /tmp/tmpcj2exid_.php(47): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmpcj2exid_.php on line 21\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $arr[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpvtau3z44.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvtau3z44.php:34\nStack\
    \ trace:\n#0 /tmp/tmpvtau3z44.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvtau3z44.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[$i] = max($arr);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,algorithm |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpiu36g180.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    $k = $len - $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    for ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cuouedl.php:36\n\
    Stack trace:\n#0 /tmp/tmp0cuouedl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0cuouedl.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = $arr[$key];\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumjfminb.php:34\n\
    Stack trace:\n#0 /tmp/tmpumjfminb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpumjfminb.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $k > $len ?\
    \ $len : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i],\
    \ $arr[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmplh1x0llr.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmplh1x0llr.php:32\nStack\
    \ trace:\n#0 /tmp/tmplh1x0llr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplh1x0llr.php\
    \ on line 32\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key ===\
    \ $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ssas5yj.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ssas5yj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7ssas5yj.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $k > $len ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    for ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpe4fl562n.php
    on line 29

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        } else if\
    \ ($key == $k) {\n            $result[$key] = max($value);\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2eaxlpe3.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $result[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpysrodczx.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmpysrodczx.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpysrodczx.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpysrodczx.php:34\nStack trace:\n#0 /tmp/tmpysrodczx.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpysrodczx.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len - 1;\n    \n\
    \    for($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i], $arr[$k]);\n\
    \    }\n    \n    for($i = $k; $i >= 0; $i--) {\n        $result[$i] = max($arr[$i],\
    \ $result[$i-1]);\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpgw5a0q2r.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpgw5a0q2r.php:38\nStack\
    \ trace:\n#0 /tmp/tmpgw5a0q2r.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgw5a0q2r.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc71q_kq.php:37\n\
    Stack trace:\n#0 /tmp/tmpuc71q_kq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpuc71q_kq.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    $result[] = $max;\n    for ($i = 1;\
    \ $i < $k; $i++) {\n        $max = $arr[$i];\n        for ($j = $i + 1; $j < $len;\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \            }\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp8f6cke.php:44\n\
    Stack trace:\n#0 /tmp/tmprp8f6cke.php(57): test()\n#1 {main}\n  thrown in /tmp/tmprp8f6cke.php\
    \ on line 44\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key == $k)\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt87ieby.php:34\n\
    Stack trace:\n#0 /tmp/tmpdt87ieby.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdt87ieby.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = array_pop($arr);\n    }\n    for($i = 0; $i\
    \ < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp3ws39vko.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmp3ws39vko.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmp3ws39vko.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3ws39vko.php:34\nStack trace:\n#0 /tmp/tmp3ws39vko.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3ws39vko.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key ===\
    \ $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ssas5yj.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ssas5yj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7ssas5yj.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyyt7mcq.php:35\n\
    Stack trace:\n#0 /tmp/tmpqyyt7mcq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqyyt7mcq.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lj36jkm.php:35\n\
    Stack trace:\n#0 /tmp/tmp9lj36jkm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9lj36jkm.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_3lmqm4.php:34\n\
    Stack trace:\n#0 /tmp/tmp0_3lmqm4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0_3lmqm4.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $i = 0;\n   \
    \ foreach ($arr as $num) {\n        if ($i >= $k) {\n            break;\n    \
    \    }\n        $result[] = $num;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzdzcu4d.php:36\n\
    Stack trace:\n#0 /tmp/tmpfzdzcu4d.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfzdzcu4d.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv11xmzw.php:34\n\
    Stack trace:\n#0 /tmp/tmpuv11xmzw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuv11xmzw.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    for($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i], $arr[$k]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23v9venm.php:32\n\
    Stack trace:\n#0 /tmp/tmp23v9venm.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp23v9venm.php\
    \ on line 32\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max[$i] = max($arr[$i]);\n    }\n    for ($i = $k; $i < $len;\
    \ $i++) {\n        $max[$i] = max($max[$i], $arr[$i]);\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmp4br31qad.php:21\nStack trace:\n#0 /tmp/tmp4br31qad.php(21):\
    \ max(-3)\n#1 /tmp/tmp4br31qad.php(30): maximum(Array, 3)\n#2 /tmp/tmp4br31qad.php(34):\
    \ candidate(Array, 3)\n#3 /tmp/tmp4br31qad.php(47): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmp4br31qad.php on line 21\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    return\
    \ array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpx34xza0x.php on line 21\n\n\
    Warning: Undefined array key 1 in /tmp/tmpx34xza0x.php on line 21\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpx34xza0x.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpx34xza0x.php:31\nStack trace:\n#0 /tmp/tmpx34xza0x.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx34xza0x.php on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n       \
    \     $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9pay0mr.php:37\n\
    Stack trace:\n#0 /tmp/tmpf9pay0mr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpf9pay0mr.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n            $max\
    \ = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4gqr4cu.php:37\n\
    Stack trace:\n#0 /tmp/tmpb4gqr4cu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpb4gqr4cu.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    array_push($result, $max);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp71zmwkne.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp71zmwkne.php:38\nStack\
    \ trace:\n#0 /tmp/tmp71zmwkne.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp71zmwkne.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max_val = max($arr);\n    $max_index = array_search($max_val,\
    \ $arr);\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n \
    \   }\n    for ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$max_index];\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis\
    \ doesn't work if there are duplicates in the array.\n<|/ c |>\n<| c |>\nIt does\
    \ work if there are duplicates in the array. Try it yourself.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it doesn't work. Try it yourself.\n<|/ c |>\n<| c |>\nI\
    \ tested it and it does work. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if there are duplicates in the array. Try it yourself.\n<|/ c |>\n<| a\
    \ tags=arrays,php |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    $k = 3;\n$result = array();\n$i = 0;\n$j = 0;\nforeach($array as $key => $value)\
    \ {\n    if($j == $k) {\n        $result[] = $array[$i];\n        $i++;\n    \
    \    $j = 0;\n    }\n    if($i == count($array) - 1) {\n        $result[] = $array[$i];\n\
    \        $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10,11,\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpimk7uloc.php
    on line 33

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = -PHP_INT_MAX;\n    $min = $PHP_INT_MAX;\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value < $min) {\n            $min = $value;\n   \
    \     }\n        if ($value > $max) {\n            $max = $value;\n        }\n\
    \    }\n    $result[$k] = $max;\n    for ($i = 1; $i < $k; $i++) {\n        $result[$i]\
    \ = $arr[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $PHP_INT_MAX in /tmp/tmpanyuey4z.php on line\
    \ 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanyuey4z.php:43\n\
    Stack trace:\n#0 /tmp/tmpanyuey4z.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpanyuey4z.php\
    \ on line 43\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    \n    // If k is less\
    \ than or equal to 0, return an empty array\n    if ($k <= 0) {\n        return\
    \ [];\n    }\n    \n    // If k is greater than or equal to the length of arr,\
    \ return an empty array\n    if ($k >= $len) {\n        return [];\n    }\n  \
    \  \n    // If k is equal to the length of arr, return arr\n    if ($k === $len)\
    \ {\n        return $arr;\n    }\n    \n    // Sort the array in descending order\n\
    \    sort($arr);\n    \n    // Find the kth largest number\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf07118a.php:51\n\
    Stack trace:\n#0 /tmp/tmppf07118a.php(64): test()\n#1 {main}\n  thrown in /tmp/tmppf07118a.php\
    \ on line 51\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    $k = $k > $len ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $max[$i] = max($arr[$i]);\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmpyjgzaq87.php:22\nStack trace:\n#0 /tmp/tmpyjgzaq87.php(22):\
    \ max(-3)\n#1 /tmp/tmpyjgzaq87.php(28): maximum(Array, 3)\n#2 /tmp/tmpyjgzaq87.php(32):\
    \ candidate(Array, 3)\n#3 /tmp/tmpyjgzaq87.php(45): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmpyjgzaq87.php on line 22\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key ===\
    \ $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ssas5yj.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ssas5yj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7ssas5yj.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpql8550zg.php:37\n\
    Stack trace:\n#0 /tmp/tmpql8550zg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpql8550zg.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len < $k ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    for ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$k = 3;\n$result = array_slice($arr,0,$k);\n\
    $result[] = array_pop($arr);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpe5ws2d38.php
    on line 29

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $max_index = -1;\n        for($j = 0; $j < $k; $j++) {\n  \
    \          if($result[$j] > $result[$max_index]) {\n                $max_index\
    \ = $j;\n            }\n        }\n        $result[$max_index] = $arr[$i];\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpea04fzlc.php on line 26\n\n\
    Warning: Undefined array key -1 in /tmp/tmpea04fzlc.php on line 26\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpea04fzlc.php on line 26\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpea04fzlc.php:40\nStack trace:\n#0 /tmp/tmpea04fzlc.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpea04fzlc.php on line 40\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbes1224.php:35\n\
    Stack trace:\n#0 /tmp/tmpmbes1224.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmbes1224.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1h32sya.php:36\n\
    Stack trace:\n#0 /tmp/tmpd1h32sya.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpd1h32sya.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh533h5m.php:31\n\
    Stack trace:\n#0 /tmp/tmpmh533h5m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmh533h5m.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphg4yf8la.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgohztz9s.php:33\n\
    Stack trace:\n#0 /tmp/tmpgohztz9s.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgohztz9s.php\
    \ on line 33\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = 0; $i < $len; $i++)\
    \ {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2iqzsqo0.php:34\n\
    Stack trace:\n#0 /tmp/tmp2iqzsqo0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2iqzsqo0.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key == $k)\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt87ieby.php:34\n\
    Stack trace:\n#0 /tmp/tmpdt87ieby.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdt87ieby.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -PHP_INT_MAX;\n\
    \    $i = 0;\n    while ($i < $k) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n        $i++;\n    }\n    for ($i = 0; $i < $len; $i++) {\n       \
    \ $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l6wdf4x.php:37\n\
    Stack trace:\n#0 /tmp/tmp4l6wdf4x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp4l6wdf4x.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $arr[$i + $k]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmp5qyjf62x.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmp5qyjf62x.php on line 24\n\nWarning:\
    \ Undefined array key 5 in /tmp/tmp5qyjf62x.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5qyjf62x.php:34\nStack trace:\n#0 /tmp/tmp5qyjf62x.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5qyjf62x.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key ===\
    \ $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ssas5yj.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ssas5yj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7ssas5yj.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$array = array(\n    array(\"name\" => \"John\", \"age\"\
    \ => 20, \"city\" => \"New York\"),\n    array(\"name\" => \"Jane\", \"age\" =>\
    \ 21, \"city\" => \"New York\"),\n    array(\"name\" => \"Jack\", \"age\" => 22,\
    \ \"city\" => \"New York\"),\n    array(\"name\" => \"Jill\", \"age\" => 23, \"\
    city\" => \"New York\"),\n    array(\"name\" => \"Jack\", \"age\" => 22, \"city\"\
    \ => \"New York\"),\n    array(\"name\" => \"Jill\", \"age\" => 23, \"city\" =>\
    \ \"New York\"),\n    array(\"name\" => \"Jack\", \"age\" => 22, \"city\" => \"\
    New York\"),\n    array(\"name\" => \"Jill\", \"age\" => 23, \"city\" => \"New\
    \ York\"),\n    array(\"name\" => \"Jack\", \"age\" => 22, \"city\" => \"New York\"\
    ),\n    array(\"name\" => \"Jill\", \"age\" => 23, \"city\" => \"New York\"),\n\
    \    array(\"name\" => \"Jack\", \"age\" => 22, \"city\" => \"New York\"),\n \
    \   array(\"name\" => \"Jill\", \"age\" => 23, \"city\" => \"New York\"),\n  \
    \  array(\"name\" => \"Jack\", \"age\" => 22, \"city\" => \"New York\"),\n   \
    \ array(\"name\" => \"Jill\", \"age\" => 23, \"city\" => \"New York\"),\n    array(\"\
    name\" => \"Jack\", \"age\" => 22, \"city\" => \"New York\"),\n    array(\"name\"\
    \ => \"Jill\", \"age\" => 23, \"city\" => \"New York\"),\n    array(\"name\" =>\
    \ \"Jack\", \"age\" => 22, \"city\" => \"New York\"),\n    array(\"name\" => \"\
    Jill\", \"age\" => 23, \"city\" => \"New York\"),\n    array(\"name\" => \"Jack\"\
    , \"age\" => 22, \"city\" => \"New York\"),\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6w3ydjjw.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7kxc3_za.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_3lmqm4.php:34\n\
    Stack trace:\n#0 /tmp/tmp0_3lmqm4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0_3lmqm4.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    $k = $len - $k;\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    for($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n \
    \   }\n    return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8p10vom7.php:35\n\
    Stack trace:\n#0 /tmp/tmp8p10vom7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8p10vom7.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = -PHP_INT_MAX;\n    foreach ($arr as $key => $value) {\n        if\
    \ ($value > $max) {\n            $max = $value;\n        }\n        if ($key >=\
    \ $k) {\n            $result[] = $max;\n            $max = $value;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbmpsovm.php:39\n\
    Stack trace:\n#0 /tmp/tmpcbmpsovm.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcbmpsovm.php\
    \ on line 39\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95s1rarb.php:31\n\
    Stack trace:\n#0 /tmp/tmp95s1rarb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp95s1rarb.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    \n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i],\
    \ $arr[$k]);\n    }\n    \n    for ($i = $k + 1; $i < $len; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $result[$i - 1]);\n    }\n    \n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpio4irw4j.php:38\n\
    Stack trace:\n#0 /tmp/tmpio4irw4j.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpio4irw4j.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = max($arr[$i], $arr[$i + 1]);\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpoegcnzvq.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte1cr37z.php:35\n\
    Stack trace:\n#0 /tmp/tmpte1cr37z.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpte1cr37z.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpql8550zg.php:37\n\
    Stack trace:\n#0 /tmp/tmpql8550zg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpql8550zg.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n   \
    \     $result[] = $max;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yz5cey8.php:36\n\
    Stack trace:\n#0 /tmp/tmp1yz5cey8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1yz5cey8.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n            $max\
    \ = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4gqr4cu.php:37\n\
    Stack trace:\n#0 /tmp/tmpb4gqr4cu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpb4gqr4cu.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    $k = $len - $k;\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    for($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytd46p4i.php:36\n\
    Stack trace:\n#0 /tmp/tmpytd46p4i.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpytd46p4i.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpq16fg438.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] == $max) {\n\
    \            $result[] = $max;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w75ii_g.php:42\n\
    Stack trace:\n#0 /tmp/tmp1w75ii_g.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp1w75ii_g.php\
    \ on line 42\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, $k);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6bv5wi4.php:31\n\
    Stack trace:\n#0 /tmp/tmps6bv5wi4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps6bv5wi4.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    arsort($result);\n    return array_slice($result,\
    \ 0, $k);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5bl4xc1w.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = array_pop($arr);\n    }\n    for($i = 0; $i\
    \ < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp3ws39vko.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmp3ws39vko.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmp3ws39vko.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3ws39vko.php:34\nStack trace:\n#0 /tmp/tmp3ws39vko.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3ws39vko.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $i = 0;\n   \
    \ foreach ($arr as $val) {\n        if ($i >= $k) {\n            break;\n    \
    \    }\n        $result[] = $val;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69vu2tsf.php:36\n\
    Stack trace:\n#0 /tmp/tmp69vu2tsf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp69vu2tsf.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_3lmqm4.php:34\n\
    Stack trace:\n#0 /tmp/tmp0_3lmqm4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0_3lmqm4.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key >= $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9rvvo1b.php:32\n\
    Stack trace:\n#0 /tmp/tmpf9rvvo1b.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf9rvvo1b.php\
    \ on line 32\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] == $max) {\n\
    \            $result[] = $max;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamsuek4q.php:42\n\
    Stack trace:\n#0 /tmp/tmpamsuek4q.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpamsuek4q.php\
    \ on line 42\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $tmp = $arr[$i];\n        if ($tmp > $max)\
    \ {\n            $max = $tmp;\n        }\n    }\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckgugarz.php:38\n\
    Stack trace:\n#0 /tmp/tmpckgugarz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpckgugarz.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = $arr[0];\n    \n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    \n    for ($i\
    \ = 0; $i < $len; $i++) {\n        if ($arr[$i] == $max) {\n            $result[]\
    \ = $max;\n            $k--;\n        }\n    }\n    \n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm_uxz_p.php:44\n\
    Stack trace:\n#0 /tmp/tmpjm_uxz_p.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjm_uxz_p.php\
    \ on line 44\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = $arr[$key];\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumjfminb.php:34\n\
    Stack trace:\n#0 /tmp/tmpumjfminb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpumjfminb.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len - 1;\n    $max\
    \ = $arr[0];\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[]\
    \ = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_0ky3wvg.php
    on line 30

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if ($current\
    \ > $max) {\n            $max = $current;\n        }\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjfrlqw5q.php
    on line 32

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $k > $len ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmpj7o_2m56.php:22\nStack trace:\n#0 /tmp/tmpj7o_2m56.php(22):\
    \ max(-3)\n#1 /tmp/tmpj7o_2m56.php(28): maximum(Array, 3)\n#2 /tmp/tmpj7o_2m56.php(32):\
    \ candidate(Array, 3)\n#3 /tmp/tmpj7o_2m56.php(45): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmpj7o_2m56.php on line 22\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = max($arr);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn584b42b.php:31\n\
    Stack trace:\n#0 /tmp/tmpn584b42b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpn584b42b.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    $maxIndex\
    \ = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n\
    \            $max = $arr[$i];\n            $maxIndex = $i;\n        }\n    }\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$maxIndex];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkysb3oh2.php:39\n\
    Stack trace:\n#0 /tmp/tmpkysb3oh2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkysb3oh2.php\
    \ on line 39\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpts9z1l1t.php:35\n\
    Stack trace:\n#0 /tmp/tmpts9z1l1t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpts9z1l1t.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbq38d3z3.php:34\n\
    Stack trace:\n#0 /tmp/tmpbq38d3z3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbq38d3z3.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3z5c5rx.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3z5c5rx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu3z5c5rx.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = array_pop($arr);\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $max;\n        $max = max($max, $arr[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpqhpsz6wd.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpqhpsz6wd.php:36\nStack\
    \ trace:\n#0 /tmp/tmpqhpsz6wd.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqhpsz6wd.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key <= $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ryhr8e7.php:32\n\
    Stack trace:\n#0 /tmp/tmp4ryhr8e7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4ryhr8e7.php\
    \ on line 32\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -PHP_INT_MAX;\n\
    \    $min = $max;\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ > $max) {\n            $max = $value;\n        }\n        if ($value < $min)\
    \ {\n            $min = $value;\n        }\n    }\n    $k = $len - $k;\n    if\
    \ ($k > 0) {\n        $result = array_slice($arr, 0, $k);\n    }\n    $result\
    \ = array_merge($result, array($max));\n    if ($k > 1) {\n        $result = array_merge($result,\
    \ maximum($arr, $k - 1));\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpiadtrcyc.php
    on line 40

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $item) {\n        $result[] =\
    \ $item;\n    }\n    array_multisort($result, $k);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpsb17sn.php:31\n\
    Stack trace:\n#0 /tmp/tmplpsb17sn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplpsb17sn.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len < $k) {\n  \
    \      return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpzqg19d4f.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzqg19d4f.php:38\nStack\
    \ trace:\n#0 /tmp/tmpzqg19d4f.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzqg19d4f.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $len = count($arr);\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n   \
    \ for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d8sz54k.php:35\n\
    Stack trace:\n#0 /tmp/tmp1d8sz54k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1d8sz54k.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = array();\n    $len = count($arr);\n\
    \    $i = 0;\n    while($i < $k) {\n        $result[] = $arr[$i];\n        $i++;\n\
    \    }\n    while($i < $len) {\n        $result[] = $arr[$i];\n        $i++;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy1mijhv.php:38\n\
    Stack trace:\n#0 /tmp/tmpwy1mijhv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwy1mijhv.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv11xmzw.php:34\n\
    Stack trace:\n#0 /tmp/tmpuv11xmzw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuv11xmzw.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $i = 0;\n   \
    \ foreach ($arr as $val) {\n        if ($i >= $k) {\n            break;\n    \
    \    }\n        if ($val > $result[$i]) {\n            $result[$i] = $val;\n \
    \       }\n        $i++;\n    }\n    return array_reverse($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp499_pndu.php on line 25\n\n\
    Warning: Undefined array key 1 in /tmp/tmp499_pndu.php on line 25\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmp499_pndu.php on line 25\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp499_pndu.php:38\nStack trace:\n#0 /tmp/tmp499_pndu.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp499_pndu.php on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3z5c5rx.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3z5c5rx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu3z5c5rx.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if\
    \ ($current > $max) {\n            $max = $current;\n        }\n    }\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7vuxm7n.php:38\n\
    Stack trace:\n#0 /tmp/tmpz7vuxm7n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpz7vuxm7n.php\
    \ on line 38\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - $k;\n\
    \    for($i = 0; $i < $k; $i++) {\n        $result = array_merge($result, array_slice($arr,\
    \ $i, 1));\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp164bke57.php:32\n\
    Stack trace:\n#0 /tmp/tmp164bke57.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp164bke57.php\
    \ on line 32\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = array(4,-4,4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9fcb6etw.php
    on line 29

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh533h5m.php:31\n\
    Stack trace:\n#0 /tmp/tmpmh533h5m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmh533h5m.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ > $k) {\n            $result[] = $arr[$k];\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$array = array(\n    array('id' => 1, 'name' => 'a'),\n    array('id'\
    \ => 2, 'name' => 'b'),\n    array('id' => 3, 'name' => 'c'),\n    array('id'\
    \ => 4, 'name' => 'd'),\n    array('id' => 5, 'name' => 'e'),\n    array('id'\
    \ => 6, 'name' => 'f'),\n    array('id' => 7, 'name' => 'g'),\n    array('id'\
    \ => 8, 'name' => 'h'),\n    array('id' => 9, 'name' => 'i'),\n    array('id'\
    \ => 10, 'name' => 'j'),\n    array('id' => 11, 'name' => 'k'),\n    array('id'\
    \ => 12, 'name' => 'l'),\n    array('id' => 13, 'name' => 'm'),\n    array('id'\
    \ => 14, 'name' => 'n'),\n    array('id' => 15, 'name' => 'o'),\n    array('id'\
    \ => 16, 'name' => 'p'),\n    array('id' => 17, 'name' => 'q'),\n    array('id'\
    \ => 18, 'name' => 'r'),\n    array('id' => 19, 'name' => 's'),\n    array('id'\
    \ => 20, 'name' => 't'),\n    array('id' => 21, 'name' => 'u'),\n    array('id'\
    \ => 22, 'name' => 'v'),\n    array('id' => 23, 'name' => 'w'),\n    array('id'\
    \ => 24, 'name' => 'x'),\n    array('id' => 25, 'name' => 'y'),\n    array('id'\
    \ => 26, 'name' => 'z'),\n);\n\n$sorted = array();\n$max = 0;\nforeach ($array\
    \ as $key => $value) {\n    if ($value['id'] > $max) {\n        $max = $value['id'];\n\
    \    }\n    $sorted[$key] = $value;\n}\n$sorted = array_slice($sorted, 0, $max);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    array('id'\
    \ => 1, 'name' => 'a'),\n    array('id' => 2, 'name' => 'b'),\n    array('id'\
    \ => 3, 'name' => 'c'),\n    \nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1l7hly73.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh533h5m.php:31\n\
    Stack trace:\n#0 /tmp/tmpmh533h5m.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmh533h5m.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $tmp = $arr[$i];\n        if ($tmp\
    \ > $max) {\n            $max = $tmp;\n        }\n    }\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx4remko.php:38\n\
    Stack trace:\n#0 /tmp/tmpvx4remko.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpvx4remko.php\
    \ on line 38\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmprsgq9y2l.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    \n    if ($len < $k)\
    \ {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n  \
    \      $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpqfxcpjwb.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpqfxcpjwb.php:37\nStack\
    \ trace:\n#0 /tmp/tmpqfxcpjwb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqfxcpjwb.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    $max_len = max($k, $len);\n  \
    \  \n    for ($i = 0; $i < $max_len; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprggwkgzo.php:39\n\
    Stack trace:\n#0 /tmp/tmprggwkgzo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprggwkgzo.php\
    \ on line 39\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    array_push($result, $max);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3k589o9.php:33\n\
    Stack trace:\n#0 /tmp/tmpz3k589o9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpz3k589o9.php\
    \ on line 33\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max_len = min($k,\
    \ $len);\n    for ($i = 0; $i < $max_len; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp528lq1rm.php:34\n\
    Stack trace:\n#0 /tmp/tmp528lq1rm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp528lq1rm.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($k > $len)\
    \ {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n  \
    \      $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpvrjww4ib.php on line 26\n\n\
    Warning: Undefined array key 1 in /tmp/tmpvrjww4ib.php on line 26\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpvrjww4ib.php on line 26\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpvrjww4ib.php:37\nStack trace:\n#0 /tmp/tmpvrjww4ib.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvrjww4ib.php on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $i = 0;\n   \
    \ foreach ($arr as $value) {\n        if ($i >= $k) {\n            break;\n  \
    \      }\n        $result[] = $value;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx5wan36.php:36\n\
    Stack trace:\n#0 /tmp/tmpjx5wan36.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjx5wan36.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    if ($len > $k) {\n\
    \        $len = $k;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $max[$i]\
    \ = max($arr[$i], $max[$i]);\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpjg0jpgje.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmpjg0jpgje.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpjg0jpgje.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjg0jpgje.php:34\nStack trace:\n#0 /tmp/tmpjg0jpgje.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjg0jpgje.php on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. Try `maximum([-3,-4,5],3)` which should return `[-4,-3,5]`.\n\
    <|/ c |>\n<| c |>\nThe question was about sorting numbers, not arrays. So this\
    \ answer doesn't answer the question.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. Try `maximum([-3,-4,5],3)` which should return `[-4,-3,5]`.\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpepu8zrk3.php
    on line 25

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    foreach ($arr as $key => $value) {\n       \
    \ if ($key < $k) {\n            $max[$key] = $value;\n        } else {\n     \
    \       $max[$k] = max($value);\n        }\n    }\n    return $max;\n}\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyondw6pz.php:33\n\
    Stack trace:\n#0 /tmp/tmpyondw6pz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyondw6pz.php\
    \ on line 33\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if\
    \ ($current > $max) {\n            $max = $current;\n        }\n    }\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7vuxm7n.php:38\n\
    Stack trace:\n#0 /tmp/tmpz7vuxm7n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpz7vuxm7n.php\
    \ on line 38\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max_value = $arr[0];\n    for ($i = 1; $i <\
    \ $k; $i++) {\n        if ($arr[$i] > $max_value) {\n            $max_value =\
    \ $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if\
    \ ($arr[$i] == $max_value) {\n            $result[] = $arr[$i];\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwuoggkg.php:42\n\
    Stack trace:\n#0 /tmp/tmpdwuoggkg.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpdwuoggkg.php\
    \ on line 42\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk47lzf33.php:34\n\
    Stack trace:\n#0 /tmp/tmpk47lzf33.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpk47lzf33.php\
    \ on line 34\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $item) {\n        $result[] =\
    \ $item;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return array_slice($arr,\
    \ 0, $k);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptm1h1l6v.php:31\n\
    Stack trace:\n#0 /tmp/tmptm1h1l6v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptm1h1l6v.php\
    \ on line 31\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($len <= $k) {\n \
    \       $result = $arr;\n    }\n    else {\n        for ($i = 0; $i < $k; $i++)\
    \ {\n            $result[$i] = max($arr[$i], $result[$i]);\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph86kwfrr.php:36\n\
    Stack trace:\n#0 /tmp/tmph86kwfrr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmph86kwfrr.php\
    \ on line 36\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $len - 1;\n    $max\
    \ = -INF;\n    $maxIndex = 0;\n    foreach ($arr as $key => $value) {\n      \
    \  if ($value > $max) {\n            $max = $value;\n            $maxIndex = $key;\n\
    \        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = $arr[$maxIndex];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56bx6you.php:40\n\
    Stack trace:\n#0 /tmp/tmp56bx6you.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp56bx6you.php\
    \ on line 40\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbes1224.php:35\n\
    Stack trace:\n#0 /tmp/tmpmbes1224.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmbes1224.php\
    \ on line 35\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate values in $arr\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpf4p9gcxa.php
    on line 28

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] > $max) {\n        \
    \    $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $k; $i++) {\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbi6093jv.php:37\n\
    Stack trace:\n#0 /tmp/tmpbi6093jv.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbi6093jv.php\
    \ on line 37\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $i = 0;\n    $j = 0;\n\
    \    $max = -INF;\n    foreach ($arr as $item) {\n        if ($item > $max) {\n\
    \            $max = $item;\n        }\n    }\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        if ($max >= $arr[$i]) {\n            $result[$j] = $arr[$i];\n  \
    \          $j++;\n        }\n    }\n    return array_slice($result, 0, $k);\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykzk02zc.php:42\n\
    Stack trace:\n#0 /tmp/tmpykzk02zc.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpykzk02zc.php\
    \ on line 42\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = -PHP_INT_MAX;\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphuhtztyo.php
    on line 32

    '
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $i = 0;\n    foreach ($arr as $val) {\n        if ($val > $max) {\n      \
    \      $max = $val;\n        }\n        if ($i++ == $k) {\n            $result[]\
    \ = $max;\n            $i = 0;\n            $max = -INF;\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyaw6cigf.php:40\n\
    Stack trace:\n#0 /tmp/tmpyaw6cigf.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpyaw6cigf.php\
    \ on line 40\n"
  timestamp: 1659823360
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo25xk5j.php:35\n\
    Stack trace:\n#0 /tmp/tmpoo25xk5j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoo25xk5j.php\
    \ on line 35\n"
  timestamp: 1659823360

language: php
name: HumanEval_120_maximum
results:
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = -PHP_INT_MAX;\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    $result[] = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is not an answer to the question.\
    \ Also, please don't post code only answers. Explain what your code does, and\
    \ how it does it.\n<|/ c |>\n<| c |>\nI added some explanation to the code. Hope\
    \ it helps.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n    $result[] = $array[$i];\n\
    \    $i++;\n}\n$result = array_slice($array, 0, $max);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n\
    $max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n    $result[] = $array[$i];\n\
    \    $i++;\n}\n$result = array_slice($array, 0, $max);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer such that\
    \ others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array\
    \ = [1,2,3,4,5,6,7,8,9,10];\n$max = 3;\n$result = [];\n$i = 0;\nwhile($i < $max){\n\
    \    $result[] = $array[$i];\n    $i++;\n}\n$result = array_slice($array, 0, $max);\n\
    print_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$array = [1,2,3,4,5,6,7,8,9,10];\n$max = 3;\n\
    $result = [];\n$i = 0;\nwhile($i < $\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5jodie6r.php on line 30

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + $k]);\n    }\n    \n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowj0x0q4.php:36\n\
    Stack trace:\n#0 /tmp/tmpowj0x0q4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpowj0x0q4.php\
    \ on line 36\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $k = $k > $len ? $len\
    \ : $k;\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n  \
    \  }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7idmmd_7.php:34\n\
    Stack trace:\n#0 /tmp/tmp7idmmd_7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7idmmd_7.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3z5c5rx.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3z5c5rx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu3z5c5rx.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key >= $k) {\n            $result[] = $value;\n        }\n    }\n  \
    \  return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8b2r21q7.php:31\n\
    Stack trace:\n#0 /tmp/tmp8b2r21q7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8b2r21q7.php\
    \ on line 31\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   $i = 0;\n    foreach ($arr as $val) {\n        if ($val > $max) {\n      \
    \      $max = $val;\n        }\n        if ($i == $k) {\n            $result[]\
    \ = $max;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog5dms48.php:40\n\
    Stack trace:\n#0 /tmp/tmpog5dms48.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpog5dms48.php\
    \ on line 40\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($k > $len)\
    \ {\n        return $result;\n    }\n    \n    $max_value = $arr[0];\n    \n \
    \   for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] > $max_value) {\n  \
    \          $max_value = $arr[$i];\n        }\n    }\n    \n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $max_value;\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghcqf71a.php:45\n\
    Stack trace:\n#0 /tmp/tmpghcqf71a.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpghcqf71a.php\
    \ on line 45\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = array();\n    $len = count($arr);\n\
    \    $k = $len - $k;\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n\
    \    }\n    for($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n \
    \   }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpagthko5y.php on line 30

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $max = array_slice($arr, 0, $k);\n\
    \    array_splice($arr, $k, 0, $max);\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs5ztzc3.php:28\n\
    Stack trace:\n#0 /tmp/tmpvs5ztzc3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvs5ztzc3.php\
    \ on line 28\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsg6jicg.php:37\n\
    Stack trace:\n#0 /tmp/tmpzsg6jicg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzsg6jicg.php\
    \ on line 37\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if\
    \ ($current > $max) {\n            $max = $current;\n        }\n    }\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7vuxm7n.php:38\n\
    Stack trace:\n#0 /tmp/tmpz7vuxm7n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpz7vuxm7n.php\
    \ on line 38\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $k = $len - 1;\n\
    \    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        if ($arr[$i] == $max) {\n            $result[] =\
    \ $max;\n        } else {\n            $result[] = $arr[$i];\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b63_osw.php:42\n\
    Stack trace:\n#0 /tmp/tmp2b63_osw.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp2b63_osw.php\
    \ on line 42\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($key < $k) {\n            $result[] = $value;\n\
    \        }\n    }\n    return array_reverse($result);\n}\n</code>\n<|/ a |>\n\
    <| a tags=arrays,php |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4evuhl1j.php on line 27

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $max[$i] = max($arr[$i]);\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $max[$i] = max($max[$i], $arr[$i]);\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpfwer7c7n.php on line 21\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpfwer7c7n.php on line 21\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpfwer7c7n.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwer7c7n.php:34\n\
    Stack trace:\n#0 /tmp/tmpfwer7c7n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfwer7c7n.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprq8bv4_z.php on line 25

    '
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = array();\n    $len = count($arr);\n    $k = $len - 1;\n  \
    \  for($i = 0; $i < $k; $i++) {\n        $max[$i] = max($arr[$i], $max[$i]);\n\
    \    }\n    for($i = $k; $i >= 0; $i--) {\n        $max[$i] = max($arr[$i], $max[$i]);\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6s_w8ubi.php:34\n\
    Stack trace:\n#0 /tmp/tmp6s_w8ubi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6s_w8ubi.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynd3pe0l.php:34\n\
    Stack trace:\n#0 /tmp/tmpynd3pe0l.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpynd3pe0l.php\
    \ on line 34\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmlnis93.php:32\n\
    Stack trace:\n#0 /tmp/tmppmlnis93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppmlnis93.php\
    \ on line 32\n"
  timestamp: 1659730296
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    if ($len < $k) {\n\
    \        return $arr;\n    }\n    $max = array_shift($arr);\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdibsqu1n.php:38\n\
    Stack trace:\n#0 /tmp/tmpdibsqu1n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdibsqu1n.php\
    \ on line 38\n"
  timestamp: 1659730296

name: HumanEval_105_by_length
language: php
prompt: "<?php\n// Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
  \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
  // >>> by_length(array())\n// array()\n// If the array has any strange number ignore\
  \ it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
  \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
  , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  if (empty($arr)) {\n    return array();\n  }\n  $sorted = array();\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $sorted[$value] = $key;\n    }\n  }\n  ksort($sorted);\n  $reversed = array_reverse($sorted);\n\
    \  foreach ($reversed as $key => $value) {\n    $reversed[$key] = $names[$value];\n\
    \  }\n  return $reversed;\n}\n", "  if (empty($arr)) {\n    return array();\n\
    \  }\n  $result = array();\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++)\
    \ {\n    $result[] = array_key_exists($i, $arr) ? $arr[$i] : '';\n  }\n  sort($result);\n\
    \  $result = array_reverse($result);\n  foreach ($result as $key => $value) {\n\
    \    $result[$key] = $names[$key];\n  }\n  return $result;\n}\n", "  if (empty($arr))\
    \ {\n    return array();\n  }\n  $len = count($arr);\n  if ($len < 2) {\n    return\
    \ $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n\
    \  $result = array();\n  foreach ($reversed as $i => $num) {\n    if ($num >=\
    \ $min && $num <= $max) {\n      $result[] = name_by_number($num);\n    }\n  }\n\
    \  return $result;\n}\n", "  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "  $len = count($arr);\n  if\
    \ ($len == 0) {\n    return array();\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  if ($min == $max) {\n    return array($min);\n  }\n  $result = array();\n \
    \ for ($i = 0; $i < $len; ++$i) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max)\
    \ {\n      $result[] = name_by_number($arr[$i]);\n    }\n  }\n  return $result;\n\
    }\n", "  if (empty($arr)) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = $arr[$i];\n\
    \  }\n  sort($result);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = $names[$result[$i]];\n\
    \  }\n  return $result;\n}\n", "  if (empty($arr)) {\n    return array();\n  }\n\
    \  $result = array();\n  foreach ($arr as $key => $value) {\n    if ($value >=\
    \ 1 && $value <= 9) {\n      $result[] = array($value, $key);\n    }\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  foreach ($arr as $key => $value) {\n    if ($value >= 1\
    \ && $value <= 9) {\n      $result[$key] = array($value, $key);\n    }\n  }\n\
    \  return $result;\n}\n", "  $len = count($arr);\n  if ($len == 0) {\n    return\
    \ array();\n  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min,\
    \ $max);\n  $reversed = array_reverse($range);\n  $result = array();\n  foreach\
    \ ($reversed as $value) {\n    $result[] = str_pad($value, 9, \"0\", STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n", "  if (empty($arr)) {\n    return array();\n  }\n\
    \  $len = count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++)\
    \ {\n    $result[] = array(\n      'name' => $arr[$i],\n      'value' => $i,\n\
    \    );\n  }\n  usort($result, function($a, $b) {\n    return $a['value'] - $b['value'];\n\
    \  });\n  $result = array_reverse($result);\n  foreach ($result as $key => $value)\
    \ {\n    $result[$key]['name'] = $names[$value['name']];\n  }\n  return $result;\n\
    }\n", "  if (empty($arr)) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  $digits = range($min, $max);\n  $reversed = array_reverse($digits);\n  $result\
    \ = array();\n  foreach ($digits as $digit) {\n    $result[] = str_replace(\n\
    \      array($digit, $digit),\n      array('One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'),\n      $reversed[$digit]\n    );\n  }\n  return\
    \ $result;\n}\n", "  if (empty($arr)) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $sorted = array();\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    $sorted[$i] = $arr[$i];\n  }\n  sort($sorted);\n  $reversed\
    \ = array_reverse($sorted);\n  for ($i = 0; $i < $len; $i++) {\n    $sorted[$i]\
    \ = $reversed[$i];\n  }\n  $result = array();\n  for ($i = 0; $i < $len; $i++)\
    \ {\n    $result[] = array_search($sorted[$i], array('One', 'Two', 'Three', 'Four',\
    \ 'Five', 'Six', 'Seven', 'Eight', 'Nine'));\n  }\n  return $result;\n}\n", " \
    \ $len = count($arr);\n  if ($len == 0) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = max($len - 1, 1);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $result[] = str_pad(\n      strval($arr[$i]),\
    \ $len - $i, '0', STR_PAD_LEFT);\n  }\n  $result = array_reverse($result);\n \
    \ for ($i = 0; $i < $len; $i++) {\n    $result[$i] = str_pad(\n      strval($result[$i]),\
    \ $len - $i, '0', STR_PAD_LEFT);\n  }\n  return $result;\n}\n", "  $len = count($arr);\n\
    \  if ($len == 0) {\n    return array();\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] ==\
    \ $min) {\n      $result[] = 'One';\n    } else if ($arr[$i] == $max) {\n    \
    \  $result[] = 'Nine';\n    } else if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n   \
    \   $result[] = strval($arr[$i]);\n    }\n  }\n  return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = array(2, 1, 1, 4,\
    \ 5, 8, 2, 3);\n$result = array();\n$min = $max = $array[0];\nforeach ($array\
    \ as $value) {\n    if ($value < $min) {\n        $min = $value;\n    }\n    if\
    \ ($value > $max) {\n        $max = $value;\n    }\n}\n$result[] = 'One';\n$result[]\
    \ = 'Nine';\n$result[] = strval($min);\n$result[] = strval($max);\n$result = array_reverse($result);\n\
    foreach ($result as $key => $value) {\n    if ($key % 2 == 0) {\n        $result[$key]\
    \ = strval($value);\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n\
    $result = array();\n$min = $max = $array[0];\nforeach ($array as $value) {\n \
    \   if ($value < $min) {\n        $min = $value;\n    }\n    if ($value > $max)\
    \ {\n        $max = $value;\n    }\n}\n$result[] = 'One';\n$result[] = 'Nine';\n\
    $result[] = strval($min);\n$result[] = strval($max);\n$result = array_reverse($result);\n\
    foreach ($result as $key => $value) {\n    if ($key % 2 == 0) {\n        $result[$key]\
    \ = strval($value);\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n<?php\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result\
    \ = array();\n$min = $max = $array[0];\nforeach ($array as $value) {\n    if ($value\
    \ < $min) {\n        $min = $value;\n    }\n    if ($value > ", "  if (empty($arr))\
    \ {\n    return array();\n  }\n  $result = array();\n  foreach ($arr as $item)\
    \ {\n    if ($item >= 1 && $item <= 9) {\n      $result[] = array($item);\n  \
    \  }\n  }\n  sort($result);\n  foreach ($result as $item) {\n    $result[$item[0]]\
    \ = $item[1];\n  }\n  return $result;\n}\n", "  if (!$arr) {\n    return array();\n\
    \  }\n  $len = count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $sorted\
    \ = array();\n  $reversed = array_reverse($arr);\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $sorted[$key] = $reversed[$value];\n\
    \    }\n  }\n  return $sorted;\n}\n", "  if (empty($arr)) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i]\
    \ <= $max) {\n      $result[] = name_by_number($arr[$i]);\n    }\n  }\n  return\
    \ $result;\n}\n", "  $result = array();\n  foreach ($arr as $num) {\n    if ($num\
    \ >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num]);\n    }\n\
    \  }\n  return $result;\n}\n", "  $result = array();\n  foreach ($arr as $key\
    \ => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value,\
    \ $key);\n    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach\
    \ ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[]\
    \ = array($value, $key);\n    }\n  }\n  return $result;\n}\n", "  $result = array();\n\
    \  foreach ($arr as $num) {\n    if ($num >= 1 && $num <= 9) {\n      $result[]\
    \ = array($num, $names[$num]);\n    }\n  }\n  return $result;\n}\n", "  $result\
    \ = array();\n  foreach ($arr as $num) {\n    if ($num >= 1 && $num <= 9) {\n\
    \      $result[] = array($num, $names[$num]);\n    }\n  }\n  return $result;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

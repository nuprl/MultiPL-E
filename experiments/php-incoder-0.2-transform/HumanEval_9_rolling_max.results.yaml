language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = 0;\n        }\n        $max_index++;\n    }\n    return\
    \ array_slice($numbers, 0, $max_index);\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1xbrh62.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1xbrh62.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl1xbrh62.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    foreach ($numbers as $number) {\n        if\
    \ ($number > $max) {\n            $result[] = $number;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6oxus0d.php:28\n\
    Stack trace:\n#0 /tmp/tmpd6oxus0d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd6oxus0d.php\
    \ on line 28\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array($max, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cs8j_s8.php:24\n\
    Stack trace:\n#0 /tmp/tmp4cs8j_s8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4cs8j_s8.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n            $max_element_count = 1;\n\
    \        } else {\n            $max_element_count++;\n        }\n    }\n    $max_element_count++;\n\
    \    $max_element = array_slice($numbers, $max_element_index, $max_element_count);\n\
    \    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9niv9r1.php:32\n\
    Stack trace:\n#0 /tmp/tmpz9niv9r1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz9niv9r1.php\
    \ on line 32\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element == null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $numbers[$max_index];\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeso5lond.php:23\n\
    Stack trace:\n#0 /tmp/tmpeso5lond.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeso5lond.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y9nkc4l.php:25\n\
    Stack trace:\n#0 /tmp/tmp1y9nkc4l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1y9nkc4l.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $result = array($number);\n        } else {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq9lafvm.php:26\n\
    Stack trace:\n#0 /tmp/tmpoq9lafvm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoq9lafvm.php\
    \ on line 26\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $numbers[$max_index];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptspugh3n.php:31\n\
    Stack trace:\n#0 /tmp/tmptspugh3n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptspugh3n.php\
    \ on line 31\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n   \
    \     $result[$i] = max($number, $result[$i]);\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1j6lzgb.php:23\n\
    Stack trace:\n#0 /tmp/tmpg1j6lzgb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpg1j6lzgb.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv258o3c.php:23\n\
    Stack trace:\n#0 /tmp/tmpqv258o3c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqv258o3c.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwravlqn.php:23\n\
    Stack trace:\n#0 /tmp/tmplwravlqn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplwravlqn.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $rolling_max = array();\n    foreach ($numbers\
    \ as $number) {\n        $rolling_max[] = $number;\n    }\n    $rolling_max =\
    \ array_reverse($rolling_max);\n    foreach ($rolling_max as $rolling_max_number)\
    \ {\n        $result[] = $rolling_max_number;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw40f_299.php:25\n\
    Stack trace:\n#0 /tmp/tmpw40f_299.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw40f_299.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwbo5z54.php:26\n\
    Stack trace:\n#0 /tmp/tmpdwbo5z54.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdwbo5z54.php\
    \ on line 26\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers[$max_index]\
    \ = $max_value;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfslnztw.php:24\n\
    Stack trace:\n#0 /tmp/tmpmfslnztw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmfslnztw.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcrqu429.php:25\n\
    Stack trace:\n#0 /tmp/tmpbcrqu429.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbcrqu429.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    $max_index3 = 0;\n    $max_index4 = 0;\n    $max_index5 = 0;\n    $max_index6\
    \ = 0;\n    $max_index7 = 0;\n    $max_index8 = 0;\n    $max_index9 = 0;\n   \
    \ $max_index10 = 0;\n    $max_index11 = 0;\n    $max_index12 = 0;\n    $max_index13\
    \ = 0;\n    $max_index14 = 0;\n    $max_index15 = 0;\n    $max_index16 = 0;\n\
    \    $max_index17 = 0;\n    $max_index18 = 0;\n    $max_index19 = 0;\n    $max_index20\
    \ = 0;\n    $max_index21 = 0;\n    $max_index22 = 0;\n    $max_index23 = 0;\n\
    \    $max_index24 = 0;\n    $max_index25 = 0;\n    $max_index26 = 0;\n    $max_index27\
    \ = 0;\n    $max_index28 = 0;\n    $max_index29 = 0;\n    $max_index30 = 0;\n\
    \    $max_index31 = 0;\n    $max_index32 = 0;\n    $max_index33 = 0;\n    $max_index34\
    \ = 0;\n    $max_index35 = 0;\n    $max_index36 = 0;\n    $max_index37 = 0;\n\
    \    $max_index38 = 0;\n    $max_index39 = 0;\n    $max_index40 = 0;\n    $max_index41\
    \ = 0;\n    $max_index42 = 0;\n    $max_index43 = 0;\n    $max_index44 = 0;\n\
    \    $max_index45 = 0;\n    $max_index46 = 0;\n    $max_index47 = 0;\n    $max_index48\
    \ = 0;\n    $max_index49 = 0;\n    $max_index50 = 0;\n    $max_index51 = 0;\n\
    \    $max_index52 = 0;\n    $max_index53 = 0;\n    $max_index54 = 0;\n    $max_index55\
    \ = 0;\n    $max_index56 = 0;\n    $max_index57 = 0;\n    $max_index58 = 0;\n\
    \    $max_index59 = 0;\n    $max_index60 = 0;\n    $max_index61 = 0;\n    $max_index62\
    \ = 0;\n    $max_index63 = 0;\n    $max_index64 = 0;\n    $max_index65 = 0;\n\
    \    $max_index66 = 0;\n    $max_index67 = 0;\n    $max_index68 = 0;\n    $max_index69\
    \ = 0;\n    $max_index70 = 0;\n    $max_index71 = 0;\n    $max_index72 = 0;\n\
    \    $max_index73 = 0;\n    $max_index74 = 0;\n    $max_index75 = 0;\n    $max_index76\
    \ = 0;\n    $max_index77 = 0;\n    $max_index78 = 0;\n    $max_index79 = 0;\n\
    \    $max_index80 = 0;\n    $max_index81 = 0;\n    $max_index82 = 0;\n    $max_index83\
    \ = 0;\n    $max_index84 = 0;\n    $max_index85 = 0;\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmpd4dwvpdt.php on line 105

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        }\n        if ($number == $max) {\n            $max_index++;\n\
    \        }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmplo4h_syt.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmplo4h_syt.php:27\nStack\
    \ trace:\n#0 /tmp/tmplo4h_syt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplo4h_syt.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpq8kalh4r.php on line 15\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8kalh4r.php:23\nStack\
    \ trace:\n#0 /tmp/tmpq8kalh4r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq8kalh4r.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max[$max_index] = $max_value;\n            $max_value = $number;\n\
    \            $max_index++;\n        } else {\n            $max_value = $number;\n\
    \        }\n    }\n    $max[$max_index] = $max_value;\n    return $max;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpw1k7fciz.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpw1k7fciz.php:28\nStack\
    \ trace:\n#0 /tmp/tmpw1k7fciz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw1k7fciz.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   $i = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = $i;\n       \
    \ }\n        $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpaddbro5_.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpaddbro5_.php:29\nStack\
    \ trace:\n#0 /tmp/tmpaddbro5_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaddbro5_.php\
    \ on line 29\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwravlqn.php:23\n\
    Stack trace:\n#0 /tmp/tmplwravlqn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplwravlqn.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = $numbers[0];\n    $max_element = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_number) {\n            $max_number\
    \ = $number;\n            $max_element = $number;\n        }\n    }\n    return\
    \ array($max_number, $max_element);\n}\n\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpt337j73i.php on line 7\n\n\
    Warning: Undefined array key 0 in /tmp/tmpt337j73i.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpt337j73i.php:23\nStack trace:\n\
    #0 /tmp/tmpt337j73i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt337j73i.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value === null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuaprzxr7.php:24\n\
    Stack trace:\n#0 /tmp/tmpuaprzxr7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuaprzxr7.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_element) {\n   \
    \         $max_element = $numbers[$i];\n            $max_index = $i;\n       \
    \ }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpf5pwt1_z.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf5pwt1_z.php:23\nStack\
    \ trace:\n#0 /tmp/tmpf5pwt1_z.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf5pwt1_z.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = count($numbers); $i > 0; $i--) {\n        if ($numbers[$i]\
    \ > $max_value) {\n            $max_value = $numbers[$i];\n            $max_index2\
    \ = $i;\n        }\n    }\n    return array($max_value, $max_index, $max_index2);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp7l2b9ibg.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7l2b9ibg.php:30\nStack\
    \ trace:\n#0 /tmp/tmp7l2b9ibg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7l2b9ibg.php\
    \ on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    $max_value = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $number;\n        }\n    }\n    $numbers[$max_index]\
    \ = $max_value;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzx7jq06a.php:25\n\
    Stack trace:\n#0 /tmp/tmpzx7jq06a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzx7jq06a.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rollingMax = array_shift($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rollingMax) {\n            $rollingMax\
    \ = $number;\n        }\n        $result[] = $rollingMax;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsg6w5qwk.php:24\n\
    Stack trace:\n#0 /tmp/tmpsg6w5qwk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsg6w5qwk.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_count = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n            $max_count = 1;\n        } else\
    \ if ($value == $max_value) {\n            $max_count++;\n        }\n    }\n \
    \   if ($max_count > 0) {\n        $max_element = array_slice($numbers, $max_index,\
    \ $max_count);\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhhxnfro.php:31\n\
    Stack trace:\n#0 /tmp/tmpjhhxnfro.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjhhxnfro.php\
    \ on line 31\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpux3wpbeb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpux3wpbeb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpux3wpbeb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux3wpbeb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpw7deerub.php on line 8\n\n\
    Warning: Undefined array key 0 in /tmp/tmpw7deerub.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpw7deerub.php:26\nStack trace:\n\
    #0 /tmp/tmpw7deerub.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw7deerub.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[0] = $numbers[0];\n    $max[1] = $numbers[0];\n\
    \    $max[2] = $numbers[0];\n    $max[3] = $numbers[0];\n    $max[4] = $numbers[0];\n\
    \    $max[5] = $numbers[0];\n    $max[6] = $numbers[0];\n    $max[7] = $numbers[0];\n\
    \    $max[8] = $numbers[0];\n    $max[9] = $numbers[0];\n    $max[10] = $numbers[0];\n\
    \    $max[11] = $numbers[0];\n    $max[12] = $numbers[0];\n    $max[13] = $numbers[0];\n\
    \    $max[14] = $numbers[0];\n    $max[15] = $numbers[0];\n    $max[16] = $numbers[0];\n\
    \    $max[17] = $numbers[0];\n    $max[18] = $numbers[0];\n    $max[19] = $numbers[0];\n\
    \    $max[20] = $numbers[0];\n    $max[21] = $numbers[0];\n    $max[22] = $numbers[0];\n\
    \    $max[23] = $numbers[0];\n    $max[24] = $numbers[0];\n    $max[25] = $numbers[0];\n\
    \    $max[26] = $numbers[0];\n    $max[27] = $numbers[0];\n    $max[28] = $numbers[0];\n\
    \    $max[29] = $numbers[0];\n    $max[30] = $numbers[0];\n    $max[31] = $numbers[0];\n\
    \    $max[32] = $numbers[0];\n    $max[33] = $numbers[0];\n    $max[34] = $numbers[0];\n\
    \    $max[35] = $numbers[0];\n    $max[36] = $numbers[0];\n    $max[37] = $numbers[0];\n\
    \    $max[38] = $numbers[0];\n    $max[39] = $numbers[0];\n    $max[40] = $numbers[0];\n\
    \    $max[41] = $numbers[0];\n    $max[42] = $numbers[0];\n    $max[43] = $numbers[0];\n\
    \    $max[44] = $numbers[0];\n    $max[45] = $numbers[0];\n    $max[46] = $numbers[0];\n\
    \    $max[47] = $numbers[0];\n    $max[48] = $numbers[0];\n    $max[49] = $numbers[0];\n\
    \    $max[50] = $numbers[0];\n    $max[51] = $numbers[0];\n    $max[52] = $numbers[0];\n\
    \    $max[53] = $numbers[0];\n    $max[54] = $numbers[0];\n    $max[55] = $numbers[0];\n\
    \    $max[56] = $numbers[0];\n    $max[57] = $numbers[0];\n    $max[58] = $numbers[0];\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmp5z4aks5z.php on line 78

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } elseif ($number == $max) {\n            $max_index++;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwztdrhkd.php:26\n\
    Stack trace:\n#0 /tmp/tmpwztdrhkd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwztdrhkd.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = null;\n\
    \    $rolling_max_value = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number > $rolling_max_value)\
    \ {\n            $rolling_max_value = $number;\n            $rolling_max_index\
    \ = $rolling_max_index + 1;\n        }\n        if ($number == $rolling_max_value)\
    \ {\n            $rolling_max_index = $rolling_max_index + 1;\n        }\n   \
    \     if ($rolling_max_index > $rolling_max_value) {\n            $rolling_max_value\
    \ = $rolling_max_value;\n            $rolling_max_index = $rolling_max_index;\n\
    \        }\n        $result[] = $rolling_max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpkq25t2te.php on line 12

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $arr2 = array_slice($arr, 0, 5);\n$arr3 = array_slice($arr2, -5, 5);\n$arr4 =\
    \ array_slice($arr3, -10, 5);\n$arr5 = array_slice($arr4, -15, 5);\n$arr6 = array_slice($arr5,\
    \ -20, 5);\n$arr7 = array_slice($arr6, -25, 5);\n$arr8 = array_slice($arr7, -30,\
    \ 5);\n$arr9 = array_slice($arr8, -35, 5);\n$arr10 = array_slice($arr9, -40, 5);\n\
    $arr11 = array_slice($arr10, -45, 5);\n$arr12 = array_slice($arr11, -50, 5);\n\
    $arr13 = array_slice($arr12, -55, 5);\n$arr14 = array_slice($arr13, -60, 5);\n\
    $arr15 = array_slice($arr14, -65, 5);\n$arr16 = array_slice($arr15, -70, 5);\n\
    $arr17 = array_slice($arr16, -75, 5);\n$arr18 = array_slice($arr17, -80, 5);\n\
    $arr19 = array_slice($arr18, -85, 5);\n$arr20 = array_slice($arr19, -90, 5);\n\
    $arr21 = array_slice($arr20, -95, 5);\n$arr22 = array_slice($arr21, -100, 5);\n\
    $arr23 = array_slice($arr22, -105, 5);\n$arr24 = array_slice($arr23, -110, 5);\n\
    $arr25 = array_slice($arr24, -115, 5);\n$arr26 = array_slice($arr25, -120, 5);\n\
    $arr27 = array_slice($arr26, -115, 5);\n$arr28 = array_slice($arr27, -115, 5);\n\
    $arr29 = array_slice($arr28, -115, 5);\n$arr30 = array_slice($arr29, -115, 5);\n\
    $arr31 = array_slice($arr30, -115, 5);\n$arr32 = array_slice($arr31, -115, 5);\n\
    $arr33 = array_slice($arr\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpl4zsg7ck.php
    on line 18

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $number;\n   \
    \         $current = $number;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtdwftse.php:25\n\
    Stack trace:\n#0 /tmp/tmpjtdwftse.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjtdwftse.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpq8kalh4r.php on line 15\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8kalh4r.php:23\nStack\
    \ trace:\n#0 /tmp/tmpq8kalh4r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq8kalh4r.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv258o3c.php:23\n\
    Stack trace:\n#0 /tmp/tmpqv258o3c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqv258o3c.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        } else {\n            $result[] = $number;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmb5qirj.php:27\n\
    Stack trace:\n#0 /tmp/tmpgmb5qirj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgmb5qirj.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[0] = $numbers[0];\n    $result[1] = $numbers[1];\n\
    \    $result[2] = $numbers[2];\n    $result[3] = $numbers[3];\n    $result[4]\
    \ = $numbers[4];\n    $result[5] = $numbers[5];\n    $result[6] = $numbers[6];\n\
    \    $result[7] = $numbers[7];\n    $result[8] = $numbers[8];\n    $result[9]\
    \ = $numbers[9];\n    $result[10] = $numbers[10];\n    $result[11] = $numbers[11];\n\
    \    $result[12] = $numbers[12];\n    $result[13] = $numbers[13];\n    $result[14]\
    \ = $numbers[14];\n    $result[15] = $numbers[15];\n    $result[16] = $numbers[16];\n\
    \    $result[17] = $numbers[17];\n    $result[18] = $numbers[18];\n    $result[19]\
    \ = $numbers[19];\n    $result[20] = $numbers[20];\n    $result[21] = $numbers[21];\n\
    \    $result[22] = $numbers[22];\n    $result[23] = $numbers[23];\n    $result[24]\
    \ = $numbers[24];\n    $result[25] = $numbers[25];\n    $result[26] = $numbers[26];\n\
    \    $result[27] = $numbers[27];\n    $result[28] = $numbers[28];\n    $result[29]\
    \ = $numbers[29];\n    $result[30] = $numbers[30];\n    $result[31] = $numbers[31];\n\
    \    $result[32] = $numbers[32];\n    $result[33] = $numbers[33];\n    $result[34]\
    \ = $numbers[34];\n    $result[35] = $numbers[35];\n    $result[36] = $numbers[36];\n\
    \    $result[37] = $numbers[37];\n    $result[38] = $numbers[38];\n    $result[39]\
    \ = $numbers[39];\n    $result[40] = $numbers[40];\n    $result[41] = $numbers[41];\n\
    \    $result[42] = $numbers[42];\n    $result[43] = $numbers[43];\n    $result[44]\
    \ = $numbers[44];\n    $result[45] = $numbers[45];\n    $result[46] = $numbers[46];\n\
    \    $result[47] = $numbers[47];\n    $result[48] = $numbers[48];\n    $result[49]\
    \ = $numbers[49];\n    $result[50] = $numbers[50];\n    $result[51] = $number\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp7djd2qwk.php
    on line 60

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s3s224b.php:21\n\
    Stack trace:\n#0 /tmp/tmp9s3s224b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9s3s224b.php\
    \ on line 21\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpzredh_sa.php on line 7\n\n\
    Warning: Undefined array key 0 in /tmp/tmpzredh_sa.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpzredh_sa.php:23\nStack trace:\n\
    #0 /tmp/tmpzredh_sa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzredh_sa.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = count($numbers); $i > 0; $i--) {\n        if ($numbers[$i]\
    \ == $max_value) {\n            $max_index2 = $i;\n        }\n    }\n    $max_index2\
    \ = $max_index2 - 1;\n    $max_value = $numbers[$max_index];\n    $max_index =\
    \ $max_index - 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index\
    \ - 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index -\
    \ 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n\
    \    $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n  \
    \  $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value\
    \ = $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value =\
    \ $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value = $numbers[$max_index];\n\
    \    $max_index = $max_index - 1;\n    $max_value = $numbers[$max_index];\n  \
    \  $max_index = $max_index - 1;\n    $max_value = $numbers[$max_index];\n    $max_index\
    \ = $max_index - 1;\n    $max_value = $numbers[$max_index];\n    $max_index =\
    \ $max_index - 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index\
    \ - 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index -\
    \ 1;\n    $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n\
    \    $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n  \
    \  $max_value = $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value\
    \ = $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value =\
    \ $numbers[$max_index];\n    $max_index = $max_index - 1;\n    $max_value = $numbers[$max_index];\n\
    \    $max_index = $max_index - 1;\n    $max_value = $number\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpazx5404o.php
    on line 63

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $max_element = $numbers[$max_index];\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmptg7dgrga.php on line 16\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmptg7dgrga.php:25\nStack\
    \ trace:\n#0 /tmp/tmptg7dgrga.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptg7dgrga.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element == null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo5kb5jm.php:25\n\
    Stack trace:\n#0 /tmp/tmpmo5kb5jm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmo5kb5jm.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers\
    \ = array_slice($numbers, 0, $max_index);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp71ayi1oo.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp71ayi1oo.php:26\nStack\
    \ trace:\n#0 /tmp/tmp71ayi1oo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp71ayi1oo.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = $rolling_max > $number ? $rolling_max : $number;\n        }\n    }\n    return\
    \ array($rolling_max, $max);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp6d3w4nw8.php on line 7\n\n\
    Warning: Undefined array key 0 in /tmp/tmp6d3w4nw8.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6d3w4nw8.php:25\nStack trace:\n\
    #0 /tmp/tmp6d3w4nw8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6d3w4nw8.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv258o3c.php:23\n\
    Stack trace:\n#0 /tmp/tmpqv258o3c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqv258o3c.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpq8kalh4r.php on line 15\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8kalh4r.php:23\nStack\
    \ trace:\n#0 /tmp/tmpq8kalh4r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq8kalh4r.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv258o3c.php:23\n\
    Stack trace:\n#0 /tmp/tmpqv258o3c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqv258o3c.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = $number;\n        } else {\n            $result[$index]\
    \ = $max;\n            $index++;\n            $max = $number;\n        }\n   \
    \ }\n    $result[$index] = $max;\n    return $result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't seem to work. `rolling_max` returns `[1,2,3,3,3,4,4,4]`\
    \ instead of `[1,2,3,3,3,4,4,3]`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and\
    \ it works. I guess you didn't test it on PHP 5.5 or PHP 5.4 or PHP 5.3 or PHP\
    \ 5.2 or PHP 5.1 or PHP 5.0.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and\
    \ it works. I guess you didn't test it on PHP 5.5 or PHP 5.4 or PHP 5.3 or PHP\
    \ 5.2 or PHP 5.1 or PHP 5.0.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and\
    \ it works. I guess you didn't test it on PHP 5.5 or PHP 5.4 or PHP 5.3 or PHP\
    \ 5.2 or PHP 5.1 or PHP 5.0.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and\
    \ it works. I guess you didn't test it on PHP 5.5 or PHP 5.4 or PHP 5.3 or PHP\
    \ 5.2 or PHP 5.1 or PHP 5.0.\n<|/ c |>\n<| a dscore=1 |>\nI made a slight modification\
    \ to the accepted answer (thanks again!) so that it works with PHP 5.6 and 5.5\
    \ (I tested it on PHP 5.5.9 and it works). \n<code>\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnzkmgitj.php
    on line 23

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max) {\n           \
    \ $max = $number;\n            $max_index = $numbers[$max_index];\n          \
    \  $max_indexs[] = $max_index;\n        }\n    }\n    return $max_indexs;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmph24c4uxq.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph24c4uxq.php:26\nStack\
    \ trace:\n#0 /tmp/tmph24c4uxq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph24c4uxq.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $arr = [1, 2, 3, 2, 3, 3, 4, 4, 5];\n$max = 0;\n$maxIndex = 0;\n$maxValue = -1;\n\
    $i = 0;\nforeach($arr as $key => $value) {\n    if($value > $maxValue) {\n   \
    \     $max = $value;\n        $maxIndex = $key;\n    }\n    if($value == $maxValue)\
    \ {\n        $i++;\n    }\n}\n$arr[$maxIndex] = $max;\n$arr[$maxIndex + 1] = $max;\n\
    $arr[$maxIndex + 2] = $max;\n$arr[$maxIndex + 3] = $max;\n$arr[$maxIndex + 4]\
    \ = $max;\n$arr[$maxIndex + 5] = $max;\n$arr[$maxIndex + 6] = $max;\n$arr[$maxIndex\
    \ + 7] = $max;\n$arr[$maxIndex + 8] = $max;\n$arr[$maxIndex + 9] = $max;\n$arr[$maxIndex\
    \ + 10] = $max;\n$arr[$maxIndex + 11] = $max;\n$arr[$maxIndex + 12] = $max;\n\
    $arr[$maxIndex + 13] = $max;\n$arr[$maxIndex + 14] = $max;\n$arr[$maxIndex + 15]\
    \ = $max;\n$arr[$maxIndex + 16] = $max;\n$arr[$maxIndex + 17] = $max;\n$arr[$maxIndex\
    \ + 18] = $max;\n$arr[$maxIndex + 19] = $max;\n$arr[$maxIndex + 20] = $max;\n\
    $arr[$maxIndex + 21] = $max;\n$arr[$maxIndex + 22] = $max;\n$arr[$maxIndex + 23]\
    \ = $max;\n$arr[$maxIndex + 24] = $max;\n$arr[$maxIndex + 25] = $max;\n$arr[$maxIndex\
    \ + 26] = \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5dogoe5e.php
    on line 22

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv5yk4wl.php:24\n\
    Stack trace:\n#0 /tmp/tmpgv5yk4wl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgv5yk4wl.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[] = $numbers[0];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n        $result[] = $number;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp_ov___g9.php on line 8\n\n\
    Warning: Undefined array key 0 in /tmp/tmp_ov___g9.php on line 9\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_ov___g9.php:26\nStack trace:\n\
    #0 /tmp/tmp_ov___g9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_ov___g9.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] == $max_value) {\n            $result[] = $max_value;\n\
    \        } else {\n            $result[] = $numbers[$i];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpp29z2rh7.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpp29z2rh7.php:32\nStack\
    \ trace:\n#0 /tmp/tmpp29z2rh7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp29z2rh7.php\
    \ on line 32\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $index => $value) {\n\
    \        if ($rolling_max === null) {\n            $rolling_max = $value;\n  \
    \          $rolling_max_index = $index;\n            $rolling_max_value = $value;\n\
    \            continue;\n        }\n        if ($value > $rolling_max) {\n    \
    \        $rolling_max = $value;\n            $rolling_max_index = $index;\n  \
    \          $rolling_max_value = $value;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    $result[] = $rolling_max_index;\n    $result[] = $rolling_max_value;\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6auxj7s1.php:35\n\
    Stack trace:\n#0 /tmp/tmp6auxj7s1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6auxj7s1.php\
    \ on line 35\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfgl3abg.php:25\n\
    Stack trace:\n#0 /tmp/tmpjfgl3abg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjfgl3abg.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $result[$i]) {\n            $result[$j] = $number;\n\
    \            $j++;\n        } else {\n            $i++;\n        }\n    }\n  \
    \  return array_slice($result, 0, $j);\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpq6aac5a8.php on line 11\n\n\
    Warning: Undefined array key 0 in /tmp/tmpq6aac5a8.php on line 11\n\nWarning:\
    \ Undefined array key 1 in /tmp/tmpq6aac5a8.php on line 11\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpq6aac5a8.php:28\nStack trace:\n#0 /tmp/tmpq6aac5a8.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq6aac5a8.php on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfgl3abg.php:25\n\
    Stack trace:\n#0 /tmp/tmpjfgl3abg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjfgl3abg.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = null;\n\
    \    $rolling_max_value = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = $numbers[0];\n    $rolling_max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max_value == $number) {\n            $rolling_max_index++;\n\
    \            $rolling_max_value = $numbers[0];\n        }\n        if ($rolling_max_index\
    \ > 0) {\n            if ($rolling_max_index == $rolling_max_index) {\n      \
    \          $rolling_max_index++;\n                $rolling_max_value = $number;\n\
    \            } else {\n                $rolling_max_index = 0;\n             \
    \   $rolling_max_value = $number;\n            }\n        }\n        $result[]\
    \ = $rolling_max_value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp5vhpgp_n.php on line 12\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp5vhpgp_n.php:40\nStack\
    \ trace:\n#0 /tmp/tmp5vhpgp_n.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5vhpgp_n.php\
    \ on line 40\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpux3wpbeb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpux3wpbeb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpux3wpbeb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux3wpbeb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number == $numbers[$index]) {\n            $index++;\n         \
    \   continue;\n        }\n        $result[] = $number;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3s78vakx.php:25\n\
    Stack trace:\n#0 /tmp/tmp3s78vakx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3s78vakx.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_element) {\n   \
    \         $max_element = $numbers[$i];\n            $max_index = $i;\n       \
    \ }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpcciu_u2i.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpcciu_u2i.php:25\nStack\
    \ trace:\n#0 /tmp/tmpcciu_u2i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcciu_u2i.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    $max_index++;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] == $max_value) {\n      \
    \      $result[] = $max_value;\n            $max_index++;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpi1hjws1p.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpi1hjws1p.php:32\nStack\
    \ trace:\n#0 /tmp/tmpi1hjws1p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi1hjws1p.php\
    \ on line 32\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index++] = $number;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpvrocx9j7.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvrocx9j7.php:26\nStack\
    \ trace:\n#0 /tmp/tmpvrocx9j7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvrocx9j7.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $max_index++;\n\
    \    $max_value = $max_index + $max_value;\n    $max_value = $max_value - 1;\n\
    \    return array_slice($numbers, 0, $max_index);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmph9ueapmz.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph9ueapmz.php:28\nStack\
    \ trace:\n#0 /tmp/tmph9ueapmz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmph9ueapmz.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfgl3abg.php:25\n\
    Stack trace:\n#0 /tmp/tmpjfgl3abg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjfgl3abg.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index\
    \ = 0;\n    $max_index = 0;\n    $max_index = 0;\n    $max_index = 0;\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmpvujgcga3.php on line 121

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[] = $numbers[0];\n    $result[] = $numbers[0];\n\
    \    $index = 1;\n    foreach ($numbers as $number) {\n        if ($number > $result[$index\
    \ - 1]) {\n            $result[$index] = $number;\n        }\n        $index++;\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't seem to work. `rolling_max(array(1, 2, 3, 2, 3, 4, 2))` returns `array(1,\
    \ 2, 3, 3, 3, 4, 4)` instead of `array(1, 2, 3, 3, 3, 4, 4)`.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I edited my answer to include a link to the PHP\
    \ documentation where you can see it works.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I edited my answer to include a link to the PHP documentation where\
    \ you can see it works.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited\
    \ my answer to include a link to the PHP documentation where you can see it works.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I edited my answer to include a link\
    \ to the PHP documentation where you can see it works.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [1, 2, 3, 2, 3, 3, 4, 2];\n$max = 0;\n$maxIndex = 0;\n$maxValue\
    \ = -1;\n$maxValueIndex = 0;\nforeach ($arr as $key => $value) {\n    if ($value\
    \ > $maxValue) {\n        $max = $value;\n        $maxIndex = $key;\n        $maxValue\
    \ = $value;\n        $maxValueIndex = $key;\n    }\n}\n$arr[$maxIndex] = $maxValue;\n\
    unset($arr[$maxValueIndex]);\nprint_r($arr);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't seem to work. `rolling_max(array(1, 2, 3, 2, 3, 4, 2))`\
    \ returns `array(1, 2, 3, 3, 3, 4, 4)` instead of `array(1, 2, 3, 3, 3, 4, 4)`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I edited my answer to include a link\
    \ to the PHP documentation where you can see it works.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I edited my answer to include a link to the PHP documentation\
    \ where you can see it works.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgwwfo7dj.php
    on line 19

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        }\n        if ($number == $max) {\n            $max_index++;\n\
    \        }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmplo4h_syt.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmplo4h_syt.php:27\nStack\
    \ trace:\n#0 /tmp/tmplo4h_syt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplo4h_syt.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $max_element = $numbers[$max_index];\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmppumhucii.php on line 16\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmppumhucii.php:25\nStack\
    \ trace:\n#0 /tmp/tmppumhucii.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppumhucii.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y9nkc4l.php:25\n\
    Stack trace:\n#0 /tmp/tmp1y9nkc4l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1y9nkc4l.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[0] = $numbers[0];\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max[0]) {\n            $max[0] = $number;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpew6vo4tq.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpew6vo4tq.php:22\nStack\
    \ trace:\n#0 /tmp/tmpew6vo4tq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpew6vo4tq.php\
    \ on line 22\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpux3wpbeb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpux3wpbeb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpux3wpbeb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux3wpbeb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = array();\n    $max_element[0] = $numbers[0];\n    $max_element[1]\
    \ = $numbers[0];\n    $max_element[2] = $numbers[0];\n    $max_element[3] = $numbers[0];\n\
    \    $max_element[4] = $numbers[0];\n    $max_element[5] = $numbers[0];\n    $max_element[6]\
    \ = $numbers[0];\n    $max_element[7] = $numbers[0];\n    $max_element[8] = $numbers[0];\n\
    \    $max_element[9] = $numbers[0];\n    $max_element[10] = $numbers[0];\n   \
    \ $max_element[11] = $numbers[0];\n    $max_element[12] = $numbers[0];\n    $max_element[13]\
    \ = $numbers[0];\n    $max_element[14] = $numbers[0];\n    $max_element[15] =\
    \ $numbers[0];\n    $max_element[16] = $numbers[0];\n    $max_element[17] = $numbers[0];\n\
    \    $max_element[18] = $numbers[0];\n    $max_element[19] = $numbers[0];\n  \
    \  $max_element[20] = $numbers[0];\n    $max_element[21] = $numbers[0];\n    $max_element[22]\
    \ = $numbers[0];\n    $max_element[23] = $numbers[0];\n    $max_element[24] =\
    \ $numbers[0];\n    $max_element[25] = $numbers[0];\n    $max_element[26] = $numbers[0];\n\
    \    $max_element[27] = $numbers[0];\n    $max_element[28] = $numbers[0];\n  \
    \  $max_element[29] = $numbers[0];\n    $max_element[30] = $numbers[0];\n    $max_element[31]\
    \ = $numbers[0];\n    $max_element[32] = $numbers[0];\n    $max_element[33] =\
    \ $numbers[0];\n    $max_element[34] = $numbers[0];\n    $max_element[35] = $numbers[0];\n\
    \    $max_element[36] = $numbers[0];\n    $max_element[37] = $numbers[0];\n  \
    \  $max_element[38] = $numbers[0];\n    $max_element[39] = $numbers[0];\n    $max_element[40]\
    \ = $numbers[0];\n    $max_element[41] = $numbers[0];\n    $max_element[42] =\
    \ $numbers[0];\n    $max_element[43] = $numbers[0];\n    $max_element[44] = $numbers[0];\n\
    \    $max_element[45] = $numbers[0];\n    $max_element[46] = $numbers[0];\n  \
    \  $max_element[47] = $numbers[0];\n    $max_element[48] = $numbers[0];\n    $max_element[49]\
    \ = $numbers[0];\n    $max_element[50] = $numbers[0];\n    $max_element[51] =\
    \ $numbers[0];\n    $max_element[52] = $numbers[0];\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmprsugn7no.php on line 72

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index++] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp982g51ad.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp982g51ad.php:26\nStack\
    \ trace:\n#0 /tmp/tmp982g51ad.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp982g51ad.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpz0tlv2fu.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpz0tlv2fu.php:23\nStack\
    \ trace:\n#0 /tmp/tmpz0tlv2fu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz0tlv2fu.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_count = 0;\n    $index = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max_value) {\n            $max_value = $number;\n     \
    \       $max_index = $index;\n        }\n        if ($number == $max_value) {\n\
    \            $max_count++;\n        } else {\n            if ($max_count > 0)\
    \ {\n                $max_element[$max_index] = $max_value;\n                $max_index++;\n\
    \                $max_count = 1;\n            }\n            $max_value = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    if\
    \ ($max_count > 0) {\n        $max_element[$max_index] = $max_value;\n    }\n\
    \    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59xfoncw.php:41\n\
    Stack trace:\n#0 /tmp/tmp59xfoncw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp59xfoncw.php\
    \ on line 41\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s3s224b.php:21\n\
    Stack trace:\n#0 /tmp/tmp9s3s224b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9s3s224b.php\
    \ on line 21\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    $max_index3 = 0;\n    $max_index4 = 0;\n    $max_index5 = 0;\n    $max_index6\
    \ = 0;\n    $max_index7 = 0;\n    $max_index8 = 0;\n    $max_index9 = 0;\n   \
    \ $max_index10 = 0;\n    $max_index11 = 0;\n    $max_index12 = 0;\n    $max_index13\
    \ = 0;\n    $max_index14 = 0;\n    $max_index15 = 0;\n    $max_index16 = 0;\n\
    \    $max_index17 = 0;\n    $max_index18 = 0;\n    $max_index19 = 0;\n    $max_index20\
    \ = 0;\n    $max_index21 = 0;\n    $max_index22 = 0;\n    $max_index23 = 0;\n\
    \    $max_index24 = 0;\n    $max_index25 = 0;\n    $max_index26 = 0;\n    $max_index27\
    \ = 0;\n    $max_index28 = 0;\n    $max_index29 = 0;\n    $max_index30 = 0;\n\
    \    $max_index31 = 0;\n    $max_index32 = 0;\n    $max_index33 = 0;\n    $max_index34\
    \ = 0;\n    $max_index35 = 0;\n    $max_index36 = 0;\n    $max_index37 = 0;\n\
    \    $max_index38 = 0;\n    $max_index39 = 0;\n    $max_index40 = 0;\n    $max_index41\
    \ = 0;\n    $max_index42 = 0;\n    $max_index43 = 0;\n    $max_index44 = 0;\n\
    \    $max_index45 = 0;\n    $max_index46 = 0;\n    $max_index47 = 0;\n    $max_index48\
    \ = 0;\n    $max_index49 = 0;\n    $max_index50 = 0;\n    $max_index51 = 0;\n\
    \    $max_index52 = 0;\n    $max_index53 = 0;\n    $max_index54 = 0;\n    $max_index55\
    \ = 0;\n    $max_index56 = 0;\n    $max_index57 = 0;\n    $max_index58 = 0;\n\
    \    $max_index59 = 0;\n    $max_index60 = 0;\n    $max_index61 = 0;\n    $max_index62\
    \ = 0;\n    $max_index63 = 0;\n    $max_index64 = 0;\n    $max_index65 = 0;\n\
    \    $max_index66 = 0;\n    $max_index67 = 0;\n    $max_index68 = 0;\n    $max_index69\
    \ = 0;\n    $max_index70 = 0;\n    $max_index71 = 0;\n    $max_index72 = 0;\n\
    \    $max_index73 = 0;\n    $max_index74 = 0;\n    $max_index75 = 0;\n    $max_index76\
    \ = 0;\n    $max_index77 = 0;\n    $max_index78 = 0;\n    $max_index79 = 0;\n\
    \    $max_index80 = 0;\n    $max_index81 = 0;\n    $max_index82 = 0;\n    $max_index83\
    \ = 0;\n    $max_index84 = 0;\n    $max_index85 = 0;\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmpd4dwvpdt.php on line 105

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = NULL;\n    $max_index = 0;\n    $max_value = $numbers[0];\n  \
    \  foreach ($numbers as $number) {\n        if ($number > $max_value) {\n    \
    \        $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $max = array_slice($numbers, 0, $max_index + 1);\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmph__64cdc.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph__64cdc.php:27\nStack\
    \ trace:\n#0 /tmp/tmph__64cdc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph__64cdc.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ot9pet.php:27\n\
    Stack trace:\n#0 /tmp/tmpt8ot9pet.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt8ot9pet.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n            $rolling_max_index = 0;\n   \
    \     } else {\n            if ($rolling_max > $number) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n            } else {\n\
    \                $rolling_max = $rolling_max;\n                $rolling_max_index++;\n\
    \            }\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfvhvo01.php:34\n\
    Stack trace:\n#0 /tmp/tmpwfvhvo01.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwfvhvo01.php\
    \ on line 34\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv5yk4wl.php:24\n\
    Stack trace:\n#0 /tmp/tmpgv5yk4wl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgv5yk4wl.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $number;\n        }\n\
    \    }\n    $result[] = $max_value;\n    $max_index++;\n    foreach ($numbers\
    \ as $index => $number) {\n        if ($index == $max_index) {\n            $result[]\
    \ = $number;\n        } else {\n            $result[] = $max_value;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpv2d982b2.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpv2d982b2.php:33\nStack\
    \ trace:\n#0 /tmp/tmpv2d982b2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv2d982b2.php\
    \ on line 33\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = null;\n    $max_index = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max_value == null || $value >\
    \ $max_value) {\n            $max_value = $value;\n            $max_index = $index;\n\
    \        }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpif8n5y6z.php on line 17\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpif8n5y6z.php:26\nStack\
    \ trace:\n#0 /tmp/tmpif8n5y6z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpif8n5y6z.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_number = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($number > $max_number) {\n            $max_number\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpizoiodly.php on line 15\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizoiodly.php:23\nStack\
    \ trace:\n#0 /tmp/tmpizoiodly.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpizoiodly.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpux3wpbeb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpux3wpbeb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpux3wpbeb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux3wpbeb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = null;\n\
    \    $rolling_max_value = null;\n    $rolling_max_index = 0;\n    $rolling_max_value\
    \ = $numbers[0];\n    foreach ($numbers as $number) {\n        if ($number > $rolling_max_value)\
    \ {\n            $rolling_max_value = $number;\n            $rolling_max_index\
    \ = $rolling_max_index;\n        }\n        if ($number == $rolling_max_value)\
    \ {\n            $rolling_max_index++;\n        }\n        if ($rolling_max_index\
    \ > 0) {\n            $result[$rolling_max_index] = $rolling_max_value;\n    \
    \    }\n        $rolling_max_value = $number;\n        $rolling_max_index = 0;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpqrkkhb4v.php on line 12\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpqrkkhb4v.php:36\nStack\
    \ trace:\n#0 /tmp/tmpqrkkhb4v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrkkhb4v.php\
    \ on line 36\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcrqu429.php:25\n\
    Stack trace:\n#0 /tmp/tmpbcrqu429.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbcrqu429.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $index = 0;\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = $number;\n        } else {\n            $result[$index]\
    \ = $max;\n            $max = $number;\n            $index = $number;\n      \
    \  }\n    }\n    $result[$index] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpysxjidt4.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpysxjidt4.php:29\nStack\
    \ trace:\n#0 /tmp/tmpysxjidt4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpysxjidt4.php\
    \ on line 29\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers[$max_index]\
    \ = $max_value;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfslnztw.php:24\n\
    Stack trace:\n#0 /tmp/tmpmfslnztw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmfslnztw.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $numbers[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpsy_1_vh3.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsy_1_vh3.php:30\nStack\
    \ trace:\n#0 /tmp/tmpsy_1_vh3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsy_1_vh3.php\
    \ on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    $max_element_index = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element === null || $value > $max_element_value) {\n   \
    \         $max_element = $value;\n            $max_element_index = $index;\n \
    \           $max_element_value = $value;\n        }\n    }\n    return array($max_element,\
    \ $max_element_index, $max_element_value);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1ow51pd.php:26\n\
    Stack trace:\n#0 /tmp/tmp_1ow51pd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_1ow51pd.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = array();\n    $max_element[0] = $numbers[0];\n    $max_element[1]\
    \ = $numbers[0];\n    $max_element[2] = $numbers[0];\n    $max_element[3] = $numbers[0];\n\
    \    $max_element[4] = $numbers[0];\n    $max_element[5] = $numbers[0];\n    $max_element[6]\
    \ = $numbers[0];\n    $max_element[7] = $numbers[0];\n    $max_element[8] = $numbers[0];\n\
    \    $max_element[9] = $numbers[0];\n    $max_element[10] = $numbers[0];\n   \
    \ $max_element[11] = $numbers[0];\n    $max_element[12] = $numbers[0];\n    $max_element[13]\
    \ = $numbers[0];\n    $max_element[14] = $numbers[0];\n    $max_element[15] =\
    \ $numbers[0];\n    $max_element[16] = $numbers[0];\n    $max_element[17] = $numbers[0];\n\
    \    $max_element[18] = $numbers[0];\n    $max_element[19] = $numbers[0];\n  \
    \  $max_element[20] = $numbers[0];\n    $max_element[21] = $numbers[0];\n    $max_element[22]\
    \ = $numbers[0];\n    $max_element[23] = $numbers[0];\n    $max_element[24] =\
    \ $numbers[0];\n    $max_element[25] = $numbers[0];\n    $max_element[26] = $numbers[0];\n\
    \    $max_element[27] = $numbers[0];\n    $max_element[28] = $numbers[0];\n  \
    \  $max_element[29] = $numbers[0];\n    $max_element[30] = $numbers[0];\n    $max_element[31]\
    \ = $numbers[0];\n    $max_element[32] = $numbers[0];\n    $max_element[33] =\
    \ $numbers[0];\n    $max_element[34] = $numbers[0];\n    $max_element[35] = $numbers[0];\n\
    \    $max_element[36] = $numbers[0];\n    $max_element[37] = $numbers[0];\n  \
    \  $max_element[38] = $numbers[0];\n    $max_element[39] = $numbers[0];\n    $max_element[40]\
    \ = $numbers[0];\n    $max_element[41] = $numbers[0];\n    $max_element[42] =\
    \ $numbers[0];\n    $max_element[43] = $numbers[0];\n    $max_element[44] = $numbers[0];\n\
    \    $max_element[45] = $numbers[0];\n    $max_element[46] = $numbers[0];\n  \
    \  $max_element[47] = $numbers[0];\n    $max_element[48] = $numbers[0];\n    $max_element[49]\
    \ = $numbers[0];\n    $max_element[50] = $numbers[0];\n    $max_element[51] =\
    \ $numbers[0];\n    $max_element[52] = $numbers[0];\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmprsugn7no.php on line 72

    '
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max < $number) {\n            $rolling_max = $number;\n\
    \        }\n        $max[] = $rolling_max;\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $rolling_max = array();\n    $rolling_max[0]\
    \ = $numbers[0];\n    $rolling_max[1] = $numbers[0];\n    $rolling_max[2] = $numbers[0];\n\
    \    $rolling_max[3] = $numbers[0];\n    $rolling_max[4] = $numbers[0];\n    $rolling_max[5]\
    \ = $numbers[0];\n    $rolling_max[6] = $numbers[0];\n    $rolling_max[7] = $numbers[0];\n\
    \    $rolling_max[8] = $numbers[0];\n    $rolling_max[9] = $numbers[0];\n    $rolling_max[10]\
    \ = $numbers[0];\n    $rolling_max[11] = $numbers[0];\n    $rolling_max[12] =\
    \ $numbers[0];\n    $rolling_max[13] = $numbers[0];\n    $rolling_max[14] = $numbers[0];\n\
    \    $rolling_max[15] = $numbers[0];\n    $rolling_max[16] = $numbers[0];\n  \
    \  $rolling_max[17] = $numbers[0];\n    $rolling_max[18] = $numbers[0];\n    $rolling_max[19]\
    \ = $numbers[0];\n    $rolling_max[20] = $numbers[0];\n    $rolling_max[21] =\
    \ $numbers[0];\n    $rolling_max[22] = $numbers[0];\n    $rolling_max[23] = $numbers[0];\n\
    \    $rolling_max[24] = $numbers[0];\n    $rolling_max[25] = $numbers[0];\n  \
    \  $rolling_max[26] = $numbers[0];\n    $rolling_max[27] = $numbers[0];\n    $rolling_max[28]\
    \ = $numbers[0];\n    $rolling_max[29] = $numbers[0];\n    $rolling_max[30] =\
    \ $numbers[0];\n    $rolling_max[31] = $numbers[0];\n    $rolling_max[32] = $numbers[0];\n\
    \    $rolling_max[33] = $numbers[0];\n    $rolling_max[34] = $numbers[0];\n  \
    \  $rolling_max[35] = $numbers[0];\n    $rolling_max[36] = $numbers[0];\n    $rolling_max[37]\
    \ = $numbers[0];\n    $rolling_max[38] = $numbers[0];\n    $rolling_max[39] =\
    \ $numbers[0];\n    $rolling_max[40] = $numbers[0];\n    $rolling_max[41] = $numbers[0];\n\
    \    $rolling_max[42] = $numbers[0];\n    $rolling_max[43] = $numbers[0];\n  \
    \  $rolling_max[44] = $numbers[0];\n    $rolling_max[45] = $numbers[0];\n    $rolling_max[46]\
    \ = $numbers[0];\n    $rolling_max\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpy4tbysla.php
    on line 57

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s3s224b.php:21\n\
    Stack trace:\n#0 /tmp/tmp9s3s224b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9s3s224b.php\
    \ on line 21\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($current_max === null) {\n            $current_max = $number;\n\
    \        } else {\n            $current_max = max($number, $current_max);\n  \
    \      }\n        $result[] = $current_max;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ array($max, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt858pe2.php:25\n\
    Stack trace:\n#0 /tmp/tmptt858pe2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptt858pe2.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max_value = $numbers[0];\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpgkchltd2.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpgkchltd2.php:28\nStack\
    \ trace:\n#0 /tmp/tmpgkchltd2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgkchltd2.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv5yk4wl.php:24\n\
    Stack trace:\n#0 /tmp/tmpgv5yk4wl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgv5yk4wl.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   $max_index2 = 0;\n    $i = 0;\n    foreach ($numbers as $number) {\n     \
    \   if ($number > $max_value) {\n            $max_value = $number;\n         \
    \   $max_index = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number > $max_value) {\n            $max_value = $number;\n           \
    \ $max_index2 = $i;\n        }\n        $i++;\n    }\n    $result[] = $max_value;\n\
    \    $max_index++;\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($number \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpm4_amzc5.php
    on line 104

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ot9pet.php:27\n\
    Stack trace:\n#0 /tmp/tmpt8ot9pet.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt8ot9pet.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $rolling_max) {\n            $rolling_max = $number;\n            $max_index\
    \ = $rolling_max_index;\n        }\n        $rolling_max_index++;\n    }\n   \
    \ $result[$max_index] = $rolling_max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagqz1ih_.php:27\n\
    Stack trace:\n#0 /tmp/tmpagqz1ih_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpagqz1ih_.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $number) {\n       \
    \ if ($rolling_max === null) {\n            $rolling_max = $number;\n        \
    \    $rolling_max_index = 0;\n            $rolling_max_value = $number;\n    \
    \    } else {\n            if ($number > $rolling_max) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n                $rolling_max_value\
    \ = $number;\n            } else {\n                $rolling_max_index++;\n  \
    \              $rolling_max_value = $rolling_max;\n            }\n        }\n\
    \        if ($rolling_max_index > 0) {\n            $result[] = $rolling_max_value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyq0jfi8.php:39\n\
    Stack trace:\n#0 /tmp/tmpiyq0jfi8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpiyq0jfi8.php\
    \ on line 39\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_index = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n        }\n    }\n    return array($max_element,\
    \ $max_element_index, $max_element_value);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7md8jqi.php:26\n\
    Stack trace:\n#0 /tmp/tmpo7md8jqi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpo7md8jqi.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$max_index] = $number;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpn9gy6q_6.php on line 8\n\n\
    Warning: Undefined variable $i in /tmp/tmpn9gy6q_6.php on line 13\n\nWarning:\
    \ Undefined variable $i in /tmp/tmpn9gy6q_6.php on line 13\n\nWarning: Undefined\
    \ variable $i in /tmp/tmpn9gy6q_6.php on line 13\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpn9gy6q_6.php:26\nStack trace:\n#0 /tmp/tmpn9gy6q_6.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpn9gy6q_6.php on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($max_element === null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = 0;\n\
    \        }\n        if ($number == $max_element) {\n            $max_element_index++;\n\
    \        }\n    }\n    return array_slice($numbers, 0, $max_element_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t03jp50.php:27\n\
    Stack trace:\n#0 /tmp/tmp_t03jp50.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_t03jp50.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \            continue;\n        }\n        if ($number > $rolling_max) {\n   \
    \         $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p1_c1si.php:27\n\
    Stack trace:\n#0 /tmp/tmp7p1_c1si.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7p1_c1si.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ array($max, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt858pe2.php:25\n\
    Stack trace:\n#0 /tmp/tmptt858pe2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptt858pe2.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfgl3abg.php:25\n\
    Stack trace:\n#0 /tmp/tmpjfgl3abg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjfgl3abg.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n        if ($numbers[$i] == $max_value) {\n            $max_indexs[]\
    \ = $max_index;\n        }\n    }\n    return $max_indexs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpgclsksvi.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpgclsksvi.php:28\nStack\
    \ trace:\n#0 /tmp/tmpgclsksvi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgclsksvi.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = array();\n    $max_element[0] = max($numbers[0]);\n  \
    \  $max_element[1] = max($numbers[1]);\n    foreach ($numbers as $key => $value)\
    \ {\n        if ($value > $max_element[1]) {\n            $max_element[0] = $value;\n\
    \            $max_element[1] = $max_element[0];\n        }\n    }\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpa44s9zy8.php on line 8\n\n\
    Fatal error: Uncaught TypeError: max(): Argument #1 ($value) must be of type array,\
    \ null given in /tmp/tmpa44s9zy8.php:8\nStack trace:\n#0 /tmp/tmpa44s9zy8.php(8):\
    \ max(NULL)\n#1 /tmp/tmpa44s9zy8.php(20): rolling_max(Array)\n#2 /tmp/tmpa44s9zy8.php(24):\
    \ candidate(Array)\n#3 /tmp/tmpa44s9zy8.php(30): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpa44s9zy8.php on line 8\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $current_max = null;\n \
    \   foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n  \
    \          $rolling_max = $number;\n            $current_max = $number;\n    \
    \    } else {\n            if ($number > $current_max) {\n                $rolling_max\
    \ = $number;\n                $current_max = $number;\n            } else {\n\
    \                $rolling_max = $current_max;\n                $current_max =\
    \ $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkz3e8ht.php:33\n\
    Stack trace:\n#0 /tmp/tmphkz3e8ht.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphkz3e8ht.php\
    \ on line 33\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \          $current = $number;\n        } else {\n            $current = $number;\n\
    \        }\n    }\n    $result[] = $current;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fkm2s9j.php:26\n\
    Stack trace:\n#0 /tmp/tmp7fkm2s9j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7fkm2s9j.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    foreach ($numbers as $index =>\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \         $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqb3hjra.php:25\n\
    Stack trace:\n#0 /tmp/tmpsqb3hjra.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsqb3hjra.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[] = $numbers[0];\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n        }\n    }\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] == $max_value) {\n \
    \           $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp5horn8o9.php on line 8\n\n\
    Warning: Undefined array key 0 in /tmp/tmp5horn8o9.php on line 9\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp5horn8o9.php:28\nStack trace:\n\
    #0 /tmp/tmp5horn8o9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5horn8o9.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = null;\n\
    \    $current_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $rolling_max) {\n            $rolling_max = $number;\n            $rolling_max_index\
    \ = $current_index;\n        }\n        $current_index++;\n    }\n    $result[]\
    \ = $rolling_max;\n    $current_index++;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \            $rolling_max_index = $current_index;\n        }\n        $current_index++;\n\
    \    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7x4ow31n.php:36\n\
    Stack trace:\n#0 /tmp/tmp7x4ow31n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7x4ow31n.php\
    \ on line 36\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers\
    \ = array_slice($numbers, 0, $max_index);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp71ayi1oo.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp71ayi1oo.php:26\nStack\
    \ trace:\n#0 /tmp/tmp71ayi1oo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp71ayi1oo.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    $max_index3 = 0;\n    $max_index4 = 0;\n    $max_index5 = 0;\n    $max_index6\
    \ = 0;\n    $max_index7 = 0;\n    $max_index8 = 0;\n    $max_index9 = 0;\n   \
    \ $max_index10 = 0;\n    $max_index11 = 0;\n    $max_index12 = 0;\n    $max_index13\
    \ = 0;\n    $max_index14 = 0;\n    $max_index15 = 0;\n    $max_index16 = 0;\n\
    \    $max_index17 = 0;\n    $max_index18 = 0;\n    $max_index19 = 0;\n    $max_index20\
    \ = 0;\n    $max_index21 = 0;\n    $max_index22 = 0;\n    $max_index23 = 0;\n\
    \    $max_index24 = 0;\n    $max_index25 = 0;\n    $max_index26 = 0;\n    $max_index27\
    \ = 0;\n    $max_index28 = 0;\n    $max_index29 = 0;\n    $max_index30 = 0;\n\
    \    $max_index31 = 0;\n    $max_index32 = 0;\n    $max_index33 = 0;\n    $max_index34\
    \ = 0;\n    $max_index35 = 0;\n    $max_index36 = 0;\n    $max_index37 = 0;\n\
    \    $max_index38 = 0;\n    $max_index39 = 0;\n    $max_index40 = 0;\n    $max_index41\
    \ = 0;\n    $max_index42 = 0;\n    $max_index43 = 0;\n    $max_index44 = 0;\n\
    \    $max_index45 = 0;\n    $max_index46 = 0;\n    $max_index47 = 0;\n    $max_index48\
    \ = 0;\n    $max_index49 = 0;\n    $max_index50 = 0;\n    $max_index51 = 0;\n\
    \    $max_index52 = 0;\n    $max_index53 = 0;\n    $max_index54 = 0;\n    $max_index55\
    \ = 0;\n    $max_index56 = 0;\n    $max_index57 = 0;\n    $max_index58 = 0;\n\
    \    $max_index59 = 0;\n    $max_index60 = 0;\n    $max_index61 = 0;\n    $max_index62\
    \ = 0;\n    $max_index63 = 0;\n    $max_index64 = 0;\n    $max_index65 = 0;\n\
    \    $max_index66 = 0;\n    $max_index67 = 0;\n    $max_index68 = 0;\n    $max_index69\
    \ = 0;\n    $max_index70 = 0;\n    $max_index71 = 0;\n    $max_index72 = 0;\n\
    \    $max_index73 = 0;\n    $max_index74 = 0;\n    $max_index75 = 0;\n    $max_index76\
    \ = 0;\n    $max_index77 = 0;\n    $max_index78 = 0;\n    $max_index79 = 0;\n\
    \    $max_index80 = 0;\n    $max_index81 = 0;\n    $max_index82 = 0;\n    $max_index83\
    \ = 0;\n    $max_index84 = 0;\n    $max_index85 = 0;\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmpd4dwvpdt.php on line 105

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpux3wpbeb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpux3wpbeb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpux3wpbeb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux3wpbeb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers[$max_index]\
    \ = $max_value;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfslnztw.php:24\n\
    Stack trace:\n#0 /tmp/tmpmfslnztw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmfslnztw.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpz_9e0xoj.php on line 8\n\n\
    Warning: Undefined array key 0 in /tmp/tmpz_9e0xoj.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpz_9e0xoj.php:26\nStack trace:\n\
    #0 /tmp/tmpz_9e0xoj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz_9e0xoj.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ot9pet.php:27\n\
    Stack trace:\n#0 /tmp/tmpt8ot9pet.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt8ot9pet.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexed = false;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $max_indexed;\n   \
    \     }\n        $max_indexed = ($max_indexed && $number == $max_value);\n   \
    \ }\n    return $max_indexed\n        ? array_slice($numbers, 0, $max_index +\
    \ 1)\n        : array();\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpxbg6kzl4.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpxbg6kzl4.php:28\nStack\
    \ trace:\n#0 /tmp/tmpxbg6kzl4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxbg6kzl4.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpzrkwi914.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzrkwi914.php:25\nStack\
    \ trace:\n#0 /tmp/tmpzrkwi914.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzrkwi914.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp627ipqio.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp627ipqio.php:28\nStack\
    \ trace:\n#0 /tmp/tmp627ipqio.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp627ipqio.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpzrkwi914.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzrkwi914.php:25\nStack\
    \ trace:\n#0 /tmp/tmpzrkwi914.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzrkwi914.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllx187ep.php:23\n\
    Stack trace:\n#0 /tmp/tmpllx187ep.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpllx187ep.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index] = $max;\n       \
    \ $index++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpipnnn7dx.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpipnnn7dx.php:27\nStack\
    \ trace:\n#0 /tmp/tmpipnnn7dx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpipnnn7dx.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    foreach ($numbers as $number) {\n      \
    \  if ($number > $max) {\n            $max = $number;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s3s224b.php:21\n\
    Stack trace:\n#0 /tmp/tmp9s3s224b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9s3s224b.php\
    \ on line 21\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpqrherhhb.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpqrherhhb.php:24\nStack\
    \ trace:\n#0 /tmp/tmpqrherhhb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqrherhhb.php\
    \ on line 24\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } elseif ($number == $max) {\n \
    \           $rolling_max = $rolling_max > $number ? $rolling_max : $number;\n\
    \        }\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp4sn6tj4a.php on line 7\n\n\
    Warning: Undefined array key 0 in /tmp/tmp4sn6tj4a.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp4sn6tj4a.php:25\nStack trace:\n\
    #0 /tmp/tmp4sn6tj4a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4sn6tj4a.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8ot9pet.php:27\n\
    Stack trace:\n#0 /tmp/tmpt8ot9pet.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt8ot9pet.php\
    \ on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[0] = $numbers[0];\n    $max[1] = $numbers[1];\n\
    \    $max[2] = $numbers[2];\n    $max[3] = $numbers[3];\n    $max[4] = $numbers[4];\n\
    \    $max[5] = $numbers[5];\n    $max[6] = $numbers[6];\n    $max[7] = $numbers[7];\n\
    \    $max[8] = $numbers[8];\n    $max[9] = $numbers[9];\n    $max[10] = $numbers[10];\n\
    \    $max[11] = $numbers[11];\n    $max[12] = $numbers[12];\n    $max[13] = $numbers[13];\n\
    \    $max[14] = $numbers[14];\n    $max[15] = $numbers[15];\n    $max[16] = $numbers[16];\n\
    \    $max[17] = $numbers[17];\n    $max[18] = $numbers[18];\n    $max[19] = $numbers[19];\n\
    \    $max[20] = $numbers[20];\n    $max[21] = $numbers[21];\n    $max[22] = $numbers[22];\n\
    \    $max[23] = $numbers[23];\n    $max[24] = $numbers[24];\n    $max[25] = $numbers[25];\n\
    \    $max[26] = $numbers[26];\n    $max[27] = $numbers[27];\n    $max[28] = $numbers[28];\n\
    \    $max[29] = $numbers[29];\n    $max[30] = $numbers[30];\n    $max[31] = $numbers[31];\n\
    \    $max[32] = $numbers[32];\n    $max[33] = $numbers[33];\n    $max[34] = $numbers[34];\n\
    \    $max[35] = $numbers[35];\n    $max[36] = $numbers[36];\n    $max[37] = $numbers[37];\n\
    \    $max[38] = $numbers[38];\n    $max[39] = $numbers[39];\n    $max[40] = $numbers[40];\n\
    \    $max[41] = $numbers[41];\n    $max[42] = $numbers[42];\n    $max[43] = $numbers[43];\n\
    \    $max[44] = $numbers[44];\n    $max[45] = $numbers[45];\n    $max[46] = $numbers[46];\n\
    \    $max[47] = $numbers[47];\n    $max[48] = \nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi35lxy5j.php on line 57

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value === null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $max_element = $numbers[$max_index];\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpx9hu_6lb.php on line 16\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpx9hu_6lb.php:25\nStack\
    \ trace:\n#0 /tmp/tmpx9hu_6lb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx9hu_6lb.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679

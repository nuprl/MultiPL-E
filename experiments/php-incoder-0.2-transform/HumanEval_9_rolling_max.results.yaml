language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = 0;\n        }\n        $max_index++;\n    }\n    return\
    \ array_slice($numbers, 0, $max_index);\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1xbrh62.php:25\n\
    Stack trace:\n#0 /tmp/tmpl1xbrh62.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl1xbrh62.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    foreach ($numbers as $number) {\n        if\
    \ ($number > $max) {\n            $result[] = $number;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6oxus0d.php:28\n\
    Stack trace:\n#0 /tmp/tmpd6oxus0d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd6oxus0d.php\
    \ on line 28\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array($max, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cs8j_s8.php:24\n\
    Stack trace:\n#0 /tmp/tmp4cs8j_s8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4cs8j_s8.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ceigybu.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ceigybu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ceigybu.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n            $max_element_count = 1;\n\
    \        } else {\n            $max_element_count++;\n        }\n    }\n    $max_element_count++;\n\
    \    $max_element = array_slice($numbers, $max_element_index, $max_element_count);\n\
    \    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9niv9r1.php:32\n\
    Stack trace:\n#0 /tmp/tmpz9niv9r1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz9niv9r1.php\
    \ on line 32\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element == null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $numbers[$max_index];\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeso5lond.php:23\n\
    Stack trace:\n#0 /tmp/tmpeso5lond.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeso5lond.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y9nkc4l.php:25\n\
    Stack trace:\n#0 /tmp/tmp1y9nkc4l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1y9nkc4l.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $result = array($number);\n        } else {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq9lafvm.php:26\n\
    Stack trace:\n#0 /tmp/tmpoq9lafvm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoq9lafvm.php\
    \ on line 26\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $result[] =\
    \ $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    $result[]\
    \ = $numbers[$max_index];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptspugh3n.php:31\n\
    Stack trace:\n#0 /tmp/tmptspugh3n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptspugh3n.php\
    \ on line 31\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n   \
    \     $result[$i] = max($number, $result[$i]);\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1j6lzgb.php:23\n\
    Stack trace:\n#0 /tmp/tmpg1j6lzgb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpg1j6lzgb.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv258o3c.php:23\n\
    Stack trace:\n#0 /tmp/tmpqv258o3c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqv258o3c.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlob_315.php:25\n\
    Stack trace:\n#0 /tmp/tmprlob_315.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprlob_315.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwravlqn.php:23\n\
    Stack trace:\n#0 /tmp/tmplwravlqn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplwravlqn.php\
    \ on line 23\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5txf1waj.php:21\n\
    Stack trace:\n#0 /tmp/tmp5txf1waj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5txf1waj.php\
    \ on line 21\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $rolling_max = array();\n    foreach ($numbers\
    \ as $number) {\n        $rolling_max[] = $number;\n    }\n    $rolling_max =\
    \ array_reverse($rolling_max);\n    foreach ($rolling_max as $rolling_max_number)\
    \ {\n        $result[] = $rolling_max_number;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw40f_299.php:25\n\
    Stack trace:\n#0 /tmp/tmpw40f_299.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw40f_299.php\
    \ on line 25\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwbo5z54.php:26\n\
    Stack trace:\n#0 /tmp/tmpdwbo5z54.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdwbo5z54.php\
    \ on line 26\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    $numbers[$max_index]\
    \ = $max_value;\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfslnztw.php:24\n\
    Stack trace:\n#0 /tmp/tmpmfslnztw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmfslnztw.php\
    \ on line 24\n"
  timestamp: 1659730679
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
    \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnnbl8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpehnnbl8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpehnnbl8b.php\
    \ on line 25\n"
  timestamp: 1659730679

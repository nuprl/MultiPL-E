name: HumanEval_68_pluck
language: php
prompt: "<?php\n// \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// >>> pluck(array(4, 2, 3))\n// array(2, 1)\n// Explanation: 2 has\
  \ the smallest even value, and 2 has the smallest index.\n// Example 2:\n// >>>\
  \ pluck(array(1, 2, 3))\n// array(2, 1)\n// Explanation: 2 has the smallest even\
  \ value, and 2 has the smallest index.\n// Example 3:\n// >>> pluck(array())\n//\
  \ array()\n// Example 4:\n// >>> pluck(array(5, 0, 3, 0, 4, 2))\n// array(0, 1)\n\
  // Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will\
  \ choose the first zero, which has the smallest index.\n// Constraints:\n// * 1\
  \ <= nodes.length <= 10000\n// * 0 <= node.value\nfunction pluck($arr) {\n"
tests: "function candidate(...$args) {\n    return pluck(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(4, 2, 3)) !== array(2, 1)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 0, 3, 0, 4, 2)) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 2, 3, 0, 5, 3)) !== array(0, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5, 4, 8, 4, 8)) !== array(4, 1)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 6, 7, 1)) !== array(6,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 9,\
  \ 7, 1)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_46_fib4
results:
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnomw6ygw.php:26\n\
    Stack trace:\n#0 /tmp/tmpnomw6ygw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnomw6ygw.php\
    \ on line 26\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf_vnxcs.php:27\n\
    Stack trace:\n#0 /tmp/tmpuf_vnxcs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuf_vnxcs.php\
    \ on line 27\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    return fib4($n\
    \ - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkulowgeu.php:30\n\
    Stack trace:\n#0 /tmp/tmpkulowgeu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkulowgeu.php\
    \ on line 30\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnomw6ygw.php:26\n\
    Stack trace:\n#0 /tmp/tmpnomw6ygw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnomw6ygw.php\
    \ on line 26\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnomw6ygw.php:26\n\
    Stack trace:\n#0 /tmp/tmpnomw6ygw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnomw6ygw.php\
    \ on line 26\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwbvc44h.php:30\n\
    Stack trace:\n#0 /tmp/tmpzwbvc44h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzwbvc44h.php\
    \ on line 30\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n < 4) {\n        return\
    \ $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplci0qrzs.php:27\n\
    Stack trace:\n#0 /tmp/tmplci0qrzs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplci0qrzs.php\
    \ on line 27\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) return 0;\n\
    \    if ($n <= 2) return 1;\n    return fib4($n - 1) + fib4($n - 2) + fib4($n\
    \ - 3) + fib4($n - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhxpbh0b.php:25\n\
    Stack trace:\n#0 /tmp/tmpxhxpbh0b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxhxpbh0b.php\
    \ on line 25\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n < 4) return $n;\n\
    \    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\n\
    function candidate(...$args) {\n    return fib4(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(8) !== 28) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(12) !== 386) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkhi6y_i.php:25\n\
    Stack trace:\n#0 /tmp/tmpdkhi6y_i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdkhi6y_i.php\
    \ on line 25\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf_vnxcs.php:27\n\
    Stack trace:\n#0 /tmp/tmpuf_vnxcs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuf_vnxcs.php\
    \ on line 27\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    if ($n <=\
    \ 3) {\n        return 2;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n\
    \ - 3) + fib4($n - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzv5q15km.php:33\n\
    Stack trace:\n#0 /tmp/tmpzv5q15km.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzv5q15km.php\
    \ on line 33\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    if ($n <=\
    \ 3) {\n        return 2;\n    }\n    if ($n <= 4) {\n        return 0;\n    }\n\
    \    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\n\
    function candidate(...$args) {\n    return fib4(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(8) !== 28) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(12) !== 386) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tsqcbm6.php:36\n\
    Stack trace:\n#0 /tmp/tmp5tsqcbm6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5tsqcbm6.php\
    \ on line 36\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    return fib4($n\
    \ - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkulowgeu.php:30\n\
    Stack trace:\n#0 /tmp/tmpkulowgeu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkulowgeu.php\
    \ on line 30\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n < 4) {\n        return\
    \ $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e_zx4zw.php:26\n\
    Stack trace:\n#0 /tmp/tmp2e_zx4zw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2e_zx4zw.php\
    \ on line 26\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    return fib4($n\
    \ - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkulowgeu.php:30\n\
    Stack trace:\n#0 /tmp/tmpkulowgeu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkulowgeu.php\
    \ on line 30\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return 0;\n    }\n    return fib4($n\
    \ - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvhybhz3.php:29\n\
    Stack trace:\n#0 /tmp/tmpyvhybhz3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyvhybhz3.php\
    \ on line 29\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnomw6ygw.php:26\n\
    Stack trace:\n#0 /tmp/tmpnomw6ygw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnomw6ygw.php\
    \ on line 26\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 3) {\n       \
    \ return $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf_vnxcs.php:27\n\
    Stack trace:\n#0 /tmp/tmpuf_vnxcs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuf_vnxcs.php\
    \ on line 27\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n <= 0) {\n       \
    \ return 0;\n    }\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n - 4);\n}\n\nfunction candidate(...$args)\
    \ {\n    return fib4(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 104)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 386) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwbvc44h.php:30\n\
    Stack trace:\n#0 /tmp/tmpzwbvc44h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzwbvc44h.php\
    \ on line 30\n"
  timestamp: 1659730708
- exit_code: 255
  program: "<?php\n// The Fib4 number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2)\
    \ -> 2\n// fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
    // Please write a function to efficiently compute the n-th element of the fib4\
    \ number sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n\
    // 8\n// >>> fib4(7)\n// 14\nfunction fib4($n) {\n    if ($n < 4) {\n        return\
    \ $n;\n    }\n    return fib4($n - 1) + fib4($n - 2) + fib4($n - 3) + fib4($n\
    \ - 4);\n}\nfunction candidate(...$args) {\n    return fib4(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== 28) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 104) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12) !== 386) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e_zx4zw.php:26\n\
    Stack trace:\n#0 /tmp/tmp2e_zx4zw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2e_zx4zw.php\
    \ on line 26\n"
  timestamp: 1659730708

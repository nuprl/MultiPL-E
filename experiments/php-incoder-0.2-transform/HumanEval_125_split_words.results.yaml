language: php
name: HumanEval_125_split_words
results:
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('strtolower',\
    \ $words);\n    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words, function($word) {\n        return $word % 2\
    \ === 0;\n    });\n    return $words;\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8mwzgsk.php:29\n\
    Stack trace:\n#0 /tmp/tmpf8mwzgsk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf8mwzgsk.php\
    \ on line 29\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as &$word) {\n        $word = strtolower($word);\n    }\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92h68slg.php:25\n\
    Stack trace:\n#0 /tmp/tmp92h68slg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp92h68slg.php\
    \ on line 25\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($i == 0) {\n            $words[$i] = strtolower($word);\n        \
    \    $i++;\n            continue;\n        }\n        if ($i == $count) {\n  \
    \          $words[$i] = strtolower($word);\n            $i++;\n            continue;\n\
    \        }\n        if ($words[$i] == $words[$i - 1]) {\n            $words[$i]\
    \ = strtolower($word);\n            $i++;\n            continue;\n        }\n\
    \        if ($words[$i] == $words[$i - 1] && $words[$i] == $words[$i - 2]) {\n\
    \            $words[$i] = strtolower($word);\n            $i++;\n            continue;\n\
    \        }\n        if ($words[$i] == $words[$i - 1] && $words[$i] == $words[$i\
    \ - 2] && $words[$i] == $words[$i - 3]) {\n            $words[$i] = strtolower($word);\n\
    \            $i++;\n            continue;\n        }\n        if ($words[$i] ==\
    \ $words[$i - 1] && $words[$i] == $words[$i - 2] && $words[$i] == $words[$i -\
    \ 3] && $words[$i] == $words[$i - 4]) {\n            $words[$i] = strtolower($word);\n\
    \            $i++;\n            continue;\n        }\n        if ($words[$i] ==\
    \ $words[$i - 1] && $words[$i] == $words[$i - 2] && $words[$i] == $words[$i -\
    \ 3] && $words[$i] == $words[$i - 4] && $words[$i] == $words[$i - 5]) {\n    \
    \        $words[$i] = strtolower($word);\n            $i++;\n            continue;\n\
    \        }\n        if ($words[$i] == $words[$i - 1] && $words[$i] == $words[$i\
    \ - 2] && $words[$i] == $words[$i - 3] && $words[$i] == $words[$i - 4] && $words[$i]\
    \ == $words[$i - 5] && $words[$i] == $words[$i - 6]) {\n            $words[$i]\
    \ = strtolower($word);\n            $i++;\n            continue;\n        }\n\
    \        if ($words[$i] == $words[$i - 1] && $words[$i] == $words[$i - 2] && $words[$i]\
    \ == $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphy1c_tey.php on line 58

    '
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $count = count($words);\n    $words = array_filter($words);\n  \
    \  $words = array_map('strtolower', $words);\n    $words = array_filter($words);\n\
    \    return $count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer.\
    \ Can you please explain the code a little bit? I understand most of it but I'm\
    \ struggling to understand how it works.\n<|/ c |>\n<| c |>\nI added some comments\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n\
    $words = preg_split('/\\s+/', $txt);\n$count = count($words);\n$words = array_filter($words);\n\
    $words = array_map('strtolower', $words);\n$words = array_filter($words);\n</code>\n\
    This code will split the string into words and then filter out empty words and\
    \ then convert all words to lower case. \n<code>\n$words = preg_split('/\\s+/',\
    \ $txt);\n$count = count($words);\n</code>\nThis code will count the number of\
    \ words in the string.\n<code>\n$words = array_filter($words);\n</code>\nThis\
    \ code will filter out empty words from the array.\n<code>\n$words = array_map('strtolower',\
    \ $words);\n</code>\nThis code will convert all words to lower case.\n<code>\n\
    $words = array_filter($words);\n</code>\nThis code will filter out empty words\
    \ from the array.\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$txt =\
    \ \"Hello world!\";\n$words = preg_split('/\\s+/', $txt);\n$count = count($words);\n\
    $words = array_filter($words);\n$words = array_map('strtolower', $words);\n$words\
    \ = array_filter($words);\necho $count;\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv6uo1c6m.php on line 20

    '
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as &$word) {\n        $word = trim($word);\n    }\n    return\
    \ $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk576vyvo.php:26\n\
    Stack trace:\n#0 /tmp/tmpk576vyvo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk576vyvo.php\
    \ on line 26\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisafr8j8.php:23\n\
    Stack trace:\n#0 /tmp/tmpisafr8j8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpisafr8j8.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return count($words) ? $words\
    \ : $txt;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo39dmcc.php:24\n\
    Stack trace:\n#0 /tmp/tmpdo39dmcc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdo39dmcc.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 0 ? $words : count(str_split($txt, 1))\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxq4om17v.php on line 15

    '
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 1 ? $words : array_count_values($words);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4xcq6jl.php:23\n\
    Stack trace:\n#0 /tmp/tmpg4xcq6jl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg4xcq6jl.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    return\
    \ $count;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if\
    \ you have a string with multiple spaces, e.g. \"Hello World!\" will result in\
    \ \"HelloWorld!\" being split into \"Hello\" and \"World!\".\n<|/ c |>\n<| c |>\n\
    I added a solution that will handle multiple spaces.\n<|/ c |>\n<| a |>\n<code>\n\
    $words = explode(' ', $txt);\n$words = array_filter($words);\n$words = array_map('strtolower',\
    \ $words);\n$words = array_filter($words);\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    $words = array_count_values($words);\n$words = array_filter($words);\n$words =\
    \ array_keys($words);\n$words = array_values($words);\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    $words = array_count_values($words);\n$words = array_filter($words);\n$words =\
    \ array_keys($words);\n$words = array_values($words);\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    $words = array_count_values($words);\n$words = array_filter($words);\n$words =\
    \ array_keys($words);\n$words = array_values($words);\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    $words = array_count_values($words);\n$words = array_filter($words);\n$words =\
    \ array_keys($words);\n$words = array_values($words);\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    $words = array_count_values($words);\n$words = array_filter($words);\n$words =\
    \ array_keys($words);\n$words = array_values($words);\n$words = array_count_values($words);\n\
    $words = array_filter($word\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpc78325hp.php on line 20

    '
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == '') {\n            continue;\n        }\n        $words[$i]\
    \ = strtolower($word);\n        $i++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnawvte_x.php:31\n\
    Stack trace:\n#0 /tmp/tmpnawvte_x.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnawvte_x.php\
    \ on line 31\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]+/i',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18jh3rwr.php:25\n\
    Stack trace:\n#0 /tmp/tmp18jh3rwr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp18jh3rwr.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]+/i',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18jh3rwr.php:25\n\
    Stack trace:\n#0 /tmp/tmp18jh3rwr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp18jh3rwr.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    if ($count > 0) {\n        $words = array_filter($words);\n\
    \        $words = array_map('strtolower', $words);\n        $words = array_filter($words);\n\
    \        $words = array_count_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    \        $words = array_keys($words);\n        $words = array_filter($words);\n\
    \        $words = array_values($words);\n        $words = array_filter($words);\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 15 in /tmp/tmpvk3k8laa.php on line 92

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($i == 0) {\n            $words[$i] = strtolower($word);\n        \
    \    $i++;\n        } else {\n            $words[$i] = strtolower($word);\n  \
    \      }\n        $i++;\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrpa0hl0.php:33\n\
    Stack trace:\n#0 /tmp/tmpyrpa0hl0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyrpa0hl0.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    $words = array_map('strtolower', $words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdox06mb0.php:25\n\
    Stack trace:\n#0 /tmp/tmpdox06mb0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdox06mb0.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : array($txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfasu8xw8.php:23\n\
    Stack trace:\n#0 /tmp/tmpfasu8xw8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfasu8xw8.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl1ahzhy.php:24\n\
    Stack trace:\n#0 /tmp/tmpkl1ahzhy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkl1ahzhy.php\
    \ on line 24\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $odd_count = 0;\n    $odd_letters = array();\n\
    \    $odd_letters[] = ord('a');\n    $odd_letters[] = ord('b');\n    $odd_letters[]\
    \ = ord('c');\n    $odd_letters[] = ord('d');\n    $odd_letters[] = ord('e');\n\
    \    $odd_letters[] = ord('f');\n    $odd_letters[] = ord('g');\n    $odd_letters[]\
    \ = ord('h');\n    $odd_letters[] = ord('i');\n    $odd_letters[] = ord('j');\n\
    \    $odd_letters[] = ord('k');\n    $odd_letters[] = ord('l');\n    $odd_letters[]\
    \ = ord('m');\n    $odd_letters[] = ord('n');\n    $odd_letters[] = ord('o');\n\
    \    $odd_letters[] = ord('p');\n    $odd_letters[] = ord('q');\n    $odd_letters[]\
    \ = ord('r');\n    $odd_letters[] = ord('s');\n    $odd_letters[] = ord('t');\n\
    \    $odd_letters[] = ord('u');\n    $odd_letters[] = ord('v');\n    $odd_letters[]\
    \ = ord('w');\n    $odd_letters[] = ord('x');\n    $odd_letters[] = ord('y');\n\
    \    $odd_letters[] = ord('z');\n    $odd_letters[] = ord('0');\n    $odd_letters[]\
    \ = ord('1');\n    $odd_letters[] = ord('2');\n    $odd_letters[] = ord('3');\n\
    \    $odd_letters[] = ord('4');\n    $odd_letters[] = ord('5');\n    $odd_letters[]\
    \ = ord('6');\n    $odd_letters[] = ord('7');\n    $odd_letters[] = ord('8');\n\
    \    $odd_letters[] = ord('9');\n    $odd_letters[] = ord('!');\n    $odd_letters[]\
    \ = ord('^');\n    $odd_letters[] = ord('&');\n    $odd_letters[] = ord('*');\n\
    \    $odd_letters[] = ord('(');\n    $odd_letters[] = ord(')');\n    $odd_letters[]\
    \ = ord(',');\n    $odd_letters[] = ord('-');\n    $odd_letters[] = ord('+');\n\
    \    $odd_letters[] = ord('=');\n    $odd_letters[] = ord('?');\n    $odd_letters[]\
    \ = ord('~');\n    $odd_letters[\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpzbyg051g.php on line 66

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    if ($count > 0) {\n        $words = array_filter($words);\n\
    \        $count = count($words);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbh6moe9_.php:27\n\
    Stack trace:\n#0 /tmp/tmpbh6moe9_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbh6moe9_.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map(\"strtolower\", $words);\n    $words = array_filter($words);\n   \
    \ $words = array_count_values($words);\n    $words = array_filter($words);\n \
    \   $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_filter($words);\n    return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu08vgtf.php:32\n\
    Stack trace:\n#0 /tmp/tmpdu08vgtf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdu08vgtf.php\
    \ on line 32\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = $word;\n            $i++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m_uq6lv.php:30\n\
    Stack trace:\n#0 /tmp/tmp7m_uq6lv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7m_uq6lv.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrogix3s.php:24\n\
    Stack trace:\n#0 /tmp/tmpwrogix3s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwrogix3s.php\
    \ on line 24\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    $j = 0;\n    $result = [];\n  \
    \  while ($i < $count) {\n        if ($words[$i] == '') {\n            $i++;\n\
    \            continue;\n        }\n        if ($words[$i] == ',') {\n        \
    \    $i++;\n            $j++;\n            continue;\n        }\n        if ($words[$i]\
    \ < 'a' || $words[$i] > 'z') {\n            $j++;\n        }\n        $result[]\
    \ = $words[$i];\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpkmwtbk.php:43\n\
    Stack trace:\n#0 /tmp/tmpkpkmwtbk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkpkmwtbk.php\
    \ on line 43\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if ($word == '') {\n            continue;\n        }\n\
    \        $result[$i] = $word;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hqzk7tl.php:33\n\
    Stack trace:\n#0 /tmp/tmp7hqzk7tl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7hqzk7tl.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    if\
    \ (count($words) == 0) {\n        return $count;\n    }\n    if (count($words)\
    \ == 1) {\n        return $words;\n    }\n    if (count($words) == 2) {\n    \
    \    return array($words[0], $words[1]);\n    }\n    if (count($words) == 3) {\n\
    \        return array($words[0], $words[1], $words[2]);\n    }\n    if (count($words)\
    \ == 4) {\n        return array($words[0], $words[1], $words[2], $words[3]);\n\
    \    }\n    if (count($words) == 5) {\n        return array($words[0], $words[1],\
    \ $words[2], $words[3], $words[4]);\n    }\n    if (count($words) == 6) {\n  \
    \      return array($words[0], $words[1], $words[2], $words[3], $words[4], $words[5]);\n\
    \    }\n    if (count($words) == 7) {\n        return array($words[0], $words[1],\
    \ $words[2], $words[3], $words[4], $words[5], $words[6]);\n    }\n    if (count($words)\
    \ == 8) {\n        return array($words[0], $words[1], $words[2], $words[3], $words[4],\
    \ $words[5], $words[6], $words[7]);\n    }\n    if (count($words) == 9) {\n  \
    \      return array($words[0], $words[1], $words[2], $words[3], $words[4], $words[5],\
    \ $words[6], $words[7], $words[8]);\n    }\n    if (count($words) == 10) {\n \
    \       return array($words[0], $words[1], $words[2], $words[3], $words[4], $words[5],\
    \ $words[6], $words[7], $words[8], $words[9]);\n    }\n    if (count($words) ==\
    \ 11) {\n        return array($words[0], $words[1], $words[2], $words[3], $words[4],\
    \ $words[5], $words[6], $words[7], $words[8], $words[9], $words[10]);\n    }\n\
    \    if (count($words) == 12) {\n        return array($words[0], $words[1], $words[2],\
    \ $words[3], $words[4], $words[5], $words[6], $words[7], $words[8], $words[9],\
    \ $words[10], $words[11]);\n    }\n    if (\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmprrhv69w8.php on line 58

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_keys($words);\n    $words = array_filter($words);\n    $words = array_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpg812_x9g.php
    on line 76

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 1 ? $words : array_count_values($words);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4xcq6jl.php:23\n\
    Stack trace:\n#0 /tmp/tmpg4xcq6jl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg4xcq6jl.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : $txt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobqdmn6e.php:23\n\
    Stack trace:\n#0 /tmp/tmpobqdmn6e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpobqdmn6e.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       $words[$i] = strtolower($word);\n        $i++;\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgledftsf.php:28\n\
    Stack trace:\n#0 /tmp/tmpgledftsf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgledftsf.php\
    \ on line 28\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $count = count($words);\n    if ($count > 0) {\n        $words =\
    \ preg_split('/,/', $words[0]);\n        $count = count($words);\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe04xlgmh.php:27\n\
    Stack trace:\n#0 /tmp/tmpe04xlgmh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe04xlgmh.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) > 0 ? $words : preg_split('/,/', $txt);\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd192gs29.php:23\n\
    Stack trace:\n#0 /tmp/tmpd192gs29.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd192gs29.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    if (count($words)\
    \ == 0) {\n        return $count;\n    }\n    $words = array_map('strtolower',\
    \ $words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxt18y2eq.php on line 103

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $key => $word) {\n        $words[$key] = ucfirst(strtolower($word));\n\
    \    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9zfhh03.php:25\n\
    Stack trace:\n#0 /tmp/tmpn9zfhh03.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn9zfhh03.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map(\"strtolower\", $words);\n    $words = array_filter($words);\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdz2bnys.php:26\n\
    Stack trace:\n#0 /tmp/tmpbdz2bnys.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbdz2bnys.php\
    \ on line 26\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmplqf9737r.php on line 82

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    $words = array_map('strtolower', $words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdox06mb0.php:25\n\
    Stack trace:\n#0 /tmp/tmpdox06mb0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdox06mb0.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) > 0 ? $words : preg_split('/,/', $txt);\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd192gs29.php:23\n\
    Stack trace:\n#0 /tmp/tmpd192gs29.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd192gs29.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : array_count_values(str_split(strtolower($txt)));\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8cni34v.php:23\n\
    Stack trace:\n#0 /tmp/tmpf8cni34v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf8cni34v.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    return count($words) ? $words : array_count_values(str_split(strtolower($txt)));\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7ztrc7c.php:23\n\
    Stack trace:\n#0 /tmp/tmpt7ztrc7c.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt7ztrc7c.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x3gt9_n.php:27\n\
    Stack trace:\n#0 /tmp/tmp6x3gt9_n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6x3gt9_n.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words, function($value) {\n        return $value % 2 === 1;\n\
    \    });\n    return $words;\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<|\
    \ a tags=php,arrays,string |>\n<code>\n<?php\n$string = \"Hello world!\";\n$words\
    \ = explode(\" \", $string);\n$count = count($words);\n$words = array_filter($words);\n\
    $words = array_map('strtolower', $words);\n$words = array_filter($words);\n$words\
    \ = array_count_values($words);\n$words = array_filter($words);\n$words = array_filter($words,\
    \ function($value) {\n    return $value % 2 === 1;\n});\nprint_r($words);\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp64finwp3.php
    on line 25

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = strtolower($word);\n    \
    \        $i++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16j4t5dh.php:30\n\
    Stack trace:\n#0 /tmp/tmp16j4t5dh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp16j4t5dh.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = strtolower($word);\n    \
    \        $i++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16j4t5dh.php:30\n\
    Stack trace:\n#0 /tmp/tmp16j4t5dh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp16j4t5dh.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return count($words) ? $words\
    \ : $txt;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo39dmcc.php:24\n\
    Stack trace:\n#0 /tmp/tmpdo39dmcc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdo39dmcc.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplke2l9ha.php:26\n\
    Stack trace:\n#0 /tmp/tmplke2l9ha.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplke2l9ha.php\
    \ on line 26\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('strtolower',\
    \ $words);\n    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_slice($words, 0, count($words)\
    \ % 2);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavx2tsis.php:28\n\
    Stack trace:\n#0 /tmp/tmpavx2tsis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpavx2tsis.php\
    \ on line 28\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_slice($words, 0, count($words)\
    \ % 2);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixnm06lf.php:28\n\
    Stack trace:\n#0 /tmp/tmpixnm06lf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpixnm06lf.php\
    \ on line 28\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $wordCount = count($words);\n    $wordCount = $wordCount - 1;\n    $wordCount\
    \ = $wordCount % 2;\n    $wordCount = $wordCount < 0 ? $wordCount + 26 : $wordCount;\n\
    \    $words = array_slice($words, 0, $wordCount);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz1pbgaq.php:27\n\
    Stack trace:\n#0 /tmp/tmpwz1pbgaq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwz1pbgaq.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = ucfirst($word);\n       \
    \     $i++;\n        }\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pprojqn.php:30\n\
    Stack trace:\n#0 /tmp/tmp1pprojqn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1pprojqn.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $wordCount = count($words);\n    $wordCount = $wordCount < 1 ? 1 : $wordCount;\n\
    \    $wordCount = $wordCount > 1 ? $wordCount : 1;\n    return $wordCount;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a_64nn2.php:25\n\
    Stack trace:\n#0 /tmp/tmp7a_64nn2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7a_64nn2.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as &$word) {\n        $word = strtolower($word);\n    }\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92h68slg.php:25\n\
    Stack trace:\n#0 /tmp/tmp92h68slg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp92h68slg.php\
    \ on line 25\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as &$word) {\n        $word = trim($word);\n    }\n    return\
    \ $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk576vyvo.php:26\n\
    Stack trace:\n#0 /tmp/tmpk576vyvo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk576vyvo.php\
    \ on line 26\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpj0a9eq.php:25\n\
    Stack trace:\n#0 /tmp/tmpmpj0a9eq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmpj0a9eq.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    return\
    \ $count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_f7t18od.php
    on line 20

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpj0a9eq.php:25\n\
    Stack trace:\n#0 /tmp/tmpmpj0a9eq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmpj0a9eq.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words, function ($value) {\n        return $value\
    \ % 2 === 0;\n    });\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_klczfkr.php:29\n\
    Stack trace:\n#0 /tmp/tmp_klczfkr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_klczfkr.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs34t4yi.php:24\n\
    Stack trace:\n#0 /tmp/tmpgs34t4yi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgs34t4yi.php\
    \ on line 24\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_filter($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    return $words;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$words\
    \ = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n$words\
    \ = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r($words);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$words = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r($words);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$words\
    \ = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n$words\
    \ = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r($words);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n\
    <code>\n$words = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r($words);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$words = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r($words);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$words = array(\"Hello\", \"world!\");\n$words = array_count_values($words);\n\
    $words = array_filter($words);\n$words = array_keys($words);\n$words = array_values($words);\n\
    print_r\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp04x0ym4i.php
    on line 24

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == '') {\n            $words[$i] = '';\n            $i++;\n\
    \            continue;\n        }\n        $words[$i] = strtolower($word);\n \
    \       $i++;\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw27z6id.php:33\n\
    Stack trace:\n#0 /tmp/tmpmw27z6id.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmw27z6id.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    if\
    \ (count($words) == $count) {\n        return $words;\n    }\n    return count($words)\
    \ ? $words : $count + 1;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pv78d3a.php:29\n\
    Stack trace:\n#0 /tmp/tmp0pv78d3a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0pv78d3a.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = strtolower($word);\n    \
    \        $i++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16j4t5dh.php:30\n\
    Stack trace:\n#0 /tmp/tmp16j4t5dh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp16j4t5dh.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    if ($count > 0) {\n        $words = array_filter($words);\n\
    \        $count = count($words);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbh6moe9_.php:27\n\
    Stack trace:\n#0 /tmp/tmpbh6moe9_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbh6moe9_.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]+/',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun7eznd5.php:25\n\
    Stack trace:\n#0 /tmp/tmpun7eznd5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpun7eznd5.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $key => $word) {\n        $words[$key] = preg_replace('/[^a-z]/',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbd0wh11.php:25\n\
    Stack trace:\n#0 /tmp/tmpbbd0wh11.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbbd0wh11.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]+/i',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18jh3rwr.php:25\n\
    Stack trace:\n#0 /tmp/tmp18jh3rwr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp18jh3rwr.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $odd_count = 0;\n    $odd_letters = array();\n\
    \    $odd_letters[] = chr(0);\n    for ($i = 0; $i < $count; $i++) {\n       \
    \ if ($i % 2 == 0) {\n            $odd_letters[] = $words[$i];\n        } else\
    \ {\n            $odd_letters[] = $words[$i];\n            $odd_count++;\n   \
    \     }\n    }\n    return $odd_count;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo132k.php:34\n\
    Stack trace:\n#0 /tmp/tmpknyo132k.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpknyo132k.php\
    \ on line 34\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : count(str_split($txt, 1))\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "}", expecting ";" in /tmp/tmpiajbz9sw.php
    on line 15

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $word = trim($word);\n        if ($word\
    \ != '') {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzb91_mu.php:28\n\
    Stack trace:\n#0 /tmp/tmpzzb91_mu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzzb91_mu.php\
    \ on line 28\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jddpd4x.php:29\n\
    Stack trace:\n#0 /tmp/tmp6jddpd4x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6jddpd4x.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 1 ? $words : array_count_values($words);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4xcq6jl.php:23\n\
    Stack trace:\n#0 /tmp/tmpg4xcq6jl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg4xcq6jl.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    if (count($words) == 0) {\n        return array(\"\");\n    }\n\
    \    $words = array_map('trim', $words);\n    $words = array_filter($words);\n\
    \    $words = array_map('strtolower', $words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0eyuvzv.php:33\n\
    Stack trace:\n#0 /tmp/tmpe0eyuvzv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe0eyuvzv.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    if (count($words) == 1) {\n        return array($words[0]);\n  \
    \  }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vxbe74c.php:26\n\
    Stack trace:\n#0 /tmp/tmp8vxbe74c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8vxbe74c.php\
    \ on line 26\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 1 ? $words : array_count_values($words);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4xcq6jl.php:23\n\
    Stack trace:\n#0 /tmp/tmpg4xcq6jl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg4xcq6jl.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if ($word != '') {\n            $result[$i] = $word;\n\
    \            $i++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwclux2gu.php:32\n\
    Stack trace:\n#0 /tmp/tmpwclux2gu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwclux2gu.php\
    \ on line 32\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jddpd4x.php:29\n\
    Stack trace:\n#0 /tmp/tmp6jddpd4x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6jddpd4x.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    return count($words) ? $words : count($words) + (count($words) & 1);\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqdz0f4b.php:24\n\
    Stack trace:\n#0 /tmp/tmpuqdz0f4b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuqdz0f4b.php\
    \ on line 24\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word != '') {\n            $words[$i] = strtolower($word);\n    \
    \        $i++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16j4t5dh.php:30\n\
    Stack trace:\n#0 /tmp/tmp16j4t5dh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp16j4t5dh.php\
    \ on line 30\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $key => $word) {\n        if ($word != '') {\n       \
    \     $words[$key] = ucfirst(strtolower($word));\n        }\n    }\n    return\
    \ $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluftdphb.php:27\n\
    Stack trace:\n#0 /tmp/tmpluftdphb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpluftdphb.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    if (count($words)\
    \ == 0) {\n        return $count;\n    }\n    $count = count($words);\n    $words\
    \ = array_filter($words);\n    if (count($words) == 0) {\n        return $count;\n\
    \    }\n    $count = count($words);\n    $words = array_filter($words);\n    if\
    \ (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    if (count($words) == 0) {\n        return $count;\n    }\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    if (count($words) == 0) {\n        return\
    \ $count;\n    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpu8n4ir8n.php on line 119

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $count = count($words);\n    $words = array_filter($words);\n  \
    \  $words = array_map('strtolower', $words);\n    $words = array_filter($words);\n\
    \    return $count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n<?php\n$string = \"Hello world!\";\n$words = preg_split('/\\s+/',\
    \ $string);\n$count = count($words);\n$words = array_filter($words);\n$words =\
    \ array_map('strtolower', $words);\n$words = array_filter($words);\necho $count;\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgyu4lzjs.php
    on line 20

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words, function ($value) {\n        return $value\
    \ % 2 === 0;\n    });\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_klczfkr.php:29\n\
    Stack trace:\n#0 /tmp/tmp_klczfkr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_klczfkr.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == '') {\n            continue;\n        }\n        if ($i ==\
    \ 0) {\n            $words[$i] = strtolower($word);\n            $i++;\n     \
    \       continue;\n        }\n        if ($i == $count) {\n            $words[$i]\
    \ = strtolower($word);\n            $i++;\n            continue;\n        }\n\
    \        if (ord($word[$i]) > ord($words[$i - 1])) {\n            $words[$i] =\
    \ strtolower($word);\n            $i++;\n            continue;\n        }\n  \
    \  }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3licpe8l.php:44\n\
    Stack trace:\n#0 /tmp/tmp3licpe8l.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3licpe8l.php\
    \ on line 44\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == '') {\n            continue;\n        }\n        $i++;\n\
    \        if ($i % 2 == 0) {\n            $words[$i] = strtolower($word);\n   \
    \     }\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp0k0p4q.php:33\n\
    Stack trace:\n#0 /tmp/tmpqp0k0p4q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqp0k0p4q.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygljv0f3.php:25\n\
    Stack trace:\n#0 /tmp/tmpygljv0f3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpygljv0f3.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : $txt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobqdmn6e.php:23\n\
    Stack trace:\n#0 /tmp/tmpobqdmn6e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpobqdmn6e.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 1 ? $words : array_count_values($words);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4xcq6jl.php:23\n\
    Stack trace:\n#0 /tmp/tmpg4xcq6jl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg4xcq6jl.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $result = array();\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = ucfirst($words[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9381s1z.php:27\n\
    Stack trace:\n#0 /tmp/tmpm9381s1z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm9381s1z.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplke2l9ha.php:26\n\
    Stack trace:\n#0 /tmp/tmplke2l9ha.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplke2l9ha.php\
    \ on line 26\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpjcsjjzvh.php on line 96

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return count($words) ? $words : $txt;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nkk_njk.php:24\n\
    Stack trace:\n#0 /tmp/tmp8nkk_njk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8nkk_njk.php\
    \ on line 24\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| c |>\nThis doesn't work if you have a string\
    \ like \"Hello world!\" It will split it into \"Hello\" and \"world!\" instead\
    \ of \"Hello,\" and \"world!\"\n<|/ c |>\n<| c |>\nI didn't know that - thanks\
    \ for pointing that out. I've updated my answer to include a fix for that case.\n\
    <|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$string = \"Hello world!\";\n\
    $array = explode(\" \", $string);\n$array = array_filter($array);\n$array = array_map(\"\
    trim\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"ucfirst\", $array);\n$array = array_map(\"\
    ucfirst\", $array);\n$array = array_map(\"\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptrj3v22_.php
    on line 16

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == '') {\n            continue;\n        }\n        if ($i ==\
    \ $count) {\n            $words[$i] = $word;\n            $i++;\n            continue;\n\
    \        }\n        if ($words[$i] == '') {\n            $words[$i] = $word;\n\
    \            $i++;\n            continue;\n        }\n        if (ord($words[$i])\
    \ > ord($words[$count - 1])) {\n            $words[$i] = $word;\n            $i++;\n\
    \            continue;\n        }\n        if (ord($words[$i]) < ord($words[$count\
    \ - 1])) {\n            $words[$count - 1] = $word;\n            $count--;\n \
    \       }\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkrlumpk.php:48\n\
    Stack trace:\n#0 /tmp/tmpkkrlumpk.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpkkrlumpk.php\
    \ on line 48\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]+/i',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18jh3rwr.php:25\n\
    Stack trace:\n#0 /tmp/tmp18jh3rwr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp18jh3rwr.php\
    \ on line 25\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $count = count($words);\n    $i = 0;\n    foreach ($words as $word)\
    \ {\n        if ($word == '') {\n            $words[$i] = '';\n        } else\
    \ {\n            $words[$i] = $word;\n        }\n        $i++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl2jkgkw.php:32\n\
    Stack trace:\n#0 /tmp/tmpzl2jkgkw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzl2jkgkw.php\
    \ on line 32\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    $new_words = array();\n    foreach\
    \ ($words as $word) {\n        if ($word != '') {\n            $new_words[] =\
    \ $word;\n        }\n        if ($i == $count) {\n            $new_words[] = '';\n\
    \        }\n        $i++;\n    }\n    return $new_words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz_z3uxk.php:35\n\
    Stack trace:\n#0 /tmp/tmplz_z3uxk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplz_z3uxk.php\
    \ on line 35\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $result = array();\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = ucfirst($words[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9381s1z.php:27\n\
    Stack trace:\n#0 /tmp/tmpm9381s1z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm9381s1z.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($word == \"\") {\n            $words[$i] = \"\";\n        } else {\n\
    \            $words[$i] = $word;\n        }\n        $i++;\n    }\n    return\
    \ $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmgaoi71.php:33\n\
    Stack trace:\n#0 /tmp/tmphmgaoi71.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphmgaoi71.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $key => $word) {\n        if ($word == '') {\n       \
    \     unset($words[$key]);\n        }\n    }\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7eg96xok.php:28\n\
    Stack trace:\n#0 /tmp/tmp7eg96xok.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7eg96xok.php\
    \ on line 28\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words, function($value) {\n        return $value %\
    \ 2 === 0;\n    });\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgwfxugf.php:29\n\
    Stack trace:\n#0 /tmp/tmpqgwfxugf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqgwfxugf.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkybtevt.php:25\n\
    Stack trace:\n#0 /tmp/tmpgkybtevt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgkybtevt.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('strtolower', $words);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9w3glpql.php:25\n\
    Stack trace:\n#0 /tmp/tmp9w3glpql.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9w3glpql.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $i = 0;\n    foreach ($words as $word) {\n \
    \       if ($i == 0) {\n            $words[$i] = strtolower($word);\n        \
    \    $i++;\n        } else {\n            $words[$i] = strtolower($word);\n  \
    \      }\n        $i++;\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrpa0hl0.php:33\n\
    Stack trace:\n#0 /tmp/tmpyrpa0hl0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyrpa0hl0.php\
    \ on line 33\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : array_count_values(str_split(strtolower($txt)));\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8cni34v.php:23\n\
    Stack trace:\n#0 /tmp/tmpf8cni34v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf8cni34v.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    $words = array_map('trim', $words);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkybtevt.php:25\n\
    Stack trace:\n#0 /tmp/tmpgkybtevt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgkybtevt.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    $words = array_map('strtolower',\
    \ $words);\n    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words, function($value) {\n        return $value %\
    \ 2 == 1;\n    });\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe7z7qgu.php:29\n\
    Stack trace:\n#0 /tmp/tmpxe7z7qgu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxe7z7qgu.php\
    \ on line 29\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $words =\
    \ array_filter($words);\n    $count = count($words);\n    $words = array_filter($words);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $count =\
    \ count($words);\n    $words = array_filter($words);\n    $count = count($words);\n\
    \    $words = array_filter($words);\n    $count = count($words);\n    $\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmplqf9737r.php on line 82

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw5kvx2s.php:23\n\
    Stack trace:\n#0 /tmp/tmptw5kvx2s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptw5kvx2s.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $count = count($words);\n    if ($count > 0) {\n        $words =\
    \ array_filter($words);\n        $count = count($words);\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps49ofjft.php:27\n\
    Stack trace:\n#0 /tmp/tmps49ofjft.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps49ofjft.php\
    \ on line 27\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    foreach ($words as $word) {\n        $words[] = preg_replace('/[^a-z]/',\
    \ '', $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnoffad2.php:25\n\
    Stack trace:\n#0 /tmp/tmpvnoffad2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvnoffad2.php\
    \ on line 25\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71i0axkn.php:23\n\
    Stack trace:\n#0 /tmp/tmp71i0axkn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71i0axkn.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $count = count($words);\n    $words = array_filter($words);\n    $words =\
    \ array_map('strtolower', $words);\n    $words = array_filter($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpoiphnfn2.php
    on line 77

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : array_count_values(str_split(strtolower($txt)));\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8cni34v.php:23\n\
    Stack trace:\n#0 /tmp/tmpf8cni34v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf8cni34v.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : $txt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobqdmn6e.php:23\n\
    Stack trace:\n#0 /tmp/tmpobqdmn6e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpobqdmn6e.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) ? $words : array($txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfasu8xw8.php:23\n\
    Stack trace:\n#0 /tmp/tmpfasu8xw8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfasu8xw8.php\
    \ on line 23\n"
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    return count($words) ? $words : preg_split('/,/', $txt);\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uay7cxn.php:23\n\
    Stack trace:\n#0 /tmp/tmp6uay7cxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6uay7cxn.php\
    \ on line 23\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    $words = array_filter($words);\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiqtgfg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpuiqtgfg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuiqtgfg0.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    if (count($words) == 1) {\n        return array($words[0]);\n  \
    \  }\n    $words = preg_split('/,/', $txt);\n    if (count($words) == 1) {\n \
    \       return array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n\
    \    if (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array($words[0]);\n    }\n    $words = preg_split('/[a-z]+/', $txt);\n    if\
    \ (count($words) == 1) {\n        return array($words[0]);\n    }\n    $words\
    \ = preg_split('/[a-z]+/', $txt);\n    if (count($words) == 1) {\n        return\
    \ array(\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp5g99epw0.php on line 84

    '
  timestamp: 1659824267
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/',\
    \ $txt);\n    $words = array_filter($words);\n    return $words;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7vvra_n.php:24\n\
    Stack trace:\n#0 /tmp/tmph7vvra_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph7vvra_n.php\
    \ on line 24\n"
  timestamp: 1659730989
- exit_code: 255
  program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    return count($words) > 0 ? $words : explode(',', $txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqydmn39r.php:23\n\
    Stack trace:\n#0 /tmp/tmpqydmn39r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqydmn39r.php\
    \ on line 23\n"
  timestamp: 1659824267

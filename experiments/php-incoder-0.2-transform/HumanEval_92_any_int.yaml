name: HumanEval_92_any_int
language: php
prompt: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if one\
  \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n// true\n\
  // >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n// >>> any_int(3.6,\
  \ -2.2, 2)\n// false\nfunction any_int($x, $y, $z) {\n"
tests: "function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x <\
    \ $y || $y < $z) {\n        return false;\n    }\n    if ($x < $z || $z < $y)\
    \ {\n        return false;\n    }\n    return true;\n}\n</code>\n<|/ a tags=php,math,algorithm\
    \ |>\n<| c |>\nThis doesn't work if you have a negative number in the first argument\n\
    <|/ c |>\n<| c |>\n: It does work, if you have negative numbers in the first argument.\
    \ Try it out. :-)\n<|/ c |>\n<| c |>\n: It does work, if you have negative numbers\
    \ in the first argument. Try it out. :-)\n<|/ c |>\n<| c |>\n: It does work, if\
    \ you have negative numbers in the first argument. Try it out. :-)\n<|/ c |>\n\
    <| c |>\n: It does work, if you have negative numbers in the first argument. Try\
    \ it out. :-)\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    if ($x == $y || $x ==\
    \ $z) {\n        return true;\n    }\n    if ($y == $z) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    if ($x == $y + $z) {\n        return true;\n\
    \    }\n    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y\
    \ - $z) {\n        return true;\n    }\n    if ($x == $y + $z) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "    if ($x === $y || $x === $z) {\n\
    \        return true;\n    }\n    if ($y === $z) {\n        return true;\n   \
    \ }\n    if ($x === $z) {\n        return true;\n    }\n    return false;\n}\n",
  "    if ($x == $y + $z) {\n        if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \            return true;\n        }\n    }\n    return false;\n}", "    if ($x\
    \ == $y + $z) {\n        return true;\n    }\n    return false;\n}\n", "    if\
    \ ($x == $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n \
    \       return true;\n    }\n    if ($x == $y - $z) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    if ($x == $y + $z) {\n        return true;\n\
    \    }\n    return false;\n}", "    if ($x == $y + $z) {\n        return true;\n\
    \    }\n    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y\
    \ - $z) {\n        return true;\n    }\n    if ($x == $y + $z) {\n        return\
    \ true;\n    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ doesn't seem to work when `any_int(3.6, -2.2, 2)` returns true.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it out and see.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ when `any_int(3.6, -2.2, 2)` returns true.\n<|/ c |>\n<| c |>\nIt does work.\
    \ Try it out and see.\n<|/ c |>\n<| c |>\nIt doesn't work when `any_int(3.6, -2.2,\
    \ 2)` returns true.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    if ($x ==\
    \ $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n        return\
    \ true;\n    }\n    if ($x == $y * $z) {\n        return true;\n    }\n    if\
    \ ($x == $y / $z) {\n        return true;\n    }\n    if ($x == $y % $z) {\n \
    \       return true;\n    }\n    if ($x == $z / $y) {\n        return true;\n\
    \    }\n    if ($x == $z % $y) {\n        return true;\n    }\n    return false;\n\
    }", "    if ($x == $y || $x == $z) {\n        return true;\n    }\n    if ($y\
    \ == $z) {\n        return true;\n    }\n    return false;\n}", "    if ($x ==\
    \ $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n        return\
    \ true;\n    }\n    if ($x == $y * $z) {\n        return true;\n    }\n    if\
    \ ($x == $y / $z) {\n        return true;\n    }\n    if ($x == $y % $z) {\n \
    \       return true;\n    }\n    if ($x == $y ** $z) {\n        return true;\n\
    \    }\n    if ($x == $y * ($z - 1)) {\n        return true;\n    }\n    if ($x\
    \ == $y / ($z - 1)) {\n        return true;\n    }\n    if ($x == $y % ($z - 1))\
    \ {\n        return true;\n    }\n    if ($x == $y ** ($z - 1)) {\n        return\
    \ true;\n    }\n    if ($x == $y * ($z - 1) ** 2) {\n        return true;\n  \
    \  }\n    if ($x == $y / ($z - 1) ** 2) {\n        return true;\n    }\n    if\
    \ ($x == $y % ($z - 1) ** 2) {\n        return true;\n    }\n    if ($x == $y\
    \ ** ($z - 1) ** 2) {\n        return true;\n    }\n    if ($x == $y * ($z - 1)\
    \ ** 3) {\n        return true;\n    }\n    if ($x == $y / ($z - 1) ** 3) {\n\
    \        return true;\n    }\n    if ($x == $y % ($z - 1) ** 3) {\n        return\
    \ true;\n    }\n    if ($x == $y ** ($z - 1) ** 3) {\n        return true;\n \
    \   }\n    if ($x == $y * ($z - 1) ** 4) {\n        return true;\n    }\n    if\
    \ ($x == $y / ($z - 1) ** 4) {\n        return true;\n    }\n    if ($x == $y\
    \ % ($z - 1) ** 4) {\n        return true;\n    }\n    if ($x == $y ** ($z - 1)\
    \ ** 4) {\n        return true;\n    }\n    if ($x == $y * ($z - 1) ** 5) {\n\
    \        return true;\n    }\n    if ($x == $y / ($z - 1) ** 5) {\n        return\
    \ true;\n    }\n    if ($x == $y % ($z - 1) ** 5) {\n        return true;\n  \
    \  }\n    if ($x == $y ** ($z - 1) ** 5) {\n        return true;\n    }\n    if\
    \ ($x == $y * ($z - 1) ** 6) {\n        return true;\n    }\n    if ($x == $y\
    \ / ($z - 1) ** 6) {\n        return true;\n    }\n    if ($x == $y % ($z - 1)\
    \ ** 6) {\n        return true;\n    }\n    if ($x == $y ** ($z - 1) ** 6) {\n\
    \        return true;\n    }\n    if ($x == $y * ($z - 1) ** 7) {", "    if ($x\
    \ == $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n     \
    \   return true;\n    }\n    if ($x == $y - $z) {\n        return true;\n    }\n\
    \    if ($x == $y + $z) {\n        return true;\n    }\n    return false;\n}",
  "    if ($x == $y + $z) {\n        return true;\n    }\n    return false;\n}\n",
  "    if ($x == $y + $z) {\n        return true;\n    }\n    return false;\n}", " \
    \   if ($x == $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z)\
    \ {\n        return true;\n    }\n    if ($x == $y * $z) {\n        return true;\n\
    \    }\n    if ($x == $y / $z) {\n        return true;\n    }\n    if ($x == $y\
    \ % $z) {\n        return true;\n    }\n    if ($x == $y ** $z) {\n        return\
    \ true;\n    }\n    if ($x == $y * ($z - 1)) {\n        return true;\n    }\n\
    \    if ($x == $y * ($z + 1)) {\n        return true;\n    }\n    if ($x == $y\
    \ * ($z - $x + 1)) {\n        return true;\n    }\n    if ($x == $y * ($z - $x\
    \ - 1)) {\n        return true;\n    }\n    if ($x == $y * ($z - $x - $y + 1))\
    \ {\n        return true;\n    }\n    if ($x == $y * ($z - $x - $y - 1)) {\n \
    \       return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z + 1)) {\n \
    \       return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z - 1)) {\n \
    \       return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z + $x + 1))\
    \ {\n        return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z + $x -\
    \ 1)) {\n        return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z +\
    \ $x - $y + 1)) {\n        return true;\n    }\n    if ($x == $y * ($z - $x -\
    \ $y - $z + $x - $y - 1)) {\n        return true;\n    }\n    if ($x == $y * ($z\
    \ - $x - $y - $z + $x - $y - $z + 1)) {\n        return true;\n    }\n    if ($x\
    \ == $y * ($z - $x - $y - $z + $x - $y - $z - 1)) {\n        return true;\n  \
    \  }\n    if ($x == $y * ($z - $x - $y - $z + $x - $y - $z + $x + 1)) {\n    \
    \    return true;\n    }\n    if ($x == $y * ($z - $x - $y - $z + $x - $y - $z\
    \ + $x - 1)) {\n        return true;\n    }\n    if ($x == $y * ($z - $x - $y\
    \ - $z + $x - $y - $z + $x - $y + 1)) {\n        return true;\n    }\n    if ($x\
    \ == $y * ($z - $x - $y - $z + $x - $y - $z + $x - $y - 1)) {\n        return\
    \ true;\n    }", "    if ($x == $y + $z) {\n        return true;\n    }\n    if\
    \ ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n \
    \       return true;\n    }\n    return false;\n}", "    if ($x == $y + $z) {\n\
    \        if (is_int($x) && is_int($y) && is_int($z)) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n", "    if ($x == $y + $z) {\n      \
    \  return true;\n    }\n    return false;\n}", "    if ($x == $y || $x == $z)\
    \ {\n        return true;\n    }\n    if ($y == $z) {\n        return true;\n\
    \    }\n    return false;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

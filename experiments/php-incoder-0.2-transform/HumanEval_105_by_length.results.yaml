language: php
name: HumanEval_105_by_length
results:
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $sorted\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $sorted[$value] = $key;\n    }\n  }\n  ksort($sorted);\n  $reversed\
    \ = array_reverse($sorted);\n  foreach ($reversed as $key => $value) {\n    $reversed[$key]\
    \ = $names[$value];\n  }\n  return $reversed;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4x5u_rd.php:37\n\
    Stack trace:\n#0 /tmp/tmpb4x5u_rd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpb4x5u_rd.php\
    \ on line 37\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array_key_exists($i, $arr) ? $arr[$i] : '';\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $names[$key];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70m8oygr.php:36\n\
    Stack trace:\n#0 /tmp/tmp70m8oygr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp70m8oygr.php\
    \ on line 36\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $reversed = array_reverse($arr);\n  $result = array();\n\
    \  foreach ($reversed as $i => $num) {\n    if ($num >= $min && $num <= $max)\
    \ {\n      $result[] = name_by_number($num);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmps0k1l8mp.php:28\nStack trace:\n#0 /tmp/tmps0k1l8mp.php(35): by_length(Array)\n\
    #1 /tmp/tmps0k1l8mp.php(39): candidate(Array)\n#2 /tmp/tmps0k1l8mp.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmps0k1l8mp.php on line 28\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0txilt1.php:35\n\
    Stack trace:\n#0 /tmp/tmp_0txilt1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_0txilt1.php\
    \ on line 35\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $result = array();\n  for ($i = 0; $i < $len; ++$i) {\n\
    \    if ($min <= $arr[$i] && $arr[$i] <= $max) {\n      $result[] = name_by_number($arr[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmpt_9lelpj.php:27\nStack trace:\n#0 /tmp/tmpt_9lelpj.php(34): by_length(Array)\n\
    #1 /tmp/tmpt_9lelpj.php(38): candidate(Array)\n#2 /tmp/tmpt_9lelpj.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt_9lelpj.php on line 27\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $arr[$i];\n  }\n  sort($result);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $names[$result[$i]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchb1pi9n.php:35\n\
    Stack trace:\n#0 /tmp/tmpchb1pi9n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpchb1pi9n.php\
    \ on line 35\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[] = array($value, $key);\n    }\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  foreach ($arr as $key => $value) {\n    if ($value >= 1\
    \ && $value <= 9) {\n      $result[$key] = array($value, $key);\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_9zitvt.php:38\n\
    Stack trace:\n#0 /tmp/tmpx_9zitvt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx_9zitvt.php\
    \ on line 38\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $value) {\n    $result[] = str_pad($value, 9, \"0\", STR_PAD_LEFT);\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp599sdtmd.php:35\n\
    Stack trace:\n#0 /tmp/tmp599sdtmd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp599sdtmd.php\
    \ on line 35\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array(\n      'name' => $arr[$i],\n      'value' => $i,\n    );\n  }\n  usort($result,\
    \ function($a, $b) {\n    return $a['value'] - $b['value'];\n  });\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]['name']\
    \ = $names[$value['name']];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ak_iia5.php:41\n\
    Stack trace:\n#0 /tmp/tmp3ak_iia5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3ak_iia5.php\
    \ on line 41\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $digits = range($min, $max);\n  $reversed = array_reverse($digits);\n\
    \  $result = array();\n  foreach ($digits as $digit) {\n    $result[] = str_replace(\n\
    \      array($digit, $digit),\n      array('One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'),\n      $reversed[$digit]\n    );\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgdgtbqb.php:42\n\
    Stack trace:\n#0 /tmp/tmplgdgtbqb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplgdgtbqb.php\
    \ on line 42\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $sorted = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $sorted[$i] = $arr[$i];\n  }\n  sort($sorted);\n\
    \  $reversed = array_reverse($sorted);\n  for ($i = 0; $i < $len; $i++) {\n  \
    \  $sorted[$i] = $reversed[$i];\n  }\n  $result = array();\n  for ($i = 0; $i\
    \ < $len; $i++) {\n    $result[] = array_search($sorted[$i], array('One', 'Two',\
    \ 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'));\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyker3vu.php:43\n\
    Stack trace:\n#0 /tmp/tmptyker3vu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptyker3vu.php\
    \ on line 43\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = max($len - 1, 1);\n \
    \ $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[] = str_pad(\n\
    \      strval($arr[$i]), $len - $i, '0', STR_PAD_LEFT);\n  }\n  $result = array_reverse($result);\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = str_pad(\n      strval($result[$i]),\
    \ $len - $i, '0', STR_PAD_LEFT);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12dkrca8.php:40\n\
    Stack trace:\n#0 /tmp/tmp12dkrca8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp12dkrca8.php\
    \ on line 40\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else if\
    \ ($arr[$i] >= 1 && $arr[$i] <= 9) {\n      $result[] = strval($arr[$i]);\n  \
    \  }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n<?php\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min\
    \ = $max = $array[0];\nforeach ($array as $value) {\n    if ($value < $min) {\n\
    \        $min = $value;\n    }\n    if ($value > $max) {\n        $max = $value;\n\
    \    }\n}\n$result[] = 'One';\n$result[] = 'Nine';\n$result[] = strval($min);\n\
    $result[] = strval($max);\n$result = array_reverse($result);\nforeach ($result\
    \ as $key => $value) {\n    if ($key % 2 == 0) {\n        $result[$key] = strval($value);\n\
    \    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min\
    \ = $max = $array[0];\nforeach ($array as $value) {\n    if ($value < $min) {\n\
    \        $min = $value;\n    }\n    if ($value > $max) {\n        $max = $value;\n\
    \    }\n}\n$result[] = 'One';\n$result[] = 'Nine';\n$result[] = strval($min);\n\
    $result[] = strval($max);\n$result = array_reverse($result);\nforeach ($result\
    \ as $key => $value) {\n    if ($key % 2 == 0) {\n        $result[$key] = strval($value);\n\
    \    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min = $max\
    \ = $array[0];\nforeach ($array as $value) {\n    if ($value < $min) {\n     \
    \   $min = $value;\n    }\n    if ($value > \nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2nsopcut.php on line 33

    '
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $item) {\n    if ($item >= 1 && $item <= 9) {\n\
    \      $result[] = array($item);\n    }\n  }\n  sort($result);\n  foreach ($result\
    \ as $item) {\n    $result[$item[0]] = $item[1];\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wsgml4c.php:36\n\
    Stack trace:\n#0 /tmp/tmp6wsgml4c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6wsgml4c.php\
    \ on line 36\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $sorted = array();\n  $reversed =\
    \ array_reverse($arr);\n  foreach ($arr as $key => $value) {\n    if ($value >=\
    \ 1 && $value <= 9) {\n      $sorted[$key] = $reversed[$value];\n    }\n  }\n\
    \  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhw_q7ni.php:37\n\
    Stack trace:\n#0 /tmp/tmpxhw_q7ni.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxhw_q7ni.php\
    \ on line 37\n"
  timestamp: 1659731062
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max)\
    \ {\n      $result[] = name_by_number($arr[$i]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmp_si19j6z.php:24\nStack trace:\n#0 /tmp/tmp_si19j6z.php(31): by_length(Array)\n\
    #1 /tmp/tmp_si19j6z.php(35): candidate(Array)\n#2 /tmp/tmp_si19j6z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_si19j6z.php on line 24\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num]);\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6e34i2h.php:29\n\
    Stack trace:\n#0 /tmp/tmpp6e34i2h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp6e34i2h.php\
    \ on line 29\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[] =\
    \ array($value, $key);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdiy0k1l6.php:35\n\
    Stack trace:\n#0 /tmp/tmpdiy0k1l6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdiy0k1l6.php\
    \ on line 35\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num]);\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6e34i2h.php:29\n\
    Stack trace:\n#0 /tmp/tmpp6e34i2h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp6e34i2h.php\
    \ on line 29\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num]);\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6e34i2h.php:29\n\
    Stack trace:\n#0 /tmp/tmpp6e34i2h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp6e34i2h.php\
    \ on line 29\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n  $result\
    \ = array();\n  foreach ($reversed as $key => $value) {\n    if ($value < $min\
    \ || $value > $max) {\n      continue;\n    }\n    $result[$key] = $arr[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2kw3v3w3.php:36\n\
    Stack trace:\n#0 /tmp/tmp2kw3v3w3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2kw3v3w3.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($v) use ($len) {\n    return $v < 1 ? $len : $v;\n\
    \  }, $arr);\n  $arr = array_map(function($v) use ($len) {\n    return $v < 1\
    \ ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v) use ($len) {\n  \
    \  return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v) use\
    \ ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_map(function($v)\
    \ use ($len) {\n    return $v < 1 ? $len : $v;\n  }, $arr);\n  $arr = array_\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpe66mfu5j.php
    on line 70

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $arr[$i];\n  }\n  sort($result);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $names[$result[$i]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchb1pi9n.php:35\n\
    Stack trace:\n#0 /tmp/tmpchb1pi9n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpchb1pi9n.php\
    \ on line 35\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $length = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $length; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    }\n    if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  }\n    if ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n    }\n    if\
    \ ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n    if ($arr[$i]\
    \ == $min + 2) {\n      $result[] = 'Four';\n    }\n    if ($arr[$i] == $max -\
    \ 2) {\n      $result[] = 'Five';\n    }\n    if ($arr[$i] == $min + 3) {\n  \
    \    $result[] = 'Six';\n    }\n    if ($arr[$i] == $max - 3) {\n      $result[]\
    \ = 'Seven';\n    }\n    if ($arr[$i] == $min + 4) {\n      $result[] = 'Eight';\n\
    \    }\n    if ($arr[$i] == $max - 4) {\n      $result[] = 'Nine';\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6bupnda.php:62\n\
    Stack trace:\n#0 /tmp/tmpr6bupnda.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpr6bupnda.php\
    \ on line 62\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num);\n    }\n  }\n  if\
    \ (count($result)) {\n    array_multisort($result, SORT_DESC, $arr);\n    foreach\
    \ ($arr as $num) {\n      $result[] = array($num);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjg3wu9ls.php:35\n\
    Stack trace:\n#0 /tmp/tmpjg3wu9ls.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjg3wu9ls.php\
    \ on line 35\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  if (empty($arr)) {\n    return $result;\n\
    \  }\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $arr[$i];\n  }\n  sort($result);\n  $result = array_reverse($result);\n  for\
    \ ($i = 0; $i < $len; $i++) {\n    $result[$i] = $names[$result[$i]];\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpyixet8kk.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpyixet8kk.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyixet8kk.php:36\n\
    Stack trace:\n#0 /tmp/tmpyixet8kk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyixet8kk.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  ksort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value];\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpejyu1xvq.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpejyu1xvq.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejyu1xvq.php:35\n\
    Stack trace:\n#0 /tmp/tmpejyu1xvq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpejyu1xvq.php\
    \ on line 35\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  foreach ($reversed as $key => $value)\
    \ {\n    $reversed[$key] = $arr[$key];\n  }\n  return array_map(function($value)\
    \ use ($arr) {\n    return $arr[$value];\n  }, $reversed);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 8 in /tmp/tmp2rfnm6mg.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp2rfnm6mg.php:36\nStack\
    \ trace:\n#0 /tmp/tmp2rfnm6mg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2rfnm6mg.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $result = [];\n  for ($i = $min; $i <= $max; $i++) {\n\
    \    $result[] = str_pad($i, $len - 1, $arr[$i]);\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 8 in /tmp/tmpe1li8h6u.php on line 26\n\n\
    Deprecated: str_pad(): Passing null to parameter #3 ($pad_string) of type string\
    \ is deprecated in /tmp/tmpe1li8h6u.php on line 26\n\nFatal error: Uncaught ValueError:\
    \ str_pad(): Argument #3 ($pad_string) must be a non-empty string in /tmp/tmpe1li8h6u.php:26\n\
    Stack trace:\n#0 /tmp/tmpe1li8h6u.php(26): str_pad('8', 7, '')\n#1 /tmp/tmpe1li8h6u.php(32):\
    \ by_length(Array)\n#2 /tmp/tmpe1li8h6u.php(36): candidate(Array)\n#3 /tmp/tmpe1li8h6u.php(43):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpe1li8h6u.php on line 26\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $num) {\n    $result[] = name_by_number($num,\
    \ $len);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmp6ha6q6um.php:28\nStack trace:\n#0 /tmp/tmp6ha6q6um.php(34): by_length(Array)\n\
    #1 /tmp/tmp6ha6q6um.php(38): candidate(Array)\n#2 /tmp/tmp6ha6q6um.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6ha6q6um.php on line 28\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num]);\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6e34i2h.php:29\n\
    Stack trace:\n#0 /tmp/tmpp6e34i2h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp6e34i2h.php\
    \ on line 29\n"
  timestamp: 1659730992
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $min = min($min, $max);\n  $max\
    \ = max($max, $min);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $val) {\n    $result[] = array_search($val,\
    \ $range);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3t3b9ujr.php:37\n\
    Stack trace:\n#0 /tmp/tmp3t3b9ujr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3t3b9ujr.php\
    \ on line 37\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    }\n  \
    \  elseif ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n    }\n    elseif\
    \ ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n    elseif ($arr[$i]\
    \ == $min + 2) {\n      $result[] = 'Four';\n    }\n    elseif ($arr[$i] == $max\
    \ - 2) {\n      $result[] = 'Five';\n    }\n    elseif ($arr[$i] == $min + 3)\
    \ {\n      $result[] = 'Six';\n    }\n    elseif ($arr[$i] == $max - 3) {\n  \
    \    $result[] = 'Seven';\n    }\n    elseif ($arr[$i] == $min + 4) {\n      $result[]\
    \ = 'Eight';\n    }\n    elseif ($arr[$i] == $max - 4) {\n      $result[] = 'Nine';\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr2 = array();\n$arr3 =\
    \ array();\n$arr4 = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n\
    $arr8 = array();\n$arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12\
    \ = array();\n$arr13 = array();\n$arr14 = array();\n$arr15 = array();\n$arr16\
    \ = array();\n$arr17 = array();\n$arr18 = array();\n$arr19 = array();\n$arr20\
    \ = array();\n$arr21 = array();\n$arr22 = array();\n$arr23 = array();\n$arr24\
    \ = array();\n$arr25 = array();\n$arr26 = array();\n$arr27 = array();\n$arr28\
    \ = array();\n$arr29 = array();\n$arr30 = array();\n$arr31 = array();\n$arr32\
    \ = array();\n$arr33 = array();\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmph1kwvslw.php
    on line 56

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len === 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min === $max) {\n    return\
    \ array($min);\n  }\n  $digits = range($min, $max);\n  $reversed = array_reverse($digits);\n\
    \  $names = array();\n  foreach ($reversed as $digit) {\n    $names[] = $names[count($names)\
    \ - 1] . ($digit < 10 ? '' : '_' . $digit);\n  }\n  return $names;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpikh9bpa3.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpikh9bpa3.php:38\nStack\
    \ trace:\n#0 /tmp/tmpikh9bpa3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpikh9bpa3.php\
    \ on line 38\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num - 1]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on line 18\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5_nv6yd.php:29\n\
    Stack trace:\n#0 /tmp/tmpw5_nv6yd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw5_nv6yd.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num > 0 && $num < 10) {\n      $result[] = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\")[$num];\n    }\n\
    \  }\n  return empty($arr) ? array() : $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80ovwisp.php:29\n\
    Stack trace:\n#0 /tmp/tmp80ovwisp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp80ovwisp.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = str_repeat($item, $item);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4h8mc23q.php:29\n\
    Stack trace:\n#0 /tmp/tmp4h8mc23q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4h8mc23q.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $sorted\
    \ = array();\n  foreach ($arr as $item) {\n    if ($item < 1 || $item > 9) {\n\
    \      continue;\n    }\n    $sorted[] = array($item, $names[$item]);\n  }\n \
    \ array_multisort($sorted, SORT_DESC, $arr);\n  foreach ($arr as $item) {\n  \
    \  $sorted[] = array($names[$item], $item);\n  }\n  return $sorted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 23


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 23


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 27


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 27


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 27


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 27


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 27


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 27


    Warning: Undefined variable $names in /tmp/tmp4s1syojj.php on line 27


    Warning: Trying to access array offset on value of type null in /tmp/tmp4s1syojj.php
    on line 27


    Warning: Undefined variable $na'
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value >= 1 && $value <= 9 ? $value :\
    \ \"One\";\n  }\n  return $result;\n}\n</code>\n<|/ a |>\n<| c |>\nI like your\
    \ solution, but I still don't understand how it works. Can you explain how it\
    \ works?\n<|/ c |>\n<| c |>\nI added some comments to the code. Hope it helps.\n\
    <|/ c |>\n<| a tags=php,sorting,arrays |>\n<code>\n$array = array();\n$array[]\
    \ = array('name' => 'One', 'number' => 1);\n$array[] = array('name' => 'Two',\
    \ 'number' => 2);\n$array[] = array('name' => 'Three', 'number' => 3);\n$array[]\
    \ = array('name' => 'Four', 'number' => 4);\n$array[] = array('name' => 'Five',\
    \ 'number' => 5);\n$array[] = array('name' => 'Six', 'number' => 6);\n$array[]\
    \ = array('name' => 'Seven', 'number' => 7);\n$array[] = array('name' => 'Eight',\
    \ 'number' => 8);\n$array[] = array('name' => 'Nine', 'number' => 9);\n$array[]\
    \ = array('name' => 'Ten', 'number' => 10);\n$array[] = array('name' => 'Eleven',\
    \ 'number' => 11);\n$array[] = array('name' => 'Twelve', 'number' => 12);\n$array[]\
    \ = array('name' => 'Thirteen', 'number' => 13);\n$array[] = array('name' => 'Fourteen',\
    \ 'number' => 14);\n$array[] = array('name' => 'Fifteen', 'number' => 15);\n$array[]\
    \ = array('name' => 'Sixteen', 'number' => 16);\n$array[] = array('name' => 'Seventeen',\
    \ 'number' => 17);\n$array[] = array('name' => 'Eighteen', 'number' => 18);\n\
    $array[] = array('name' => 'Nineteen', 'number' => 19);\n$array[] = array('name'\
    \ => 'Twenty', 'number' => 20);\n$array[] = array('name' => 'Twenty-one', 'number'\
    \ => 21);\n$array[] = array('name' => 'Twenty-two', 'number' => 22);\n$\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpubhqz8t9.php
    on line 27

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $min = min($min, $max);\n  $max\
    \ = max($max, $min);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  foreach ($reversed as $key => $value) {\n    $reversed[$key] = $arr[$key];\n\
    \  }\n  $result = array();\n  foreach ($reversed as $key => $value) {\n    $result[]\
    \ = str_replace(array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'), array('One',\
    \ 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'), $value);\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\n    array('name' => 'One', 'number' => 1),\n  \
    \  array('name' => 'Two', 'number' => 2),\n    array('name' => 'Three', 'number'\
    \ => 3),\n    array('name' => 'Four', 'number' => 4),\n    array('name' => 'Five',\
    \ 'number' => 5),\n    array('name' => 'Six', 'number' => 6),\n    array('name'\
    \ => 'Seven', 'number' => 7),\n    array('name' => 'Eight', 'number' => 8),\n\
    \    array('name' => 'Nine', 'number' => 9),\n    array('name' => 'Ten', 'number'\
    \ => 10),\n    array('name' => 'Eleven', 'number' => 11),\n    array('name' =>\
    \ 'Twelve', 'number' => 12),\n    array('name' => 'Thirteen', 'number' => 13),\n\
    \    array('name' => 'Fourteen', 'number' => 14),\n    array('name' => 'Fifteen',\
    \ 'number' => 15),\n    array('name' => 'Sixteen', 'number' => 16),\n    array('name'\
    \ => 'Seventeen', 'number' => 17),\n    array('name' => 'Eighteen', 'number' =>\
    \ 18),\n    array('name' => 'Nineteen', 'number' => 19),\n    array('name' =>\
    \ 'Twenty', 'number' => 20),\n    array('name' => 'Twenty-one', 'number' => 21),\n\
    \    array('name' => 'Twenty-two', 'number' => 22),\n    array('name' => 'Twenty-three',\
    \ 'number' => 23),\n    array('name' => 'Twenty-four', 'number' => 24),\n    \n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxdzxpfd2.php
    on line 34

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $min = min($min, $max);\n  $max\
    \ = max($min, $max);\n  $len = max($len - 1, 1);\n  $result = array();\n  for\
    \ ($i = 0; $i < $len; $i++) {\n    $result[] = str_pad(\n      strval($arr[$i]),\n\
    \      strval($len - $i),\n      chr($i + 65),\n      STR_PAD_LEFT\n    );\n \
    \ }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min\
    \ = $array[0];\n$max = $array[0];\nforeach ($array as $value) {\n    if ($value\
    \ < $min) {\n        $min = $value;\n    }\n    if ($value > $max) {\n       \
    \ $max = $value;\n    }\n}\n$min = $min - 1;\n$max = $max + 1;\n$length = max($max\
    \ - $min + 1, 1);\nfor ($i = 0; $i < $length; $i++) {\n    $result[] = str_pad(\n\
    \        strval($array[$i]),\n        strval($length - $i),\n        chr($i +\
    \ 65),\n        STR_PAD_LEFT\n    );\n}\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n\
    $result = array();\n$min = $array[0];\n$max = $array[0];\nforeach ($array as $value)\
    \ {\n    if ($value < $min) {\n        $min = $value;\n    }\n    if ($value >\
    \ $max) {\n        $max = $value;\n    }\n}\n$min = $min - 1;\n$max = $max + 1;\n\
    $length = max($max - $min + 1, 1);\nfor ($i = 0; $i < $length; $i++) {\n    $result[]\
    \ = str_pad(\n        strval($array[$i]),\n        strval($length - $i),\n   \
    \     chr($i + 65),\n        STR_PAD_LEFT\n    );\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8,\
    \ 2, 3);\n$result = array();\n$min = $array[0];\n$max = $array[0];\nforeach ($array\
    \ as $value) {\n    if (\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxv022_ia.php
    on line 35

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  krsort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76_gch44.php:36\n\
    Stack trace:\n#0 /tmp/tmp76_gch44.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp76_gch44.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  krsort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$key];\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp69zbb_b9.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp69zbb_b9.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69zbb_b9.php:35\n\
    Stack trace:\n#0 /tmp/tmp69zbb_b9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp69zbb_b9.php\
    \ on line 35\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $range = $max - $min + 1;\n  $digits = array();\n  for\
    \ ($i = 0; $i < $range; $i++) {\n    $digits[] = $min + $i;\n  }\n  $digits =\
    \ array_reverse($digits);\n  $result = array();\n  foreach ($digits as $digit)\
    \ {\n    $result[] = array_search($digit, $arr);\n  }\n  return $result;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpd8l89spi.php
    on line 36

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\")[$item - 1];\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp841l2cvt.php:29\n\
    Stack trace:\n#0 /tmp/tmp841l2cvt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp841l2cvt.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value >= 1 && $value <= 9 ? $value :\
    \ '';\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n\
    <| c |>\nThis doesn't seem to work for me. Can you please post an example array\
    \ and expected output?\n<|/ c |>\n<| c |>\nI added an example to the answer. Does\
    \ it work for you?\n<|/ c |>\n<| c |>\nYes, it works. Thank you! I didn't know\
    \ that array_multisort can sort by multiple keys.\n<|/ c |>\n<| c |>\nI added\
    \ a version that doesn't use array_multisort and uses array_map instead. Does\
    \ it work for you?\n<|/ c |>\n<| c |>\nYes, it works. Thank you! I didn't know\
    \ that array_multisort can sort by multiple keys.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\n$array = array(\n    array('name' => 'One', 'number' => 1),\n    array('name'\
    \ => 'Two', 'number' => 2),\n    array('name' => 'Three', 'number' => 3),\n  \
    \  array('name' => 'Four', 'number' => 4),\n    array('name' => 'Five', 'number'\
    \ => 5),\n    array('name' => 'Six', 'number' => 6),\n    array('name' => 'Seven',\
    \ 'number' => 7),\n    array('name' => 'Eight', 'number' => 8),\n    array('name'\
    \ => 'Nine', 'number' => 9),\n    array('name' => 'Ten', 'number' => 10),\n  \
    \  array('name' => 'Eleven', 'number' => 11),\n    array('name' => 'Twelve', 'number'\
    \ => 12),\n    array('name' => 'Thirteen', 'number' => 13),\n    array('name'\
    \ => 'Fourteen', 'number' => 14),\n    array('name' => 'Fifteen', 'number' =>\
    \ 15),\n    array('name' => 'Sixteen', 'number' => 16),\n    array('name' => 'Seventeen',\
    \ 'number' => 17),\n    array('name' => 'Eighteen', 'number' => 18),\n    array('name'\
    \ => 'Nineteen', 'number' => 19),\n    array('name' => 'Twent\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4i919w69.php
    on line 27

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array($item, \"One\");\n   \
    \ } else if ($item >= 10 && $item <= 99) {\n      $result[] = array($item, \"\
    Two\");\n    } else if ($item >= 100 && $item <= 999) {\n      $result[] = array($item,\
    \ \"Three\");\n    } else if ($item >= 1000 && $item <= 9999) {\n      $result[]\
    \ = array($item, \"Four\");\n    } else if ($item >= 10000 && $item <= 99999)\
    \ {\n      $result[] = array($item, \"Five\");\n    } else if ($item >= 100000\
    \ && $item <= 999999) {\n      $result[] = array($item, \"Six\");\n    } else\
    \ if ($item >= 1000000 && $item <= 9999999) {\n      $result[] = array($item,\
    \ \"Seven\");\n    } else if ($item >= 10000000 && $item <= 99999999) {\n    \
    \  $result[] = array($item, \"Eight\");\n    } else if ($item >= 100000000 &&\
    \ $item <= 999999999) {\n      $result[] = array($item, \"Nine\");\n    }\n  }\n\
    \  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr, function($v){\n\
    \    return $v >= 1 && $v <= 9;\n});\n$arr = array_map(function($v){\n    return\
    \ $v >= 10 && $v <= 99 ? $v : $v - 10;\n}, $arr);\n$arr = array_map(function($v){\n\
    \    return $v >= 100 && $v <= 999 ? $v : $v - 100;\n}, $arr);\n$arr = array_map(function($v){\n\
    \    return $v >= 1000 && $v <= 9999 ? $v : $v - 1000;\n}, $arr);\n$arr = array_map(function($v){\n\
    \    return $v >= 10000 && $v <= 99999 ? $v : $v - 10000;\n}, $arr);\n$arr = array_map(function($v){\n\
    \    return $v >= 100000 && $v <= 999999 ? $v : $v - 100000;\n}, $arr);\n$arr\
    \ = array_map(function($v){\n    return $v >= 1000000 && $v <= 9999999 ? $v :\
    \ $v - 1000000;\n}, $arr);\n$arr = array_map(function($v){\n    return $v >= 1000000\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp19o7poki.php
    on line 39

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = 0; $i\
    \ < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n   \
    \ } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n  \
    \    $result[] = sprintf('%u', ($arr[$i] - $min) * (10 - $len));\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlhn1t75.php:37\n\
    Stack trace:\n#0 /tmp/tmpmlhn1t75.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmlhn1t75.php\
    \ on line 37\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n\
    \      $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bu113yo.php:37\n\
    Stack trace:\n#0 /tmp/tmp2bu113yo.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2bu113yo.php\
    \ on line 37\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array($item);\n    }\n  }\n\
    \  if (count($result)) {\n    sort($result);\n    foreach ($result as $item) {\n\
    \      $result[$item[0]] = $item[1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpt8_6d9j0.php on line 24\n\n\
    Warning: Undefined array key 1 in /tmp/tmpt8_6d9j0.php on line 24\n\nWarning:\
    \ Undefined array key 1 in /tmp/tmpt8_6d9j0.php on line 24\n\nWarning: Undefined\
    \ array key 1 in /tmp/tmpt8_6d9j0.php on line 24\n\nWarning: Undefined array key\
    \ 1 in /tmp/tmpt8_6d9j0.php on line 24\n\nWarning: Undefined array key 1 in /tmp/tmpt8_6d9j0.php\
    \ on line 24\n\nWarning: Undefined array key 1 in /tmp/tmpt8_6d9j0.php on line\
    \ 24\n\nWarning: Undefined array key 1 in /tmp/tmpt8_6d9j0.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpt8_6d9j0.php:35\nStack\
    \ trace:\n#0 /tmp/tmpt8_6d9j0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt8_6d9j0.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xh0fyp4.php:32\n\
    Stack trace:\n#0 /tmp/tmp0xh0fyp4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0xh0fyp4.php\
    \ on line 32\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($arr[$i] == $min) {\n      $result[] = 'One';\n    }\n    elseif ($arr[$i]\
    \ == $max) {\n      $result[] = 'Nine';\n    }\n    elseif ($arr[$i] == $max -\
    \ 1) {\n      $result[] = 'Eight';\n    }\n    elseif ($arr[$i] == $max - 2) {\n\
    \      $result[] = 'Seven';\n    }\n    elseif ($arr[$i] == $max - 3) {\n    \
    \  $result[] = 'Six';\n    }\n    elseif ($arr[$i] == $max - 4) {\n      $result[]\
    \ = 'Five';\n    }\n    elseif ($arr[$i] == $max - 5) {\n      $result[] = 'Four';\n\
    \    }\n    elseif ($arr[$i] == $max - 6) {\n      $result[] = 'Three';\n    }\n\
    \    elseif ($arr[$i] == $max - 7) {\n      $result[] = 'Two';\n    }\n    elseif\
    \ ($arr[$i] == $max - 8) {\n      $result[] = 'One';\n    }\n  }\n  return $result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min = min($array);\n\
    $max = max($array);\n$length = count($array);\nfor ($i = 0; $i < $length; $i++)\
    \ {\n    if ($array[$i] == $min) {\n        $result[] = 'One';\n    }\n    elseif\
    \ ($array[$i] == $max) {\n        $result[] = 'Nine';\n    }\n    elseif ($array[$i]\
    \ == $max - 1) {\n        $result[] = 'Eight';\n    }\n    elseif ($array[$i]\
    \ == $max - 2) {\n        $result[] = 'Seven';\n    }\n    elseif ($array[$i]\
    \ == $max - 3) {\n        $result[] = 'Six';\n    }\n    elseif ($array[$i] ==\
    \ $max - 4) {\n        $result[] = 'Five';\n    }\n    elseif ($array[$i] == $max\
    \ - 5) {\n        $result[] = 'Four';\n    }\n    elseif ($array[$i] == $max -\
    \ 6) {\n        $result[] = '\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmppwg4r1tl.php
    on line 59

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  krsort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76_gch44.php:36\n\
    Stack trace:\n#0 /tmp/tmp76_gch44.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp76_gch44.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $digit) {\n    $result[] = array_search($digit,\
    \ $range);\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n\
    \    return $v < 10 ? $v : \"One\";\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine(range(1, 9), $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ dscore=2 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(2, 1, 1,\
    \ 4, 5, 8, 2, 3);\n$array = array_filter($array, function($v){\n    return $v\
    \ > 0 && $v < 10;\n});\n$array = array_map(function($v){\n    return $v < 10 ?\
    \ $v : \"One\";\n}, $array);\n$array = array_reverse($array);\n$array = array_combine(range(1,\
    \ 9), $array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array =\
    \ array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array, function($v){\n\
    \    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n    return\
    \ $v < 10 ? $v : \"One\";\n}, $array);\n$array = array_reverse($array);\n$array\
    \ = array_combine(range(1, 9), $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8,\
    \ 2, 3);\n$array = array_filter($array, function($v){\n    return $v > 0 && $v\
    \ < 10;\n});\n$array = array_map(function($v){\n    return $v < 10 ? $v : \"One\"\
    ;\n}, $array);\n$array = array_reverse($array);\n$array = array_combine(range(1,\
    \ 9), $array);\n</code>\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcdkexi0b.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value >= 1 && $value <= 9 ? $value :\
    \ \"One\";\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    <?php\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n$array =\
    \ array_map(function($v){\n    return $v >= 1 && $v <= 9 ? $v : \"One\";\n}, $array);\n\
    print_r($array);\n</code>\n<|/ a tags=arrays,php dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $v >= 1 && $v <= 9 ? $v : \"One\"\
    ;\n}, $array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $v >= 1 && $v <= 9 ? $v : \"One\"\
    ;\n}, $array);\nprint_r($array);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease\
    \ add some explanation to your answer such that others can learn from it\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\",\
    \ \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $v >= 1 && $v <= 9 ? $v : \"One\"\
    ;\n}, $array);\nprint_r($array);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(\"\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzfi_8j5g.php
    on line 27

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $min = floor($min);\n  $max = ceil($max);\n  $range = range($min,\
    \ $max);\n  $reversed = array_reverse($range);\n  $result = array();\n  foreach\
    \ ($reversed as $digit) {\n    $result[] = name_by_digit($digit);\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_digit()\
    \ in /tmp/tmpakmxiarb.php:30\nStack trace:\n#0 /tmp/tmpakmxiarb.php(36): by_length(Array)\n\
    #1 /tmp/tmpakmxiarb.php(40): candidate(Array)\n#2 /tmp/tmpakmxiarb.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpakmxiarb.php on line 30\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value ? $names[$value] : \"?\";\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on line 23\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpgkla25qi.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpgkla25qi.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkla25qi.php:33\n\
    Stack trace:\n#0 /tmp/tmpgkla25qi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgkla25qi.php\
    \ on line 33\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len === 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $min = min($min, $max);\n  $max\
    \ = max($min, $max);\n  $digits = $max - $min + 1;\n  $digits = $digits < 10 ?\
    \ 10 : $digits;\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n   \
    \ $result[] = str_pad(\n      strval($arr[$i]),\n      $digits,\n      strval($min\
    \ + $i),\n      '0',\n      STR_PAD_LEFT\n    );\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ArgumentCountError: str_pad() expects at most 4\
    \ arguments, 5 given in /tmp/tmpuxcpotl8.php:32\nStack trace:\n#0 /tmp/tmpuxcpotl8.php(32):\
    \ str_pad('2', 10, '1', '0', 0)\n#1 /tmp/tmpuxcpotl8.php(39): by_length(Array)\n\
    #2 /tmp/tmpuxcpotl8.php(43): candidate(Array)\n#3 /tmp/tmpuxcpotl8.php(50): test()\n\
    #4 {main}\n  thrown in /tmp/tmpuxcpotl8.php on line 32\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $arr =\
    \ array_reverse($arr);\n  $arr = array_map(function($n) {\n    return $n == '-'\
    \ ? \"One\" : $n == '-' ? \"Nine\" : $n == '-' ? \"Ten\" : $n == '-' ? \"Eleven\"\
    \ : $n == '-' ? \"Twelve\" : $n == '-' ? \"Thirteen\" : $n == '-' ? \"Fourteen\"\
    \ : $n == '-' ? \"Fifteen\" : $n == '-' ? \"Sixteen\" : $n == '-' ? \"Seventeen\"\
    \ : $n == '-' ? \"Eighteen\" : $n == '-' ? \"Nineteen\" : $n == '-' ? \"Twenty\"\
    \ : $n == '-' ? \"Twenty one\" : $n == '-' ? \"Twenty two\" : $n == '-' ? \"Twenty\
    \ three\" : $n == '-' ? \"Twenty four\" : $n == '-' ? \"Twenty five\" : $n ==\
    \ '-' ? \"Twenty six\" : $n == '-' ? \"Twenty seven\" : $n == '-' ? \"Twenty eight\"\
    \ : $n == '-' ? \"Twenty nine\" : $n == '-' ? \"Thirty\" : $n == '-' ? \"Thirty\
    \ one\" : $n == '-' ? \"Thirty two\" : $n == '-' ? \"Thirty three\" : $n == '-'\
    \ ? \"Thirty four\" : $n == '-' ? \"Thirty five\" : $n == '-' ? \"Thirty six\"\
    \ : $n == '-' ? \"Thirty seven\" : $n == '-' ? \"Thirty eight\" : $n == '-' ?\
    \ \"Thirty nine\" : $n == '-' ? \"Forty\" : $n == '-' ? \"Forty one\" : $n ==\
    \ '-' ? \"Forty two\" : $n == '-' ? \"Forty three\" : $n == '-' ? \"Forty four\"\
    \ : $n == '-' ? \"Forty five\" : $n == '-' ? \"Forty six\" : $n == '-' ? \"Forty\
    \ seven\" : $n == '-' ? \"Forty eight\" : $n == '-' ? \"Forty nine\" : $n == '-'\
    \ ? \"Fifty\" : $n == '-' ? \"Fifty one\" : $n == '-' ? \"Fifty two\" : $n ==\
    \ '-' ? \"Fifty three\" : $n == '-' ? \"Fifty \nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Eight" in /tmp/tmpe2_rgti2.php
    on line 26

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = max($len, $max - $min\
    \ + 1);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = str_pad(1 + $i, $len - $i, $arr[$i], STR_PAD_LEFT);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3_bfubv.php:34\n\
    Stack trace:\n#0 /tmp/tmpr3_bfubv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr3_bfubv.php\
    \ on line 34\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  foreach ($reversed as $i => $val) {\n\
    \    $reversed[$i] = $names[$val];\n  }\n  return $reversed;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on line 24\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nWarning: Undefined variable $names in /tmp/tmp9guqnzcg.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp9guqnzcg.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9guqnzcg.php:34\n\
    Stack trace:\n#0 /tmp/tmp9guqnzcg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9guqnzcg.php\
    \ on line 34\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $arr[$i];\n  }\n  sort($result);\n  $len = count($result);\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    $result[$i] = $names[$result[$i]];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpiqoh1w73.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpiqoh1w73.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqoh1w73.php:36\n\
    Stack trace:\n#0 /tmp/tmpiqoh1w73.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpiqoh1w73.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    }\n  \
    \  elseif ($arr[$i] >= 1 && $arr[$i] <= 9) {\n      $result[] = chr($arr[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoofh6f86.php:41\n\
    Stack trace:\n#0 /tmp/tmpoofh6f86.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoofh6f86.php\
    \ on line 41\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $min = max($min, 1);\n  $max\
    \ = min($max, 9);\n  $len = strlen($arr[0]);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    $result[$i] = $arr[$i];\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = $names[$arr[$i]];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: Array sizes are inconsistent in /tmp/tmp4xbopps1.php:28\n\
    Stack trace:\n#0 /tmp/tmp4xbopps1.php(28): array_multisort(Array, 3, Array)\n\
    #1 /tmp/tmp4xbopps1.php(36): by_length(Array)\n#2 /tmp/tmp4xbopps1.php(40): candidate(Array)\n\
    #3 /tmp/tmp4xbopps1.php(47): test()\n#4 {main}\n  thrown in /tmp/tmp4xbopps1.php\
    \ on line 28\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $sorted\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $sorted[$value] = $key;\n    }\n  }\n  krsort($sorted);\n  foreach\
    \ ($sorted as $key => $value) {\n    $sorted[$key] = $names[$value];\n  }\n  return\
    \ $sorted;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp847w3y56.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp847w3y56.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp847w3y56.php:36\n\
    Stack trace:\n#0 /tmp/tmp847w3y56.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp847w3y56.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $val) {\n    $result[] = str_pad($val, 2, \"0\", STR_PAD_LEFT);\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawk35x6u.php:35\n\
    Stack trace:\n#0 /tmp/tmpawk35x6u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpawk35x6u.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array_key_exists($i, $arr) ? $arr[$i] : '';\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = array_key_exists($i, $arr) ? $arr[$i] : '';\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeamqsbpp.php:36\n\
    Stack trace:\n#0 /tmp/tmpeamqsbpp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpeamqsbpp.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  krsort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp76_gch44.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp76_gch44.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76_gch44.php:36\n\
    Stack trace:\n#0 /tmp/tmp76_gch44.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp76_gch44.php\
    \ on line 36\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($arr[$i] == $min) {\n      $result[] = 'One';\n    } else if ($arr[$i]\
    \ == $max) {\n      $result[] = 'Nine';\n    } else {\n      $result[] = sprintf('%u',\
    \ ($arr[$i] - $min));\n    }\n  }\n  return array_reverse($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwf2t9cey.php:42\n\
    Stack trace:\n#0 /tmp/tmpwf2t9cey.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwf2t9cey.php\
    \ on line 42\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array($item, \"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n \
    \   }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46own6es.php:29\n\
    Stack trace:\n#0 /tmp/tmp46own6es.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp46own6es.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  return array_reverse($result);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$arr = array(2, 1, 1,\
    \ 4, 5, 8, 2, 3);\n$result = array();\nforeach($arr as $key => $value) {\n   \
    \ if($value >= 1 && $value <= 9) {\n        $result[$value] = $key;\n    }\n}\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach($arr as $key\
    \ => $value) {\n    if($value >= 1 && $value <= 9) {\n        $result[$value]\
    \ = $key;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result\
    \ = array();\nforeach($arr as $key => $value) {\n    if($value >= 1 && $value\
    \ <= 9) {\n        $result[$value] = $key;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2,\
    \ 3);\n$result = array();\nforeach($arr as $key => $value) {\n    if($value >=\
    \ 1 && $value <= 9) {\n        $result[$value] = $key;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = array(2, 1,\
    \ 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach($arr as $key => $value) {\n\
    \    if($value >= 1 && $value <= 9) {\n        $result[$value] = $key;\n    }\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach($arr\
    \ as $key => $value) {\n    if($value >= 1 && $value <= 9) {\n        $result[$value]\
    \ = $key;\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=1 |>\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6z4365_x.php
    on line 26

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $digit) {\n    $result[] = array_search($digit,\
    \ range(1, 9));\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4da8kku7.php:38\n\
    Stack trace:\n#0 /tmp/tmp4da8kku7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4da8kku7.php\
    \ on line 38\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n\
    \      $result[] = 'One';\n    }\n    if ($arr[$i] == $max) {\n      $result[]\
    \ = 'Nine';\n    }\n    if ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n\
    \    }\n    if ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n \
    \   if ($arr[$i] == $min + 2) {\n      $result[] = 'Four';\n    }\n    if ($arr[$i]\
    \ == $max - 2) {\n      $result[] = 'Five';\n    }\n    if ($arr[$i] == $min +\
    \ 3) {\n      $result[] = 'Six';\n    }\n    if ($arr[$i] == $max - 3) {\n   \
    \   $result[] = 'Seven';\n    }\n    if ($arr[$i] == $min + 4) {\n      $result[]\
    \ = 'Eight';\n    }\n    if ($arr[$i] == $max - 4) {\n      $result[] = 'Nine';\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpn16bm3.php:63\n\
    Stack trace:\n#0 /tmp/tmpbpn16bm3.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpbpn16bm3.php\
    \ on line 63\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $val) {\n    $result[] = name_by_number($val);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmp5vcg0963.php:28\nStack trace:\n#0 /tmp/tmp5vcg0963.php(34): by_length(Array)\n\
    #1 /tmp/tmp5vcg0963.php(38): candidate(Array)\n#2 /tmp/tmp5vcg0963.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5vcg0963.php on line 28\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n  $reversed\
    \ = array_reverse($range);\n  $result = array();\n  foreach ($reversed as $key\
    \ => $value) {\n    $result[$value] = $key;\n  }\n  return $result;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI like your solution, but I wonder if there is a way\
    \ to avoid the loop. Maybe with array_map?\n<|/ c |>\n<| c |>\nI added a solution\
    \ without looping through the array. Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\n$array = array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven',\
    \ 'Eight', 'Nine');\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmporn2ztyg.php
    on line 28

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = $min;\
    \ $i <= $max; $i++) {\n    $result[] = str_pad($i, $len - 1, $arr[$i]);\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 8 in /tmp/tmpi4s0zojn.php on line 21\n\n\
    Deprecated: str_pad(): Passing null to parameter #3 ($pad_string) of type string\
    \ is deprecated in /tmp/tmpi4s0zojn.php on line 21\n\nFatal error: Uncaught ValueError:\
    \ str_pad(): Argument #3 ($pad_string) must be a non-empty string in /tmp/tmpi4s0zojn.php:21\n\
    Stack trace:\n#0 /tmp/tmpi4s0zojn.php(21): str_pad('8', 7, '')\n#1 /tmp/tmpi4s0zojn.php(27):\
    \ by_length(Array)\n#2 /tmp/tmpi4s0zojn.php(31): candidate(Array)\n#3 /tmp/tmpi4s0zojn.php(38):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpi4s0zojn.php on line 21\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) return array();\n  $len = count($arr);\n  $result\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = $arr[$i];\n\
    \  }\n  sort($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $key < 9 ? $value : $key - 9;\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like your solution, but I feel like it would be better to use\
    \ a `foreach` loop and `break` once the condition is met.\n<|/ c |>\n<| c |>\n\
    I agree with you. I've updated my answer with a foreach loop and a break.\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$array = array(\n    array('One', 'Two',\
    \ 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten',\
    \ 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen',\
    \ 'Eighteen', 'Nineteen'),\n    array('Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty',\
    \ 'Seventy', 'Eighty', 'Ninety'),\n    array('One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten', 'Eleven', 'Twelve', 'Thirteen',\
    \ 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'),\n  \
    \  array('Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'),\n\
    \    array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n\
    \    array('Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen',\
    \ 'Seventeen', 'Eighteen', 'Nineteen'),\n    array('Twenty', 'Thirty', 'Forty',\
    \ 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'),\n    array('One', 'Two', 'Three',\
    \ 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten', 'Eleven',\
    \ 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen',\
    \ 'Nineteen'),\n    array('Tw\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdcad3g69.php
    on line 27

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $sorted = array();\n  for ($i = 0; $i < $len; $i++) {\n    $sorted[$i]\
    \ = $arr[$i];\n  }\n  array_multisort($sorted, SORT_DESC, $arr);\n  $reversed\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    $reversed[$i] = $arr[$i];\n\
    \  }\n  array_multisort($reversed, SORT_DESC, $reversed);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $result[] = $names[$reversed[$i]];\n \
    \ }\n  return $result;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\n\
    This works great, thank you! I added a little bit of code to make it more readable\
    \ and added a little bit of error checking.\n<|/ c |>\n<| c |>\nI added a version\
    \ that doesn't use array_multisort\n<|/ c |>\n<| a tags=php,sorting,arrays |>\n\
    <code>\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n$array =\
    \ array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($array, array_reverse($array));\n$array = array_reverse($array);\n\
    $array = array_merge($\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpn5_stpao.php
    on line 35

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $digits = range($min, $max +\
    \ 1);\n  $reversed = array_reverse($digits);\n  $result = array();\n  foreach\
    \ ($digits as $digit) {\n    $result[] = strpos($reversed, $digit) ? $names[$digit]\
    \ : $digit;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strpos(): Argument #1 ($haystack) must\
    \ be of type string, array given in /tmp/tmp5zh5p_bl.php:25\nStack trace:\n#0\
    \ /tmp/tmp5zh5p_bl.php(25): strpos(Array, 1)\n#1 /tmp/tmp5zh5p_bl.php(31): by_length(Array)\n\
    #2 /tmp/tmp5zh5p_bl.php(35): candidate(Array)\n#3 /tmp/tmp5zh5p_bl.php(42): test()\n\
    #4 {main}\n  thrown in /tmp/tmp5zh5p_bl.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n\
    \    }\n    elseif ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n    }\n\
    \    elseif ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n    elseif\
    \ ($arr[$i] == $min + 2) {\n      $result[] = 'Four';\n    }\n    elseif ($arr[$i]\
    \ == $max - 2) {\n      $result[] = 'Five';\n    }\n    elseif ($arr[$i] == $min\
    \ + 3) {\n      $result[] = 'Six';\n    }\n    elseif ($arr[$i] == $max - 3) {\n\
    \      $result[] = 'Seven';\n    }\n    elseif ($arr[$i] == $min + 4) {\n    \
    \  $result[] = 'Eight';\n    }\n    elseif ($arr[$i] == $max - 4) {\n      $result[]\
    \ = 'Nine';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t3fm7lw.php:62\n\
    Stack trace:\n#0 /tmp/tmp_t3fm7lw.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp_t3fm7lw.php\
    \ on line 62\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $len = count($arr);\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array(\n      'name' => $arr[$i],\n      'value' => $i,\n    );\n  }\n  usort($result,\
    \ 'cmp');\n  $len = count($result);\n  for ($i = 0; $i < $len; $i++) {\n    $result[$i]['name']\
    \ = $result[$i]['name'];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: usort(): Argument #2 ($callback) must\
    \ be a valid callback, function \"cmp\" not found or invalid function name in\
    \ /tmp/tmpn0z3f5fy.php:26\nStack trace:\n#0 /tmp/tmpn0z3f5fy.php(26): usort(Array,\
    \ 'cmp')\n#1 /tmp/tmpn0z3f5fy.php(35): by_length(Array)\n#2 /tmp/tmpn0z3f5fy.php(39):\
    \ candidate(Array)\n#3 /tmp/tmpn0z3f5fy.php(46): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpn0z3f5fy.php on line 26\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = array($num, $names[$num - 1]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on line 18\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nWarning: Undefined variable $names in /tmp/tmpw5_nv6yd.php on\
    \ line 18\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpw5_nv6yd.php\
    \ on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5_nv6yd.php:29\n\
    Stack trace:\n#0 /tmp/tmpw5_nv6yd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw5_nv6yd.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = array();\n  for ($i = 0; $i < $len; ++$i) {\n\
    \    if ($min <= $arr[$i] && $arr[$i] <= $max) {\n      $result[] = name_by_length($arr[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_length()\
    \ in /tmp/tmpmal7beux.php:27\nStack trace:\n#0 /tmp/tmpmal7beux.php(34): by_length(Array)\n\
    #1 /tmp/tmpmal7beux.php(38): candidate(Array)\n#2 /tmp/tmpmal7beux.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmal7beux.php on line 27\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $length = count($arr);\n  foreach ($arr as $key => $value) {\n\
    \    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key + 1;\n  \
    \  }\n  }\n  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmpi2vsa43h.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpi2vsa43h.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2vsa43h.php:36\n\
    Stack trace:\n#0 /tmp/tmpi2vsa43h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi2vsa43h.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your\
    \ solution, very elegant. However I prefer my solution as it uses less memory\
    \ and less processing power. Thanks for your effort though.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n<?php\n$array = array(\n    array('One', 'Two', 'Three', 'Four',\
    \ 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten', 'Eleven', 'Twelve',\
    \ 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'),\n\
    \    array('Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty',\
    \ 'Ninety'),\n    array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven',\
    \ 'Eight', 'Nine'),\n    array('Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\
    \ 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'),\n    array('Twenty',\
    \ 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'),\n    array('One',\
    \ 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten',\
    \ 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen',\
    \ 'Eighteen', 'Nineteen'),\n    array('Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty',\
    \ 'Seventy', 'Eighty', 'Ninety'),\n    array('One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'),\n    array('Ten', 'Eleven', 'Twelve', 'Thirteen',\
    \ 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'),\n  \
    \  array('Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'),\n\
    \    array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n\
    \    array('Ten', 'Eleven', 'Twelve', '\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcnimetw2.php
    on line 23

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i = $min; $i\
    \ <= $max; $i++) {\n    $result[] = str_pad($i, 2, \"0\", STR_PAD_LEFT);\n  }\n\
    \  return array_reverse($result);\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$arr = array_map(function($v){\n\
    \    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n}, $arr);\n$arr = array_reverse($arr);\n\
    $arr = array_combine(range(1, 9), $arr);\nprint_r($arr);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=arrays,php,sorting |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8,\
    \ 2, 3);\n$arr = array_filter($arr, function($v){\n    return $v > 0 && $v < 10;\n\
    });\n$arr = array_map(function($v){\n    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n\
    }, $arr);\n$arr = array_reverse($arr);\n$arr = array_combine(range(1, 9), $arr);\n\
    print_r($arr);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr, function($v){\n    return $v\
    \ > 0 && $v < 10;\n});\n$arr = array_map(function($v){\n    return str_pad($v,\
    \ 2, \"0\", STR_PAD_LEFT);\n}, $arr);\n$arr = array_reverse($arr);\n$arr = array_combine(range(1,\
    \ 9), $arr);\nprint_r($arr);\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a\
    \ tags=arrays,php,sorting |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n\
    $arr = array_filter($arr, function($v){\n    return $v > 0 && $v < 10;\n});\n\
    $arr = array_map(function($v){\n    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n\
    }, $arr);\n$arr = array_reverse($arr);\n$arr = array_combine(range(1, 9), $arr);\n\
    print_r($arr);\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxsbu5je7.php
    on line 26

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] ==\
    \ $min) {\n      $result[] = 'One';\n    }\n    if ($arr[$i] == $max) {\n    \
    \  $result[] = 'Nine';\n    }\n    if ($arr[$i] == $min + 1) {\n      $result[]\
    \ = 'Two';\n    }\n    if ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n\
    \    }\n    if ($arr[$i] == $min + 2) {\n      $result[] = 'Four';\n    }\n  \
    \  if ($arr[$i] == $max - 2) {\n      $result[] = 'Five';\n    }\n    if ($arr[$i]\
    \ == $min + 3) {\n      $result[] = 'Six';\n    }\n    if ($arr[$i] == $max -\
    \ 3) {\n      $result[] = 'Seven';\n    }\n    if ($arr[$i] == $min + 4) {\n \
    \     $result[] = 'Eight';\n    }\n    if ($arr[$i] == $max - 4) {\n      $result[]\
    \ = 'Nine';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r9jobx6.php:65\n\
    Stack trace:\n#0 /tmp/tmp0r9jobx6.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp0r9jobx6.php\
    \ on line 65\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else {\n      $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return array_reverse($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmt2ix_8u.php:39\n\
    Stack trace:\n#0 /tmp/tmpmt2ix_8u.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmt2ix_8u.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$array = array(\n    1 => 1,\n    2 =>\
    \ 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 =>\
    \ 8,\n    9 => 9,\n);\n\n$array = array_flip($array);\n$array = array_intersect_key($array,\
    \ array_flip($array));\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphx7qkhad.php
    on line 23

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else {\n      $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sxo0tmv.php:39\n\
    Stack trace:\n#0 /tmp/tmp1sxo0tmv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1sxo0tmv.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n\
    \      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpioor4swq.php:37\n\
    Stack trace:\n#0 /tmp/tmpioor4swq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpioor4swq.php\
    \ on line 37\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $len = count($arr);\n  for ($i = 0; $i < $len; ++$i) {\n    $result[$i]\
    \ = $arr[$i];\n  }\n  sort($result);\n  for ($i = 0; $i < $len; ++$i) {\n    $result[$i]\
    \ = $names[$result[$i]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on line 25\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nWarning: Undefined variable $names in /tmp/tmpxow4n4db.php on\
    \ line 25\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpxow4n4db.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxow4n4db.php:35\n\
    Stack trace:\n#0 /tmp/tmpxow4n4db.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxow4n4db.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = $min;\
    \ $i <= $max; $i++) {\n    $result[] = str_pad($i, $len - 1, \"0\", STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpm12h55.php:31\n\
    Stack trace:\n#0 /tmp/tmprpm12h55.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprpm12h55.php\
    \ on line 31\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeowtmp1o.php:39\n\
    Stack trace:\n#0 /tmp/tmpeowtmp1o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpeowtmp1o.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n\
    \    }\n    elseif ($arr[$i] == $max - 1) {\n      $result[] = 'Eight';\n    }\n\
    \    elseif ($arr[$i] == $max - 2) {\n      $result[] = 'Seven';\n    }\n    elseif\
    \ ($arr[$i] == $max - 3) {\n      $result[] = 'Six';\n    }\n    elseif ($arr[$i]\
    \ == $max - 4) {\n      $result[] = 'Five';\n    }\n    elseif ($arr[$i] == $max\
    \ - 5) {\n      $result[] = 'Four';\n    }\n    elseif ($arr[$i] == $max - 6)\
    \ {\n      $result[] = 'Three';\n    }\n    elseif ($arr[$i] == $max - 7) {\n\
    \      $result[] = 'Two';\n    }\n    elseif ($arr[$i] == $max - 8) {\n      $result[]\
    \ = 'One';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbz0z0udr.php:62\n\
    Stack trace:\n#0 /tmp/tmpbz0z0udr.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpbz0z0udr.php\
    \ on line 62\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $digits = range($min, $max);\n  $reversed = array_reverse($digits);\n\
    \  $result = array();\n  foreach ($digits as $digit) {\n    $result[] = str_replace($digit,\
    \ $reversed[$digit], $names[$digit]);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string
    is deprecated in /tmp/tmp9kce_3t_.php on line 28


    Warning: Undefined variable $names in /tmp/tmp9kce_3t_.php on line 28


    Warning: Trying to access array offset on value of type null in /tmp/tmp9kce_3t_.php
    on line 28


    Deprecated: str_replace(): Passing null to '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  if ($min === $max) {\n    return array($min);\n  }\n  $result = [];\n  for\
    \ ($i = 0; $i < $len; ++$i) {\n    if ($arr[$i] === $min) {\n      $result[] =\
    \ 'One';\n    }\n    if ($arr[$i] === $max) {\n      $result[] = 'Nine';\n   \
    \ }\n    if ($arr[$i] >= 1 && $arr[$i] <= 9) {\n      $result[] = str_pad($arr[$i],\
    \ 3, '0', STR_PAD_LEFT);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4sp3g_p.php:47\n\
    Stack trace:\n#0 /tmp/tmpx4sp3g_p.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpx4sp3g_p.php\
    \ on line 47\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value ? $names[$value] : '?';\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on line 23\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmpuiashmhj.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpuiashmhj.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiashmhj.php:33\n\
    Stack trace:\n#0 /tmp/tmpuiashmhj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuiashmhj.php\
    \ on line 33\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = [];\n  for ($i = 0; $i < $len; $i++) {\n   \
    \ if ($arr[$i] == $min) {\n      $result[] = 'One';\n    }\n    elseif ($arr[$i]\
    \ == $max) {\n      $result[] = 'Nine';\n    }\n    elseif ($arr[$i] >= 1 && $arr[$i]\
    \ <= 9) {\n      $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$numbers = array(2, 1, 1, 4, 5, 8, 2, 3);\n$numbers = array_reverse($numbers);\n\
    $numbers = array_map(function($number) {\n    return str_pad($number, 2, '0',\
    \ STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n$numbers\
    \ = array_filter($numbers, function($number) {\n    return $number > 0 && $number\
    \ < 10;\n});\n$numbers = array_map(function($number) {\n    return str_pad($number,\
    \ 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_filter($numbers, function($number) {\n    return $number > 0\
    \ && $number < 10;\n});\n$numbers = array_map(function($number) {\n    return\
    \ str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_filter($numbers, function($number) {\n    return $number > 0\
    \ && $number < 10;\n});\n$numbers = array_map(function($number) {\n    return\
    \ str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_filter($numbers, function($number) {\n    return $number > 0\
    \ && $number < 10;\n});\n$numbers = array_map(function($number) {\n    return\
    \ str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_filter($numbers, function($number) {\n    return $number > 0\
    \ && $number < 10;\n});\n$numbers = array_map(function($number) {\n    return\
    \ \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp81zfyxiq.php
    on line 38

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 1) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max) {\n \
    \     $result[] = name_by_index($arr[$i]);\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_index()\
    \ in /tmp/tmphjtbusf3.php:24\nStack trace:\n#0 /tmp/tmphjtbusf3.php(31): by_length(Array)\n\
    #1 /tmp/tmphjtbusf3.php(35): candidate(Array)\n#2 /tmp/tmphjtbusf3.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmphjtbusf3.php on line 24\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array($item);\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn656i47.php:29\n\
    Stack trace:\n#0 /tmp/tmpjn656i47.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjn656i47.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = str_pad($num, 2, \"0\", STR_PAD_LEFT);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3oh5jday.php:29\n\
    Stack trace:\n#0 /tmp/tmp3oh5jday.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3oh5jday.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) return array();\n  $len = count($arr);\n  if\
    \ ($len == 0) return array();\n  $min = min($arr);\n  $max = max($arr);\n  $result\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n\
    \      $result[] = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[]\
    \ = 'Nine';\n    } else {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr2 = array();\n$arr3 =\
    \ array();\n$arr4 = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n\
    $arr8 = array();\n$arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12\
    \ = array();\n$arr13 = array();\n$arr14 = array();\n$arr15 = array();\n$arr16\
    \ = array();\n$arr17 = array();\n$arr18 = array();\n$arr19 = array();\n$arr20\
    \ = array();\n$arr21 = array();\n$arr22 = array();\n$arr23 = array();\n$arr24\
    \ = array();\n$arr25 = array();\n$arr26 = array();\n$arr27 = array();\n$arr28\
    \ = array();\n$arr29 = array();\n$arr30 = array();\n$arr31 = array();\n$arr32\
    \ = array();\n$arr33 = array();\n$arr34 = array();\n$arr35 = array();\n$arr36\
    \ = array();\n$arr37 = array();\n$arr38 = array();\n$arr39 = array();\n$arr40\
    \ = array();\n$arr41 = array();\n$arr42 = array();\n$arr43 = array();\n$arr44\
    \ = array();\n$arr45 = array();\n$arr46 = array();\n$arr47 = array();\n$arr48\
    \ = array();\n$arr49 = array();\n$arr50 = array();\n$arr51 = array();\n$arr52\
    \ = array();\n$arr53 = array();\n$arr54 = array();\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5te5dksf.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $digits = range($min, $max + 1);\n  $reversed = array_reverse($digits);\n\
    \  $names = array();\n  foreach ($digits as $digit) {\n    $names[$digit] = $digits[$digit];\n\
    \  }\n  foreach ($reversed as $digit) {\n    $names[$digit] = $names[$digit] .\
    \ ' ' . $names[$digit + 1];\n  }\n  return $names;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 9 in /tmp/tmpj_n572dz.php on line 28\n\n\
    Warning: Undefined array key 10 in /tmp/tmpj_n572dz.php on line 31\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpj_n572dz.php:41\nStack trace:\n\
    #0 /tmp/tmpj_n572dz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpj_n572dz.php\
    \ on line 41\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  $length = count($arr);\n  for ($i = 0; $i < $length; $i++) {\n\
    \    $result[] = str_replace(range(1,9), array('One', 'Two', 'Three', 'Four',\
    \ 'Five', 'Six', 'Seven', 'Eight', 'Nine'), $arr[$i]);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv0jz0qg.php:31\n\
    Stack trace:\n#0 /tmp/tmpnv0jz0qg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnv0jz0qg.php\
    \ on line 31\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = 0; $i\
    \ < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n   \
    \ } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n  \
    \    $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n  }\n  return\
    \ $result;\n}\n</code>\n<|/ a |>\n<| a |>\n<code>\n<?php\n$numbers = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\n$numbers = array_filter($numbers, function($number) {\n\
    \    return $number > 0 && $number < 10;\n});\n$numbers = array_map(function($number)\
    \ {\n    return str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers\
    \ = array_reverse($numbers);\n$numbers = array_map(function($number) {\n    return\
    \ str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_combine($numbers, $numbers);\nprint_r($numbers);\n</code>\n<|/\
    \ a dscore=0 tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers\
    \ = array(2, 1, 1, 4, 5, 8, 2, 3);\n$numbers = array_filter($numbers, function($number)\
    \ {\n    return $number > 0 && $number < 10;\n});\n$numbers = array_map(function($number)\
    \ {\n    return str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers\
    \ = array_reverse($numbers);\n$numbers = array_map(function($number) {\n    return\
    \ str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers = array_unique($numbers);\n\
    $numbers = array_combine($numbers, $numbers);\nprint_r($numbers);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers = array(2, 1,\
    \ 1, 4, 5, 8, 2, 3);\n$numbers = array_filter($numbers, function($number) {\n\
    \    return $number > 0 && $number < 10;\n});\n$numbers = array_map(function($number)\
    \ {\n    return str_pad($number, 2, '0', STR_PAD_LEFT);\n}, $numbers);\n$numbers\
    \ = array_reverse($numbers);\n$numbers = array_\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpy6bskkjv.php
    on line 31

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  $result = [];\n  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $arr[$i]\
    \ && $arr[$i] <= $max) {\n      $result[] = strval($arr[$i]);\n    }\n  }\n  return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($value) {\n    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value)\
    \ {\n    return strval($value);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine(range(1, 9), $array);\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($value) {\n    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value)\
    \ {\n    return strval($value);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine(range(1, 9), $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($value) {\n    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value)\
    \ {\n    return strval($value);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine(range(1, 9), $array);\n</code>\n<|/ a dscore=1 tags=php,arrays,sorting\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array\
    \ = array_filter($array, function($value) {\n    return $value >= 1 && $value\
    \ <= 9;\n});\n$array = array_map(function($value) {\n    return strval($value);\n\
    }, $array);\n$array = array_reverse($array);\n$array = array_combine(range(1,\
    \ 9), $array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5jpl902j.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($arr[$i] == $min) {\n      $result[] = 'One';\n    }\n    elseif ($arr[$i]\
    \ == $max) {\n      $result[] = 'Nine';\n    }\n    elseif ($arr[$i] >= 1 && $arr[$i]\
    \ <= 9) {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution,\
    \ but I wonder why you used `str_pad` instead of `sprintf`?\n<|/ c |>\n<| c |>\n\
    Because I didn't know about `sprintf`. I thought it would be more elegant to use\
    \ string concatenation instead of `str_pad`.\n<|/ c |>\n<| c |>\nI guess I should\
    \ add that `sprintf` will work just as well for strings with leading zeros, as\
    \ `str_pad` will for integers. So `sprintf('%02d', $i)` will pad `i` with leading\
    \ zeros if `i` is an integer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\n    array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\"),\n    array(\"Ten\", \"Eleven\", \"Twelve\"\
    , \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\"\
    , \"Nineteen\"),\n    array(\"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\"\
    , \"Seventy\", \"Eighty\", \"Ninety\"),\n    array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"),\n    array(\"\
    Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\"\
    , \"Seventeen\", \"Eighteen\", \"Nineteen\"),\n    array(\"Twenty\", \"Thirty\"\
    , \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"),\n   \
    \ array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwxx52dsu.php
    on line 38

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  if ($min == $max) {\n    return $arr;\n  }\n  $result = [];\n  for ($i = 0;\
    \ $i < $len; ++$i) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n\
    \      $result[] = sprintf('%s%s', $arr[$i], $i);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeuokvnp_.php:45\n\
    Stack trace:\n#0 /tmp/tmpeuokvnp_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpeuokvnp_.php\
    \ on line 45\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else if ($arr[$i] == $max - 1) {\n      $result[] = 'Eight';\n    } else\
    \ if ($arr[$i] == $max - 2) {\n      $result[] = 'Seven';\n    } else if ($arr[$i]\
    \ == $max - 3) {\n      $result[] = 'Six';\n    } else if ($arr[$i] == $max -\
    \ 4) {\n      $result[] = 'Five';\n    } else if ($arr[$i] == $max - 5) {\n  \
    \    $result[] = 'Four';\n    } else if ($arr[$i] == $max - 6) {\n      $result[]\
    \ = 'Three';\n    } else if ($arr[$i] == $max - 7) {\n      $result[] = 'Two';\n\
    \    } else if ($arr[$i] == $max - 8) {\n      $result[] = 'One';\n    }\n  }\n\
    \  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(1, 5, 3, 6, 4, 2, 9, 7, 8, 10);\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $v < 10 ? 'One' : $v < 20 ? 'Two'\
    \ : $v < 30 ? 'Three' : $v < 40 ? 'Four' : $v < 50 ? 'Five' : $v < 60 ? 'Six'\
    \ : $v < 70 ? 'Seven' : $v < 80 ? 'Eight' : $v < 90 ? 'Nine' : '';\n}, $array);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(1, 5, 3, 6, 4, 2, 9, 7, 8, 10);\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $v < 10 ? 'One' : $v < 20 ? 'Two'\
    \ : $v < 30 ? 'Three' : $v < 40 ? 'Four' : $v < 50 ? 'Five' : $v < 60 ? 'Six'\
    \ : $v < 70 ? 'Seven' : $v < 80 ? 'Eight' : $v < 90 ? 'Nine' : '';\n}, $array);\n\
    $array = array_reverse($array);\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmbs8dyoi.php
    on line 47

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num >= 1 && $num <= 9) {\n      $result[] = str_pad($num, 2, '0', STR_PAD_LEFT);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzs1qznjv.php:29\n\
    Stack trace:\n#0 /tmp/tmpzs1qznjv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzs1qznjv.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n$array = array(\n    1 => 2,\n    2 => 1,\n    3 => 1,\n    4 =>\
    \ 5,\n    5 => 8,\n    6 => 2,\n    7 => 3,\n    8 => 2,\n    9 => 1,\n);\n\n\
    $array = array_flip($array);\n$array = array_intersect_key($array, array_flip(range(1,\
    \ 9)));\n$array = array_flip($array);\n$array = array_values($array);\n\nvar_dump($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\n    1 =>\
    \ 2,\n    2 => 1,\n    3 => 1,\n    4 => 5,\n    5 => 8,\n    6 => 2,\n    7 =>\
    \ 3,\n    8 => 2,\n    9 => 1,\n);\n\n$array = array_flip($array);\n$array = array_intersect_key($array,\
    \ array_flip(range(1, 9)));\n$array = array_flip($array);\n$array = array_values($array);\n\
    \nvar_dump($array);\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n$array = array(\n    1 => 2,\n    2 => 1,\n    3 => 1,\n    4 =>\
    \ 5,\n    5 => 8,\n    6 => 2,\n    7 => 3,\n    8 => 2,\n    9 => 1,\n);\n\n\
    $array = array_flip($array);\n$array = array_intersect_key($array, array_flip(range(1,\
    \ 9)));\n$array = array_flip($array);\n$array = array_values($array);\n\nvar_dump($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n$array = array(\n    1 =>\
    \ 2,\n    2 => 1,\n    3 => 1,\n    4 => 5,\n    5 => 8,\n    6 => 2,\n    7 =>\
    \ 3,\n    8 => 2,\n    9 => 1,\n);\n\n$array = array_flip($array);\n$array = array_intersect_key($array,\
    \ array_flip(range(1, 9)));\n$array = array_flip($array);\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbv5lv68a.php
    on line 23

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $len = strlen($min);\n  $result = array();\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $result[] = str_replace(\n      array_keys($arr),\n\
    \      array_values($arr),\n      str_pad(\n        $arr[$i],\n        $len,\n\
    \        STR_PAD_LEFT\n      )\n    );\n  }\n  return $result;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = [2, 1, 1, 4, 5, 8, 2,\
    \ 3];\n$arr2 = [];\n$arr3 = [];\n$arr4 = array_count_values($arr);\n$arr5 = array_keys($arr4);\n\
    $arr6 = array_values($arr4);\n$arr7 = array_flip($arr5);\n$arr8 = array_flip($arr6);\n\
    $arr9 = $arr7 + $arr8;\n$arr10 = array_flip($arr9);\n$arr11 = array_flip($arr10);\n\
    $arr12 = array_flip($arr11);\n$arr13 = array_flip($arr12);\n$arr14 = array_flip($arr13);\n\
    $arr15 = array_flip($arr14);\n$arr16 = array_flip($arr15);\n$arr17 = array_flip($arr16);\n\
    $arr18 = array_flip($arr17);\n$arr19 = array_flip($arr18);\n$arr20 = array_flip($arr19);\n\
    $arr21 = array_flip($arr20);\n$arr22 = array_flip($arr21);\n$arr23 = array_flip($arr22);\n\
    $arr24 = array_flip($arr23);\n$arr25 = array_flip($arr24);\n$arr26 = array_flip($arr25);\n\
    $arr27 = array_flip($arr26);\n$arr28 = array_flip($arr27);\n$arr29 = array_flip($arr28);\n\
    $arr30 = array_flip($arr29);\n$arr31 = array_flip($arr30);\n$arr32 = array_flip($arr31);\n\
    $arr33 = array_flip($arr32);\n$arr34 = array_flip($arr\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgzr0eenl.php
    on line 39

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    $result[] = str_replace(\n      array('0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9'),\n      array('', '', '', '', '', '',\
    \ '', '', '', ''),\n      str_pad(\n        $arr[$i],\n        3,\n        '0',\n\
    \        STR_PAD_LEFT\n      )\n    );\n  }\n  $result = array_reverse($result);\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = str_replace(\n      array('0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9'),\n      array('', '', '', '', '',\
    \ '', '', '', '', ''),\n      $result[$i]\n    );\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj7s_ior.php:50\n\
    Stack trace:\n#0 /tmp/tmpvj7s_ior.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpvj7s_ior.php\
    \ on line 50\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max)\
    \ {\n      $result[] = name_by_index($arr[$i]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_index()\
    \ in /tmp/tmpwkkrujio.php:24\nStack trace:\n#0 /tmp/tmpwkkrujio.php(31): by_length(Array)\n\
    #1 /tmp/tmpwkkrujio.php(35): candidate(Array)\n#2 /tmp/tmpwkkrujio.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwkkrujio.php on line 24\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $mid = $min + (($max - $min) / 2);\n  $left = by_length($arr\
    \ & ~array($mid));\n  $right = by_length($arr & array($mid - 1));\n  return array_merge($left,\
    \ $right);\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Cannot perform bitwise not on array\
    \ in /tmp/tmprjibkx2l.php:25\nStack trace:\n#0 /tmp/tmprjibkx2l.php(31): by_length(Array)\n\
    #1 /tmp/tmprjibkx2l.php(35): candidate(Array)\n#2 /tmp/tmprjibkx2l.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmprjibkx2l.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len === 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min === $max) {\n    return\
    \ array($min);\n  }\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($arr[$i] === $min) {\n      $result[] = 'One';\n    } else if ($arr[$i]\
    \ === $max) {\n      $result[] = 'Nine';\n    } else {\n      $result[] = str_pad($arr[$i],\
    \ 2, '0', STR_PAD_LEFT);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jwuj681.php:42\n\
    Stack trace:\n#0 /tmp/tmp1jwuj681.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1jwuj681.php\
    \ on line 42\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = strval($value);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t0u7db.php:29\n\
    Stack trace:\n#0 /tmp/tmpl4t0u7db.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl4t0u7db.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  return array_reverse($result);\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr =\
    \ array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr, function($v){\n  \
    \  return $v >= 1 && $v <= 9;\n});\n$arr = array_map(function($v){\n    return\
    \ $v >= 1 && $v <= 9 ? 'One' : $v;\n}, $arr);\n$arr = array_reverse($arr);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(2, 1,\
    \ 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr, function($v){\n    return $v >=\
    \ 1 && $v <= 9;\n});\n$arr = array_map(function($v){\n    return $v >= 1 && $v\
    \ <= 9 ? 'One' : $v;\n}, $arr);\n$arr = array_reverse($arr);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr =\
    \ array_filter($arr, function($v){\n    return $v >= 1 && $v <= 9;\n});\n$arr\
    \ = array_map(function($v){\n    return $v >= 1 && $v <= 9 ? 'One' : $v;\n}, $arr);\n\
    $arr = array_reverse($arr);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr,\
    \ function($v){\n    return $v >= 1 && $v <= 9;\n});\n$arr = array_map(function($v){\n\
    \    return $v >= 1 && $v <= 9 ? 'One' : $v;\n}, $arr);\n$arr = array_reverse($arr);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr = array_filter($arr, function($v){\n\
    \    return $v >= 1 && $v <= 9;\n});\n$arr = array_map(function($v){\n    return\
    \ $v >= 1 && $v <= 9 ? 'One' : $v;\n}, \nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpq6wxcm1z.php
    on line 26

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    } else {\n\
    \      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n  }\n  return\
    \ $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$arr\
    \ = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$len = count($arr);\n\
    $min = min($arr);\n$max = max($arr);\nfor ($i = 0; $i < $len; $i++) {\n    if\
    \ ($arr[$i] == $min) {\n        $result[] = 'One';\n    } else if ($arr[$i] ==\
    \ $max) {\n        $result[] = 'Nine';\n    } else {\n        $result[] = str_pad($arr[$i],\
    \ 3, '0', STR_PAD_LEFT);\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$min =\
    \ min($arr);\n$max = max($arr);\n$result = array();\nfor ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($arr[$i] == $min) {\n        $result[] = 'One';\n    } else\
    \ if ($arr[$i] == $max) {\n        $result[] = 'Nine';\n    } else {\n       \
    \ $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$arr = array(2, 1,\
    \ 1, 4, 5, 8, 2, 3);\n$min = min($arr);\n$max = max($arr);\n$result = array();\n\
    for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == $min) {\n        $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n        $result[] = 'Nine';\n\
    \    } else {\n        $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n\
    \    }\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3xyl28uq.php
    on line 31

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  ksort($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on line 26\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nWarning: Undefined variable $names in /tmp/tmp86qohqim.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp86qohqim.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86qohqim.php:36\n\
    Stack trace:\n#0 /tmp/tmp86qohqim.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp86qohqim.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = name_by_digit($digit);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_digit()\
    \ in /tmp/tmp9geh9pq2.php:25\nStack trace:\n#0 /tmp/tmp9geh9pq2.php(31): by_length(Array)\n\
    #1 /tmp/tmp9geh9pq2.php(35): candidate(Array)\n#2 /tmp/tmp9geh9pq2.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9geh9pq2.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for\
    \ ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] =\
    \ 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    }\
    \ else {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution,\
    \ but I wonder if there is a way to do it without using any loops. I mean, is\
    \ there a way to do it without using any loops?\n<|/ c |>\n<| c |>\nI added a\
    \ solution that doesn't use any loops.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that doesn't use any loops.\n<|/ c |>\n<| c |>\nI added a solution that doesn't\
    \ use any loops.\n<|/ c |>\n<| c |>\nI added a solution that doesn't use any loops.\n\
    <|/ c |>\n<| a |>\n<code>\n<?php\n$arr = [2, 1, 1, 4, 5, 8, 2, 3];\n$arr2 = array_filter($arr,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$arr3 = array_map(function($v){\n\
    \    return str_pad($v, 3, '0', STR_PAD_LEFT);\n}, $arr2);\n$arr4 = array_map(function($v){\n\
    \    return $v == 'One' ? 1 : $v == 'Nine' ? 9 : $v;\n}, $arr3);\n$arr5 = array_map(function($v){\n\
    \    return $v == 'One' ? \"One\" : $v == 'Nine' ? \"Nine\" : $v;\n}, $arr4);\n\
    $arr6 = array_map(function($v){\n    return $v == 'One' ? \"One\" : $v == 'Nine'\
    \ ? \"Nine\" : $v;\n}, $arr5);\n$arr7 = array_map(function($v){\n    return $v\
    \ == 'One' ? \"One\" : $v == 'Nine' ? \"Nine\" : $v;\n}, $arr6);\n$arr8 = array_map(function($v){\n\
    \    return $v == 'One' ? \"One\" : $v == 'Nine' ? \"Nine\" : $v;\n}, $arr7);\n\
    $arr9 = array_map(function($v){\n    return \nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7i22ixow.php
    on line 33

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result\
    \ = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n\
    \      $result[] = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[]\
    \ = 'Nine';\n    } else {\n      $result[] = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjf3oik22.php:40\n\
    Stack trace:\n#0 /tmp/tmpjf3oik22.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjf3oik22.php\
    \ on line 40\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n  $result\
    \ = array();\n  for ($i = $min; $i <= $max; $i++) {\n    $result[] = str_pad($i,\
    \ strlen($i), '0', STR_PAD_LEFT);\n  }\n  foreach ($reversed as $key => $value)\
    \ {\n    $result[$key] = str_pad($value, strlen($value), '0', STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\n\
    This doesn't seem to work if the array is empty. `array_reverse()` returns an\
    \ empty array.\n<|/ c |>\n<| c |>\nIt does work if you pass it an empty array.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test\
    \ case to my answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(2, 1,\
    \ 1, 4, 5, 8, 2, 3);\n$array = array_reverse($array);\n$array = array_map(function($a){\n\
    \    return str_pad($a, strlen($a), '0', STR_PAD_LEFT);\n}, $array);\n$array =\
    \ array_combine(range(1, 9), $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't seem to work if the array is empty. `array_reverse()`\
    \ returns an empty array.\n<|/ c |>\n<| c |>\nIt does work if you pass it an empty\
    \ array. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ a test case to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ a test case to my answer.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_reverse($array);\n$array\
    \ = array_map(function($a){\n    return str_pad($a, strlen($a), '0', STR_PAD_LEFT);\n\
    }, $array);\n$array = array_\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk26gbdny.php
    on line 30

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  if ($min == $max)\
    \ {\n    return array($arr[$min]);\n  }\n  $result = array();\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max) {\n      $result[]\
    \ = array($arr[$i], $i);\n    }\n  }\n  krsort($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $value[0];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxcejkr7.php:42\n\
    Stack trace:\n#0 /tmp/tmpyxcejkr7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyxcejkr7.php\
    \ on line 42\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 1) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = name_by_digit($digit);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_digit()\
    \ in /tmp/tmph7jw0ass.php:25\nStack trace:\n#0 /tmp/tmph7jw0ass.php(31): by_length(Array)\n\
    #1 /tmp/tmph7jw0ass.php(35): candidate(Array)\n#2 /tmp/tmph7jw0ass.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmph7jw0ass.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) {\n    return array();\n  }\n  $len = count($arr);\n\
    \  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n  $max = max($arr);\n\
    \  $min = min($min, $max);\n  $max = max($max, $min);\n  $ones = array_fill(0,\
    \ $len - 1, 1);\n  $tens = array_fill(0, $len - 1, 10);\n  $ones[$min] = 0;\n\
    \  $tens[$min] = 1;\n  $ones[$max] = 9;\n  $tens[$max] = 9;\n  $arr = array_merge(array_reverse($ones),\
    \ $arr);\n  $arr = array_merge($arr, $tens);\n  $arr = array_map(function($n)\
    \ {\n    return $names[$n];\n  }, $arr);\n  return $arr;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return $array[$v];\n}, $array);\nprint_r($array);\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpyhz5hvn7.php
    on line 39

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len === 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($min <= $arr[$i] && $arr[$i] <= $max) {\n      $result[]\
    \ = str_pad($arr[$i], 2, '0', STR_PAD_LEFT);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__tlxv15.php:35\n\
    Stack trace:\n#0 /tmp/tmp__tlxv15.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp__tlxv15.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($arr[$i] == $min) {\n      $result[] = 'One';\n    }\n    if ($arr[$i]\
    \ == $max) {\n      $result[] = 'Nine';\n    }\n    if ($arr[$i] < $min) {\n \
    \     $result[] = 'Two';\n    }\n    if ($arr[$i] > $max) {\n      $result[] =\
    \ 'Three';\n    }\n    if ($arr[$i] == $min && $arr[$i + 1] == $max) {\n     \
    \ $result[] = 'Four';\n    }\n    if ($arr[$i] == $min && $arr[$i - 1] == $max)\
    \ {\n      $result[] = 'Five';\n    }\n    if ($arr[$i] == $max && $arr[$i - 1]\
    \ == $min) {\n      $result[] = 'Six';\n    }\n    if ($arr[$i] == $max && $arr[$i\
    \ + 1] == $min) {\n      $result[] = 'Seven';\n    }\n    if ($arr[$i] == $min\
    \ && $arr[$i - 1] == $max && $arr[$i + 1] == $min) {\n      $result[] = 'Eight';\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgcayo8f.php:62\n\
    Stack trace:\n#0 /tmp/tmplgcayo8f.php(69): test()\n#1 {main}\n  thrown in /tmp/tmplgcayo8f.php\
    \ on line 62\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = $min;\
    \ $i <= $max; $i++) {\n    $result[] = str_pad($i, $len - 1, \"0\", STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n\
    \    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n\
    }, $array);\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n\
    \    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n\
    }, $array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n\
    \    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_map(function($v){\n    return str_pad($v, 2, \"0\", STR_PAD_LEFT);\n\
    }, $array);\nprint_r($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpt0v3k3v2.php
    on line 25

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $ones = array();\n  $tens = array();\n  $hundreds = array();\n\
    \  $thousands = array();\n  foreach ($arr as $num) {\n    if ($num >= $min &&\
    \ $num <= $max) {\n      $tens[] = $num;\n    }\n    if ($num >= $min * 10 &&\
    \ $num <= $max * 10) {\n      $hundreds[] = $num;\n    }\n    if ($num >= $min\
    \ * 100 && $num <= $max * 100) {\n      $thousands[] = $num;\n    }\n  }\n  ksort($tens);\n\
    \  ksort($hundreds);\n  ksort($thousands);\n  $tens = array_reverse($tens);\n\
    \  $hundreds = array_reverse($hundreds);\n  $thousands = array_reverse($thousands);\n\
    \  $ones = array_merge($ones, $tens);\n  $ones = array_merge($ones, $hundreds);\n\
    \  $ones = array_merge($ones, $thousands);\n  return $ones;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(2, 1, 1,\
    \ 4, 5, 8, 2, 3);\n$result = array();\n$min = min($arr);\n$max = max($arr);\n\
    $ones = array();\n$tens = array();\n$hundreds = array();\n$thousands = array();\n\
    foreach ($arr as $num) {\n    if ($num >= $min && $num <= $max) {\n        $tens[]\
    \ = $num;\n    }\n    if ($num >= $min * 10 && $num <= $max * 10) {\n        $hundreds[]\
    \ = $num;\n    }\n    if ($num >= $min * 100 && $num <= $max * 100) {\n      \
    \  $thousands[] = $num;\n    }\n}\nksort($tens);\nksort($hundreds);\nksort($thousands);\n\
    $tens = array_reverse($tens);\n$hundreds = array_reverse($hundreds);\n$thousands\
    \ = array_reverse($thousands);\n$ones = array_merge($ones, $tens);\n$ones = array_merge($ones,\
    \ $hundreds);\n$one\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk2td13dt.php
    on line 50

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = name_by_digit($digit);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_digit()\
    \ in /tmp/tmp9geh9pq2.php:25\nStack trace:\n#0 /tmp/tmp9geh9pq2.php(31): by_length(Array)\n\
    #1 /tmp/tmp9geh9pq2.php(35): candidate(Array)\n#2 /tmp/tmp9geh9pq2.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9geh9pq2.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = [];\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    }\n    if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    }\n    if\
    \ ($arr[$i] < $min) {\n      $result[] = 'Two';\n    }\n    if ($arr[$i] > $max)\
    \ {\n      $result[] = 'Three';\n    }\n    if ($arr[$i] == $min && $arr[$i +\
    \ 1] == $max) {\n      $result[] = 'Four';\n    }\n    if ($arr[$i] == $min &&\
    \ $arr[$i - 1] == $max) {\n      $result[] = 'Five';\n    }\n    if ($arr[$i]\
    \ == $max && $arr[$i - 1] == $min) {\n      $result[] = 'Six';\n    }\n    if\
    \ ($arr[$i] == $max && $arr[$i + 1] == $min) {\n      $result[] = 'Seven';\n \
    \   }\n    if ($arr[$i] == $min && $arr[$i - 1] == $max) {\n      $result[] =\
    \ 'Eight';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihm01try.php:59\n\
    Stack trace:\n#0 /tmp/tmpihm01try.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpihm01try.php\
    \ on line 59\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $num) {\n    if\
    \ ($num > 0 && $num < 10) {\n      $result[] = array('One', 'Two', 'Three', 'Four',\
    \ 'Five', 'Six', 'Seven', 'Eight', 'Nine')[$num];\n    }\n  }\n  return empty($arr)\
    \ ? array() : $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa52rztru.php:29\n\
    Stack trace:\n#0 /tmp/tmpa52rztru.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa52rztru.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $range = range($min, $max + 1);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $digit) {\n    $result[] = str_pad($digit,\
    \ strlen($min), \"0\", STR_PAD_LEFT);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ug75c5k.php:38\n\
    Stack trace:\n#0 /tmp/tmp7ug75c5k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7ug75c5k.php\
    \ on line 38\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $ones = array_fill(0, $len -\
    \ 1, 1);\n  $tens = array_fill(0, $len - 1, 10);\n  $arr = array_merge($ones,\
    \ $tens, $arr);\n  krsort($arr);\n  $arr = array_reverse($arr);\n  foreach ($arr\
    \ as &$num) {\n    $num = array_search($num, $arr);\n  }\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupt7crvr.php:37\n\
    Stack trace:\n#0 /tmp/tmpupt7crvr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpupt7crvr.php\
    \ on line 37\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) return array();\n  $len = count($arr);\n  if\
    \ ($len < 2) return $arr;\n  $min = min($arr);\n  $max = max($arr);\n  $result\
    \ = [];\n  for ($i = 0; $i < $len; ++$i) {\n    if ($arr[$i] == $min) {\n    \
    \  $result[] = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n\
    \    } else {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n  \
    \  }\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n\
    <code>\n$numbers = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min =\
    \ $numbers[0];\n$max = $numbers[0];\nforeach ($numbers as $number) {\n    if ($number\
    \ < $min) $min = $number;\n    if ($number > $max) $max = $number;\n}\n$result[]\
    \ = 'One';\n$result[] = 'Nine';\nfor ($i = $min; $i <= $max; ++$i) {\n    $result[]\
    \ = str_pad($i, 3, '0', STR_PAD_LEFT);\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work if the array is empty. Also, what if the array has\
    \ any strange number like `-1`?\n<|/ c |>\n<| c |>\n: I added a check for empty\
    \ arrays and strange numbers. I didn't test the code so there might be some bugs.\n\
    <|/ c |>\n<| c |>\n: I added a check for strange numbers. I didn't test the code\
    \ so there might be some bugs.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$numbers\
    \ = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n$min = $numbers[0];\n\
    $max = $numbers[0];\nforeach ($numbers as $number) {\n    if ($number < $min)\
    \ $min = $number;\n    if ($number > $max) $max = $number;\n}\n$result[] = 'One';\n\
    $result[] = 'Nine';\nfor ($i = $min; $i <= $max; ++$i) {\n    $result[] = str_pad($i,\
    \ 3, '0', STR_PAD_LEFT);\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $numbers = array(2, 1, 1, 4, 5, 8, 2, 3);\n$\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2ls2agd1.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (!$arr) return array();\n  $len = count($arr);\n  if\
    \ ($len < 2) return array();\n  $min = min($arr);\n  $max = max($arr);\n  $range\
    \ = range($min, $max);\n  $reversed = array_reverse($range);\n  $result = array();\n\
    \  foreach ($reversed as $val) {\n    $result[] = str_pad($val, 2, \"0\", STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_filter($array, function($value){\n\
    \    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value){\n\
    \    return str_pad($value, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine($array, $array);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_filter($array, function($value){\n\
    \    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value){\n\
    \    return str_pad($value, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine($array, $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_filter($array,\
    \ function($value){\n    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value){\n\
    \    return str_pad($value, 2, \"0\", STR_PAD_LEFT);\n}, $array);\n$array = array_reverse($array);\n\
    $array = array_combine($array, $array);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n$array = array_filter($array,\
    \ function($value){\n    return $value \nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg3poer7s.php
    on line 28

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $ones = array();\n  $tens = array();\n  $hundreds = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $n = $arr[$i];\n    if ($n < $min) {\n\
    \      $ones[] = $n;\n    } else if ($n < $min + 10) {\n      $tens[] = $n;\n\
    \    } else if ($n < $min + 100) {\n      $hundreds[] = $n;\n    } else {\n  \
    \    $ones[] = $n;\n      $tens[] = $min - 10;\n      $hundreds[] = $min - 100;\n\
    \    }\n  }\n  $ones = array_reverse($ones);\n  $tens = array_reverse($tens);\n\
    \  $hundreds = array_reverse($hundreds);\n  $ones = array_merge($ones, $tens,\
    \ $hundreds);\n  $ones = array_map(function($n) { return \"One\"; }, $ones);\n\
    \  $ones = array_slice($ones, 0, -1);\n  return array_merge($ones, $arr);\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't seem to work when there\
    \ are two or more numbers that are the same.\n<|/ c |>\n<| c |>\nIt does work,\
    \ try it out. Try it on [this demo](http://sandbox.onlinephpfunctions.com/code/9d79e2c9f67e3ce9f79e3ac9f8b0c54c15e34b1e)\n\
    <|/ c |>\n<| c |>\nIt doesn't work if there are two or more numbers that are the\
    \ same.\n<|/ c |>\n<| c |>\nIt does work, try it on [this demo](http://sandbox.onlinephpfunctions.com/code/9d79e2c9f67e3ce9f79e3ac9f8b0c54c15e34b1e)\n\
    <|/ c |>\n<| c |>\nIt doesn't work if there are two or more numbers that are the\
    \ same.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\n$array = array(2, 1, 1, 4,\
    \ 5, 8, 2, 3);\n$array = array_count_values($array);\n$array = array_filter($array,\
    \ function($value){\n    return $value > 1;\n});\n$array = array_map(function($value){\n\
    \    return \nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfdn_fkiq.php
    on line 49

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = [];\n  for ($i = 0; $i < $len; ++$i) {\n   \
    \ if ($arr[$i] == $min) {\n      $result[] = 'One';\n    }\n    if ($arr[$i] ==\
    \ $max) {\n      $result[] = 'Nine';\n    }\n    if ($arr[$i] == $min + 1) {\n\
    \      $result[] = 'Two';\n    }\n    if ($arr[$i] == $max - 1) {\n      $result[]\
    \ = 'Three';\n    }\n    if ($arr[$i] == $min + 2) {\n      $result[] = 'Four';\n\
    \    }\n    if ($arr[$i] == $max - 2) {\n      $result[] = 'Five';\n    }\n  \
    \  if ($arr[$i] == $min + 3) {\n      $result[] = 'Six';\n    }\n    if ($arr[$i]\
    \ == $max - 3) {\n      $result[] = 'Seven';\n    }\n    if ($arr[$i] == $min\
    \ + 4) {\n      $result[] = 'Eight';\n    }\n    if ($arr[$i] == $max - 4) {\n\
    \      $result[] = 'Nine';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ykyrsb0.php:65\n\
    Stack trace:\n#0 /tmp/tmp9ykyrsb0.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp9ykyrsb0.php\
    \ on line 65\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $digits = range($min, $max + 1);\n  $reversed = array_reverse($digits);\n\
    \  $result = array();\n  foreach ($digits as $digit) {\n    $result[] = str_replace(\n\
    \      array($digit, $digit),\n      array('One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'),\n      $reversed[$digit]\n    );\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 9 in /tmp/tmph7upgkez.php on line 31\n\n\
    Deprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string\
    \ is deprecated in /tmp/tmph7upgkez.php on line 31\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmph7upgkez.php:42\nStack trace:\n#0 /tmp/tmph7upgkez.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph7upgkez.php on line 42\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = array_search($digit, $range);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mzgopqc.php:35\n\
    Stack trace:\n#0 /tmp/tmp0mzgopqc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0mzgopqc.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $arr = array_reverse($arr);\n\
    \  foreach ($arr as $key => $value) {\n    if ($value < $min || $value > $max)\
    \ {\n      unset($arr[$key]);\n    }\n  }\n  $result = array();\n  foreach ($arr\
    \ as $key => $value) {\n    $result[] = str_pad($value, $len - $key, STR_PAD_LEFT);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ek8x24v.php:39\n\
    Stack trace:\n#0 /tmp/tmp4ek8x24v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4ek8x24v.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len === 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min === $max) {\n    return\
    \ array($min);\n  }\n  $len = strlen($min);\n  $arr = array_reverse($arr);\n \
    \ $arr = array_map(function ($num) use ($len) {\n    return str_pad(base_convert($num,\
    \ 10, $len), $len, \"0\", STR_PAD_LEFT);\n  }, $arr);\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\"\
    , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: base_convert(): Argument #3 ($to_base)\
    \ must be between 2 and 36 (inclusive) in /tmp/tmpjhyi5vtc.php:27\nStack trace:\n\
    #0 /tmp/tmpjhyi5vtc.php(27): base_convert('3', 10, 1)\n#1 [internal function]:\
    \ {closure}(3)\n#2 /tmp/tmpjhyi5vtc.php(28): array_map(Object(Closure), Array)\n\
    #3 /tmp/tmpjhyi5vtc.php(33): by_length(Array)\n#4 /tmp/tmpjhyi5vtc.php(37): candidate(Array)\n\
    #5 /tmp/tmpjhyi5vtc.php(44): test()\n#6 {main}\n  thrown in /tmp/tmpjhyi5vtc.php\
    \ on line 27\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $num) {\n    if ($num >= 1 && $num <= 9) {\n\
    \      $result[] = array($num, $names[$num]);\n    }\n  }\n  sort($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $value[1];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on line 21\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nWarning: Undefined variable $names in /tmp/tmpoc4ob__o.php on\
    \ line 21\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpoc4ob__o.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc4ob__o.php:36\n\
    Stack trace:\n#0 /tmp/tmpoc4ob__o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpoc4ob__o.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $ones = array_fill(0, $len,\
    \ 'One');\n  $tens = array_fill(0, $len, 'Ten');\n  $ones[$min] = '';\n  $tens[$min]\
    \ = '';\n  $ones[$max] = '';\n  $tens[$max] = '';\n  $reversed = array_reverse($arr);\n\
    \  foreach ($reversed as $key => $val) {\n    if ($val < $min) {\n      $reversed[$key]\
    \ = 'One';\n    }\n    if ($val > $max) {\n      $reversed[$key] = 'Ten';\n  \
    \  }\n  }\n  return array_merge($ones, $tens, $reversed);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9bfweea.php:44\n\
    Stack trace:\n#0 /tmp/tmpc9bfweea.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpc9bfweea.php\
    \ on line 44\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[$value] = $key;\n    }\n  }\n  return array_reverse($result);\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xh0fyp4.php:32\n\
    Stack trace:\n#0 /tmp/tmp0xh0fyp4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0xh0fyp4.php\
    \ on line 32\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $sorted = array();\n  for ($i = 0; $i < $len; $i++) {\n    $sorted[$i]\
    \ = $arr[$i];\n  }\n  sort($sorted);\n  $reversed = array_reverse($sorted);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[] = str_replace(\n\
    \      array_keys($reversed),\n      array_values($reversed),\n      array_keys($sorted[$i])\n\
    \    );\n  }\n  return $result;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(2,1,1,4,5,8,2,3);\n$result = array();\n$i = 0;\nforeach\
    \ ($arr as $value) {\n    if ($i < 9) {\n        $result[$i][$value] = $value;\n\
    \        $i++;\n    }\n}\n$result = array_reverse($result);\nforeach ($result\
    \ as $key => $value) {\n    foreach ($value as $key2 => $value2) {\n        $result[$key][$key2]\
    \ = $value2;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(2,1,1,4,5,8,2,3);\n$result = array();\n$i = 0;\nforeach\
    \ ($arr as $value) {\n    if ($i < 9) {\n        $result[$i][$value] = $value;\n\
    \        $i++;\n    }\n}\n$result = array_reverse($result);\nforeach ($result\
    \ as $key => $value) {\n    foreach ($value as $key2 => $value2) {\n        $result[$key][$key2]\
    \ = $value2;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $arr = array(2,1,1,4,5,8,2,3);\n$result = array();\n$i = 0;\nforeach ($arr as\
    \ $value) {\n    if ($i < 9) {\n        $result[$i][$value] = $value;\n      \
    \  $i++;\n    }\n}\n$result = array_reverse($result);\nforeach ($result as $key\
    \ => $value) {\n    foreach ($value as $key2 => $value2) {\n        $result[$key][$key2]\
    \ = $value2;\n    }\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=1\
    \ |>\n<code>\n$arr = array(2,1,1,4,5,8,2,3);\n$\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp395qmn_p.php
    on line 35

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $val) {\n    $result[] = name_by_length($val);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_length()\
    \ in /tmp/tmpjf08p0c8.php:28\nStack trace:\n#0 /tmp/tmpjf08p0c8.php(34): by_length(Array)\n\
    #1 /tmp/tmpjf08p0c8.php(38): candidate(Array)\n#2 /tmp/tmpjf08p0c8.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjf08p0c8.php on line 28\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 1) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $reversed[$i]\
    \ && $reversed[$i] <= $max) {\n      $result[] = name_by_number($reversed[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmp4w9w15fo.php:25\nStack trace:\n#0 /tmp/tmp4w9w15fo.php(32): by_length(Array)\n\
    #1 /tmp/tmp4w9w15fo.php(36): candidate(Array)\n#2 /tmp/tmp4w9w15fo.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4w9w15fo.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $num) {\n    if ($num >= 1 && $num <= 9) {\n\
    \      $result[] = array($num, $names[$num]);\n    }\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  foreach ($arr as $num) {\n    if ($num >= 1 && $num <=\
    \ 9) {\n      $result[] = array($names[$num], $num);\n    }\n  }\n  return $result;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks for your answer, but i need\
    \ this in php 5.2.17\n<|/ c |>\n<| c |>\nI added a solution for PHP 5.2.17\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array\
    \ = array_reverse($array);\n$array = array_map(function($v){\n    return $v ==\
    \ 1 ? $v : $names[$v];\n}, $array);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n$array = array_reverse($array);\n$array = array_map(function($v){\n    return\
    \ $v == 1 ? $v : $names[$v];\n}, $array);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n$array = array_reverse($array);\n$array = array_map(function($v){\n    return\
    \ $v == 1 ? $v : $names[$v];\n}, $array);\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a dscore=0 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$names = array(\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\");\n$array = array_reverse($array);\n$array = array_map(function($v){\n\
    \    return $v == 1 ? $v : $names[$v];\n}, $array);\n</code>\n<|/ a tags=array\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcznr289w.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $sorted = array();\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $sorted[$key] = $value;\n    }\n  }\n  asort($sorted);\n  $reversed = array_reverse($sorted);\n\
    \  foreach ($reversed as $key => $value) {\n    $reversed[$key] = $names[$value];\n\
    \  }\n  return $reversed;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on line 31\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nWarning: Undefined variable $names in /tmp/tmpt1murp1p.php on\
    \ line 31\n\nWarning: Trying to access array offset on value of type null in /tmp/tmpt1murp1p.php\
    \ on line 31\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1murp1p.php:41\n\
    Stack trace:\n#0 /tmp/tmpt1murp1p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpt1murp1p.php\
    \ on line 41\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $len = max($len, $max - $min\
    \ + 1);\n  $result = array();\n  for ($i = 0; $i < $len; ++$i) {\n    $result[]\
    \ = str_pad(1 + $i, $len - $i, $arr[$i], STR_PAD_LEFT);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ihi4u9n.php:34\n\
    Stack trace:\n#0 /tmp/tmp4ihi4u9n.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4ihi4u9n.php\
    \ on line 34\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    if\
    \ ($arr[$i] >= 1 && $arr[$i] <= 9) {\n      $result[] = array($arr[$i]);\n   \
    \ }\n  }\n  krsort($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $value[0];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl93b3gc.php:37\n\
    Stack trace:\n#0 /tmp/tmptl93b3gc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptl93b3gc.php\
    \ on line 37\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($min == $max) {\n      $result[] = $arr[$i];\n\
    \      continue;\n    }\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \      continue;\n    }\n    if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n\
    \      continue;\n    }\n    $result[] = sprintf('%u', ($arr[$i] - $min) . 9)\
    \ . ' ' . str_repeat('Zero', 9 - strlen((string)$arr[$i]));\n  }\n  return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI like your solution, however it\
    \ fails for arrays with negative numbers. I added a fix for that in my answer.\n\
    <|/ c |>\n<| a dscore=1 |>\nI like Kevin's solution, but I wanted to add an alternative\
    \ that doesn't require a loop. \n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n\
    $array = array_filter($array, function($v){\n    return $v > 0 && $v < 10;\n});\n\
    $array = array_map(function($v){\n    return sprintf('%u', ($v - 1) . 9) . ' '\
    \ . str_repeat('Zero', 9 - strlen((string)$v));\n}, $array);\n$array = array_reverse($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array, function($v){\n    return\
    \ $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n    return sprintf('%u',\
    \ ($v - 1) . 9) . ' ' . str_repeat('Zero', 9 - strlen((string)$v));\n}, $array);\n\
    $array = array_reverse($array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($v){\n    return $v > 0 && $v < 10;\n});\n$array = array_map(function($v){\n\
    \    return sprintf('%u', ($\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmeo8p9q0.php
    on line 39

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array(\n      'name' => $arr[$i],\n      'value' => $i,\n    );\n  }\n  usort($result,\
    \ 'cmp');\n  $result = array_reverse($result);\n  foreach ($result as $key =>\
    \ $value) {\n    $result[$key]['name'] = $names[$value['value']];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: usort(): Argument #2 ($callback) must\
    \ be a valid callback, function \"cmp\" not found or invalid function name in\
    \ /tmp/tmpm14wtqrj.php:26\nStack trace:\n#0 /tmp/tmpm14wtqrj.php(26): usort(Array,\
    \ 'cmp')\n#1 /tmp/tmpm14wtqrj.php(35): by_length(Array)\n#2 /tmp/tmpm14wtqrj.php(39):\
    \ candidate(Array)\n#3 /tmp/tmpm14wtqrj.php(46): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpm14wtqrj.php on line 26\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  if ($min > $max) {\n    return $arr;\n  }\n  $result =\
    \ array();\n  for ($i = 0; $i < $len; ++$i) {\n    if ($arr[$i] == $min) {\n \
    \     $result[] = 'One';\n    }\n    if ($arr[$i] == $max) {\n      $result[]\
    \ = 'Nine';\n    }\n    if ($arr[$i] < $min) {\n      $result[] = 'Two';\n   \
    \ }\n    if ($arr[$i] > $max) {\n      $result[] = 'Three';\n    }\n    if ($arr[$i]\
    \ == $min && $arr[$i + 1] == $max) {\n      $result[] = 'Four';\n    }\n    if\
    \ ($arr[$i] == $min && $arr[$i - 1] == $max) {\n      $result[] = 'Five';\n  \
    \  }\n    if ($arr[$i] == $max && $arr[$i - 1] == $min) {\n      $result[] = 'Six';\n\
    \    }\n    if ($arr[$i] == $max && $arr[$i + 1] == $min) {\n      $result[] =\
    \ 'Seven';\n    }\n    if ($arr[$i] == $min && $arr[$i - 1] == $max && $arr[$i\
    \ + 1] == $max) {\n      $result[] = 'Eight';\n    }\n  }\n  return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't seem to work. `by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))` returns `array(\"Eight\", \"Five\", \"Four\", \"Three\"\
    , \"Two\", \"Two\", \"One\", \"One\")`\n<|/ c |>\n<| c |>\n: I fixed the bug,\
    \ thanks for pointing it out. Now it works.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with negative numbers as well.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with negative numbers as well.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that works with negative numbers as well.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpl1ym5_21.php
    on line 59

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value >= 1 && $value <= 9 ? $value :\
    \ '';\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucr3bvq2.php:33\n\
    Stack trace:\n#0 /tmp/tmpucr3bvq2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpucr3bvq2.php\
    \ on line 33\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[] = array($value, $key);\n    }\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  foreach ($arr as $key => $value) {\n    $result[$key] =\
    \ array($value, $key);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeqs40a5.php:36\n\
    Stack trace:\n#0 /tmp/tmpzeqs40a5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzeqs40a5.php\
    \ on line 36\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $min = min($arr);\n  $max = max($arr);\n  $ones = array_fill(0,\
    \ $len, 'One');\n  $tens = array_fill(0, $len, 'Ten');\n  $hundreds = array_fill(0,\
    \ $len, 'Hundred');\n  $thousands = array_fill(0, $len, 'Thousand');\n  $millions\
    \ = array_fill(0, $len, 'Million');\n  $billions = array_fill(0, $len, 'Billion');\n\
    \  $trillions = array_fill(0, $len, 'Trillion');\n  $quadrillions = array_fill(0,\
    \ $len, 'Quadrillion');\n  $quintillions = array_fill(0, $len, 'Quintillion');\n\
    \  $sextillions = array_fill(0, $len, 'Sextillion');\n  $septillions = array_fill(0,\
    \ $len, 'Septillion');\n  $octillions = array_fill(0, $len, 'Octillion');\n  $nonillions\
    \ = array_fill(0, $len, 'Nonillion');\n  $decillions = array_fill(0, $len, 'Decillion');\n\
    \  $undecillions = array_fill(0, $len, 'Undecillion');\n  $duodecillions = array_fill(0,\
    \ $len, 'Duodecillion');\n  $tredecillions = array_fill(0, $len, 'Tredecillion');\n\
    \  $quattuordecillions = array_fill(0, $len, 'Quattuordecillion');\n  $quindecillions\
    \ = array_fill(0, $len, 'Quindecillion');\n  $sexdecillions = array_fill(0, $len,\
    \ 'Sexdecillion');\n  $septendecillions = array_fill(0, $len, 'Septendecillion');\n\
    \  $octodecillions = array_fill(0, $len, 'Octodecillion');\n  $novemdecillions\
    \ = array_fill(0, $len, 'Novemdecillion');\n  $vigintillions = array_fill(0, $len,\
    \ 'Vigintillion');\n  $unvigintillions = array_fill(0, $len, 'Unvigintillion');\n\
    \  $duovigintillions = array_fill(0, $len, 'Duovigintillion');\n  $trevigintillions\
    \ = array_\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpjhg86air.php
    on line 48

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) return array();\n\
    \  $range = range($min, $max);\n  $reversed = array_reverse($range);\n  $result\
    \ = array();\n  foreach ($reversed as $digit) {\n    $result[] = array_search($digit,\
    \ range(1, 9));\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work if the array has negative numbers. `array_search` returns\
    \ `false` if the value is not found.\n<|/ c |>\n<| c |>\n: I fixed the negative\
    \ numbers issue. Thanks.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach ($array as $value) {\n  \
    \  $result[] = array_search($value, range(1, 9));\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\n\
    foreach ($array as $value) {\n    $result[] = array_search($value, range(1, 9));\n\
    }\n</code>\n<|/ a tags=php,arrays dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach ($array as $value)\
    \ {\n    $result[] = array_search($value, range(1, 9));\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result\
    \ = array();\nforeach ($array as $value) {\n    $result[] = array_search($value,\
    \ range(1, 9));\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$result = array();\nforeach ($array\
    \ as $value) {\n    $result[] = array_search($value, range(1, 9));\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(2, 1, 1, 4,\
    \ 5, 8, 2, 3);\n$result = array();\nforeach ($array as $value) {\n    $result[]\
    \ = array_search($value, range(1, 9));\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = \nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpy8fl08_0.php
    on line 28

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ ($value >= 1 && $value <= 9) {\n      $result[] = array('One', 'Two', 'Three',\
    \ 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine')[$value - 1];\n    }\n  }\n\
    \  return empty($arr) ? array() : array_reverse($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3naol1f3.php:29\n\
    Stack trace:\n#0 /tmp/tmp3naol1f3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3naol1f3.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else {\n      $result[] = str_pad(base_convert($arr[$i], 10, 2), 3, '0',\
    \ STR_PAD_LEFT);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobkpzhqb.php:39\n\
    Stack trace:\n#0 /tmp/tmpobkpzhqb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpobkpzhqb.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n  $result\
    \ = array();\n  foreach ($reversed as $digit) {\n    if ($digit >= $min && $digit\
    \ <= $max) {\n      $result[] = strval($digit);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04gswiqc.php:35\n\
    Stack trace:\n#0 /tmp/tmp04gswiqc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp04gswiqc.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value ? $names[$value] : $key;\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on line 23\n\
    \nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nWarning: Undefined variable $names in /tmp/tmp8w_sle07.php on\
    \ line 23\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp8w_sle07.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8w_sle07.php:33\n\
    Stack trace:\n#0 /tmp/tmp8w_sle07.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8w_sle07.php\
    \ on line 33\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $item) {\n    if\
    \ ($item >= 1 && $item <= 9) {\n      $result[] = array($item);\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn656i47.php:29\n\
    Stack trace:\n#0 /tmp/tmpjn656i47.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjn656i47.php\
    \ on line 29\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = array_search($digit, range(1, 9));\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqt7yam6.php:35\n\
    Stack trace:\n#0 /tmp/tmphqt7yam6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphqt7yam6.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($v)\
    \ use ($min, $max) {\n    return ($v >= $min && $v <= $max) ? $v : null;\n  },\
    \ $arr);\n  return array_map(function($v) use ($min, $max) {\n    return ($v >=\
    \ $min && $v <= $max) ? $v : null;\n  }, $arr);\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nI like your solution, but I feel like it could be made more efficient\
    \ by using a `foreach` loop and `break` statements instead of `array_map`.\n<|/\
    \ c |>\n<| c |>\nYes, I agree, `foreach` would be more efficient. I'll add that\
    \ to my answer.\n<|/ c |>\n<| c |>\nI added a version that doesn't use array_map\
    \ and uses foreach instead. Thanks for your suggestion.\n<|/ c |>\n<| c |>\nI\
    \ added a version that doesn't use array_map and uses foreach instead. Thanks\
    \ for your suggestion.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array, function($value) {\n  \
    \  return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value)\
    \ {\n    return $value >= 1 && $value <= 9 ? 'One' : 'Two';\n}, $array);\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI like your solution, but I feel like it could be\
    \ made more efficient by using a `foreach` loop and `break` statements instead\
    \ of `array_map`.\n<|/ c |>\n<| c |>\nI added a version that doesn't use array_map\
    \ and uses foreach instead. Thanks for your suggestion.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_filter($array,\
    \ function($value) {\n    return $value >= 1 && $value <= 9;\n});\n$array = array_map(function($value)\
    \ {\n    return $value >= 1 && $value <= 9 ? 'One' : 'Two';\n}, $array);\n</code>\n\
    <|/ a dscore=2 |>\n<| a \nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfxgo40nk.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) return array();\n\
    \  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n  $reverse\
    \ = array_reverse($range);\n  $map = array(\n    1 => 'One',\n    2 => 'Two',\n\
    \    3 => 'Three',\n    4 => 'Four',\n    5 => 'Five',\n    6 => 'Six',\n    7\
    \ => 'Seven',\n    8 => 'Eight',\n    9 => 'Nine',\n  );\n  $result = array();\n\
    \  foreach ($reverse as $key => $value) {\n    $result[] = $map[$value];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmdav188.php:44\n\
    Stack trace:\n#0 /tmp/tmpmmdav188.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmmdav188.php\
    \ on line 44\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 1) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $result = array();\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[] = 'One';\n\
    \    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n    }\n  \
    \  elseif ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n    }\n    elseif\
    \ ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n    elseif ($arr[$i]\
    \ == $min + 2) {\n      $result[] = 'Four';\n    }\n    elseif ($arr[$i] == $max\
    \ - 2) {\n      $result[] = 'Five';\n    }\n    elseif ($arr[$i] == $min + 3)\
    \ {\n      $result[] = 'Six';\n    }\n    elseif ($arr[$i] == $max - 3) {\n  \
    \    $result[] = 'Seven';\n    }\n    elseif ($arr[$i] == $min + 4) {\n      $result[]\
    \ = 'Eight';\n    }\n    elseif ($arr[$i] == $max - 4) {\n      $result[] = 'Nine';\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw8w3vwn.php:62\n\
    Stack trace:\n#0 /tmp/tmphw8w3vwn.php(69): test()\n#1 {main}\n  thrown in /tmp/tmphw8w3vwn.php\
    \ on line 62\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $reversed = array_reverse($arr);\n\
    \  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    if ($min <= $reversed[$i]\
    \ && $reversed[$i] <= $max) {\n      $result[] = name_by_number($reversed[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmpv67u12ik.php:25\nStack trace:\n#0 /tmp/tmpv67u12ik.php(32): by_length(Array)\n\
    #1 /tmp/tmpv67u12ik.php(36): candidate(Array)\n#2 /tmp/tmpv67u12ik.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv67u12ik.php on line 25\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len < 2) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = array_search($digit, range(1, 9));\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphe7d5ufr.php:35\n\
    Stack trace:\n#0 /tmp/tmphe7d5ufr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphe7d5ufr.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[] = array($value, $key);\n    }\n  }\n  array_multisort($result,\
    \ SORT_DESC, $arr);\n  foreach ($arr as $key => $value) {\n    if ($value >= 1\
    \ && $value <= 9) {\n      $result[$key] = array($value, $key);\n    }\n  }\n\
    \  return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = array(2, 1, 1, 4, 5, 8, 2, 3);\n$arr2 = array();\n$arr3 = array();\n\
    $arr4 = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n$arr8\
    \ = array();\n$arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12 =\
    \ array();\n$arr13 = array();\n$arr14 = array();\n$arr15 = array();\n$arr16 =\
    \ array();\n$arr17 = array();\n$arr18 = array();\n$arr19 = array();\n$arr20 =\
    \ array();\n$arr21 = array();\n$arr22 = array();\n$arr23 = array();\n$arr24 =\
    \ array();\n$arr25 = array();\n$arr26 = array();\n$arr27 = array();\n$arr28 =\
    \ array();\n$arr29 = array();\n$arr30 = array();\n$arr31 = array();\n$arr32 =\
    \ array();\n$arr33 = array();\n$arr34 = array();\n$arr35 = array();\n$arr36 =\
    \ array();\n$arr37 = array();\n$arr38 = array();\n$arr39 = array();\n$arr40 =\
    \ array();\n$arr41 = array();\n$arr42 = array();\n$arr43 = array();\n$arr44 =\
    \ array();\n$arr45 = array();\n$arr46 = array();\n$arr47 = array();\n$arr48 =\
    \ array();\n$arr49 = array();\n$arr50 = array();\n$arr51 = array();\n$arr52 =\
    \ array();\n$arr53 = array();\n$arr54 = array();\n$arr55 = array();\n$arr56 =\
    \ \nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptwa9qhv0.php
    on line 32

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  if ($len == 1) {\n    return array($arr[0]);\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $range = range($min, $max);\n  $reversed = array_reverse($range);\n\
    \  $result = array();\n  foreach ($reversed as $digit) {\n    $result[] = name_by_digit($digit);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_digit()\
    \ in /tmp/tmpzwbshs99.php:28\nStack trace:\n#0 /tmp/tmpzwbshs99.php(34): by_length(Array)\n\
    #1 /tmp/tmpzwbshs99.php(38): candidate(Array)\n#2 /tmp/tmpzwbshs99.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzwbshs99.php on line 28\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $num) {\n    $result[] = str_pad($num, $len, \"0\", STR_PAD_LEFT);\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wla7uk8.php:35\n\
    Stack trace:\n#0 /tmp/tmp9wla7uk8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9wla7uk8.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  if ($len < 2) {\n    return $arr;\n  }\n  $min = min($arr);\n\
    \  $max = max($arr);\n  $result = [];\n  for ($i = 0; $i < $len; ++$i) {\n   \
    \ if ($min <= $arr[$i] && $arr[$i] <= $max) {\n      $result[] = name_by_number($arr[$i]);\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmp64ml3qkc.php:27\nStack trace:\n#0 /tmp/tmp64ml3qkc.php(34): by_length(Array)\n\
    #1 /tmp/tmp64ml3qkc.php(38): candidate(Array)\n#2 /tmp/tmp64ml3qkc.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp64ml3qkc.php on line 27\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $arr = array_reverse($arr);\n  $arr = array_map(function($x)\
    \ {\n    return $x == $min ? \"One\" : $x == $max ? \"Nine\" : $x;\n  }, $arr);\n\
    \  return $arr;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n$array = array_map(function($v){\n\
    \    return $v == 1 ? $v : $v == 9 ? $v : $v;\n}, $array);\n$array = array_flip($array);\n\
    $array = array_map(function($v){\n    return $v == 1 ? \"One\" : $v == 2 ? \"\
    Two\" : $v == 3 ? \"Three\" : $v == 4 ? \"Four\" : $v == 5 ? \"Five\" : $v ==\
    \ 6 ? \"Six\" : $v == 7 ? \"Seven\" : $v == 8 ? \"Eight\" : $v == 9 ? \"Nine\"\
    \ : $v;\n}, $array);\n$array = array_flip($array);\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n$array = array(2, 1, 1, 4, 5, 8, 2, 3);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($array);\n$array = array_flip($array);\n$array = array_flip($array);\n\
    $array = array_flip($\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfdx_va7a.php
    on line 30

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  if ($min == $max) {\n    return\
    \ array($min);\n  }\n  $mid = ($max + $min) / 2;\n  $left = array();\n  $right\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value < $mid) {\n\
    \      $left[$key] = $value;\n    } else {\n      $right[$key] = $value;\n   \
    \ }\n  }\n  return array_merge(by_length($left), by_length($right), array($min));\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks so much for this. I used\
    \ this as a starting point and modified it a bit to fit my needs. I added a couple\
    \ more lines to make it work for my needs.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    $arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2 = array();\n$arr2[] = $arr[0];\n$arr2[]\
    \ = $arr[1];\n$arr2[] = $arr[2];\n$arr2[] = $arr[3];\n$arr2[] = $arr[4];\n$arr2[]\
    \ = $arr[5];\n$arr2[] = $arr[6];\n$arr2[] = $arr[7];\n$arr2[] = $arr[8];\n$arr2[]\
    \ = $arr[9];\n$arr2[] = $arr[10];\n$arr2[] = $arr[11];\n$arr2[] = $arr[12];\n\
    $arr2[] = $arr[13];\n$arr2[] = $arr[14];\n$arr2[] = $arr[15];\n$arr2[] = $arr[16];\n\
    $arr2[] = $arr[17];\n$arr2[] = $arr[18];\n$arr2[] = $arr[19];\n$arr2[] = $arr[20];\n\
    $arr2[] = $arr[21];\n$arr2[] = $arr[22];\n$arr2[] = $arr[23];\n$arr2[] = $arr[24];\n\
    $arr2[] = $arr[25];\n$arr2[] = $arr[26];\n$arr2[] = $arr[27];\n$arr2[] = $arr[28];\n\
    $arr2[] = $arr[29];\n$arr2[] = $arr[30];\n$arr2[] = $arr[31];\n$arr2[] = $arr[32];\n\
    $arr2[]\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !==\
    \ array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"\
    One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9h03ep0z.php
    on line 36

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[$value] = $key;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp313alh19.php:29\n\
    Stack trace:\n#0 /tmp/tmp313alh19.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp313alh19.php\
    \ on line 29\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $result = array();\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = array($value, $key);\n\
    \    }\n  }\n  array_multisort($result, SORT_DESC, $arr);\n  foreach ($arr as\
    \ $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[$key]\
    \ = array($value, $key);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgdiyjea.php:35\n\
    Stack trace:\n#0 /tmp/tmptgdiyjea.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptgdiyjea.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    }\n    elseif ($arr[$i] == $max) {\n      $result[] = 'Nine';\n\
    \    }\n    elseif ($arr[$i] == $min + 1) {\n      $result[] = 'Two';\n    }\n\
    \    elseif ($arr[$i] == $max - 1) {\n      $result[] = 'Three';\n    }\n    elseif\
    \ ($arr[$i] == $min + 2) {\n      $result[] = 'Four';\n    }\n    elseif ($arr[$i]\
    \ == $max - 2) {\n      $result[] = 'Five';\n    }\n    elseif ($arr[$i] == $min\
    \ + 3) {\n      $result[] = 'Six';\n    }\n    elseif ($arr[$i] == $max - 3) {\n\
    \      $result[] = 'Seven';\n    }\n    elseif ($arr[$i] == $min + 4) {\n    \
    \  $result[] = 'Eight';\n    }\n    elseif ($arr[$i] == $max - 4) {\n      $result[]\
    \ = 'Nine';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t3fm7lw.php:62\n\
    Stack trace:\n#0 /tmp/tmp_t3fm7lw.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp_t3fm7lw.php\
    \ on line 62\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $result\
    \ = array();\n  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value\
    \ <= 9) {\n      $result[] = str_replace(array('0', '1', '2', '3', '4', '5', '6',\
    \ '7', '8', '9'), array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven',\
    \ 'Eight', 'Nine'), $value);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return by_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3)) !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -1, 55)) !== array(\"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -1, 3, 2)) !== array(\"Three\"\
    , \"Two\", \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9,\
    \ 4, 8)) !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv_7w7j1.php:32\n\
    Stack trace:\n#0 /tmp/tmppv_7w7j1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppv_7w7j1.php\
    \ on line 32\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $ones = array_fill(0, $len,\
    \ 'One');\n  $tens = array_fill(0, $len, 'Ten');\n  $hundreds = array_fill(0,\
    \ $len, 'Hundred');\n  $thousands = array_fill(0, $len, 'Thousand');\n  $millions\
    \ = array_fill(0, $len, 'Million');\n  $billions = array_fill(0, $len, 'Billion');\n\
    \  $trillions = array_fill(0, $len, 'Trillion');\n  $quadrillions = array_fill(0,\
    \ $len, 'Quadrillion');\n  $quintillions = array_fill(0, $len, 'Quintillion');\n\
    \  $sextillions = array_fill(0, $len, 'Sextillion');\n  $septillions = array_fill(0,\
    \ $len, 'Septillion');\n  $octillions = array_fill(0, $len, 'Octillion');\n  $nonillions\
    \ = array_fill(0, $len, 'Nonillion');\n  $decillions = array_fill(0, $len, 'Decillion');\n\
    \  $undecillions = array_fill(0, $len, 'Undecillion');\n  $duodecillions = array_fill(0,\
    \ $len, 'Duodecillion');\n  $tredecillions = array_fill(0, $len, 'Tredecillion');\n\
    \  $quattuordecillions = array_fill(0, $len, 'Quattuordecillion');\n  $quindecillions\
    \ = array_fill(0, $len, 'Quindecillion');\n  $sexdecillions = array_fill(0, $len,\
    \ 'Sexdecillion');\n  $septendecillions = array_fill(0, $len, 'Septendecillion');\n\
    \  $octodecillions = array_fill(0, $len, 'Octodecillion');\n  $novemdecillions\
    \ = array_fill(0, $len, 'Novemdecillion');\n  $vigintillions = array_fill(0, $len,\
    \ 'Vigintillion');\n  $unvigintillions = array_fill(0, $len, 'Unvigintillion');\n\
    \  $duovigintillions = array_fill(0, $len, 'Duovigintillion');\n  $trevigintillions\
    \ = array_fill\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp1pyx1m5d.php
    on line 48

    '
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] >= $min && $arr[$i] <= $max)\
    \ {\n      $result[] = name_by_number($arr[$i]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function name_by_number()\
    \ in /tmp/tmpa4cmrk1n.php:24\nStack trace:\n#0 /tmp/tmpa4cmrk1n.php(31): by_length(Array)\n\
    #1 /tmp/tmpa4cmrk1n.php(35): candidate(Array)\n#2 /tmp/tmpa4cmrk1n.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa4cmrk1n.php on line 24\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $len =\
    \ count($arr);\n  $result = array();\n  for ($i = 0; $i < $len; $i++) {\n    $result[]\
    \ = array_key_exists($i, $arr) ? $arr[$i] : '';\n  }\n  $result = array_reverse($result);\n\
    \  for ($i = 0; $i < $len; $i++) {\n    $result[$i] = str_replace(\n      array('One',\
    \ 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'),\n      array('',\
    \ '', '', '', '', '', '', '', ''),\n      $result[$i]\n    );\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3e1cxts.php:39\n\
    Stack trace:\n#0 /tmp/tmpl3e1cxts.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpl3e1cxts.php\
    \ on line 39\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  $len = count($arr);\n  if ($len == 0) {\n    return array();\n\
    \  }\n  $min = min($arr);\n  $max = max($arr);\n  $range = range($min, $max);\n\
    \  $reversed = array_reverse($range);\n  $result = array();\n  foreach ($reversed\
    \ as $digit) {\n    $result[] = strval($digit);\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
    Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
    \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
    , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti38325e.php:35\n\
    Stack trace:\n#0 /tmp/tmpti38325e.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpti38325e.php\
    \ on line 35\n"
  timestamp: 1659824388
- exit_code: 255
  program: "<?php\n// Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
    \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"\
    Two\", \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
    // >>> by_length(array())\n// array()\n// If the array has any strange number\
    \ ignore it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction\
    \ by_length($arr) {\n  if (empty($arr)) {\n    return array();\n  }\n  $min =\
    \ min($arr);\n  $max = max($arr);\n  $len = count($arr);\n  $result = array();\n\
    \  for ($i = 0; $i < $len; $i++) {\n    if ($arr[$i] == $min) {\n      $result[]\
    \ = 'One';\n    } else if ($arr[$i] == $max) {\n      $result[] = 'Nine';\n  \
    \  } else {\n      $result[] = str_pad($arr[$i], 3, '0', STR_PAD_LEFT);\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return by_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3))\
    \ !== array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\"\
    , \"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1, 55)) !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1, -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 4, 8))\
    \ !== array(\"Nine\", \"Eight\", \"Four\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeowtmp1o.php:39\n\
    Stack trace:\n#0 /tmp/tmpeowtmp1o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpeowtmp1o.php\
    \ on line 39\n"
  timestamp: 1659824388

language: php
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  return array_reduce(range(1, $n), function ($sum, $x) {\n    return $sum\
    \ + $x;\n  }, 0);\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more elegant than the other solutions.\n<|/ c |>\n<| c\
    \ |>\nI agree with you, but I find this solution more elegant and easier to understand\
    \ than the others.\n<|/ c |>\n<| c |>\nI agree with you, but I find this solution\
    \ more elegant and easier to understand than the others.\n<|/ c |>\n<| c |>\n\
    I agree with you, but I find this solution more elegant and easier to understand\
    \ than the others.\n<|/ c |>\n<| c |>\nI agree with you, but I find this solution\
    \ more elegant and easier to understand than the others.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6frf9r5c.php on line 18

    '
  timestamp: 1659730036
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  return array_reduce(range(1, $n), function ($sum, $x) {\n    return $sum\
    \ + $x;\n  }, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730002
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your\
    \ code is working fine but i want a recursive function because i want to use it\
    \ in my other functions. Please help me to solve this problem.\n<|/ c |>\n<| c\
    \ |>\n: Recursion is just a way of breaking down problems into smaller problems.\
    \ You don't need to use recursion to solve this problem. Just use a loop and a\
    \ counter.\n<|/ c |>\n<| c |>\n: I've added a recursive solution to my answer.\n\
    <|/ c |>\n<| c |>\n: I've added a recursive solution to my answer.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Your code is working fine but i want a recursive\
    \ function because i want to use it in my other functions. Please help me to solve\
    \ this problem.\n<|/ c |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_to_n(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 66)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(30) !== 465) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 5050) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpeeexu34w.php on line 20

    '
  timestamp: 1659730036
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  return array_reduce(range(1, $n), function ($sum, $_) {\n    return $sum\
    \ + $_;\n  }, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730002
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 255
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return sum_to_n(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(6) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(30) !== 465) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzq38v5uw.php on line 20

    '
  timestamp: 1659730036
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730002
- exit_code: 255
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI understand your code, but I\
    \ don't understand why you use $sum and $i instead of $n and $sum. Could you explain\
    \ to me why you use $sum and $i instead of $n and $sum?\n<|/ c |>\n<| c |>\nI\
    \ used `$sum` and `$i` because I wanted to show that `$sum` was being reset to\
    \ zero each time through the loop. `$n` would not work, because `$n` is being\
    \ reset to zero each time through the loop. `$sum` would not work, because `$sum`\
    \ is being reset to zero each time through the loop. `$i` would not work, because\
    \ `$i` is being reset to zero each time through the loop. `$n` and `$sum` would\
    \ not work, because `$n` and `$sum` are being reset to zero each time through\
    \ the loop.\n<|/ c |>\n<| c |>\nI understand now. Thank you very much!\n<|/ c\
    \ |>\n<| a tags=php,for-loop,loops |>\n<code>\n<?php\n$sum = 0;\nfor ($i = 1;\
    \ $i <= 10; $i++) {\n    $sum += $i;\n}\necho $sum;\nfunction candidate(...$args)\
    \ {\n    return sum_to_n(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 66)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(30) !== 465) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 5050) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp22mm0q42.php on line 20

    '
  timestamp: 1659730036
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947
- exit_code: 0
  program: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>>\
    \ sum_to_n(30)\n// 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n//\
    \ 15\n// >>> sum_to_n(10)\n// 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n)\
    \ {\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_to_n(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(30) !== 465) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(100) !== 5050) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729947

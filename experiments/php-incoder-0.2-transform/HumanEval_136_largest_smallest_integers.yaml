name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns a tuple (a, b), where 'a' is\n//\
  \ the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in a list.\n// If there is no negative or positive integers, return them as None.\n\
  // Examples:\n// >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))\n// array(null,\
  \ 1)\n// >>> largest_smallest_integers(array())\n// array(null, null)\n// >>> largest_smallest_integers(array(0))\n\
  // array(null, null)\nfunction largest_smallest_integers($lst) {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value)\
    \ {\n    if ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $max_negative = array();\n  $min_positive = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[] = $item;\n\
    \    } else {\n      $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  }\n  return $min_positive;\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest === null\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === null || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n\
    \    } else {\n      $largest[] = $item;\n    }\n  }\n  if (count($smallest) ==\
    \ 0) {\n    return array(null, null);\n  }\n  if (count($largest) == 0) {\n  \
    \  return array(null, null);\n  }\n  $smallest_key = array_keys($smallest);\n\
    \  $largest_key = array_keys($largest);\n  $smallest_value = $smallest[$smallest_key];\n\
    \  $largest_value = $largest[$largest_key];\n  if ($smallest_value < $largest_value)\
    \ {\n    return array($smallest_value, $largest_value);\n  }\n  return array($largest_value,\
    \ $smallest_value);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach\
    \ ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest) {\n    \
    \  $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $negatives = array();\n  $positives = array();\n  foreach ($lst as $num)\
    \ {\n    if ($num < 0) {\n      $negatives[] = $num;\n    } else {\n      $positives[]\
    \ = $num;\n    }\n  }\n  if (count($negatives) == 0) {\n    return array(null,\
    \ null);\n  }\n  if (count($positives) == 0) {\n    return array(null, null);\n\
    \  }\n  $largest = max($negatives);\n  $smallest = min($positives);\n  return\
    \ array($largest, $smallest);\n}\n", "  $negative = array();\n  $positive = array();\n\
    \  foreach ($lst as $value) {\n    if ($value < 0) {\n      $negative[] = $value;\n\
    \    } else {\n      $positive[] = $value;\n    }\n  }\n  if (count($negative)\
    \ == 0 && count($positive) == 0) {\n    return array(null, null);\n  }\n  if (count($negative)\
    \ == 0) {\n    return array(0, $positive[0]);\n  }\n  if (count($positive) ==\
    \ 0) {\n    return $negative;\n  }\n  $max = $negative[0];\n  $min = $positive[0];\n\
    \  foreach ($negative as $value) {\n    if ($value > $max) {\n      $max = $value;\n\
    \    }\n  }\n  foreach ($positive as $value) {\n    if ($value < $min) {\n   \
    \   $min = $value;\n    }\n  }\n  return array($max, $min);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $largest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $smallest) {\n      $smallest = $value;\n    }\n  }\n \
    \ return array($smallest, $largest);\n}\n", "  $negatives = array();\n  $positives\
    \ = array();\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      $negatives[]\
    \ = $value;\n    } else {\n      $positives[] = $value;\n    }\n  }\n  if (count($negatives)\
    \ == 0 && count($positives) == 0) {\n    return array(null, null);\n  }\n  if\
    \ (count($negatives) == 0) {\n    return array(0, $positives[0]);\n  }\n  if (count($positives)\
    \ == 0) {\n    return $negatives[0];\n  }\n  $max = max($negatives);\n  $min =\
    \ min($positives);\n  return array($max, $min);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $value) {\n    if ($smallest === null || $value < $smallest) {\n      $smallest\
    \ = $value;\n    }\n    if ($largest === null || $value > $largest) {\n      $largest\
    \ = $value;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = PHP_INT_MAX;\n  $largest = PHP_INT_MIN;\n  foreach ($lst\
    \ as $val) {\n    if ($val < $smallest) {\n      $smallest = $val;\n    }\n  \
    \  if ($val > $largest) {\n      $largest = $val;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $min_int = PHP_INT_MAX;\n  $max_int = PHP_INT_MIN;\n  foreach\
    \ ($lst as $item) {\n    if ($item < $min_int) {\n      $min_int = $item;\n  \
    \  }\n    if ($item > $max_int) {\n      $max_int = $item;\n    }\n  }\n  return\
    \ array($min_int, $max_int);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($smallest ===\
    \ null || $item < $smallest) {\n        $smallest = $item;\n      }\n      if\
    \ ($largest === null || $item > $largest) {\n        $largest = $item;\n     \
    \ }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($item < 0) {\n        $smallest[] = $item;\n      } else {\n      \
    \  $largest[] = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $min = null;\n  $max = null;\n  foreach ($lst as $item) {\n    if ($min\
    \ === null || $item < $min) {\n      $min = $item;\n    }\n    if ($max === null\
    \ || $item > $max) {\n      $max = $item;\n    }\n  }\n  return array($min, $max);\n\
    }\n", "  $min_val = null;\n  $max_val = null;\n  foreach ($lst as $val) {\n  \
    \  if ($val < $min_val) {\n      $min_val = $val;\n    } else if ($val > $max_val)\
    \ {\n      $max_val = $val;\n    }\n  }\n  return array($min_val, $max_val);\n\
    }\n", "  $smallest = array();\n  $largest = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0 && $smallest === array()) {\n      $smallest = $value;\n\
    \    }\n    if ($value > 0 && $largest === array()) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $negatives = array();\n  $positives =\
    \ array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $negatives[]\
    \ = $item;\n    } else {\n      $positives[] = $item;\n    }\n  }\n  if (count($negatives)\
    \ < count($positives)) {\n    return $negatives;\n  }\n  return $positives;\n\
    }\n", "  $largest = array();\n  $smallest = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else {\n      $smallest[]\
    \ = $item;\n    }\n  }\n  if (count($smallest) > count($largest)) {\n    return\
    \ $smallest;\n  } else {\n    return $largest;\n  }\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n\
    \    } else {\n      $largest[] = $item;\n    }\n  }\n  if (count($smallest) ==\
    \ 0 && count($largest) == 0) {\n    return array();\n  }\n  if (count($smallest)\
    \ == 0) {\n    return array(null, null);\n  }\n  if (count($largest) == 0) {\n\
    \    return array(null, null);\n  }\n  return array($smallest, $largest);\n}\n",
  "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n\
    \    } else {\n      $largest[] = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $smallest[] = $item;\n    } else\
    \ {\n      $largest[] = $item;\n    }\n  }\n  if (count($smallest) == 0) {\n \
    \   return array(null, null);\n  }\n  if (count($largest) == 0) {\n    return\
    \ array(null, null);\n  }\n  $smallest_key = array_search(min($smallest), $smallest);\n\
    \  $largest_key = array_search(max($largest), $largest);\n  return array($smallest_key,\
    \ $largest_key);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = array();\n  $smallest = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $largest[] = $item;\n\
    \    } else {\n      $smallest[] = $item;\n    }\n  }\n  if (count($largest) >\
    \ count($smallest)) {\n    return $largest;\n  } else {\n    return $smallest;\n\
    \  }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $val) {\n    if ($val\
    \ < 0) {\n      if ($a === null) {\n        $a = $val;\n      } else {\n     \
    \   $b = $val;\n      }\n    } else if ($val > 0) {\n      if ($a === null) {\n\
    \        $a = $val;\n      } else if ($b === null) {\n        $b = $val;\n   \
    \   } else {\n        if ($a > $b) {\n          $a = $val;\n        } else {\n\
    \          $b = $val;\n        }\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n  \
    \    $smallest[] = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n\
    \  if (count($smallest) == 0) {\n    return array(null, null);\n  }\n  if (count($largest)\
    \ == 0) {\n    return array(null, null);\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($largest, $smallest);\n}\n", "  $largest_negative\
    \ = null;\n  $smallest_positive = null;\n  foreach ($lst as $value) {\n    if\
    \ ($value < 0 && $largest_negative === null) {\n      $largest_negative = $value;\n\
    \    } else if ($value > 0 && $smallest_positive === null) {\n      $smallest_positive\
    \ = $value;\n    }\n  }\n  return array($largest_negative, $smallest_positive);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $value) {\n    if ($value < 0 && $smallest === array()) {\n      $smallest\
    \ = $value;\n    } else if ($value > 0 && $largest === array()) {\n      $largest\
    \ = $value;\n    } else {\n      if ($smallest === array()) {\n        $smallest\
    \ = $value;\n      } else if ($largest === array()) {\n        $largest = $value;\n\
    \      } else {\n        if ($value < $smallest) {\n          $smallest = $value;\n\
    \        } else if ($value > $largest) {\n          $largest = $value;\n     \
    \   }\n      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if (is_null($smallest))\
    \ {\n      $smallest = $item;\n      $largest = $item;\n    } elseif ($item <\
    \ $smallest) {\n      $smallest = $item;\n    } elseif ($item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $min = null;\n  $max = null;\n  foreach ($lst as $item) {\n    if ($min === null\
    \ || $item < $min) {\n      $min = $item;\n    }\n    if ($max === null || $item\
    \ > $max) {\n      $max = $item;\n    }\n  }\n  return array($min, $max);\n}\n",
  "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max_int = null;\n  $min_int = null;\n\
    \  foreach ($lst as $int) {\n    if ($max_int === null || $int > $max_int) {\n\
    \      $max_int = $int;\n    }\n    if ($min_int === null || $int < $min_int)\
    \ {\n      $min_int = $int;\n    }\n  }\n  return array($max_int, $min_int);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $result = array();\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      $result[0] = max($result[0],\
    \ $item);\n    } else {\n      $result[1] = min($result[1], $item);\n    }\n \
    \ }\n  return $result;\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($largest\
    \ === null || $value < $smallest) {\n      $largest = $value;\n    }\n    if ($smallest\
    \ === null || $value > $largest) {\n      $smallest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest_negative = null;\n  $smallest_positive\
    \ = null;\n  foreach ($lst as $value) {\n    if ($value < 0 && $largest_negative\
    \ === null) {\n      $largest_negative = $value;\n    } else if ($value > 0 &&\
    \ $smallest_positive === null) {\n      $smallest_positive = $value;\n    }\n\
    \  }\n  return array($largest_negative, $smallest_positive);\n}\n", "  $smallest\
    \ = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = PHP_INT_MAX;\n  $largest =\
    \ -PHP_INT_MAX;\n  foreach ($lst as $val) {\n    if ($val < $smallest) {\n   \
    \   $smallest = $val;\n    }\n    if ($val > $largest) {\n      $largest = $val;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $largest[] = $item;\n    } else\
    \ {\n      $smallest[] = $item;\n    }\n  }\n  if (count($largest) == 0 && count($smallest)\
    \ == 0) {\n    return array();\n  }\n  if (count($largest) == 0) {\n    return\
    \ $smallest;\n  }\n  if (count($smallest) == 0) {\n    return $largest;\n  }\n\
    \  return array(max($largest), min($smallest));\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      $smallest[] = $item;\n      $largest[] = $item;\n    }\n    elseif (is_null($item))\
    \ {\n      $smallest[] = null;\n      $largest[] = null;\n    }\n    else {\n\
    \      $smallest[] = min($smallest, $item);\n      $largest[] = max($largest,\
    \ $item);\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $item) {\n    if ($a === null) {\n      if ($item\
    \ < 0) {\n        $a = $item;\n      } else {\n        $b = $item;\n      }\n\
    \    } else {\n      if ($item < 0) {\n        if ($b < $item) {\n          $a\
    \ = $item;\n        } else {\n          $b = $item;\n        }\n      } else {\n\
    \        if ($a > $item) {\n          $a = $item;\n        } else {\n        \
    \  $b = $item;\n        }\n      }\n    }\n  }\n  return array($a, $b);\n}\n",
  "  $result = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n     \
    \ $result[0] = max($result[0], $item);\n    } else {\n      $result[1] = min($result[1],\
    \ $item);\n    }\n  }\n  return $result;\n}\n", "  $smallest = array();\n  $largest\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $smallest[]\
    \ = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n  if (count($smallest)\
    \ > count($largest)) {\n    return $smallest;\n  } else {\n    return $largest;\n\
    \  }\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      $result[] = $item;\n    }\n  }\n  if (empty($result)) {\n    return\
    \ array(null, null);\n  }\n  $result = array_filter($result);\n  if (empty($result))\
    \ {\n    return array(null, null);\n  }\n  $result = array_map('abs', $result);\n\
    \  $result = array_filter($result);\n  if (empty($result)) {\n    return array(null,\
    \ null);\n  }\n  $result = array_map('min', $result);\n  $result = array_filter($result);\n\
    \  if (empty($result)) {\n    return array(null, null);\n  }\n  $result = array_map('max',\
    \ $result);\n  return array($result[0], $result[1]);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", " \
    \ $smallest = array();\n  $largest = array();\n  foreach ($lst as $item) {\n \
    \   if ($item < 0) {\n      $smallest[] = $item;\n    } else {\n      $largest[]\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      $smallest[] = $item;\n  \
    \    $largest[] = $item;\n    }\n    elseif (is_null($item)) {\n      $smallest[]\
    \ = null;\n      $largest[] = null;\n    }\n  }\n  if (count($smallest) == 0)\
    \ {\n    return array(null, null);\n  }\n  foreach ($smallest as $key => $value)\
    \ {\n    if ($value < $smallest[0]) {\n      $smallest[$key] = $value;\n    }\n\
    \  }\n  foreach ($largest as $key => $value) {\n    if ($value > $largest[0])\
    \ {\n      $largest[$key] = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $min_int = PHP_INT_MAX;\n  $max_int = -PHP_INT_MAX;\n  foreach ($lst\
    \ as $value) {\n    if ($value < 0) {\n      if ($min_int > -$value) {\n     \
    \   $min_int = -$value;\n      }\n    } else if ($value > 0) {\n      if ($max_int\
    \ < $value) {\n        $max_int = $value;\n      }\n    }\n  }\n  return array($min_int,\
    \ $max_int);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ ($item < 0) {\n      $result[0] = max($result[0], $item);\n    } else {\n  \
    \    $result[1] = min($result[1], $item);\n    }\n  }\n  return $result;\n}\n",
  "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n  \
    \    $smallest[] = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n\
    \  return array($smallest, $largest);\n}\n", "  $min = null;\n  $max = null;\n\
    \  foreach ($lst as $num) {\n    if ($min === null || $num < $min) {\n      $min\
    \ = $num;\n    }\n    if ($max === null || $num > $max) {\n      $max = $num;\n\
    \    }\n  }\n  return array($min, $max);\n}\n", "  $largest = array();\n  $smallest\
    \ = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if\
    \ ($item < 0) {\n        $largest[] = $item;\n      } else {\n        $smallest[]\
    \ = $item;\n      }\n    }\n  }\n  return array($smallest[0], $largest[0]);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n\
    \      if ($a === null) {\n        $a = $x;\n      }\n    } else {\n      if ($b\
    \ === null) {\n        $b = $x;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = array();\n  $largest = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      $smallest[] = $item;\n  \
    \    $largest[] = $item;\n    } elseif (is_null($item)) {\n      $smallest[] =\
    \ null;\n      $largest[] = null;\n    } else {\n      $smallest[] = min($smallest,\
    \ $item);\n      $largest[] = max($largest, $item);\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      $result[] = $item;\n    }\n  }\n  if (empty($result))\
    \ {\n    return array(null, null);\n  }\n  $min_value = min($result);\n  $max_value\
    \ = max($result);\n  return array($min_value, $max_value);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($smallest === NULL || $item < $smallest) {\n        $smallest =\
    \ $item;\n      }\n      if ($largest === NULL || $item > $largest) {\n      \
    \  $largest = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = PHP_INT_MAX;\n  $largest = PHP_INT_MIN;\n \
    \ foreach ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest =\
    \ $value;\n    }\n    if ($value > $largest) {\n      $largest = $value;\n   \
    \ }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      $smallest[] = $item;\n      $largest[] = $item;\n    } elseif (is_null($item))\
    \ {\n      $smallest[] = null;\n      $largest[] = null;\n    } else {\n     \
    \ $smallest[] = min($smallest, $item);\n      $largest[] = max($largest, $item);\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n\
    \  $largest = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n  \
    \    $smallest[] = $item;\n    } else {\n      $largest[] = $item;\n    }\n  }\n\
    \  if (count($smallest) == 0) {\n    return array(null, null);\n  }\n  if (count($largest)\
    \ == 0) {\n    return array(null, null);\n  }\n  $smallest = $smallest[0];\n \
    \ $largest = $largest[0];\n  for ($i = 1; $i < count($smallest); $i++) {\n   \
    \ if ($smallest > $largest) {\n      return array(null, null);\n    }\n    if\
    \ ($smallest == $largest) {\n      $smallest = $smallest[$i];\n    }\n    if ($smallest\
    \ < $largest) {\n      return array($smallest, null);\n    }\n    $largest = $largest[$i];\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $max_int = null;\n  $min_int\
    \ = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($max_int\
    \ === null || $item > $max_int) {\n        $max_int = $item;\n      }\n      if\
    \ ($min_int === null || $item < $min_int) {\n        $min_int = $item;\n     \
    \ }\n    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $positives = array();\n\
    \  $negatives = array();\n  foreach ($lst as $value) {\n    if ($value > 0) {\n\
    \      $positives[] = $value;\n    } else {\n      $negatives[] = $value;\n  \
    \  }\n  }\n  if (count($positives) > 0) {\n    return $positives;\n  }\n  if (count($negatives)\
    \ > 0) {\n    return $negatives;\n  }\n  return null;\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = PHP_INT_MAX;\n  $largest = PHP_INT_MIN;\n \
    \ foreach ($lst as $val) {\n    if ($val < $smallest) {\n      $smallest = $val;\n\
    \    }\n    if ($val > $largest) {\n      $largest = $val;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === null || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === null || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $result = array();\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      $result[] = $item;\n    }\n  }\n  if (count($result)\
    \ == 0) {\n    return array(null, null);\n  }\n  $min = reset($result);\n  $max\
    \ = end($result);\n  $result[] = null;\n  foreach ($result as $item) {\n    if\
    \ ($item < $min) {\n      $min = $item;\n    }\n    if ($item > $max) {\n    \
    \  $max = $item;\n    }\n  }\n  return array($min, $max);\n}\n", "  $result =\
    \ array();\n  foreach ($lst as $value) {\n    if ($value < 0 || $value > 0) {\n\
    \      $result[] = $value;\n    }\n  }\n  return $result ? $result : null;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't seem to work. `largest_smallest_integers(array(2,\
    \ 4, 1, 3, 5, 7))` returns `array(null, 1)` instead of `array(null, 7)`.\n<|/\
    \ c |>\n<| c |>\nIt does work. `largest_smallest_integers(array(2, 4, 1, 3, 5,\
    \ 7))` returns `array(null, 7)`.\n<|/ c |>\n<| c |>\nI guess I misunderstood the\
    \ question. My apologies.\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  $smallest =\
    \ NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($smallest === NULL || $item < $smallest) {\n        $smallest =\
    \ $item;\n      }\n      if ($largest === NULL || $item > $largest) {\n      \
    \  $largest = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $max = -INF;\n  $min = INF;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      $max = $item;\n    } else if ($item > 0) {\n      $min = $item;\n\
    \    }\n  }\n  return array($max, $min);\n}\n", "  $result = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      $result[] = $item;\n    }\n\
    \  }\n  if (count($result) == 0) {\n    return array(null, null);\n  }\n  $result\
    \ = array_reverse($result);\n  $smallest = array_shift($result);\n  $largest =\
    \ array_pop($result);\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $max = -PHP_INT_MAX;\n\
    \  $min = PHP_INT_MAX;\n  foreach ($lst as $num) {\n    if ($num < $min) {\n \
    \     $min = $num;\n    }\n    if ($num > $max) {\n      $max = $num;\n    }\n\
    \  }\n  return array($max, $min);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $result = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      $result[0] = max($result[0], $item);\n    } else {\n      $result[1] =\
    \ min($result[1], $item);\n    }\n  }\n  return $result;\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if\
    \ ($a === null) {\n        $a = $item;\n        $b = $item;\n      } else if ($item\
    \ > $b) {\n        $b = $item;\n      } else if ($item < $a) {\n        $a = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n\
    \    if (is_int($item)) {\n      if ($smallest === null || $item < $smallest)\
    \ {\n        $smallest = $item;\n      }\n      if ($largest === null || $item\
    \ > $largest) {\n        $largest = $item;\n      }\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === NULL || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $max_int\
    \ = null;\n  $min_int = null;\n  foreach ($lst as $int) {\n    if ($max_int ===\
    \ null || $int > $max_int) {\n      $max_int = $int;\n    }\n    if ($min_int\
    \ === null || $int < $min_int) {\n      $min_int = $int;\n    }\n  }\n  return\
    \ array($max_int, $min_int);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $negatives = array();\n  $positives = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $negatives[] = $item;\n    } else {\n      $positives[]\
    \ = $item;\n    }\n  }\n  if (count($negatives) == 0 && count($positives) == 0)\
    \ {\n    return array(null, null);\n  }\n  $largest = max($negatives);\n  $smallest\
    \ = min($positives);\n  return array($largest, $smallest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $val) {\n    if ($val <\
    \ 0) {\n      if ($a === null) {\n        $a = $val;\n      } else {\n       \
    \ $b = $val;\n      }\n    } else if ($val > 0) {\n      if ($a === null) {\n\
    \        $a = $val;\n      } else if ($b === null) {\n        $b = $val;\n   \
    \   }\n    }\n  }\n  return array($a, $b);\n}\n", "  $min = null;\n  $max = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($min === null\
    \ || $item < $min) {\n        $min = $item;\n      }\n      if ($max === null\
    \ || $item > $max) {\n        $max = $item;\n      }\n    }\n  }\n  return array($min,\
    \ $max);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item)\
    \ {\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = null;\n\
    \  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest === null ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $val) {\n\
    \    if ($val < 0) {\n      if ($a === null) {\n        $a = $val;\n      } else\
    \ {\n        $b = $val;\n      }\n    } else if ($val > 0) {\n      if ($a ===\
    \ null) {\n        $a = $val;\n      } else if ($b === null) {\n        $b = $val;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $smallest = NULL;\n  $largest\
    \ = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL || $item <\
    \ $smallest) {\n      $smallest = $item;\n    }\n    if ($largest === NULL ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $max_int = PHP_INT_MAX;\n  $min_int = PHP_INT_MIN;\n  $smallest_int\
    \ = PHP_INT_MIN;\n  $largest_int = PHP_INT_MAX;\n  foreach ($lst as $item) {\n\
    \    if ($item < $min_int) {\n      $smallest_int = $item;\n    }\n    if ($item\
    \ > $max_int) {\n      $largest_int = $item;\n    }\n    if ($item < $smallest_int)\
    \ {\n      $smallest_int = $item;\n    }\n    if ($item > $largest_int) {\n  \
    \    $largest_int = $item;\n    }\n  }\n  return array($smallest_int, $largest_int);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n\
    \      if ($a === null) {\n        $a = $x;\n      } else {\n        $b = $x;\n\
    \      }\n    } else {\n      if ($a === null) {\n        $b = $x;\n      } else\
    \ {\n        $a = $x;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", " \
    \ $negative = array();\n  $positive = array();\n  foreach ($lst as $value) {\n\
    \    if ($value < 0) {\n      $negative[] = $value;\n    } else {\n      $positive[]\
    \ = $value;\n    }\n  }\n  if (count($negative) > 0) {\n    $largest = max($negative);\n\
    \    $smallest = min($positive);\n  } else {\n    $largest = min($positive);\n\
    \    $smallest = max($negative);\n  }\n  return array($largest, $smallest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max_negative = array();\n  $max_positive\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[]\
    \ = $item;\n    } else {\n      $max_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($max_positive)) {\n    return $max_negative;\n  }\n  return $max_positive;\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest =\
    \ $item;\n      $largest = $item;\n    } elseif ($item < $smallest) {\n      $smallest\
    \ = $item;\n    } elseif ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if ($item < 0) {\n      if ($a === null) {\n\
    \        $a = $item;\n      } else {\n        $b = $item;\n      }\n    }\n  }\n\
    \  return array($a, $b);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($smallest === null || $item < $smallest) {\n    \
    \  $smallest = $item;\n    }\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $num) {\n    if ($num < 0) {\n \
    \     if ($a === null) {\n        $a = $num;\n      } else {\n        $b = $num;\n\
    \      }\n    } else if ($num >= 0) {\n      if ($a === null) {\n        $a =\
    \ $num;\n      } else if ($b === null) {\n        $b = $num;\n      }\n    }\n\
    \  }\n  return array($a, $b);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n\
    \    if ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest === NULL ||\
    \ $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest ===\
    \ NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === NULL || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $negative\
    \ = array();\n  $positive = array();\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      $negative[] = $item;\n    } else {\n      $positive[] = $item;\n\
    \    }\n  }\n  if (count($negative) == 0 && count($positive) == 0) {\n    return\
    \ array();\n  }\n  if (count($negative) == 0) {\n    return array(null, array_shift($positive));\n\
    \  }\n  if (count($positive) == 0) {\n    return array(array_shift($negative),\
    \ null);\n  }\n  $max = $negative[0];\n  $min = $positive[0];\n  foreach ($negative\
    \ as $item) {\n    if ($item > $max) {\n      $max = $item;\n    }\n  }\n  foreach\
    \ ($positive as $item) {\n    if ($item < $min) {\n      $min = $item;\n    }\n\
    \  }\n  return array($max, $min);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n\
    \      $a = $x;\n    }\n    if ($x > 0) {\n      $b = $x;\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $positive = array();\n  $negative = array();\n  foreach\
    \ ($lst as $value) {\n    if ($value > 0) {\n      $positive[] = $value;\n   \
    \ } else {\n      $negative[] = $value;\n    }\n  }\n  if (count($positive) >\
    \ 0) {\n    return $positive;\n  }\n  if (count($negative) > 0) {\n    return\
    \ $negative;\n  }\n  return null;\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_null($smallest)) {\n      $smallest =\
    \ $item;\n    } else if (is_null($largest)) {\n      $largest = $item;\n    }\
    \ else if ($item > $largest) {\n      $largest = $item;\n    } else if ($item\
    \ < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $max =\
    \ -INF;\n  $min = INF;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n  \
    \    if ($max < $item) {\n        $max = $item;\n      }\n    } else if ($item\
    \ > 0) {\n      if ($min > $item) {\n        $min = $item;\n      }\n    }\n \
    \ }\n  return array($max, $min);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest ===\
    \ null || $item > $largest) {\n        $largest = $item;\n      }\n      if ($smallest\
    \ === null || $item < $smallest) {\n        $smallest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $smallest = array();\n  $largest\
    \ = array();\n  foreach ($lst as $value) {\n    if ($value < 0 && $smallest ===\
    \ array()) {\n      $smallest = $value;\n    } else if ($value > 0 && $largest\
    \ === array()) {\n      $largest = $value;\n    } else {\n      if ($smallest\
    \ === array()) {\n        $smallest = $value;\n      } else if ($largest === array())\
    \ {\n        $largest = $value;\n      } else {\n        if ($value < $smallest)\
    \ {\n          $smallest = $value;\n        } else if ($value > $largest) {\n\
    \          $largest = $value;\n        }\n      }\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($smallest ===\
    \ null || $item < $smallest) {\n        $smallest = $item;\n      }\n      if\
    \ ($largest === null || $item > $largest) {\n        $largest = $item;\n     \
    \ }\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n\
    \    if ($largest === null || $item > $largest) {\n      $largest = $item;\n \
    \   }\n    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest === null\
    \ || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", " \
    \ $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n    if\
    \ ($smallest === NULL || $value < $smallest) {\n      $smallest = $value;\n  \
    \  }\n    if ($largest === NULL || $value > $largest) {\n      $largest = $value;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative\
    \ = array();\n  $largest_positive = array();\n  foreach ($lst as $value) {\n \
    \   if ($value < 0) {\n      $largest_negative[] = $value;\n    } else {\n   \
    \   $largest_positive[] = $value;\n    }\n  }\n  if (count($largest_negative)\
    \ > count($largest_positive)) {\n    return $largest_negative;\n  } else {\n \
    \   return $largest_positive;\n  }\n}\n", "  $smallest = PHP_INT_MAX;\n  $largest\
    \ = PHP_INT_MIN;\n  foreach ($lst as $item) {\n    if ($item < $smallest) {\n\
    \      $smallest = $item;\n    }\n    if ($item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === NULL || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === NULL || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = null;\n  $largest = null;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === null || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === null || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $item) {\n    if (is_null($smallest))\
    \ {\n      $smallest = $item;\n      $largest = $item;\n    } elseif ($item <\
    \ $smallest) {\n      $smallest = $item;\n    } elseif ($item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $largest_negative = null;\n  $smallest_positive = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($largest_negative === null) {\n        $largest_negative\
    \ = $item;\n      } else {\n        $largest_negative = min($largest_negative,\
    \ $item);\n      }\n    } else if ($item > 0) {\n      if ($smallest_positive\
    \ === null) {\n        $smallest_positive = $item;\n      } else {\n        $smallest_positive\
    \ = max($smallest_positive, $item);\n      }\n    }\n  }\n  return array($largest_negative,\
    \ $smallest_positive);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($smallest === null ||\
    \ $item < $smallest) {\n        $smallest = $item;\n      }\n      if ($largest\
    \ === null || $item > $largest) {\n        $largest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $result = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      $result[] = $item;\n    }\n\
    \  }\n  if (empty($result)) {\n    return array(null, null);\n  }\n  sort($result);\n\
    \  $smallest = array_shift($result);\n  $largest = array_pop($result);\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $value) {\n    if ($smallest === NULL || $value < $smallest)\
    \ {\n      $smallest = $value;\n    }\n    if ($largest === NULL || $value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $largest_negative = null;\n  $smallest_positive = null;\n  foreach ($lst\
    \ as $item) {\n    if ($item < 0) {\n      if ($largest_negative === null) {\n\
    \        $largest_negative = $item;\n      } else {\n        $largest_negative\
    \ = max($largest_negative, $item);\n      }\n    }\n    if ($item > 0) {\n   \
    \   if ($smallest_positive === null) {\n        $smallest_positive = $item;\n\
    \      } else {\n        $smallest_positive = min($smallest_positive, $item);\n\
    \      }\n    }\n  }\n  return array($largest_negative, $smallest_positive);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $largest_negative\
    \ = null;\n  $smallest_positive = null;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($largest_negative === null) {\n        $largest_negative =\
    \ $item;\n      } else {\n        $largest_negative = min($largest_negative, $item);\n\
    \      }\n    } else if ($item > 0) {\n      if ($smallest_positive === null)\
    \ {\n        $smallest_positive = $item;\n      } else {\n        $smallest_positive\
    \ = max($smallest_positive, $item);\n      }\n    }\n  }\n  return array($largest_negative,\
    \ $smallest_positive);\n}\n", "  $smallest = null;\n  $largest = null;\n  foreach\
    \ ($lst as $item) {\n    if ($smallest === null || $item < $smallest) {\n    \
    \  $smallest = $item;\n    }\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest ===\
    \ null || $item > $largest) {\n        $largest = $item;\n      }\n      if ($smallest\
    \ === null || $item < $smallest) {\n        $smallest = $item;\n      }\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest\
    \ = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL || $value\
    \ < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest === NULL\
    \ || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === NULL || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $min_int\
    \ = PHP_INT_MAX;\n  $max_int = -PHP_INT_MAX;\n  foreach ($lst as $int) {\n   \
    \ if ($int < $min_int) {\n      $min_int = $int;\n    }\n    if ($int > $max_int)\
    \ {\n      $max_int = $int;\n    }\n  }\n  return array($min_int, $max_int);\n\
    }\n", "  $result = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      $result[0] = $item;\n    } else if ($item > 0) {\n      $result[1] = $item;\n\
    \    } else {\n      return null;\n    }\n  }\n  return $result;\n}\n", "  $smallest\
    \ = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if (is_null($smallest))\
    \ {\n      $smallest = $item;\n      $largest = $item;\n    } elseif ($item <\
    \ $smallest) {\n      $smallest = $item;\n    } elseif ($item > $largest) {\n\
    \      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n",
  "  $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $largest = null;\n  $smallest = null;\n\
    \  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest) {\n\
    \      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if (is_int($item)) {\n      if ($smallest === NULL || $item < $smallest)\
    \ {\n        $smallest = $item;\n      }\n      if ($largest === NULL || $item\
    \ > $largest) {\n        $largest = $item;\n      }\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as\
    \ $int) {\n    if ($max_int === null || $int > $max_int) {\n      $max_int = $int;\n\
    \    }\n    if ($min_int === null || $int < $min_int) {\n      $min_int = $int;\n\
    \    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $a = null;\n  $b =\
    \ null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a ===\
    \ null) {\n        $a = $item;\n        $b = $item;\n      } else if ($item <\
    \ $a) {\n        $a = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $smallest = null;\n  $largest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($smallest === null || $item <\
    \ $smallest) {\n      $smallest = $item;\n    }\n    if ($largest === null ||\
    \ $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return array($smallest,\
    \ $largest);\n}\n", "  $negatives = array();\n  $positives = array();\n  foreach\
    \ ($lst as $num) {\n    if ($num < 0) {\n      $negatives[] = $num;\n    } else\
    \ {\n      $positives[] = $num;\n    }\n  }\n  if (count($negatives) == 0) {\n\
    \    return array(null, null);\n  }\n  if (count($positives) == 0) {\n    return\
    \ array(null, null);\n  }\n  $largest = max($negatives);\n  $smallest = min($positives);\n\
    \  return array($largest, $smallest);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if ($largest === null || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n    if ($smallest === null || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = null;\n  $largest = null;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === null || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === null || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $positives = array();\n  $negatives =\
    \ array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $negatives[]\
    \ = $item;\n    } else {\n      $positives[] = $item;\n    }\n  }\n  if (count($positives)\
    \ > 0 && count($negatives) > 0) {\n    return array($positives[0], min($negatives));\n\
    \  }\n  if (count($positives) > 0) {\n    return array($positives[0], null);\n\
    \  }\n  if (count($negatives) > 0) {\n    return array(null, $negatives[0]);\n\
    \  }\n  return array(null, null);\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      if ($a === null) {\n        $a\
    \ = $item;\n      }\n      else {\n        $b = $item;\n      }\n    }\n    else\
    \ {\n      if ($a === null) {\n        $a = $item;\n      }\n      else {\n  \
    \      if ($b === null) {\n          $b = $item;\n        }\n        else {\n\
    \          if ($a > $b) {\n            $a = $item;\n          }\n          else\
    \ {\n            $b = $item;\n          }\n        }\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $positives = array();\n  $negatives = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $negatives[] = $item;\n    }\
    \ else {\n      $positives[] = $item;\n    }\n  }\n  if (count($negatives) ==\
    \ 0 && count($positives) == 0) {\n    return array(null, null);\n  }\n  $largest\
    \ = max($negatives);\n  $smallest = min($positives);\n  return array($largest,\
    \ $smallest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst\
    \ as $item) {\n    if ($smallest === NULL || $item < $smallest) {\n      $smallest\
    \ = $item;\n    }\n    if ($largest === NULL || $item > $largest) {\n      $largest\
    \ = $item;\n    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest\
    \ = null;\n  $largest = null;\n  foreach ($lst as $item) {\n    if ($smallest\
    \ === null || $item < $smallest) {\n      $smallest = $item;\n    }\n    if ($largest\
    \ === null || $item > $largest) {\n      $largest = $item;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $smallest = NULL;\n  $largest = NULL;\n\
    \  foreach ($lst as $item) {\n    if ($smallest === NULL || $item < $smallest)\
    \ {\n      $smallest = $item;\n    }\n    if ($largest === NULL || $item > $largest)\
    \ {\n      $largest = $item;\n    }\n  }\n  return array($smallest, $largest);\n\
    }\n", "  $smallest = PHP_INT_MAX;\n  $largest = PHP_INT_MIN;\n  foreach ($lst\
    \ as $value) {\n    if ($value < $smallest) {\n      $smallest = $value;\n   \
    \ }\n    if ($value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n", "  $max_negative = array();\n  $max_positive\
    \ = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[]\
    \ = $item;\n    } else {\n      $max_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($max_positive)) {\n    return $max_negative;\n  }\n  return $max_positive;\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($smallest === NULL || $item < $smallest) {\n      $smallest = $item;\n\
    \    }\n    if ($largest === NULL || $item > $largest) {\n      $largest = $item;\n\
    \    }\n  }\n  return array($smallest, $largest);\n}\n", "  $smallest = NULL;\n\
    \  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($smallest === NULL\
    \ || $value < $smallest) {\n      $smallest = $value;\n    }\n    if ($largest\
    \ === NULL || $value > $largest) {\n      $largest = $value;\n    }\n  }\n  return\
    \ array($smallest, $largest);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_15_string_sequence
language: php
prompt: "<?php\n// Return a string containing space-delimited numbers starting from\
  \ 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
  // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n"
tests: "function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $s = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n \
    \ return $s;\n}\n", "  $str = '';\n  for ($i = 0; $i < $n; $i++) {\n    $str .=\
    \ $i;\n  }\n  return $str;\n}\n", "  $s = '';\n  for ($i = 0; $i < $n; $i++) {\n\
    \    $s .= $i;\n  }\n  return $s;\n}\n", "  $s = '';\n  for ($i = 0; $i < $n;\
    \ $i++) {\n    $s .= $i;\n  }\n  return $s;\n}", "  $s = '';\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}", "  $str = '';\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}", "  $s = '';\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n", "  $s\
    \ = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n",
  "  $str = '';\n  for ($i = 0; $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n\
    }", "  $s = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return\
    \ $s;\n}", "  $s = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n\
    \  return $s;\n}", "  $s = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= ' '.$i;\n\
    \  }\n  return $s;\n}", "  return implode(' ', array_map(function($i) {\n    return\
    \ sprintf('%03d', $i);\n  }, range($n)));\n}\n", "  $s = \"\";\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}", "  $s = '';\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n", "  $str = '';\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $str .= $i;\n  }\n  return $str;\n}\n",
  "  return implode(' ', array_map(function ($i) {\n    return str_pad($i, 3, '0',\
    \ STR_PAD_LEFT);\n  }, range($n)));\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string,arrays\
    \ |>\n<code>\n$string = \"012345\";\n$array = str_split($string);\n$array = array_map(function($v){return\
    \ str_pad($v, 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,string,arrays |>\n<code>\n$string =\
    \ \"012345\";\n$array = str_split($string);\n$array = array_map(function($v){return\
    \ str_pad($v, 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n$string = \"012345\";\n\
    $array = str_split($string);\n$array = array_map(function($v){return str_pad($v,\
    \ 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n</code>\n\
    <|/ a tags=php,string,arrays |>\n<| a tags=php,string,arrays |>\n<code>\n$string\
    \ = \"012345\";\n$array = str_split($string);\n$array = array_map(function($v){return\
    \ str_pad($v, 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,string,arrays |>\n<code>\n$string =\
    \ \"012345\";\n$array = str_split($string);\n$array = array_map(function($v){return\
    \ str_pad($v, 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$string = \"012345\";\n\
    $array = str_split($string);\n$array = array_map(function($v){return str_pad($v,\
    \ 3, '0', STR_PAD_LEFT);}, $array);\n$string = implode('', $array);\n</code>\n\
    <|/ a tags=php,string,arrays |>\n<| a dscore=0 |>\n<code>\n$string = \"012345\"\
    ;\n$array = str_split($string);\n$array = array_map(", "  $s = '';\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}", "  $s = '';\n \
    \ for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n", "  $s\
    \ = '';\n  for ($i = 0; $i < $n; $i++) {\n    $s .= $i;\n  }\n  return $s;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_22_filter_integers
results:
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveaxlfup.php:18\n\
    Stack trace:\n#0 /tmp/tmpveaxlfup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpveaxlfup.php\
    \ on line 18\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveaxlfup.php:18\n\
    Stack trace:\n#0 /tmp/tmpveaxlfup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpveaxlfup.php\
    \ on line 18\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\n/**\n * Filter given list of any python values only for floats\n\
    \ * >>> filter_floats(array(\"a\", 3.14, 5))\n * array(3.14)\n * >>> filter_floats(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n * array(1.0, 2.0, 3.0)\n */\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82nr9i29.php:26\n\
    Stack trace:\n#0 /tmp/tmp82nr9i29.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp82nr9i29.php\
    \ on line 26\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyw20ohs7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyw20ohs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyw20ohs7.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and doesn't require any additional libraries.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and doesn't require any additional libraries.\n<|/ c\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly and doesn't require any additional libraries.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and doesn't require\
    \ any additional libraries.\n<|/ c |>\n<| a |>\n<code>\n$array = array(\"a\",\
    \ \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array, function($value)\
    \ {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5 tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and doesn't\
    \ require any additional libraries.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\", \"b\", \"c\", \"d\", \"e\");\n$array = array_filter($array,\
    \ function($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=5\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"\
    d\", \"e\");\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7qk49gui.php on line 12

    '
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibyw1bi8.php:19\n\
    Stack trace:\n#0 /tmp/tmpibyw1bi8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpibyw1bi8.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 0
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function($value) {\n    return is_int($value);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibyw1bi8.php:19\n\
    Stack trace:\n#0 /tmp/tmpibyw1bi8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpibyw1bi8.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyw20ohs7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyw20ohs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyw20ohs7.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,multidimensional-array |>\n\
    <code>\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8peey8fu.php on line 16

    '
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pdykucj.php:19\n\
    Stack trace:\n#0 /tmp/tmp_pdykucj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_pdykucj.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveaxlfup.php:18\n\
    Stack trace:\n#0 /tmp/tmpveaxlfup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpveaxlfup.php\
    \ on line 18\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyw20ohs7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyw20ohs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyw20ohs7.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function ($value) {\n        return is_int($value);\n\
    \    });\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work for me in\
    \ PHP 7.2.24. `array_filter` returns an empty array for me when given an empty\
    \ array.\n<|/ c |>\n<| c |>\nThis doesn't work for me in PHP 7.2.24. `array_filter`\
    \ returns an empty array for me when given an empty array.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a dscore=3 |>\n<|\
    \ a dscore=2 |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array,\
    \ function ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n\
    \    return is_int($value);\n});\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n\
    <code>\n$array = array(\"a\", 3.14, 5);\n$array = array_filter($array, function\
    \ ($value) {\n    return is_int($value);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\", 3.14, 5);\n$array\
    \ = array_filter($array, function ($value) {\n    return is_int($value);\n});\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"a\", 3.14,\
    \ 5);\n$array = array_filter($array, function ($value) {\n    return is_int($value);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array(\"\
    a\", 3.14, 5);\n$array = array_filter($array, function ($value) {\n    return\
    \ is_\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpl74ec_jz.php on line 12

    '
  timestamp: 1659730700
- exit_code: 0
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $values = array_filter($values, 'is_int');\n    return $values;\n}\n\n\
    function candidate(...$args) {\n    return filter_integers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\"\
    )) !== array(4, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveaxlfup.php:18\n\
    Stack trace:\n#0 /tmp/tmpveaxlfup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpveaxlfup.php\
    \ on line 18\n"
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyw20ohs7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyw20ohs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyw20ohs7.php\
    \ on line 19\n"
  timestamp: 1659730700
- exit_code: 0
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730700
- exit_code: 0
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730700
- exit_code: 255
  program: "<?php\n// Filter given list of any python values only for integers\n//\
    \ >>> filter_integers(array(\"a\", 3.14, 5))\n// array(5)\n// >>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\n// array(1, 2, 3)\nfunction filter_integers($values)\
    \ {\n  return array_filter($values, function ($value) {\n    return is_int($value);\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"e\" => 5);\n\n\
    $array = array_filter($array, function($value){\n    return is_numeric($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4, \"\
    e\" => 5);\n\n$array = array_filter($array, function($value){\n    return is_numeric($value);\n\
    });\n\nprint_r($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays,filter\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" \nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpitxs9yo7.php on line 12

    '
  timestamp: 1659730700

name: HumanEval_59_largest_prime_factor
language: php
prompt: "<?php\n// Return the largest prime factor of n. Assume n > 1 and is not a\
  \ prime.\n// >>> largest_prime_factor(13195)\n// 29\n// >>> largest_prime_factor(2048)\n\
  // 2\nfunction largest_prime_factor($n) {\n"
tests: "function candidate(...$args) {\n    return largest_prime_factor(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(15) !== 5) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(27) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(63) !== 7) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(330) !== 11) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(13195) !== 29) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["  $n = abs($n);\n  $i = 2;\n  while ($i <= sqrt($n)) {\n    if ($n\
    \ % $i == 0) {\n      $n = $i . '/' . $n;\n    } else {\n      $i++;\n    }\n\
    \  }\n  return $n;\n}\n", "    $n = abs($n);\n    $i = 2;\n    $factor = 1;\n\
    \    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $n = $n\
    \ / $i;\n            $factor++;\n        }\n        $i++;\n    }\n    return $factor;\n\
    }\n", "    $n = abs($n);\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $n = $i . $n / $i;\n            $i = 2;\n        }\
    \ else {\n            $i++;\n        }\n    }\n    return $n;\n}\n", "    $n =\
    \ abs($n);\n    $i = 2;\n    $factor = 2;\n    while ($i <= sqrt($n)) {\n    \
    \    if ($n % $i == 0) {\n            $n = $n / $i;\n            $factor++;\n\
    \        }\n        $i++;\n    }\n    return $factor;\n}\n", "    $n = abs($n);\n\
    \    $i = 2;\n    $p = 3;\n    while ($i <= sqrt($n)) {\n        if ($n % $i ==\
    \ 0) {\n            $p++;\n        }\n        $i += $p;\n    }\n    return $p;\n\
    }\n", "  $n = abs($n);\n  $i = 2;\n  while ($i <= sqrt($n)) {\n    $n = $i * $n;\n\
    \    $i++;\n  }\n  return $n;\n}\n", "    $n = abs($n);\n    $i = 2;\n    $factor\
    \ = 1;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $n =\
    \ $n / $i;\n            $factor++;\n        }\n        $i++;\n    }\n    return\
    \ $factor;\n}\n", "  $n = abs($n);\n  $i = 2;\n  while ($i <= sqrt($n)) {\n  \
    \  if ($n % $i == 0) {\n      $n = $n / $i;\n      $i = 2;\n    } else {\n   \
    \   $i++;\n    }\n  }\n  return $n;\n}\n", "    $n = abs($n);\n    $i = 2;\n \
    \   $factor = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n      \
    \      $factor = $i;\n            $n = $n / $i;\n        }\n        $i++;\n  \
    \  }\n    return $factor;\n}\n", "  $n = abs($n);\n  $i = 2;\n  while ($i <= sqrt($n))\
    \ {\n    if ($n % $i == 0) {\n      $n = $i . '/' . $n;\n    } else {\n      $i++;\n\
    \    }\n  }\n  return $n;\n}\n", "    $n = abs($n);\n    $i = 2;\n    $factor\
    \ = 1;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n          \
    \  $n = $n / $i;\n            $factor++;\n        }\n        $i++;\n    }\n  \
    \  return $factor;\n}\n", "  $n = abs($n);\n  $i = 2;\n  while ($i <= sqrt($n))\
    \ {\n    if ($n % $i == 0) {\n      $n = $i . $n / $i;\n    } else {\n      $i\
    \ = $i + 1;\n    }\n  }\n  return $n;\n}\n", "    $i = 2;\n    $p = $n;\n    while\
    \ ($p <= $n) {\n        if ($n % $i == 0) {\n            $p = $i * $i;\n     \
    \       $i++;\n        }\n        else {\n            $i = $i + 1;\n        }\n\
    \    }\n    return $p;\n}\n", "    $n = abs($n);\n    $i = 1;\n    $p = 3;\n \
    \   $q = $p;\n    while ($i <= $n) {\n        $p = $p * $q;\n        $q += 2;\n\
    \        $i++;\n    }\n    return $p;\n}\n", "    $n = abs($n);\n    $i = $j =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $n\
    \ = $n / $i;\n            $i = $j + 1;\n        }\n        else {\n          \
    \  $j++;\n        }\n    }\n    return $j;\n}\n", "    $n = abs($n);\n    $i =\
    \ 2;\n    $factor = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n\
    \            $n = $n / $i;\n            $factor++;\n        }\n        $i++;\n\
    \    }\n    return $factor;\n}\n", "    $n = abs($n);\n    $i = 1;\n    $p = 2;\n\
    \    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $p = $i;\n \
    \           $n = $n / $i;\n        } else {\n            $i++;\n        }\n  \
    \  }\n    return $p;\n}\n", "    $n = abs($n);\n    $i = 2;\n    $factor = 1;\n\
    \    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $factor = $i;\n\
    \            $n = $n / $i;\n        } else {\n            $i++;\n        }\n \
    \   }\n    return $factor;\n}\n", "    $n = abs($n);\n    $i = 2;\n    $factor\
    \ = 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n          \
    \  $n = $n / $i;\n            $factor++;\n        }\n        $i++;\n    }\n  \
    \  return $factor;\n}\n", "    $n = abs($n);\n    $i = $j = 2;\n    while ($i\
    \ <= $n) {\n        if ($n % $i == 0) {\n            $n = $n / $i;\n         \
    \   $i = $j + 1;\n        } else {\n            $j++;\n        }\n    }\n    return\
    \ $j;\n}\n</code>\n<|/ a |>\n<| c |>\nI like this one. Very elegant and simple.\n\
    <|/ c |>\n<| c |>\nI like this one too. Very elegant and simple.\n<|/ c |>\n<|\
    \ c |>\nI like this one too. Very elegant and simple.\n<|/ c |>\n<| c |>\nI like\
    \ this one too. Very elegant and simple.\n<|/ c |>\n<| c |>\nI like this one too.\
    \ Very elegant and simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n<?php"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

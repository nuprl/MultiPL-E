name: HumanEval_29_filter_by_prefix
language: php
prompt: "<?php\n// Filter an input list of strings only for ones that start with a\
  \ given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>> filter_by_prefix(array(\"\
  abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"array\")\nfunction\
  \ filter_by_prefix($strings, $prefix) {\n"
tests: "function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\",\
  \ \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
  , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $filtered = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix,\
    \ $string, strlen($prefix)) === 0) {\n      $filtered[] = $string;\n    }\n  }\n\
    \  return $filtered;\n}\n", "  $filtered = array();\n  foreach ($strings as $string)\
    \ {\n    if (strncmp($prefix, $string, strlen($prefix)) == 0) {\n      $filtered[]\
    \ = $string;\n    }\n  }\n  return $filtered;\n}\n", "  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n", "  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n",
  "  $filtered = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix,\
    \ $string, strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n\
    \  return $filtered;\n}\n", "  $filtered = array();\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "  $filtered = array();\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[]\
    \ = $string;\n    }\n  }\n  return $filtered;\n}\n", "  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n", "  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}",
  "  $filtered = array();\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $prefix) === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n\
    <code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array5\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array6 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array7 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array8 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array9 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array10 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array11 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array12\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array13 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array14 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array15 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array16 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array17 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array18 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array19\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array20 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array21 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array22 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array23 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array24 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array25 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array26\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array27 = array(\"abc\", \"\
    bcd\", \"cde\", \"", "  $filtered = array();\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "  $filtered = array();\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[]\
    \ = $string;\n    }\n  }\n  return $filtered;\n}\n", "  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I'm going\
    \ to try this out and see how it goes. I appreciate your help.\n<|/ c |>\n<| c\
    \ |>\nI added a more complete example to my answer.\n<|/ c |>\n<| c |>\nThanks\
    \ again for your help. I appreciate it.\n<|/ c |>\n<| a tags=arrays,php,multidimensional-array\
    \ |>\n<code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array5 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array6 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array7 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array8 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array9\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array10 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array11 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array12 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array13 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array14 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array15 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array16\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array17 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array18 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array19 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array20 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array21 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array22 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array23\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array24 = array", "  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. Your code works fine,\
    \ but I wanted to avoid using any loops. I wanted to use only array functions\
    \ like array_filter and array_map.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ uses `array_filter` and `array_map`\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine, but I wanted to avoid using any loops. I wanted to use\
    \ only array functions like array_filter and array_map.\n<|/ c |>\n<| c |>\n:\
    \ I added a version that uses `array_filter` and `array_map`\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array_filter($array, function($var){\n    return strpos($var, \"a\") === 0;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$result = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$result = array_filter($array, function($var){\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($var){\n    return strpos($var, \"a\") === 0;\n});\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$result = array_filter($array, function($var){\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($",
  "  return array_filter($strings, function($string) use ($prefix) {\n    return strpos($string,\
    \ $prefix) === 0;\n  });\n}", "  $filtered = array();\n  foreach ($strings as\
    \ $string) {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "  $filtered = array();\n  foreach ($strings\
    \ as $string) {\n    if (strncmp($string, $prefix, strlen($prefix)) == 0) {\n\
    \      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n", "  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ 0) === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }", "  return array_filter($strings, function($string) use ($prefix) {\n    return\
    \ strpos($string, $prefix) === 0;\n  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=arrays,php,multidimensional-array |>\n<code>\n$array = array();\n$array[]\
    \ = array('name' => 'John', 'age' => 25);\n$array[] = array('name' => 'Jane',\
    \ 'age' => 30);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n\
    $array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jill', 'age' => 25);\n$array[] = array('", "  $filtered = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

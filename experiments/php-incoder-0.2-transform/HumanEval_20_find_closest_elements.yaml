name: HumanEval_20_find_closest_elements
language: php
prompt: "<?php\n// From a supplied list of numbers (of length at least two) select\
  \ and return two that are the closest to each\n// other and return them in order\
  \ (smaller number, larger number).\n// >>> find_closest_elements(array(1.0, 2.0,\
  \ 3.0, 4.0, 5.0, 2.2))\n// array(2.0, 2.2)\n// >>> find_closest_elements(array(1.0,\
  \ 2.0, 3.0, 4.0, 5.0, 2.0))\n// array(2.0, 2.0)\nfunction find_closest_elements($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2))\
  \ !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
  \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
  \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $smallest = null;\n    $largest = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($smallest === null || abs($number - $smallest) <\
    \ abs($number - $largest)) {\n            $smallest = $number;\n        }\n  \
    \      if ($largest === null || abs($number - $largest) < abs($number - $smallest))\
    \ {\n            $largest = $number;\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't seem\
    \ to work. `find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))` returns\
    \ `array(2.0, 2.2)` instead of `array(2.0, 2.0)`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work because `find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))` returns\
    \ `array(2.0, 2.0)` instead of `array(2.0, 2.2)`.\n<|/ c |>\n<| c |>\nI see what\
    \ you mean. I've updated my answer to account for that.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't seem to work either. `find_closest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))` returns `array(2.0, 2.2)` instead of `array(2.0, 2.0)`.\n<|/ c |>\n\
    <| c |>\nI see what you mean. I've updated my answer to account for that.\n<|/\
    \ c |>\n<| a tags=php,arrays |>\n<code>\n$array = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n\
    $result = array_intersect($array, array_flip($array));\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't seem to work. `find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))` returns `array(2.0, 2.2)` instead of `array(2.0, 2.0)`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated my answer to account for\
    \ that.\n<|/ c |>\n<| a |>\n<code>\n$array = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n\
    $result = array_intersect($array, array_flip($array));\n</code>\n<|/ a dscore=1\
    \ tags=php,arrays |>\n<| c |>\nThis doesn't seem to work. `find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))` returns `array(2.0, 2.2)` instead of `array(2.0,\
    \ 2.0)`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$array = [1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.", "    $smallest = null;\n    $largest = null;\n    foreach ($numbers as\
    \ $number) {\n        if ($smallest === null || $number < $smallest) {\n     \
    \       $smallest = $number;\n        }\n        if ($largest === null || $number\
    \ > $largest) {\n            $largest = $number;\n        }\n    }\n    return\
    \ array($smallest, $largest);\n}\n", "    $smallest = null;\n    $largest = null;\n\
    \    foreach ($numbers as $number) {\n        if ($smallest === null || $number\
    \ < $smallest) {\n            $smallest = $number;\n        }\n        if ($largest\
    \ === null || $number > $largest) {\n            $largest = $number;\n       \
    \ }\n    }\n    return array($smallest, $largest);\n}\n", "    $smallest = $numbers[0];\n\
    \    $largest = $numbers[0];\n    foreach ($numbers as $number) {\n        if\
    \ ($number < $smallest) {\n            $smallest = $number;\n        } else if\
    \ ($number > $largest) {\n            $largest = $number;\n        }\n    }\n\
    \    return array($smallest, $largest);\n}\n", "    $smallest = null;\n    $largest\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($smallest === null\
    \ || $number < $smallest) {\n            $smallest = $number;\n        }\n   \
    \     if ($largest === null || $number > $largest) {\n            $largest = $number;\n\
    \        }\n    }\n    return array($smallest, $largest);\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>", "    $smallest = null;\n    $largest = null;\n\
    \    foreach ($numbers as $number) {\n        if ($smallest === null || abs($number\
    \ - $smallest) < abs($smallest - $largest)) {\n            $smallest = $number;\n\
    \        }\n        if ($largest === null || abs($number - $largest) < abs($smallest\
    \ - $largest)) {\n            $largest = $number;\n        }\n    }\n    return\
    \ array($smallest, $largest);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$numbers = array(\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4\
    \ => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n   \
    \ 10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n    14 => 14,\n    15\
    \ => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19 => 19,\n    20 =>\
    \ 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 => 24,\n    25 => 25,\n\
    \    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n    30 => 30,\n \
    \   31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n    35 => 35,\n  \
    \  36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n    40 => 40,\n   \
    \ 41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n    45 => 45,\n    46\
    \ => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50 => 50,\n    51 =>\
    \ 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 => 55,\n    56 => 56,\n\
    \    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n    61 => 61,\n \
    \   62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n    66 => 66,\n  \
    \  67 => 67,\n    68 => 68,\n    69 => 69,", "    $smallest = null;\n    $largest\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($smallest === null\
    \ || $number < $smallest) {\n            $smallest = $number;\n        }\n   \
    \     if ($largest === null || $number > $largest) {\n            $largest = $number;\n\
    \        }\n    }\n    return array($smallest, $largest);\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\n\
    $smallest = null;\n$largest = null;\nforeach ($numbers as $number) {\n    if ($smallest\
    \ === null || $number < $smallest) {\n        $smallest = $number;\n    }\n  \
    \  if ($largest === null || $number > $largest) {\n        $largest = $number;\n\
    \    }\n}\necho \"Smallest number: \" . $smallest . \"<br>\";\necho \"Largest\
    \ number: \" . $largest . \"<br>\";", "    $smallest = null;\n    $largest = null;\n\
    \    foreach ($numbers as $number) {\n        if ($smallest === null || $number\
    \ < $smallest) {\n            $smallest = $number;\n        }\n        if ($largest\
    \ === null || $number > $largest) {\n            $largest = $number;\n       \
    \ }\n    }\n    return array($smallest, $largest);\n}\n", "    $smallest = null;\n\
    \    $largest = null;\n    foreach ($numbers as $number) {\n        if ($smallest\
    \ === null || $number < $smallest) {\n            $smallest = $number;\n     \
    \   }\n        if ($largest === null || $number > $largest) {\n            $largest\
    \ = $number;\n        }\n    }\n    return array($smallest, $largest);\n}\n",
  "    $smallest = null;\n    $largest = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($smallest === null || $number < $smallest) {\n            $smallest\
    \ = $number;\n        }\n        if ($largest === null || $number > $largest)\
    \ {\n            $largest = $number;\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n", "    $smallest = null;\n    $largest = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($smallest === null || abs($number - $smallest)\
    \ < abs($smallest - $largest)) {\n            $smallest = $number;\n        }\n\
    \        if ($largest === null || abs($number - $largest) < abs($smallest - $largest))\
    \ {\n            $largest = $number;\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n\
    $numbers = array(\n    array(\n        'number' => 1,\n        'name' => 'one'\n\
    \    ),\n    array(\n        'number' => 2,\n        'name' => 'two'\n    ),\n\
    \    array(\n        'number' => 3,\n        'name' => 'three'\n    ),\n    array(\n\
    \        'number' => 4,\n        'name' => 'four'\n    ),\n    array(\n      \
    \  'number' => 5,\n        'name' => 'five'\n    ),\n    array(\n        'number'\
    \ => 6,\n        'name' => 'six'\n    ),\n    array(\n        'number' => 7,\n\
    \        'name' => 'seven'\n    ),\n    array(\n        'number' => 8,\n     \
    \   'name' => 'eight'\n    ),\n    array(\n        'number' => 9,\n        'name'\
    \ => 'nine'\n    ),\n    array(\n        'number' => 10,\n        'name' => 'ten'\n\
    \    )\n);\n\n$numbers = array_map(function($number) {\n    return $number['number'];\n\
    }, $numbers);\n\n$numbers = array_unique($numbers);\n\n$numbers = array_slice($numbers,\
    \ 0, 2);\n\n$numbers = array_map(function($number) {\n    return $number['name'];\n\
    }, $numbers);\n\n$numbers = array_unique($numbers);\n\n$numbers = array_slice($numbers,\
    \ 0, 2);\n\n$numbers = array_map(function($number) {\n    return $number['number'];\n\
    }, $numbers);\n\n$numbers = array_unique($numbers);\n\n$numbers = array_slice($numbers,\
    \ 0, 2);\n\n$numbers = array_map(function($number) {\n    return $number['name'];\n\
    }, $numbers);\n\n$numbers = array_unique($numbers);\n\n$numbers = array_slice($numbers,\
    \ 0, 2);\n\n$numbers = array_map(function($number) {\n    return $number['number'];\n\
    }, $numbers);\n\n$numbers = array_unique($numbers);\n\n$numbers = array_slice($numbers,\
    \ 0, 2);\n\n$numbers = array_map(function($number) {\n    return $number['name'];\n\
    }, $number", "    $smallest = null;\n    $largest = null;\n    foreach ($numbers\
    \ as $number) {\n        if ($smallest === null || $number < $smallest) {\n  \
    \          $smallest = $number;\n        }\n        if ($largest === null || $number\
    \ > $largest) {\n            $largest = $number;\n        }\n    }\n    return\
    \ array($smallest, $largest);\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>",
  "    $smallest = null;\n    $largest = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($smallest === null || abs($number - $smallest) < abs($smallest\
    \ - $number)) {\n            $smallest = $number;\n        }\n        if ($largest\
    \ === null || abs($number - $largest) < abs($largest - $number)) {\n         \
    \   $largest = $number;\n        }\n    }\n    return array($smallest, $largest);\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work for me. `find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))` returns `array(2.0, 2.2)` instead of `array(2.0,\
    \ 2.0)`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works fine. Are\
    \ you sure you copied the code correctly?\n<|/ c |>\n<| c |>\nYes, I copied it\
    \ exactly. I'm using PHP 5.3.10 as well.\n<|/ c |>\n<| c |>\nI tested it on PHP\
    \ 5.3.10 and it works fine. Are you sure you copied the code correctly?\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.3.10 and it works fine. Are you sure you copied\
    \ the code correctly?\n<|/ c |>\n<| a tags=php,arrays |>\n<code>", "    $smallest\
    \ = null;\n    $largest = null;\n    foreach ($numbers as $number) {\n       \
    \ if ($smallest === null || $number < $smallest) {\n            $smallest = $number;\n\
    \        }\n        if ($largest === null || $number > $largest) {\n         \
    \   $largest = $number;\n        }\n    }\n    return array($smallest, $largest);\n\
    }\n", "    $smallest = null;\n    $largest = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($smallest === null || abs($number - $smallest) < abs($smallest\
    \ - $number)) {\n            $smallest = $number;\n        }\n        if ($largest\
    \ === null || abs($number - $largest) < abs($largest - $number)) {\n         \
    \   $largest = $number;\n        }\n    }\n    return array($smallest, $largest);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>", "    $smallest = null;\n\
    \    $largest = null;\n    foreach ($numbers as $number) {\n        if ($smallest\
    \ === null || abs($number - $smallest) < abs($smallest - $largest)) {\n      \
    \      $smallest = $number;\n        }\n        if ($largest === null || abs($number\
    \ - $largest) < abs($smallest - $largest)) {\n            $largest = $number;\n\
    \        }\n    }\n    return array($smallest, $largest);\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>", "    $smallest = $numbers[0];\n    $largest = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number < $smallest) {\n   \
    \         $smallest = $number;\n        } else if ($number > $largest) {\n   \
    \         $largest = $number;\n        }\n    }\n    return array($smallest, $largest);\n\
    }\n", "    $smallest = null;\n    $largest = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($smallest === null || $number < $smallest) {\n            $smallest\
    \ = $number;\n        }\n        if ($largest === null || $number > $largest)\
    \ {\n            $largest = $number;\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n", "    $smallest = null;\n    $largest = null;\n    foreach\
    \ ($numbers as $number) {\n        if ($smallest === null || $number < $smallest)\
    \ {\n            $smallest = $number;\n        }\n        if ($largest === null\
    \ || $number > $largest) {\n            $largest = $number;\n        }\n    }\n\
    \    return array($smallest, $largest);\n}\n", "    $smallest = null;\n    $largest\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($smallest === null\
    \ || $number < $smallest) {\n            $smallest = $number;\n        }\n   \
    \     if ($largest === null || $number > $largest) {\n            $largest = $number;\n\
    \        }\n    }\n    return array($smallest, $largest);\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr1 = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array(1,2,3,4,5,6,7,8,9,10);\n$arr3 = array(1,2,3,4,5,6,7,8,9,10);\n\n\
    $arr4 = array_diff($arr1, $arr2);\n$arr5 = array_diff($arr2, $arr3);\n$arr6 =\
    \ array_diff($arr3, $arr1);\n\n$arr7 = array_merge($arr4, $arr5);\n$arr8 = array_merge($arr5,\
    \ $arr6);\n$arr9 = array_merge($arr6, $arr4);\n\n$arr10 = array_merge($arr7, $arr8);\n\
    $arr11 = array_merge($arr8, $arr9);\n$arr12 = array_merge($arr9, $arr7);\n\n$arr13\
    \ = array_merge($arr10, $arr11);\n$arr14 = array_merge($arr11, $arr12);\n$arr15\
    \ = array_merge($arr12, $arr10);\n\n$arr16 = array_merge($arr13, $arr14);\n$arr17\
    \ = array_merge($arr14, $arr15);\n$arr18 = array_merge($arr15, $arr13);\n\n$arr19\
    \ = array_merge($arr16, $arr17);\n$arr20 = array_merge($arr17, $arr18);\n$arr21\
    \ = array_merge($arr18, $arr16);\n\n$arr22 = array_merge($arr19, $arr20);\n$arr23\
    \ = array_merge($arr20, $arr21);\n$arr24 = array_merge($arr21, $arr19);\n\n$arr25\
    \ = array_merge($arr22, $arr23);\n$arr26 = array_merge($arr23, $arr24);\n$arr27\
    \ = array_merge($arr24, $arr22);\n\n$arr28 = array_merge($arr25, $arr26);\n$arr29\
    \ = array_merge($arr26, $arr27);\n$arr30 = array_merge($arr27, $arr25);\n\n$arr31\
    \ = array_merge($arr28, $arr29);\n$arr32 = array_merge($arr29, $arr"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"
